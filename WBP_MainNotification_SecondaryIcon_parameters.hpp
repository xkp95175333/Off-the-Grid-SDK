#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MainNotification_SecondaryIcon

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_MainNotification_SecondaryIcon.WBP_MainNotification_SecondaryIcon_C.SetIconSize
// 0x0004 (0x0004 - 0x0000)
struct WBP_MainNotification_SecondaryIcon_C_SetIconSize final
{
public:
	float                                         InSizeOverride;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainNotification_SecondaryIcon_C_SetIconSize) == 0x000004, "Wrong alignment on WBP_MainNotification_SecondaryIcon_C_SetIconSize");
static_assert(sizeof(WBP_MainNotification_SecondaryIcon_C_SetIconSize) == 0x000004, "Wrong size on WBP_MainNotification_SecondaryIcon_C_SetIconSize");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_SetIconSize, InSizeOverride) == 0x000000, "Member 'WBP_MainNotification_SecondaryIcon_C_SetIconSize::InSizeOverride' has a wrong offset!");

// Function WBP_MainNotification_SecondaryIcon.WBP_MainNotification_SecondaryIcon_C.TryUpdateSpecialIcon
// 0x0028 (0x0028 - 0x0000)
struct WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B8F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzNotificationDisplayData*             CallFunc_GetDisplayData_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B90[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzGameNotificationDisplayDataMission*  K2Node_DynamicCast_AsGz_Game_Notification_Display_Data_Mission; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon) == 0x000008, "Wrong alignment on WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon");
static_assert(sizeof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon) == 0x000028, "Wrong size on WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon, Result) == 0x000000, "Member 'WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon::Result' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon, Temp_byte_Variable) == 0x000001, "Member 'WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon, Temp_bool_Variable) == 0x000003, "Member 'WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon, CallFunc_GetDisplayData_ReturnValue) == 0x000008, "Member 'WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon::CallFunc_GetDisplayData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon, K2Node_DynamicCast_AsGz_Game_Notification_Display_Data_Mission) == 0x000018, "Member 'WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon::K2Node_DynamicCast_AsGz_Game_Notification_Display_Data_Mission' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon, K2Node_Select_Default) == 0x000021, "Member 'WBP_MainNotification_SecondaryIcon_C_TryUpdateSpecialIcon::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MainNotification_SecondaryIcon.WBP_MainNotification_SecondaryIcon_C.UpdateNotificationData
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUpdateSpecialIcon_Result;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B91[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzGameNotificationSpec                CallFunc_GetNotificationSpec_ReturnValue;          // 0x0008(0x00A0)(ConstParm)
	float                                         Temp_real_Variable;                                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B92[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_1;                              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzNotificationBodyIconSizeType               Temp_byte_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B93[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData) == 0x000008, "Wrong alignment on WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData");
static_assert(sizeof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData) == 0x0000D0, "Wrong size on WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, ReturnValue) == 0x000000, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, CallFunc_TryUpdateSpecialIcon_Result) == 0x000001, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::CallFunc_TryUpdateSpecialIcon_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, CallFunc_GetNotificationSpec_ReturnValue) == 0x000008, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::CallFunc_GetNotificationSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, Temp_real_Variable) == 0x0000A8, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, CallFunc_IsValid_ReturnValue) == 0x0000AC, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, K2Node_SwitchEnum_CmpSuccess) == 0x0000AD, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, Temp_real_Variable_1) == 0x0000B0, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, Temp_real_Variable_2) == 0x0000B4, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, Temp_byte_Variable) == 0x0000B8, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, CallFunc_PlayAnimation_ReturnValue) == 0x0000C0, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData, K2Node_Select_Default) == 0x0000C8, "Member 'WBP_MainNotification_SecondaryIcon_C_UpdateNotificationData::K2Node_Select_Default' has a wrong offset!");

}

