#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EventStatus

#include "Basic.hpp"

#include "WBP_EventStatus_classes.hpp"
#include "WBP_EventStatus_parameters.hpp"


namespace SDK
{

// Function WBP_EventStatus.WBP_EventStatus_C.ClearTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::ClearTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "ClearTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_EventStatus_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.DecrementTime
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::DecrementTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "DecrementTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.ExecuteUbergraph_WBP_EventStatus
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatus_C::ExecuteUbergraph_WBP_EventStatus(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "ExecuteUbergraph_WBP_EventStatus");

	Params::WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatus.WBP_EventStatus_C.GetCurrentTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Param_CurrentTime                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatus_C::GetCurrentTime(double* Param_CurrentTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "GetCurrentTime");

	Params::WBP_EventStatus_C_GetCurrentTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CurrentTime != nullptr)
		*Param_CurrentTime = Parms.Param_CurrentTime;
}


// Function WBP_EventStatus.WBP_EventStatus_C.GetEventTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     Param_EventTag                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatus_C::GetEventTag(struct FGameplayTag* Param_EventTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "GetEventTag");

	Params::WBP_EventStatus_C_GetEventTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_EventTag != nullptr)
		*Param_EventTag = std::move(Parms.Param_EventTag);
}


// Function WBP_EventStatus.WBP_EventStatus_C.HideAllEllements
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::HideAllEllements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "HideAllEllements");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.OnEventTimeExpired__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_EventStatus_C*               InfoPanelSlot                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatus_C::OnEventTimeExpired__DelegateSignature(class UWBP_EventStatus_C* InfoPanelSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "OnEventTimeExpired__DelegateSignature");

	Params::WBP_EventStatus_C_OnEventTimeExpired__DelegateSignature Parms{};

	Parms.InfoPanelSlot = InfoPanelSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatus.WBP_EventStatus_C.PostEventEndAnnouncement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::PostEventEndAnnouncement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "PostEventEndAnnouncement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.SetIconTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatus_C::SetIconTexture(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "SetIconTexture");

	Params::WBP_EventStatus_C_SetIconTexture Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatus.WBP_EventStatus_C.SetProgressColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Param_ProgressColor                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatus_C::SetProgressColor(const struct FLinearColor& Param_ProgressColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "SetProgressColor");

	Params::WBP_EventStatus_C_SetProgressColor Parms{};

	Parms.Param_ProgressColor = std::move(Param_ProgressColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatus.WBP_EventStatus_C.SetTitleText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bForceShow                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatus_C::SetTitleText(const class FText& InText, bool bForceShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "SetTitleText");

	Params::WBP_EventStatus_C_SetTitleText Parms{};

	Parms.InText = std::move(InText);
	Parms.bForceShow = bForceShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatus.WBP_EventStatus_C.ShowIconBackground
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::ShowIconBackground()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "ShowIconBackground");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.ShowTimer
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::ShowTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "ShowTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.ShowTitle
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShowTitleText                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatus_C::ShowTitle(bool bShowTitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "ShowTitle");

	Params::WBP_EventStatus_C_ShowTitle Parms{};

	Parms.bShowTitleText = bShowTitleText;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatus.WBP_EventStatus_C.StartTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatus_C::StartTimer(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "StartTimer");

	Params::WBP_EventStatus_C_StartTimer Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatus.WBP_EventStatus_C.StartTimerDelay
// (BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::StartTimerDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "StartTimerDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.Update Background Visibility
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::Update_Background_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "Update Background Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.UpdateColors
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::UpdateColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "UpdateColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.UpdateDisplayTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::UpdateDisplayTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "UpdateDisplayTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.UpdateIconVisibility
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::UpdateIconVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "UpdateIconVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.UpdateProgressColor
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatus_C::UpdateProgressColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "UpdateProgressColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatus.WBP_EventStatus_C.UpdateTitle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceHide                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_EventStatus_C::UpdateTitle(bool ForceHide, const class FText& Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatus_C", "UpdateTitle");

	Params::WBP_EventStatus_C_UpdateTitle Parms{};

	Parms.ForceHide = ForceHide;
	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);
}

}

