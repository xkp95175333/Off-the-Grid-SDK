#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TooltipContainer_DOS

#include "Basic.hpp"

#include "E_TooltipItemType_structs.hpp"
#include "G01_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.BindLimbHelth
// 0x0028 (0x0028 - 0x0000)
struct WBP_TooltipContainer_DOS_C_BindLimbHelth final
{
public:
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzLimbPickable*                        K2Node_DynamicCast_AsGz_Limb_Pickable;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_BindLimbHelth) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_BindLimbHelth");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_BindLimbHelth) == 0x000028, "Wrong size on WBP_TooltipContainer_DOS_C_BindLimbHelth");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_BindLimbHelth, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_BindLimbHelth::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_BindLimbHelth, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'WBP_TooltipContainer_DOS_C_BindLimbHelth::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_BindLimbHelth, K2Node_DynamicCast_AsGz_Limb_Pickable) == 0x000018, "Member 'WBP_TooltipContainer_DOS_C_BindLimbHelth::K2Node_DynamicCast_AsGz_Limb_Pickable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_BindLimbHelth, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_TooltipContainer_DOS_C_BindLimbHelth::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.Can Player Interact
// 0x0068 (0x0068 - 0x0000)
struct WBP_TooltipContainer_DOS_C_Can_Player_Interact final
{
public:
	bool                                          FocusingOnObject;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E60[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E61[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzHealthInterface>    CallFunc_IsAlive_self_CastInput;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E62[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAbilitySystemComponent*              K2Node_DynamicCast_AsGz_Ability_System_Component;  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E63[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_Can_Player_Interact) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_Can_Player_Interact");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_Can_Player_Interact) == 0x000068, "Wrong size on WBP_TooltipContainer_DOS_C_Can_Player_Interact");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, FocusingOnObject) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::FocusingOnObject' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, K2Node_DynamicCast_AsGz_Character) == 0x000010, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_IsAlive_self_CastInput) == 0x000020, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_IsAlive_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_IsAlive_ReturnValue) == 0x000030, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000038, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, K2Node_DynamicCast_AsGz_Ability_System_Component) == 0x000040, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::K2Node_DynamicCast_AsGz_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000050, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000060, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Can_Player_Interact, CallFunc_BooleanAND_ReturnValue_1) == 0x000063, "Member 'WBP_TooltipContainer_DOS_C_Can_Player_Interact::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.CheckForPings
// 0x0098 (0x0098 - 0x0000)
struct WBP_TooltipContainer_DOS_C_CheckForPings final
{
public:
	class UGzInteractableComponent*               Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E64[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGzPingData                            Temp_struct_Variable;                              // 0x0018(0x0060)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E65[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPingActor*                           CallFunc_GetPingActor_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E66[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzMarkerComponent*                     CallFunc_GetMarkerComponent_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_CheckForPings) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_CheckForPings");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_CheckForPings) == 0x000098, "Wrong size on WBP_TooltipContainer_DOS_C_CheckForPings");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CheckForPings, Interactable) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_CheckForPings::Interactable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CheckForPings, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_CheckForPings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CheckForPings, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'WBP_TooltipContainer_DOS_C_CheckForPings::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CheckForPings, Temp_struct_Variable) == 0x000018, "Member 'WBP_TooltipContainer_DOS_C_CheckForPings::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CheckForPings, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'WBP_TooltipContainer_DOS_C_CheckForPings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CheckForPings, CallFunc_GetPingActor_ReturnValue) == 0x000080, "Member 'WBP_TooltipContainer_DOS_C_CheckForPings::CallFunc_GetPingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CheckForPings, CallFunc_IsValid_ReturnValue_2) == 0x000088, "Member 'WBP_TooltipContainer_DOS_C_CheckForPings::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CheckForPings, CallFunc_GetMarkerComponent_ReturnValue) == 0x000090, "Member 'WBP_TooltipContainer_DOS_C_CheckForPings::CallFunc_GetMarkerComponent_ReturnValue' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0010 (0x0010 - 0x0000)
struct WBP_TooltipContainer_DOS_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E67[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_OnLastSavedInteractionProgressChanged_InitialInteractionProgress_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000010, "Wrong size on WBP_TooltipContainer_DOS_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CREATEDELEGATE_PROXYFUNCTION_0, Progress) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_CREATEDELEGATE_PROXYFUNCTION_0::Progress' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_CREATEDELEGATE_PROXYFUNCTION_0, CallFunc_OnLastSavedInteractionProgressChanged_InitialInteractionProgress_ImplicitCast) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_CREATEDELEGATE_PROXYFUNCTION_0::CallFunc_OnLastSavedInteractionProgressChanged_InitialInteractionProgress_ImplicitCast' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.ExecuteUbergraph_WBP_TooltipContainer_DOS
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzPingData& PingData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E68[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_OldViewTarget;                        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E69[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E6A[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzInteractableComponent*               K2Node_Event_Interactable;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFocused;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E6B[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E6C[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_NewViewTarget;                        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character_1;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Player_Interact_FocusingOnObject;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E6D[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLastSavedInteractionProgress_LastSavedInteractionProgress; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Progress)>               K2Node_CreateDelegate_OutputDelegate_3;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E6E[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGzPingData& PingData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzPingData& PingData)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E6F[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzPingControllerComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzPingData& PingData)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS) == 0x0000D8, "Wrong size on WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, EntryPoint) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_Event_OldViewTarget) == 0x000018, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_Event_OldViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_DynamicCast_AsGz_Character) == 0x000020, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_Event_Interactable) == 0x000040, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_Event_Interactable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_Event_bFocused) == 0x000048, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_Event_bFocused' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_Event_NewViewTarget) == 0x000060, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_Event_NewViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_DynamicCast_AsGz_Character_1) == 0x000068, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_DynamicCast_AsGz_Character_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, CallFunc_Can_Player_Interact_FocusingOnObject) == 0x000071, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::CallFunc_Can_Player_Interact_FocusingOnObject' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, CallFunc_GetLastSavedInteractionProgress_LastSavedInteractionProgress) == 0x000078, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::CallFunc_GetLastSavedInteractionProgress_LastSavedInteractionProgress' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_CreateDelegate_OutputDelegate_3) == 0x000080, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_CreateDelegate_OutputDelegate_4) == 0x000094, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000A4, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000B8, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000C8, "Member 'WBP_TooltipContainer_DOS_C_ExecuteUbergraph_WBP_TooltipContainer_DOS::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.GetInteractionDuration
// 0x0010 (0x0010 - 0x0000)
struct WBP_TooltipContainer_DOS_C_GetInteractionDuration final
{
public:
	float                                         InteractionStage_InteractionDuration;              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewLocalVar_0;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInteractionDuration_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_GetInteractionDuration) == 0x000004, "Wrong alignment on WBP_TooltipContainer_DOS_C_GetInteractionDuration");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_GetInteractionDuration) == 0x000010, "Wrong size on WBP_TooltipContainer_DOS_C_GetInteractionDuration");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetInteractionDuration, InteractionStage_InteractionDuration) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_GetInteractionDuration::InteractionStage_InteractionDuration' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetInteractionDuration, NewLocalVar_0) == 0x000004, "Member 'WBP_TooltipContainer_DOS_C_GetInteractionDuration::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetInteractionDuration, CallFunc_GetInteractionDuration_ReturnValue) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_GetInteractionDuration::CallFunc_GetInteractionDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetInteractionDuration, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WBP_TooltipContainer_DOS_C_GetInteractionDuration::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.GetLastSavedInteractionProgress
// 0x0018 (0x0018 - 0x0000)
struct WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress final
{
public:
	double                                        LastSavedInteractionProgress;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLastSavedInteractionProgress_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E70[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_LastSavedInteractionProgress_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress) == 0x000018, "Wrong size on WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress, LastSavedInteractionProgress) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress::LastSavedInteractionProgress' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress, CallFunc_GetLastSavedInteractionProgress_ReturnValue) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress::CallFunc_GetLastSavedInteractionProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress, K2Node_FunctionResult_LastSavedInteractionProgress_ImplicitCast) == 0x000010, "Member 'WBP_TooltipContainer_DOS_C_GetLastSavedInteractionProgress::K2Node_FunctionResult_LastSavedInteractionProgress_ImplicitCast' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.GetResetProgressBarOnRelease
// 0x0018 (0x0018 - 0x0000)
struct WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease final
{
public:
	bool                                          bGetResetProgressBarOnRelease;                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResetProgressBarOnRelease_ReturnValue; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E71[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInteractionDuration_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E72[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease) == 0x000018, "Wrong size on WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease, bGetResetProgressBarOnRelease) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease::bGetResetProgressBarOnRelease' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease, CallFunc_GetResetProgressBarOnRelease_ReturnValue) == 0x000002, "Member 'WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease::CallFunc_GetResetProgressBarOnRelease_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease, CallFunc_GetInteractionDuration_ReturnValue) == 0x000004, "Member 'WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease::CallFunc_GetInteractionDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'WBP_TooltipContainer_DOS_C_GetResetProgressBarOnRelease::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.Handle Focused
// 0x0138 (0x0138 - 0x0000)
struct WBP_TooltipContainer_DOS_C_Handle_Focused final
{
public:
	E_TooltipItemType                             ItemType;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E73[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CurrentItem;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPickableBase*                        GzPickableBase;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UGzItemData*                            Item_Data;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TooltipItemType                             CallFunc_GetItemType_Result;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E74[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TooltipItemType                             Temp_byte_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E75[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBackpackItemData*                    K2Node_DynamicCast_AsGz_Backpack_Item_Data;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E76[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E77[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzWeaponPickable*                      K2Node_DynamicCast_AsGz_Weapon_Pickable;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E78[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzWeaponInvItem                       CallFunc_GetWeaponItem_ReturnValue;                // 0x0070(0x0050)(ConstParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MissionStarter_C*                   K2Node_DynamicCast_AsBP_Mission_Starter;           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E79[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPickableBase*                        K2Node_DynamicCast_AsGz_Pickable_Base;             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E7A[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzOpportunityMissionData*              K2Node_DynamicCast_AsGz_Opportunity_Mission_Data;  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E7B[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBodyPartItemData*                    K2Node_DynamicCast_AsGz_Body_Part_Item_Data;       // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E7C[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             CallFunc_GetInventoryItem_ReturnValue;             // 0x0108(0x0010)()
	int32                                         CallFunc_GetItemQuantity_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E7D[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponItemData*                      K2Node_DynamicCast_AsGz_Weapon_Item_Data;          // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E7E[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_Handle_Focused) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_Handle_Focused");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_Handle_Focused) == 0x000138, "Wrong size on WBP_TooltipContainer_DOS_C_Handle_Focused");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, ItemType) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, CurrentItem) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::CurrentItem' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, GzPickableBase) == 0x000010, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::GzPickableBase' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, Item_Data) == 0x000018, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, Temp_int_Variable) == 0x000020, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, Temp_int_Variable_1) == 0x000024, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, Temp_int_Variable_2) == 0x000028, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, Temp_int_Variable_3) == 0x00002C, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, CallFunc_GetItemType_Result) == 0x000030, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::CallFunc_GetItemType_Result' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, Temp_int_Variable_4) == 0x000034, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, Temp_int_Variable_5) == 0x000038, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, Temp_byte_Variable) == 0x00003C, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_AsGz_Backpack_Item_Data) == 0x000040, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_AsGz_Backpack_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_SwitchEnum_CmpSuccess) == 0x000049, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_Select_Default) == 0x000058, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_AsGz_Weapon_Pickable) == 0x000060, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_AsGz_Weapon_Pickable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, CallFunc_GetWeaponItem_ReturnValue) == 0x000070, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::CallFunc_GetWeaponItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, CallFunc_GetOwner_ReturnValue_1) == 0x0000C0, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_AsBP_Mission_Starter) == 0x0000C8, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_AsBP_Mission_Starter' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_AsGz_Pickable_Base) == 0x0000D8, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_AsGz_Pickable_Base' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_bSuccess_3) == 0x0000E0, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_AsGz_Opportunity_Mission_Data) == 0x0000E8, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_AsGz_Opportunity_Mission_Data' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_bSuccess_4) == 0x0000F0, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_AsGz_Body_Part_Item_Data) == 0x0000F8, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_AsGz_Body_Part_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_bSuccess_5) == 0x000100, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, CallFunc_GetInventoryItem_ReturnValue) == 0x000108, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::CallFunc_GetInventoryItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, CallFunc_GetItemQuantity_ReturnValue) == 0x000118, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::CallFunc_GetItemQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_AsGz_Weapon_Item_Data) == 0x000120, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_AsGz_Weapon_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, K2Node_DynamicCast_bSuccess_6) == 0x000128, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_Handle_Focused, CallFunc_GetItemData_ReturnValue) == 0x000130, "Member 'WBP_TooltipContainer_DOS_C_Handle_Focused::CallFunc_GetItemData_ReturnValue' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.OnFocusChange_BP
// 0x0010 (0x0010 - 0x0000)
struct WBP_TooltipContainer_DOS_C_OnFocusChange_BP final
{
public:
	class UGzInteractableComponent*               Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bFocused;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_OnFocusChange_BP) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_OnFocusChange_BP");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_OnFocusChange_BP) == 0x000010, "Wrong size on WBP_TooltipContainer_DOS_C_OnFocusChange_BP");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_OnFocusChange_BP, Interactable) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_OnFocusChange_BP::Interactable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_OnFocusChange_BP, bFocused) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_OnFocusChange_BP::bFocused' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.OnLastSavedInteractionProgressChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_TooltipContainer_DOS_C_OnLastSavedInteractionProgressChanged final
{
public:
	double                                        InitialInteractionProgress;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_OnLastSavedInteractionProgressChanged) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_OnLastSavedInteractionProgressChanged");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_OnLastSavedInteractionProgressChanged) == 0x000008, "Wrong size on WBP_TooltipContainer_DOS_C_OnLastSavedInteractionProgressChanged");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_OnLastSavedInteractionProgressChanged, InitialInteractionProgress) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_OnLastSavedInteractionProgressChanged::InitialInteractionProgress' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.OnPingAdded
// 0x0078 (0x0078 - 0x0000)
struct WBP_TooltipContainer_DOS_C_OnPingAdded final
{
public:
	struct FGzPingData                            PingData;                                          // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class AGzPingActor*                           CallFunc_GetPingActor_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E7F[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzMarkerComponent*                     CallFunc_GetMarkerComponent_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_OnPingAdded) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_OnPingAdded");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_OnPingAdded) == 0x000078, "Wrong size on WBP_TooltipContainer_DOS_C_OnPingAdded");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_OnPingAdded, PingData) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_OnPingAdded::PingData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_OnPingAdded, CallFunc_GetPingActor_ReturnValue) == 0x000060, "Member 'WBP_TooltipContainer_DOS_C_OnPingAdded::CallFunc_GetPingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_OnPingAdded, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_TooltipContainer_DOS_C_OnPingAdded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_OnPingAdded, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000069, "Member 'WBP_TooltipContainer_DOS_C_OnPingAdded::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_OnPingAdded, CallFunc_GetMarkerComponent_ReturnValue) == 0x000070, "Member 'WBP_TooltipContainer_DOS_C_OnPingAdded::CallFunc_GetMarkerComponent_ReturnValue' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.OnPingRemoved
// 0x0060 (0x0060 - 0x0000)
struct WBP_TooltipContainer_DOS_C_OnPingRemoved final
{
public:
	struct FGzPingData                            PingData;                                          // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_OnPingRemoved) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_OnPingRemoved");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_OnPingRemoved) == 0x000060, "Wrong size on WBP_TooltipContainer_DOS_C_OnPingRemoved");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_OnPingRemoved, PingData) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_OnPingRemoved::PingData' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.ReceiveBindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_TooltipContainer_DOS_C_ReceiveBindEvents final
{
public:
	class APawn*                                  NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_ReceiveBindEvents) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_ReceiveBindEvents");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_ReceiveBindEvents) == 0x000008, "Wrong size on WBP_TooltipContainer_DOS_C_ReceiveBindEvents");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ReceiveBindEvents, NewViewTarget) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_ReceiveBindEvents::NewViewTarget' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.ReceiveUnbindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_TooltipContainer_DOS_C_ReceiveUnbindEvents final
{
public:
	class APawn*                                  OldViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_ReceiveUnbindEvents) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_ReceiveUnbindEvents");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_ReceiveUnbindEvents) == 0x000008, "Wrong size on WBP_TooltipContainer_DOS_C_ReceiveUnbindEvents");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ReceiveUnbindEvents, OldViewTarget) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_ReceiveUnbindEvents::OldViewTarget' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.SetSimpleInteractionTooltip
// 0x0100 (0x0100 - 0x0000)
struct WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip final
{
public:
	struct FGzInteractionData                     CallFunc_TryGetCurrentInteractionData_OutInteractionData; // 0x0000(0x00F8)(ContainsInstancedReference)
	bool                                          CallFunc_TryGetCurrentInteractionData_ReturnValue; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip) == 0x000100, "Wrong size on WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip, CallFunc_TryGetCurrentInteractionData_OutInteractionData) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip::CallFunc_TryGetCurrentInteractionData_OutInteractionData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip, CallFunc_TryGetCurrentInteractionData_ReturnValue) == 0x0000F8, "Member 'WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip::CallFunc_TryGetCurrentInteractionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000F9, "Member 'WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip, CallFunc_Not_PreBool_ReturnValue) == 0x0000FA, "Member 'WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FB, "Member 'WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip, CallFunc_BooleanOR_ReturnValue) == 0x0000FC, "Member 'WBP_TooltipContainer_DOS_C_SetSimpleInteractionTooltip::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.SetTooltipVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_TooltipContainer_DOS_C_SetTooltipVisibility final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_SetTooltipVisibility) == 0x000001, "Wrong alignment on WBP_TooltipContainer_DOS_C_SetTooltipVisibility");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_SetTooltipVisibility) == 0x000005, "Wrong size on WBP_TooltipContainer_DOS_C_SetTooltipVisibility");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetTooltipVisibility, Param_IsVisible) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_SetTooltipVisibility::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetTooltipVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_TooltipContainer_DOS_C_SetTooltipVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetTooltipVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_TooltipContainer_DOS_C_SetTooltipVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetTooltipVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_TooltipContainer_DOS_C_SetTooltipVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_SetTooltipVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_TooltipContainer_DOS_C_SetTooltipVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.ShowItemTooltip
// 0x0020 (0x0020 - 0x0000)
struct WBP_TooltipContainer_DOS_C_ShowItemTooltip final
{
public:
	class UGzItemData*                            ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TooltipItemType                             ItemType;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E80[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzContainerItemData*                   K2Node_DynamicCast_AsGz_Container_Item_Data;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_ShowItemTooltip) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_ShowItemTooltip");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_ShowItemTooltip) == 0x000020, "Wrong size on WBP_TooltipContainer_DOS_C_ShowItemTooltip");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ShowItemTooltip, ItemData) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_ShowItemTooltip::ItemData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ShowItemTooltip, Quantity) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_ShowItemTooltip::Quantity' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ShowItemTooltip, ItemType) == 0x00000C, "Member 'WBP_TooltipContainer_DOS_C_ShowItemTooltip::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ShowItemTooltip, K2Node_DynamicCast_AsGz_Container_Item_Data) == 0x000010, "Member 'WBP_TooltipContainer_DOS_C_ShowItemTooltip::K2Node_DynamicCast_AsGz_Container_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_ShowItemTooltip, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_TooltipContainer_DOS_C_ShowItemTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.UpdateFailedInteractionStatus
// 0x0030 (0x0030 - 0x0000)
struct WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus final
{
public:
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E81[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFailedInteractionText_ReturnValue;     // 0x0018(0x0010)(ConstParm)
	bool                                          CallFunc_GetInteractionConditionsPassed_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus) == 0x000030, "Wrong size on WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus, K2Node_DynamicCast_AsGz_Player_Character) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus, CallFunc_GetFailedInteractionText_ReturnValue) == 0x000018, "Member 'WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus::CallFunc_GetFailedInteractionText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus, CallFunc_GetInteractionConditionsPassed_ReturnValue) == 0x000028, "Member 'WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus::CallFunc_GetInteractionConditionsPassed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'WBP_TooltipContainer_DOS_C_UpdateFailedInteractionStatus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.UpdateFocusable
// 0x0030 (0x0030 - 0x0000)
struct WBP_TooltipContainer_DOS_C_UpdateFocusable final
{
public:
	bool                                          bCanInteract;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E82[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             NewLocalVar;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_GetResetProgressBarOnRelease_bGetResetProgressBarOnRelease; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E83[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInteractionDuration_InteractionStage_InteractionDuration; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Player_Interact_FocusingOnObject;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E84[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Set_Interaction_Duration_InteractionDUration_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_UpdateFocusable) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_UpdateFocusable");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_UpdateFocusable) == 0x000030, "Wrong size on WBP_TooltipContainer_DOS_C_UpdateFocusable");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFocusable, bCanInteract) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_UpdateFocusable::bCanInteract' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFocusable, NewLocalVar) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_UpdateFocusable::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFocusable, CallFunc_GetResetProgressBarOnRelease_bGetResetProgressBarOnRelease) == 0x000018, "Member 'WBP_TooltipContainer_DOS_C_UpdateFocusable::CallFunc_GetResetProgressBarOnRelease_bGetResetProgressBarOnRelease' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFocusable, CallFunc_GetInteractionDuration_InteractionStage_InteractionDuration) == 0x00001C, "Member 'WBP_TooltipContainer_DOS_C_UpdateFocusable::CallFunc_GetInteractionDuration_InteractionStage_InteractionDuration' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFocusable, CallFunc_Can_Player_Interact_FocusingOnObject) == 0x000020, "Member 'WBP_TooltipContainer_DOS_C_UpdateFocusable::CallFunc_Can_Player_Interact_FocusingOnObject' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateFocusable, CallFunc_Set_Interaction_Duration_InteractionDUration_ImplicitCast) == 0x000028, "Member 'WBP_TooltipContainer_DOS_C_UpdateFocusable::CallFunc_Set_Interaction_Duration_InteractionDUration_ImplicitCast' has a wrong offset!");

// Function WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C.UpdateHealth
// 0x0078 (0x0078 - 0x0000)
struct WBP_TooltipContainer_DOS_C_UpdateHealth final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalizedTime;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanInteract;                                      // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E85[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E86[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthNormalized_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimeInMinutesSecondFormatText_Result;  // 0x0030(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E87[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeInMinutesSecondFormatText_InSeconds_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipContainer_DOS_C_UpdateHealth) == 0x000008, "Wrong alignment on WBP_TooltipContainer_DOS_C_UpdateHealth");
static_assert(sizeof(WBP_TooltipContainer_DOS_C_UpdateHealth) == 0x000078, "Wrong size on WBP_TooltipContainer_DOS_C_UpdateHealth");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, OldValue) == 0x000000, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, NewValue) == 0x000004, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, NormalizedTime) == 0x000008, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::NormalizedTime' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, bCanInteract) == 0x00000C, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::bCanInteract' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_GetHealthNormalized_ReturnValue) == 0x00001C, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_GetHealthNormalized_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_GetTimeInMinutesSecondFormatText_Result) == 0x000030, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_GetTimeInMinutesSecondFormatText_Result' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TooltipContainer_DOS_C_UpdateHealth, CallFunc_GetTimeInMinutesSecondFormatText_InSeconds_ImplicitCast) == 0x000070, "Member 'WBP_TooltipContainer_DOS_C_UpdateHealth::CallFunc_GetTimeInMinutesSecondFormatText_InSeconds_ImplicitCast' has a wrong offset!");

}

