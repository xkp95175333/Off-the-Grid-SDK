#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BarrierLegs

#include "Basic.hpp"

#include "GA_BarrierLegs_classes.hpp"
#include "GA_BarrierLegs_parameters.hpp"


namespace SDK
{

// Function GA_BarrierLegs.GA_BarrierLegs_C.ExecuteUbergraph_GA_BarrierLegs
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BarrierLegs_C::ExecuteUbergraph_GA_BarrierLegs(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BarrierLegs_C", "ExecuteUbergraph_GA_BarrierLegs");

	Params::GA_BarrierLegs_C_ExecuteUbergraph_GA_BarrierLegs Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BarrierLegs.GA_BarrierLegs_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_BarrierLegs_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BarrierLegs_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BarrierLegs.GA_BarrierLegs_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BarrierLegs_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BarrierLegs_C", "K2_OnEndAbility");

	Params::GA_BarrierLegs_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BarrierLegs.GA_BarrierLegs_C.OnRelease_519A2D4442E88F21C8407DA5832B1F01
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeHeld                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BarrierLegs_C::OnRelease_519A2D4442E88F21C8407DA5832B1F01(float TimeHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BarrierLegs_C", "OnRelease_519A2D4442E88F21C8407DA5832B1F01");

	Params::GA_BarrierLegs_C_OnRelease_519A2D4442E88F21C8407DA5832B1F01 Parms{};

	Parms.TimeHeld = TimeHeld;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BarrierLegs.GA_BarrierLegs_C.SpawnBarrier
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_BarrierLegs_C::SpawnBarrier(const struct FGameplayAbilityTargetDataHandle& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BarrierLegs_C", "SpawnBarrier");

	Params::GA_BarrierLegs_C_SpawnBarrier Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BarrierLegs.GA_BarrierLegs_C.ValidData_97D13F2F440307B3F6BE0FA4262F6A0A
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_BarrierLegs_C::ValidData_97D13F2F440307B3F6BE0FA4262F6A0A(const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BarrierLegs_C", "ValidData_97D13F2F440307B3F6BE0FA4262F6A0A");

	Params::GA_BarrierLegs_C_ValidData_97D13F2F440307B3F6BE0FA4262F6A0A Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}

}

