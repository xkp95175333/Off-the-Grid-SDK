#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Defiler_HackTape

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "G01_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ApplyDefilerAreaEffefct
// 0x0008 (0x0008 - 0x0000)
struct BP_Defiler_HackTape_C_ApplyDefilerAreaEffefct final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_ApplyDefilerAreaEffefct) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_ApplyDefilerAreaEffefct");
static_assert(sizeof(BP_Defiler_HackTape_C_ApplyDefilerAreaEffefct) == 0x000008, "Wrong size on BP_Defiler_HackTape_C_ApplyDefilerAreaEffefct");
static_assert(offsetof(BP_Defiler_HackTape_C_ApplyDefilerAreaEffefct, Actor) == 0x000000, "Member 'BP_Defiler_HackTape_C_ApplyDefilerAreaEffefct::Actor' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ApplyGameplayEffectToTarget
// 0x0040 (0x0040 - 0x0000)
struct BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget final
{
public:
	class UClass*                                 Effect;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6546[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x0020(0x0018)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget");
static_assert(sizeof(BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget) == 0x000040, "Wrong size on BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget");
static_assert(offsetof(BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget, Effect) == 0x000000, "Member 'BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget::Effect' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget, Target) == 0x000008, "Member 'BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget, CallFunc_MakeEffectContext_ReturnValue) == 0x000020, "Member 'BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000038, "Member 'BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6547[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.BP_OnDeath
// 0x0020 (0x0020 - 0x0000)
struct BP_Defiler_HackTape_C_BP_OnDeath final
{
public:
	bool                                          HasDeathHitPoint;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6548[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DeathHitPoint;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_BP_OnDeath) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_BP_OnDeath");
static_assert(sizeof(BP_Defiler_HackTape_C_BP_OnDeath) == 0x000020, "Wrong size on BP_Defiler_HackTape_C_BP_OnDeath");
static_assert(offsetof(BP_Defiler_HackTape_C_BP_OnDeath, HasDeathHitPoint) == 0x000000, "Member 'BP_Defiler_HackTape_C_BP_OnDeath::HasDeathHitPoint' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_BP_OnDeath, DeathHitPoint) == 0x000008, "Member 'BP_Defiler_HackTape_C_BP_OnDeath::DeathHitPoint' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ExecuteUbergraph_BP_Defiler_HackTape
// 0x0210 (0x0210 - 0x0000)
struct BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6549[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzReconDrone*                          K2Node_DynamicCast_AsGz_Recon_Drone;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzAssaultDrone*                        K2Node_DynamicCast_AsGz_Assault_Drone;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654D[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character_1;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654E[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character_2;    // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654F[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6550[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character_3;    // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HasDeathHitPoint;                     // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6551[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_DeathHitPoint;                        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6552[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6553[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00F8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue_1;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6554[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable_1;                            // 0x0200(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape");
static_assert(sizeof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape) == 0x000210, "Wrong size on BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, EntryPoint) == 0x000000, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, Temp_object_Variable) == 0x000008, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_AsGz_Recon_Drone) == 0x000010, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_AsGz_Recon_Drone' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_AsGz_Assault_Drone) == 0x000020, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_AsGz_Assault_Drone' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsDedicatedServer_ReturnValue) == 0x000038, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000040, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsLocallyControlled_ReturnValue) == 0x00004A, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_GetOwner_ReturnValue_1) == 0x000050, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_AsGz_Multi_Part_Character_1) == 0x000058, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_AsGz_Multi_Part_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_AsGz_Multi_Part_Character_2) == 0x000068, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_AsGz_Multi_Part_Character_2' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_bSuccess_4) == 0x000070, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_GetTeamAttitude_ReturnValue) == 0x000071, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_HasAuthority_ReturnValue) == 0x000072, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_SwitchEnum_CmpSuccess) == 0x000073, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000074, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsValid_ReturnValue_1) == 0x000075, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000076, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_HasAuthority_ReturnValue_1) == 0x000077, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_Event_DeltaSeconds) == 0x000078, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_GetOwner_ReturnValue_2) == 0x000080, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_HasAuthority_ReturnValue_2) == 0x000088, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_AsGz_Multi_Part_Character_3) == 0x000090, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_AsGz_Multi_Part_Character_3' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_DynamicCast_bSuccess_5) == 0x000098, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsValid_ReturnValue_2) == 0x000099, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x00009A, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_Event_HasDeathHitPoint) == 0x00009B, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_Event_HasDeathHitPoint' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_Event_DeathHitPoint) == 0x0000A0, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_Event_DeathHitPoint' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0000B8, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0000C0, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0000C8, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0000D0, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000D8, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_OtherActor) == 0x0000E0, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_OtherComp) == 0x0000E8, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000F0, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000F4, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_ComponentBoundEvent_SweepResult) == 0x0000F8, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_GetOwner_ReturnValue_3) == 0x0001F0, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_GetTeamAttitude_ReturnValue_1) == 0x0001F8, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_GetTeamAttitude_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001F9, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsValid_ReturnValue_3) == 0x0001FA, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsValid_ReturnValue_4) == 0x0001FB, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, Temp_object_Variable_1) == 0x000200, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape, CallFunc_IsValid_ReturnValue_5) == 0x000208, "Member 'BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.GetSocketName
// 0x0008 (0x0008 - 0x0000)
struct BP_Defiler_HackTape_C_GetSocketName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_GetSocketName) == 0x000004, "Wrong alignment on BP_Defiler_HackTape_C_GetSocketName");
static_assert(sizeof(BP_Defiler_HackTape_C_GetSocketName) == 0x000008, "Wrong size on BP_Defiler_HackTape_C_GetSocketName");
static_assert(offsetof(BP_Defiler_HackTape_C_GetSocketName, ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_GetSocketName::ReturnValue' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.Hit
// 0x0048 (0x0048 - 0x0000)
struct BP_Defiler_HackTape_C_Hit final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6555[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character_1;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6556[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzReconDrone*                          K2Node_DynamicCast_AsGz_Recon_Drone;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6557[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzAssaultDrone*                        K2Node_DynamicCast_AsGz_Assault_Drone;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_Hit) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_Hit");
static_assert(sizeof(BP_Defiler_HackTape_C_Hit) == 0x000048, "Wrong size on BP_Defiler_HackTape_C_Hit");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_Hit::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000008, "Member 'BP_Defiler_HackTape_C_Hit::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Defiler_HackTape_C_Hit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_Defiler_HackTape_C_Hit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, K2Node_DynamicCast_AsGz_Multi_Part_Character_1) == 0x000018, "Member 'BP_Defiler_HackTape_C_Hit::K2Node_DynamicCast_AsGz_Multi_Part_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_Defiler_HackTape_C_Hit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, CallFunc_GetTeamAttitude_ReturnValue) == 0x000021, "Member 'BP_Defiler_HackTape_C_Hit::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, K2Node_DynamicCast_AsGz_Recon_Drone) == 0x000028, "Member 'BP_Defiler_HackTape_C_Hit::K2Node_DynamicCast_AsGz_Recon_Drone' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'BP_Defiler_HackTape_C_Hit::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'BP_Defiler_HackTape_C_Hit::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, K2Node_DynamicCast_AsGz_Assault_Drone) == 0x000038, "Member 'BP_Defiler_HackTape_C_Hit::K2Node_DynamicCast_AsGz_Assault_Drone' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit, K2Node_DynamicCast_bSuccess_3) == 0x000040, "Member 'BP_Defiler_HackTape_C_Hit::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.Hit Tape SVE
// 0x0018 (0x0018 - 0x0000)
struct BP_Defiler_HackTape_C_Hit_Tape_SVE final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6558[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_Hit_Tape_SVE) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_Hit_Tape_SVE");
static_assert(sizeof(BP_Defiler_HackTape_C_Hit_Tape_SVE) == 0x000018, "Wrong size on BP_Defiler_HackTape_C_Hit_Tape_SVE");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit_Tape_SVE, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_Hit_Tape_SVE::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit_Tape_SVE, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000008, "Member 'BP_Defiler_HackTape_C_Hit_Tape_SVE::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit_Tape_SVE, CallFunc_GetTeamAttitude_ReturnValue) == 0x000010, "Member 'BP_Defiler_HackTape_C_Hit_Tape_SVE::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit_Tape_SVE, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_Defiler_HackTape_C_Hit_Tape_SVE::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Hit_Tape_SVE, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x000014, "Member 'BP_Defiler_HackTape_C_Hit_Tape_SVE::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitEnemy
// 0x0008 (0x0008 - 0x0000)
struct BP_Defiler_HackTape_C_HitEnemy final
{
public:
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6559[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetLifeSpan_InLifespan_ImplicitCast;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_HitEnemy) == 0x000004, "Wrong alignment on BP_Defiler_HackTape_C_HitEnemy");
static_assert(sizeof(BP_Defiler_HackTape_C_HitEnemy) == 0x000008, "Wrong size on BP_Defiler_HackTape_C_HitEnemy");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemy, CallFunc_K2_AttachToActor_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_HitEnemy::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemy, CallFunc_SetLifeSpan_InLifespan_ImplicitCast) == 0x000004, "Member 'BP_Defiler_HackTape_C_HitEnemy::CallFunc_SetLifeSpan_InLifespan_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitEnemySVE
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Defiler_HackTape_C_HitEnemySVE final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0060(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0068(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PostLocalAnnouncement_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655A[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655B[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AKSoundSource_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_HitEnemySVE) == 0x000010, "Wrong alignment on BP_Defiler_HackTape_C_HitEnemySVE");
static_assert(sizeof(BP_Defiler_HackTape_C_HitEnemySVE) == 0x0000B0, "Wrong size on BP_Defiler_HackTape_C_HitEnemySVE");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, Temp_struct_Variable) == 0x000060, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, Temp_struct_Variable_1) == 0x000068, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, CallFunc_PostLocalAnnouncement_ReturnValue) == 0x000078, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::CallFunc_PostLocalAnnouncement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, K2Node_DynamicCast_AsGz_Player_Character) == 0x000080, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, CallFunc_IsLocallyControlled_ReturnValue) == 0x000089, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitEnemySVE, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x0000A0, "Member 'BP_Defiler_HackTape_C_HitEnemySVE::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitObject
// 0x0004 (0x0004 - 0x0000)
struct BP_Defiler_HackTape_C_HitObject final
{
public:
	float                                         CallFunc_SetLifeSpan_InLifespan_ImplicitCast;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_HitObject) == 0x000004, "Wrong alignment on BP_Defiler_HackTape_C_HitObject");
static_assert(sizeof(BP_Defiler_HackTape_C_HitObject) == 0x000004, "Wrong size on BP_Defiler_HackTape_C_HitObject");
static_assert(offsetof(BP_Defiler_HackTape_C_HitObject, CallFunc_SetLifeSpan_InLifespan_ImplicitCast) == 0x000000, "Member 'BP_Defiler_HackTape_C_HitObject::CallFunc_SetLifeSpan_InLifespan_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitObjectSVE
// 0x0080 (0x0080 - 0x0000)
struct BP_Defiler_HackTape_C_HitObjectSVE final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AKSoundSource_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_HitObjectSVE) == 0x000010, "Wrong alignment on BP_Defiler_HackTape_C_HitObjectSVE");
static_assert(sizeof(BP_Defiler_HackTape_C_HitObjectSVE) == 0x000080, "Wrong size on BP_Defiler_HackTape_C_HitObjectSVE");
static_assert(offsetof(BP_Defiler_HackTape_C_HitObjectSVE, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_HitObjectSVE::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitObjectSVE, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_Defiler_HackTape_C_HitObjectSVE::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitObjectSVE, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'BP_Defiler_HackTape_C_HitObjectSVE::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitObjectSVE, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x000070, "Member 'BP_Defiler_HackTape_C_HitObjectSVE::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitSVE
// 0x0048 (0x0048 - 0x0000)
struct BP_Defiler_HackTape_C_HitSVE final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655C[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character_1;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655D[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzReconDrone*                          K2Node_DynamicCast_AsGz_Recon_Drone;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzAssaultDrone*                        K2Node_DynamicCast_AsGz_Assault_Drone;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_HitSVE) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_HitSVE");
static_assert(sizeof(BP_Defiler_HackTape_C_HitSVE) == 0x000048, "Wrong size on BP_Defiler_HackTape_C_HitSVE");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_HitSVE::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000008, "Member 'BP_Defiler_HackTape_C_HitSVE::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Defiler_HackTape_C_HitSVE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_Defiler_HackTape_C_HitSVE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, K2Node_DynamicCast_AsGz_Multi_Part_Character_1) == 0x000018, "Member 'BP_Defiler_HackTape_C_HitSVE::K2Node_DynamicCast_AsGz_Multi_Part_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_Defiler_HackTape_C_HitSVE::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, CallFunc_GetTeamAttitude_ReturnValue) == 0x000021, "Member 'BP_Defiler_HackTape_C_HitSVE::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'BP_Defiler_HackTape_C_HitSVE::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, K2Node_DynamicCast_AsGz_Recon_Drone) == 0x000028, "Member 'BP_Defiler_HackTape_C_HitSVE::K2Node_DynamicCast_AsGz_Recon_Drone' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'BP_Defiler_HackTape_C_HitSVE::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, K2Node_DynamicCast_AsGz_Assault_Drone) == 0x000038, "Member 'BP_Defiler_HackTape_C_HitSVE::K2Node_DynamicCast_AsGz_Assault_Drone' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_HitSVE, K2Node_DynamicCast_bSuccess_3) == 0x000040, "Member 'BP_Defiler_HackTape_C_HitSVE::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.On Destroy SVE
// 0x0028 (0x0028 - 0x0000)
struct BP_Defiler_HackTape_C_On_Destroy_SVE final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_On_Destroy_SVE) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_On_Destroy_SVE");
static_assert(sizeof(BP_Defiler_HackTape_C_On_Destroy_SVE) == 0x000028, "Wrong size on BP_Defiler_HackTape_C_On_Destroy_SVE");
static_assert(offsetof(BP_Defiler_HackTape_C_On_Destroy_SVE, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_On_Destroy_SVE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_On_Destroy_SVE, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_Defiler_HackTape_C_On_Destroy_SVE::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_On_Destroy_SVE, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Defiler_HackTape_C_On_Destroy_SVE::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_On_Destroy_SVE, CallFunc_PostEventAtLocation_ReturnValue) == 0x000020, "Member 'BP_Defiler_HackTape_C_On_Destroy_SVE::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.Pulse
// 0x0020 (0x0020 - 0x0000)
struct BP_Defiler_HackTape_C_Pulse final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6560[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_Pulse) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_Pulse");
static_assert(sizeof(BP_Defiler_HackTape_C_Pulse) == 0x000020, "Wrong size on BP_Defiler_HackTape_C_Pulse");
static_assert(offsetof(BP_Defiler_HackTape_C_Pulse, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_Pulse::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Pulse, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'BP_Defiler_HackTape_C_Pulse::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Pulse, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000002, "Member 'BP_Defiler_HackTape_C_Pulse::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Pulse, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_Defiler_HackTape_C_Pulse::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Pulse, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'BP_Defiler_HackTape_C_Pulse::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Pulse, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_Defiler_HackTape_C_Pulse::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.PulseGameplayEffect
// 0x0068 (0x0068 - 0x0000)
struct BP_Defiler_HackTape_C_PulseGameplayEffect final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6561[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6562[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6563[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_PulseGameplayEffect) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_PulseGameplayEffect");
static_assert(sizeof(BP_Defiler_HackTape_C_PulseGameplayEffect) == 0x000068, "Wrong size on BP_Defiler_HackTape_C_PulseGameplayEffect");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, Temp_object_Variable) == 0x000000, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_SphereOverlapActors_OutActors) == 0x000040, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_SphereOverlapActors_ReturnValue) == 0x000050, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_GetTeamAttitude_ReturnValue) == 0x000061, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, K2Node_SwitchEnum_CmpSuccess) == 0x000062, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_PulseGameplayEffect, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x000064, "Member 'BP_Defiler_HackTape_C_PulseGameplayEffect::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Defiler_HackTape_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Defiler_HackTape_C_ReceiveTick");
static_assert(sizeof(BP_Defiler_HackTape_C_ReceiveTick) == 0x000004, "Wrong size on BP_Defiler_HackTape_C_ReceiveTick");
static_assert(offsetof(BP_Defiler_HackTape_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Defiler_HackTape_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SetFriendColorForField
// 0x0020 (0x0020 - 0x0000)
struct BP_Defiler_HackTape_C_SetFriendColorForField final
{
public:
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0000(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_SetFriendColorForField) == 0x000010, "Wrong alignment on BP_Defiler_HackTape_C_SetFriendColorForField");
static_assert(sizeof(BP_Defiler_HackTape_C_SetFriendColorForField) == 0x000020, "Wrong size on BP_Defiler_HackTape_C_SetFriendColorForField");
static_assert(offsetof(BP_Defiler_HackTape_C_SetFriendColorForField, CallFunc_MakeVector4_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_SetFriendColorForField::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SetHostileColorForField
// 0x0020 (0x0020 - 0x0000)
struct BP_Defiler_HackTape_C_SetHostileColorForField final
{
public:
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0000(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_SetHostileColorForField) == 0x000010, "Wrong alignment on BP_Defiler_HackTape_C_SetHostileColorForField");
static_assert(sizeof(BP_Defiler_HackTape_C_SetHostileColorForField) == 0x000020, "Wrong size on BP_Defiler_HackTape_C_SetHostileColorForField");
static_assert(offsetof(BP_Defiler_HackTape_C_SetHostileColorForField, CallFunc_MakeVector4_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_SetHostileColorForField::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SetHP
// 0x0070 (0x0070 - 0x0000)
struct BP_Defiler_HackTape_C_SetHP final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, float>              K2Node_MakeMap_Map;                                // 0x0018(0x0050)(ConstParm)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectFromActorWithCustomMagnitudes_ReturnValue; // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_SetHP) == 0x000008, "Wrong alignment on BP_Defiler_HackTape_C_SetHP");
static_assert(sizeof(BP_Defiler_HackTape_C_SetHP) == 0x000070, "Wrong size on BP_Defiler_HackTape_C_SetHP");
static_assert(offsetof(BP_Defiler_HackTape_C_SetHP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_SetHP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SetHP, K2Node_MakeMap_Map) == 0x000018, "Member 'BP_Defiler_HackTape_C_SetHP::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SetHP, CallFunc_BP_ApplyGameplayEffectFromActorWithCustomMagnitudes_ReturnValue) == 0x000068, "Member 'BP_Defiler_HackTape_C_SetHP::CallFunc_BP_ApplyGameplayEffectFromActorWithCustomMagnitudes_ReturnValue' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SetupSphereCollision
// 0x0004 (0x0004 - 0x0000)
struct BP_Defiler_HackTape_C_SetupSphereCollision final
{
public:
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_SetupSphereCollision) == 0x000004, "Wrong alignment on BP_Defiler_HackTape_C_SetupSphereCollision");
static_assert(sizeof(BP_Defiler_HackTape_C_SetupSphereCollision) == 0x000004, "Wrong size on BP_Defiler_HackTape_C_SetupSphereCollision");
static_assert(offsetof(BP_Defiler_HackTape_C_SetupSphereCollision, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000000, "Member 'BP_Defiler_HackTape_C_SetupSphereCollision::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.Spawn Vision Area
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Defiler_HackTape_C_Spawn_Vision_Area final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6564[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6565[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Defiler_TapeVisionArea_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_Spawn_Vision_Area) == 0x000010, "Wrong alignment on BP_Defiler_HackTape_C_Spawn_Vision_Area");
static_assert(sizeof(BP_Defiler_HackTape_C_Spawn_Vision_Area) == 0x0000B0, "Wrong size on BP_Defiler_HackTape_C_Spawn_Vision_Area");
static_assert(offsetof(BP_Defiler_HackTape_C_Spawn_Vision_Area, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_Spawn_Vision_Area::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Spawn_Vision_Area, CallFunc_K2_AttachToActor_ReturnValue) == 0x000008, "Member 'BP_Defiler_HackTape_C_Spawn_Vision_Area::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Spawn_Vision_Area, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_Defiler_HackTape_C_Spawn_Vision_Area::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Spawn_Vision_Area, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_Defiler_HackTape_C_Spawn_Vision_Area::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Spawn_Vision_Area, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_Defiler_HackTape_C_Spawn_Vision_Area::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Spawn_Vision_Area, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BP_Defiler_HackTape_C_Spawn_Vision_Area::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_Spawn_Vision_Area, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x0000A0, "Member 'BP_Defiler_HackTape_C_Spawn_Vision_Area::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SpawnBrockenLimbVFX
// 0x0090 (0x0090 - 0x0000)
struct BP_Defiler_HackTape_C_SpawnBrockenLimbVFX final
{
public:
	EGzLimbType                                   LimbType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6566[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Defiler_HackedLimbsEffect_C*        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_SpawnBrockenLimbVFX) == 0x000010, "Wrong alignment on BP_Defiler_HackTape_C_SpawnBrockenLimbVFX");
static_assert(sizeof(BP_Defiler_HackTape_C_SpawnBrockenLimbVFX) == 0x000090, "Wrong size on BP_Defiler_HackTape_C_SpawnBrockenLimbVFX");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnBrockenLimbVFX, LimbType) == 0x000000, "Member 'BP_Defiler_HackTape_C_SpawnBrockenLimbVFX::LimbType' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnBrockenLimbVFX, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_Defiler_HackTape_C_SpawnBrockenLimbVFX::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnBrockenLimbVFX, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'BP_Defiler_HackTape_C_SpawnBrockenLimbVFX::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnBrockenLimbVFX, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000078, "Member 'BP_Defiler_HackTape_C_SpawnBrockenLimbVFX::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnBrockenLimbVFX, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_Defiler_HackTape_C_SpawnBrockenLimbVFX::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnBrockenLimbVFX, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'BP_Defiler_HackTape_C_SpawnBrockenLimbVFX::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SpawnTraceVFX
// 0x0110 (0x0110 - 0x0000)
struct BP_Defiler_HackTape_C_SpawnTraceVFX final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6567[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6568[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DefilerTraceActor_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_HackTape_C_SpawnTraceVFX) == 0x000010, "Wrong alignment on BP_Defiler_HackTape_C_SpawnTraceVFX");
static_assert(sizeof(BP_Defiler_HackTape_C_SpawnTraceVFX) == 0x000110, "Wrong size on BP_Defiler_HackTape_C_SpawnTraceVFX");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000020, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_GetSocketLocation_ReturnValue) == 0x000030, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_Normal_ReturnValue) == 0x000060, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_VSize_ReturnValue) == 0x000078, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_MakeRotFromZ_ReturnValue) == 0x000080, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000100, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_HackTape_C_SpawnTraceVFX, CallFunc_FinishSpawningActor_ReturnValue) == 0x000108, "Member 'BP_Defiler_HackTape_C_SpawnTraceVFX::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

