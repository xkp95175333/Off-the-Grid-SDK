#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChallengeEntry

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ChallengeEntry.WBP_ChallengeEntry_C
// 0x0028 (0x0308 - 0x02E0)
class UWBP_ChallengeEntry_C final : public UUserWidget
{
public:
	class UProgressBar*                           ProgressBar_70;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           TrialDescriptionBox;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           TrialNameBox;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           TrialProgressBox;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTrialsControllerComponent*           LocalTrialsComponent;                              // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateProgressText(int32 Current, int32 Max);
	void UpdateProgressBox(int32 Current, int32 Max);
	void PullDataFromTrialTemplate(class UGzTrialTemplate* SourceTemplate);
	void PullDataFromGameplayTrial(const struct FGzGameplayTrial& SourceTrial);
	void HandleChallengeCompleted(class UGzTrialTemplate* NewParam);
	void HandleAchievementStageCompleted(class UGzTrialTemplate* AchievementTemplate, int32 CompletedStageIdx);
	void GetCurrentStage(const struct FGzGameplayTrial& GameplayTrial, int32* CurrentStageNumber);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ChallengeEntry_C">();
	}
	static class UWBP_ChallengeEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ChallengeEntry_C>();
	}
};
static_assert(alignof(UWBP_ChallengeEntry_C) == 0x000008, "Wrong alignment on UWBP_ChallengeEntry_C");
static_assert(sizeof(UWBP_ChallengeEntry_C) == 0x000308, "Wrong size on UWBP_ChallengeEntry_C");
static_assert(offsetof(UWBP_ChallengeEntry_C, ProgressBar_70) == 0x0002E0, "Member 'UWBP_ChallengeEntry_C::ProgressBar_70' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengeEntry_C, TrialDescriptionBox) == 0x0002E8, "Member 'UWBP_ChallengeEntry_C::TrialDescriptionBox' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengeEntry_C, TrialNameBox) == 0x0002F0, "Member 'UWBP_ChallengeEntry_C::TrialNameBox' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengeEntry_C, TrialProgressBox) == 0x0002F8, "Member 'UWBP_ChallengeEntry_C::TrialProgressBox' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengeEntry_C, LocalTrialsComponent) == 0x000300, "Member 'UWBP_ChallengeEntry_C::LocalTrialsComponent' has a wrong offset!");

}

