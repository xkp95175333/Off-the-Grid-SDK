#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_WeaponItem_DOS

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "G01_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EHUD_WeaponItemState_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.ActivateBlockSlotState
// 0x0007 (0x0007 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState final
{
public:
	bool                                          bLocked;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlockState;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUD_WeaponItemState                          Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUD_WeaponItemState                          Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidWeaponInSlot_bValid;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUD_WeaponItemState                          K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState) == 0x000001, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState) == 0x000007, "Wrong size on WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState, bLocked) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState::bLocked' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState, BlockState) == 0x000001, "Member 'WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState::BlockState' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState, Temp_bool_Variable) == 0x000002, "Member 'WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState, Temp_byte_Variable) == 0x000003, "Member 'WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState, CallFunc_IsValidWeaponInSlot_bValid) == 0x000005, "Member 'WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState::CallFunc_IsValidWeaponInSlot_bValid' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState, K2Node_Select_Default) == 0x000006, "Member 'WBP_HUD_WeaponItem_DOS_C_ActivateBlockSlotState::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.DoesHaveAnyLimbs
// 0x0080 (0x0080 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs final
{
public:
	bool                                          Redult;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C03[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzWeaponActor*                         WeaponActorRight;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         WeaponActorLeft;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CombatComp;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzInvComponent*                        InventoryCmp;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0028(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C04[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0034(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C05[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGzInvItem>                     CallFunc_GetItemsBySlot_ReturnValue;               // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C06[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGzInvItem>                     CallFunc_GetItemsBySlot_ReturnValue_1;             // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C07[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs) == 0x000080, "Wrong size on WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, Redult) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::Redult' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, WeaponActorRight) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::WeaponActorRight' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, WeaponActorLeft) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::WeaponActorLeft' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CombatComp) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CombatComp' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, InventoryCmp) == 0x000020, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::InventoryCmp' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, Temp_struct_Variable) == 0x000028, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, Temp_struct_Variable_1) == 0x000034, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CallFunc_GetItemsBySlot_ReturnValue) == 0x000040, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CallFunc_GetItemsBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CallFunc_GetItemsBySlot_ReturnValue_1) == 0x000058, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CallFunc_GetItemsBySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CallFunc_GetInventoryComponent_ReturnValue) == 0x000070, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000078, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs, CallFunc_BooleanOR_ReturnValue) == 0x000079, "Member 'WBP_HUD_WeaponItem_DOS_C_DoesHaveAnyLimbs::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.ExecuteUbergraph_WBP_HUD_WeaponItem_DOS
// 0x0060 (0x0060 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C08[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ViewTarget;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C09[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_NewViewTarget;                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C0A[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_OldViewTarget;                        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS) == 0x000060, "Wrong size on WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, EntryPoint) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, Temp_byte_Variable) == 0x000004, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, Temp_int_Variable) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, Temp_int_Variable_1) == 0x00000C, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, Temp_int_Variable_2) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, Temp_int_Variable_3) == 0x000014, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, K2Node_Event_ViewTarget) == 0x000020, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::K2Node_Event_ViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000028, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, K2Node_CustomEvent_bNewInputType) == 0x000031, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, K2Node_Event_NewViewTarget) == 0x000038, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::K2Node_Event_NewViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, K2Node_Select_Default) == 0x000040, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, K2Node_Event_OldViewTarget) == 0x000048, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::K2Node_Event_OldViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'WBP_HUD_WeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_WeaponItem_DOS::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.GetCombatComponent
// 0x0020 (0x0020 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_GetCombatComponent final
{
public:
	class UGzCombatComponent*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_GetCombatComponent) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_GetCombatComponent");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_GetCombatComponent) == 0x000020, "Wrong size on WBP_HUD_WeaponItem_DOS_C_GetCombatComponent");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetCombatComponent, Result) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_GetCombatComponent::Result' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetCombatComponent, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_GetCombatComponent::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetCombatComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_GetCombatComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetCombatComponent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_GetCombatComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.GetInventoryComponent
// 0x0030 (0x0030 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent final
{
public:
	class UGzInvComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGzPlayerViewTargetInterface> K2Node_DynamicCast_AsGz_Player_View_Target_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C0B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzInvComponent*                        CallFunc_GetViewTargetInventory_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent) == 0x000030, "Wrong size on WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent, ReturnValue) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent, K2Node_DynamicCast_AsGz_Player_View_Target_Interface) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent::K2Node_DynamicCast_AsGz_Player_View_Target_Interface' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent, CallFunc_GetViewTargetInventory_ReturnValue) == 0x000028, "Member 'WBP_HUD_WeaponItem_DOS_C_GetInventoryComponent::CallFunc_GetViewTargetInventory_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.GetPocketId
// 0x0040 (0x0040 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_GetPocketId final
{
public:
	struct FGzInvPocketId                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzInvPocket                           CallFunc_GetPocketBySlot_ReturnValue;              // 0x0010(0x0028)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_GetPocketId) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_GetPocketId");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_GetPocketId) == 0x000040, "Wrong size on WBP_HUD_WeaponItem_DOS_C_GetPocketId");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetPocketId, ReturnValue) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_GetPocketId::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetPocketId, CallFunc_GetInventoryComponent_ReturnValue) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_GetPocketId::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetPocketId, CallFunc_GetPocketBySlot_ReturnValue) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_GetPocketId::CallFunc_GetPocketBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetPocketId, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_HUD_WeaponItem_DOS_C_GetPocketId::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.GetWeaponItemData
// 0x0030 (0x0030 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData final
{
public:
	class UGzWeaponItemData*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGzInvPocketId                         CallFunc_GetPocketId_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_Result;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         CallFunc_GetWeaponAtPocket_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C0C[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponItemData*                      CallFunc_GetItemData_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData) == 0x000030, "Wrong size on WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData, ReturnValue) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData, CallFunc_GetPocketId_ReturnValue) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData::CallFunc_GetPocketId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData, CallFunc_GetCombatComponent_Result) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData::CallFunc_GetCombatComponent_Result' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData, CallFunc_GetWeaponAtPocket_ReturnValue) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData::CallFunc_GetWeaponAtPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData, CallFunc_GetItemData_ReturnValue) == 0x000028, "Member 'WBP_HUD_WeaponItem_DOS_C_GetWeaponItemData::CallFunc_GetItemData_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.HasSideArmEquipped
// 0x0030 (0x0030 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C0D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_Result;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C0E[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponItemData*                      CallFunc_GetItemData_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped) == 0x000030, "Wrong size on WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped, ReturnValue) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped, CallFunc_GetCombatComponent_Result) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped::CallFunc_GetCombatComponent_Result' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped, CallFunc_GetItemData_ReturnValue) == 0x000020, "Member 'WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'WBP_HUD_WeaponItem_DOS_C_HasSideArmEquipped::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_InputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_InputMethodChanged) == 0x000001, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_InputMethodChanged");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_InputMethodChanged) == 0x000001, "Wrong size on WBP_HUD_WeaponItem_DOS_C_InputMethodChanged");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.IsValidWeaponInSlot
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot final
{
public:
	bool                                          bValid;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C0F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvPocketId                         CallFunc_GetPocketId_ReturnValue;                  // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C10[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_Result;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         CallFunc_GetWeaponAtPocket_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot) == 0x000028, "Wrong size on WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot, bValid) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot::bValid' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot, CallFunc_GetPocketId_ReturnValue) == 0x000004, "Member 'WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot::CallFunc_GetPocketId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot, CallFunc_GetCombatComponent_Result) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot::CallFunc_GetCombatComponent_Result' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot, CallFunc_GetWeaponAtPocket_ReturnValue) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot::CallFunc_GetWeaponAtPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'WBP_HUD_WeaponItem_DOS_C_IsValidWeaponInSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.OnViewTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_OnViewTargetChanged final
{
public:
	class APawn*                                  ViewTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_OnViewTargetChanged) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_OnViewTargetChanged");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_OnViewTargetChanged) == 0x000008, "Wrong size on WBP_HUD_WeaponItem_DOS_C_OnViewTargetChanged");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_OnViewTargetChanged, ViewTarget) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_OnViewTargetChanged::ViewTarget' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.ReceiveBindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_ReceiveBindEvents final
{
public:
	class APawn*                                  NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_ReceiveBindEvents) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_ReceiveBindEvents");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_ReceiveBindEvents) == 0x000008, "Wrong size on WBP_HUD_WeaponItem_DOS_C_ReceiveBindEvents");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ReceiveBindEvents, NewViewTarget) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_ReceiveBindEvents::NewViewTarget' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.ReceiveUnbindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_ReceiveUnbindEvents final
{
public:
	class APawn*                                  OldViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_ReceiveUnbindEvents) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_ReceiveUnbindEvents");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_ReceiveUnbindEvents) == 0x000008, "Wrong size on WBP_HUD_WeaponItem_DOS_C_ReceiveUnbindEvents");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_ReceiveUnbindEvents, OldViewTarget) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_ReceiveUnbindEvents::OldViewTarget' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.SetAsSelectedSlot
// 0x0034 (0x0034 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C11[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           UnselectedColor;                                   // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedColor;                                     // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot) == 0x000004, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot) == 0x000034, "Wrong size on WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot, bIsSelected) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot::bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot, UnselectedColor) == 0x000004, "Member 'WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot::UnselectedColor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot, SelectedColor) == 0x000014, "Member 'WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot::SelectedColor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot, CallFunc_SelectColor_ReturnValue) == 0x000024, "Member 'WBP_HUD_WeaponItem_DOS_C_SetAsSelectedSlot::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.SetControllerActionInputVisibility
// 0x0003 (0x0003 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility) == 0x000001, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility) == 0x000003, "Wrong size on WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility, Param_IsVisible) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000002, "Member 'WBP_HUD_WeaponItem_DOS_C_SetControllerActionInputVisibility::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.SetKeyBinding
// 0x0018 (0x0018 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_SetKeyBinding final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_SetKeyBinding) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_SetKeyBinding");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_SetKeyBinding) == 0x000018, "Wrong size on WBP_HUD_WeaponItem_DOS_C_SetKeyBinding");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetKeyBinding, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_SetKeyBinding::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetKeyBinding, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_SetKeyBinding::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetKeyBinding, CallFunc_GetCurrentInputType_ReturnValue) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_SetKeyBinding::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetKeyBinding, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'WBP_HUD_WeaponItem_DOS_C_SetKeyBinding::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.SetSidearmDoublePressInput
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidWeaponInSlot_bValid;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C12[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C13[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSideArmEquipped_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput) == 0x000028, "Wrong size on WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, Temp_bool_Variable) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, Temp_byte_Variable) == 0x000001, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_IsValidWeaponInSlot_bValid) == 0x000003, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_IsValidWeaponInSlot_bValid' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_HasSideArmEquipped_ReturnValue) == 0x000020, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_HasSideArmEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_GetCurrentInputType_ReturnValue) == 0x000021, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000023, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, K2Node_Select_Default) == 0x000024, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000025, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput, CallFunc_BooleanOR_ReturnValue_1) == 0x000026, "Member 'WBP_HUD_WeaponItem_DOS_C_SetSidearmDoublePressInput::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.SetStateActionWidget
// 0x0020 (0x0020 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C14[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C15[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget) == 0x000004, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget) == 0x000020, "Wrong size on WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget, bActive) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget::bActive' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget, Temp_bool_Variable) == 0x000001, "Member 'WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget, Temp_struct_Variable) == 0x000004, "Member 'WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget, Temp_struct_Variable_1) == 0x00000C, "Member 'WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget, K2Node_Select_Default) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_SetStateActionWidget::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.SetWeaponData
// 0x0048 (0x0048 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_SetWeaponData final
{
public:
	struct FVector2D                              NonPistolSize;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PistolSize;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzWeaponItemData*                      CallFunc_GetWeaponItemData_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetAmmoTypeImage_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_SetWeaponData) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_SetWeaponData");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_SetWeaponData) == 0x000048, "Wrong size on WBP_HUD_WeaponItem_DOS_C_SetWeaponData");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponData, NonPistolSize) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponData::NonPistolSize' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponData, PistolSize) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponData::PistolSize' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponData, CallFunc_GetWeaponItemData_ReturnValue) == 0x000020, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponData::CallFunc_GetWeaponItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponData, CallFunc_GetRarityColor_ReturnValue) == 0x000028, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponData::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponData, CallFunc_GetAmmoTypeImage_ReturnValue) == 0x000038, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponData::CallFunc_GetAmmoTypeImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponData, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.SetWeaponSlotState
// 0x0024 (0x0024 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState final
{
public:
	EHUD_WeaponItemState                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C16[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUD_WeaponItemState                          Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C17[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidWeaponInSlot_bValid;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C18[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState) == 0x000004, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState) == 0x000024, "Wrong size on WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, State) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::State' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, Temp_int_Variable) == 0x000004, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, Temp_int_Variable_1) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, Temp_byte_Variable) == 0x00000C, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, Temp_int_Variable_2) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, Temp_int_Variable_3) == 0x000014, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, Temp_bool_Variable) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, CallFunc_IsValidWeaponInSlot_bValid) == 0x00001A, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::CallFunc_IsValidWeaponInSlot_bValid' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, K2Node_Select_Default) == 0x00001C, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState, K2Node_Select_Default_1) == 0x000020, "Member 'WBP_HUD_WeaponItem_DOS_C_SetWeaponSlotState::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.Update Can Equip
// 0x0009 (0x0009 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUD_WeaponItemState                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesHaveAnyLimbs_Redult;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip) == 0x000001, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip) == 0x000009, "Wrong size on WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip, Temp_bool_Variable) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip, Temp_byte_Variable) == 0x000002, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip, Temp_bool_Variable_2) == 0x000003, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip, Temp_bool_Variable_3) == 0x000004, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip, CallFunc_DoesHaveAnyLimbs_Redult) == 0x000005, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip::CallFunc_DoesHaveAnyLimbs_Redult' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip, K2Node_Select_Default) == 0x000007, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Can_Equip::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.Update Weapon
// 0x0009 (0x0009 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_Update_Weapon final
{
public:
	EHUD_WeaponItemState                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUD_WeaponItemState                          Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidWeaponInSlot_bValid;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUD_WeaponItemState                          K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon) == 0x000001, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_Update_Weapon");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon) == 0x000009, "Wrong size on WBP_HUD_WeaponItem_DOS_C_Update_Weapon");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon, Temp_byte_Variable) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Weapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon, Temp_bool_Variable) == 0x000001, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Weapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Weapon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Weapon::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Weapon::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Weapon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon, CallFunc_IsValidWeaponInSlot_bValid) == 0x000006, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Weapon::CallFunc_IsValidWeaponInSlot_bValid' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon, K2Node_Select_Default) == 0x000007, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Weapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_Update_Weapon, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_Update_Weapon::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.UpdateVisualBlockSlotState
// 0x003C (0x003C - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState final
{
public:
	struct FLinearColor                           BlockColor;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlockActivated;                                    // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C19[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1A[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState) == 0x000004, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState) == 0x00003C, "Wrong size on WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState, BlockColor) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState::BlockColor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState, BlockActivated) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState::BlockActivated' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState, Temp_struct_Variable) == 0x000014, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState, Temp_bool_Variable) == 0x000024, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState, K2Node_Select_Default) == 0x000028, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateVisualBlockSlotState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C.UpdateWeaponAmmoInStock
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock final
{
public:
	struct FGzInvPocketId                         CallFunc_GetPocketId_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoCountForWeaponPocket_ReturnValue;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0010)()
};
static_assert(alignof(WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock) == 0x000008, "Wrong alignment on WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock");
static_assert(sizeof(WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock) == 0x000028, "Wrong size on WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock, CallFunc_GetPocketId_ReturnValue) == 0x000000, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock::CallFunc_GetPocketId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock, CallFunc_GetAmmoCountForWeaponPocket_ReturnValue) == 0x000010, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock::CallFunc_GetAmmoCountForWeaponPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_HUD_WeaponItem_DOS_C_UpdateWeaponAmmoInStock::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

