#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GrappleIndicator

#include "Basic.hpp"

#include "WBP_GrappleIndicator_classes.hpp"
#include "WBP_GrappleIndicator_parameters.hpp"


namespace SDK
{

// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.ExecuteUbergraph_WBP_GrappleIndicator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GrappleIndicator_C::ExecuteUbergraph_WBP_GrappleIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GrappleIndicator_C", "ExecuteUbergraph_WBP_GrappleIndicator");

	Params::WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.InitGrappleAbilities
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGzCharacter*                     Param_PlayerCharacter                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_GrappleIndicator_C::InitGrappleAbilities(class AGzCharacter* Param_PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GrappleIndicator_C", "InitGrappleAbilities");

	Params::WBP_GrappleIndicator_C_InitGrappleAbilities Parms{};

	Parms.Param_PlayerCharacter = Param_PlayerCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.On Abilities Updated
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_GrappleIndicator_C::On_Abilities_Updated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GrappleIndicator_C", "On Abilities Updated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.ReceiveBindEvents
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            NewViewTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_GrappleIndicator_C::ReceiveBindEvents(class APawn* NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GrappleIndicator_C", "ReceiveBindEvents");

	Params::WBP_GrappleIndicator_C_ReceiveBindEvents Parms{};

	Parms.NewViewTarget = NewViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.ReceiveUnbindEvents
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            OldViewTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_GrappleIndicator_C::ReceiveUnbindEvents(class APawn* OldViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GrappleIndicator_C", "ReceiveUnbindEvents");

	Params::WBP_GrappleIndicator_C_ReceiveUnbindEvents Parms{};

	Parms.OldViewTarget = OldViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GrappleIndicator_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GrappleIndicator_C", "Tick");

	Params::WBP_GrappleIndicator_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

