#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimStruct_StanceTransitions_structs.hpp"
#include "AnimationWarpingRuntime_structs.hpp"
#include "Anim_ItemType_structs.hpp"
#include "ABP_Item_structs.hpp"
#include "ControlRig_structs.hpp"
#include "AnimStruct_ArmedStates_structs.hpp"
#include "AnimStruct_AimingCorrection_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Item.ABP_Item_C
// 0x6940 (0x71F0 - 0x08B0)
class UABP_Item_C : public UGzLayerCharacterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Item::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x08B8(0x0100)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x09B8(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x09C0(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0A68(0x0008)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0A70(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0A98(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0AC0(0x0028)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_12;                           // 0x0AE8(0x0048)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_11;                           // 0x0B30(0x0048)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_1;                        // 0x0B78(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_Root                         AnimGraphNode_Root_21;                             // 0x1048(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x1068(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x1090(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x10B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x10E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x1128(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x1148(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x1190(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x11B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x11F8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_7;                      // 0x1218(0x00C8)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_10;                           // 0x12E0(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_14;                       // 0x1328(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_18;            // 0x1450(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_18;            // 0x1470(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_20;                             // 0x1490(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_19;                             // 0x14B0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x14D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x14F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x1520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x1548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x1570(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x1598(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x15E0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x1600(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x1648(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x1668(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x16B0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x16D0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x1718(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_6;                      // 0x1738(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_18;                             // 0x1800(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_17;                             // 0x1820(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x1840(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x1868(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x1890(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x18B8(0x0028)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x18E0(0x0010)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x18F0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x19B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x1A00(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x1A20(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1A40(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_5;                      // 0x1A60(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_16;                             // 0x1B28(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1B48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1B70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1B98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1BC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1BE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1C10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1C38(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x1C60(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x1CA8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x1CC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x1D10(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_14;                // 0x1D30(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x1D70(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1D90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1DB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1DE0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1E08(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x1E50(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1E70(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x1EB8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x1ED8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x1FA0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x1FC0(0x00C8)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_9;                            // 0x2088(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_17;            // 0x20D0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_17;            // 0x20F0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_13;                       // 0x2110(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_Root_15;                             // 0x2238(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_13;                // 0x2258(0x0040)()
	uint8                                         Pad_5F4E[0x8];                                     // 0x2298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_OrientationWarping           AnimGraphNode_OrientationWarping_3;                // 0x22A0(0x0220)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_16;            // 0x24C0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_16;            // 0x24E0(0x0020)()
	struct FAnimNode_StrideWarping                AnimGraphNode_StrideWarping_3;                     // 0x2500(0x0248)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_15;            // 0x2748(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_15;            // 0x2768(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_8;                            // 0x2788(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x27D0(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_Root_14;                             // 0x28F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x2918(0x0048)()
	struct FAnimNode_OrientationWarping           AnimGraphNode_OrientationWarping_2;                // 0x2960(0x0220)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_14;            // 0x2B80(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_14;            // 0x2BA0(0x0020)()
	struct FAnimNode_StrideWarping                AnimGraphNode_StrideWarping_2;                     // 0x2BC0(0x0248)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_7;                            // 0x2E08(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x2E50(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_13;            // 0x2F78(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_13;            // 0x2F98(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_13;                             // 0x2FB8(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_12;                // 0x2FD8(0x0040)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_6;                            // 0x3018(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_12;            // 0x3060(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_12;            // 0x3080(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x30A0(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_Root_12;                             // 0x31C8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x31E8(0x0028)()
	struct FAnimNode_StrideWarping                AnimGraphNode_StrideWarping_1;                     // 0x3210(0x0248)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_11;            // 0x3458(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_11;            // 0x3478(0x0020)()
	uint8                                         Pad_5F4F[0x8];                                     // 0x3498(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_OrientationWarping           AnimGraphNode_OrientationWarping_1;                // 0x34A0(0x0220)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_11;                // 0x36C0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x3700(0x0020)()
	struct FAnimNode_StrideWarping                AnimGraphNode_StrideWarping;                       // 0x3720(0x0248)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_10;            // 0x3968(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_10;            // 0x3988(0x0020)()
	uint8                                         Pad_5F50[0x8];                                     // 0x39A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_OrientationWarping           AnimGraphNode_OrientationWarping;                  // 0x39B0(0x0220)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_10;                // 0x3BD0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x3C10(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x3C30(0x00C8)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_5;                            // 0x3CF8(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_9;             // 0x3D40(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_9;             // 0x3D60(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x3D80(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_Root_11;                             // 0x3EA8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x3EC8(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x3F80(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x4000(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x4080(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x40A8(0x00C8)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x4170(0x0118)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_9;                 // 0x4288(0x0040)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x42C8(0x00F0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x43B8(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_8;                 // 0x44A8(0x0040)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x44E8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x45B0(0x0080)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x4630(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_7;                 // 0x4B00(0x0040)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x4B40(0x00B8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x4BF8(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x4CC0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x4CE0(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x4D28(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x4D48(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x4D90(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x4DB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x4DD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x4E00(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x4E28(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x4E70(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_6;                 // 0x4E90(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x4ED0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x4EF0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x4F38(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x4F58(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x5020(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x5040(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x5088(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x51A0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x51C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x51E0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x5228(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_5;                 // 0x5318(0x0040)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8;             // 0x5358(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x5378(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8;             // 0x54A0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7;             // 0x54C0(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_4;                            // 0x54E0(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x5528(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7;             // 0x5650(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x5670(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x5690(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x56D8(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x57C8(0x0040)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6;             // 0x5808(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x5828(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6;             // 0x5950(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x5970(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_3;                            // 0x5990(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x59D8(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x5B00(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x5B20(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x5B40(0x0040)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x5B80(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x5C70(0x0040)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_2;                            // 0x5CB0(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x5CF8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x5D18(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x5E40(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x5E60(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x5E80(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x5F70(0x0040)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x5FB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x5FD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x6000(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x6028(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x6050(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x6078(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x60A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x60C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x6110(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x6130(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x6158(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x61A0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x61C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x6208(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x6228(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x6270(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x6290(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x62B0(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x63D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x63F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x6440(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x6460(0x00C8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x6528(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_1;                            // 0x6548(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x6590(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x66B8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x66D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x66F8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x6740(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x6830(0x0040)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x6870(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x6890(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x68B0(0x0128)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror;                              // 0x69D8(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x6A20(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x6B48(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x6B68(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x6B88(0x0020)()
	bool                                          __CustomProperty_Gpapple_Left_FA2DBFBC4B33E58F20D3FD8F3717F4F3; // 0x6BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_Grapple_Right_FA2DBFBC4B33E58F20D3FD8F3717F4F3; // 0x6BA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F51[0x6];                                     // 0x6BAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __CustomProperty_Pitch_FA2DBFBC4B33E58F20D3FD8F3717F4F3; // 0x6BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_Yaw_FA2DBFBC4B33E58F20D3FD8F3717F4F3; // 0x6BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_Kinetic_Left_FA2DBFBC4B33E58F20D3FD8F3717F4F3; // 0x6BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_Kinetic_Right_FA2DBFBC4B33E58F20D3FD8F3717F4F3; // 0x6BC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F52[0x6];                                     // 0x6BC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __CustomProperty_Distance_FA2DBFBC4B33E58F20D3FD8F3717F4F3; // 0x6BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_AimPoint_FA2DBFBC4B33E58F20D3FD8F3717F4F3; // 0x6BD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_IsCyberLeftArm_ACAD45A947B11AE87262E7B8AC9AEC08; // 0x6BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_Kinetic_ACAD45A947B11AE87262E7B8AC9AEC08; // 0x6BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_CyberArm_ACAD45A947B11AE87262E7B8AC9AEC08; // 0x6BEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F53[0x5];                                     // 0x6BEB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_AimPoint_ACAD45A947B11AE87262E7B8AC9AEC08; // 0x6BF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_Pistol_D082873B410138465D165884DD5CD24D; // 0x6C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F54[0x7];                                     // 0x6C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             __CustomProperty_Transform_D082873B410138465D165884DD5CD24D; // 0x6C10(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_Yaw_D082873B410138465D165884DD5CD24D; // 0x6C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_Pitch_D082873B410138465D165884DD5CD24D; // 0x6C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_isCrouch_D082873B410138465D165884DD5CD24D; // 0x6C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F55[0x7];                                     // 0x6C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_TargetAimWithoutCorrection_D082873B410138465D165884DD5CD24D; // 0x6C88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_LeftArm_D082873B410138465D165884DD5CD24D; // 0x6CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_RightShoulder_D082873B410138465D165884DD5CD24D; // 0x6CA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_RightArm_D082873B410138465D165884DD5CD24D; // 0x6CA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F56[0x5];                                     // 0x6CA3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_AimTransform_D082873B410138465D165884DD5CD24D; // 0x6CA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimPitch;                                          // 0x6CC0(0x0008)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimYaw;                                            // 0x6CC8(0x0008)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_PropertyAccess_62;                          // 0x6CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_61;                          // 0x6CD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_60;                          // 0x6CF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_33;                          // 0x6D08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_32;                          // 0x6D09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_31;                          // 0x6D0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_30;                          // 0x6D0B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess_13;                          // 0x6D0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess_12;                          // 0x6D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess_11;                          // 0x6D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess_10;                          // 0x6D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_9;                           // 0x6D1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F57[0x3];                                     // 0x6D1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess_8;                           // 0x6D20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 K2Node_PropertyAccess_2;                           // 0x6D38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RaiseWeaponAfterFiringWhenCrouched;                // 0x6D40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F58[0x7];                                     // 0x6D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RaiseWeaponAfterFiringDuration;                    // 0x6D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HipFireUpperBodyOverrideWeight;                    // 0x6D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimOffsetBlendWeight;                              // 0x6D58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HandIK_Left_Alpha;                                 // 0x6D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HandIK_Right_Alpha;                                // 0x6D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableHandIK;                                     // 0x6D70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F59[0x7];                                     // 0x6D71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeFalling;                                       // 0x6D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeUntilNextIdleBreak;                            // 0x6D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IdleBreakDelayTime;                                // 0x6D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurnInPlaceAnimTime;                               // 0x6D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurnInPlaceRotationDirection;                      // 0x6D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurnInPlaceRecoveryDirection;                      // 0x6DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableLeftHandPoseOverride;                        // 0x6DA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5A[0x7];                                     // 0x6DA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LeftHandPoseOverrideWeight;                        // 0x6DB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StrideWarpingPivotAlpha;                           // 0x6DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeAtPivotStop;                                   // 0x6DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocomotionDistanceCurveName;                       // 0x6DC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StrideWarpingCycleAlpha;                           // 0x6DD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PlayRateClampCycle;                                // 0x6DD8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PivotStartingAcceleration;                         // 0x6DE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PlayRateClampStartsPivots;                         // 0x6E00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StrideWarpingBlendInDurationScaled;                // 0x6E10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StrideWarpingBlendInStartOffset;                   // 0x6E18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIdleBreakIndex;                             // 0x6E20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5B[0x4];                                     // 0x6E24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StrideWarpingStartAlpha;                           // 0x6E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LandRecoveryAlpha;                                 // 0x6E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WantsIdleBreak;                                    // 0x6E38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5C[0x3];                                     // 0x6E39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Hand_FKWeight;                                     // 0x6E3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          NPC_Cover_Idle;                                    // 0x6E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          NPC_Crouch_Cover_Idle;                             // 0x6E48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequence*>                  NPC_Lean_Idle;                                     // 0x6E50(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequence*>                  NPC_Lean_In;                                       // 0x6E60(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequence*>                  NPC_Lean_Out;                                      // 0x6E70(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequence*>                  NPC_Crouch_Lean_Idle;                              // 0x6E80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequence*>                  NPC_Crouch_Lean_In;                                // 0x6E90(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequence*>                  NPC_Crouch_Lean_Out;                               // 0x6EA0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	ELeanType                                     LastLeanDirection;                                 // 0x6EB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5D[0x7];                                     // 0x6EB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Legless_StateEnterAnim_PlayRate;                   // 0x6EB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Legless_StateExitAnim_PlayRate;                    // 0x6EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAimOffsetBlendSpace*                   WeaponAimOffset;                                   // 0x6EC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          KneeSlide_Cycle;                                   // 0x6ED0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          KneeSlide_Start_FWD;                               // 0x6ED8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          KneeSlide_Start_Left;                              // 0x6EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          KneeSlide_Start_Right;                             // 0x6EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          KneeSlide_PreStart;                                // 0x6EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EAnim_ItemType                                ItemType;                                          // 0x6EF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5E[0x7];                                     // 0x6EF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          VerticalGripPose;                                  // 0x6F00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EGzWeaponSupportHoldType                      WeaponGripType;                                    // 0x6F08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5F[0x7];                                     // 0x6F09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          VerticalAngledGripPose;                            // 0x6F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          AngledGripPose;                                    // 0x6F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          HorizontalGripPose;                                // 0x6F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          SideGripPose;                                      // 0x6F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        HandGripPosesWeight;                               // 0x6F30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CyberArmAimLocation;                               // 0x6F38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Kinetic_Left;                                      // 0x6F50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F60[0x7];                                     // 0x6F51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  As_Gz_Multi_Part_Character;                        // 0x6F58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAimOffsetBlendSpace*                   Quick_CyberArm_Right;                              // 0x6F60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAimOffsetBlendSpace*                   Quick_CyberArm_Left;                               // 0x6F68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAimOffsetBlendSpace*                   Crouch_ADS_AimOffset;                              // 0x6F70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Idle_Knockdown_Sequence;                           // 0x6F78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Knockdown_Turn_In_Place_Right_Sequence;            // 0x6F80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Knockdown_Turn_In_Place_Left_Sequence;             // 0x6F88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          KneeSlide_End;                                     // 0x6F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          SuperSprint;                                       // 0x6F98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAimOffsetBlendSpace*                   Mirror_Aim;                                        // 0x6FA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_AimingCorrection           Stand_Aim_Additive_Correction;                     // 0x6FA8(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_AimingCorrection           Crouch_Aim_Additive_Correction;                    // 0x6FC8(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_StanceTransitions          Stand_to_Crouch;                                   // 0x6FE8(0x0048)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_StanceTransitions          Crouch_to_Stand;                                   // 0x7030(0x0048)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<EAnimStances, class UAnimSequence*>      Stand_Idle_anims;                                  // 0x7078(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EAnimStances, class UAnimSequence*>      Crouch_Idle_anims;                                 // 0x70C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FAnimStruct_ArmedStates                Mirrored_Stand_Turn_Left;                          // 0x7118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_ArmedStates                Mirrored_Stand_Turn_Right;                         // 0x7130(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_ArmedStates                Mirrored_Crouch_Turn_Left;                         // 0x7148(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FAnimStruct_ArmedStates                Mirrored_Crouch_Turn_Right;                        // 0x7160(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Jump_Fall_to_ParaFall_Sequence;                    // 0x7178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Jump_ParaFall_to_Fall_Sequence;                    // 0x7180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Jump_ParaFall_Sequence;                            // 0x7188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<EGzWeaponSupportHoldType, class UAnimSequence*> LeftHandGrip;                                      // 0x7190(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Kinetic_Right;                                     // 0x71E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Right_Arm;                                         // 0x71E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Left_Arm;                                          // 0x71E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Legs;                                              // 0x71E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Local_Controller;                                  // 0x71E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Aiming_Correction(const struct FPoseLink& Aim_pose, struct FPoseLink* Param_Aiming_Correction);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintLinkedAnimationLayersInitialized();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	bool CanPlayIdleBreak();
	void ChooseIdleBreakDelayTime();
	void DamagedBody_CycleState(struct FPoseLink* Param_DamagedBody_CycleState);
	void DamagedBody_EnterState(struct FPoseLink* Param_DamagedBody_EnterState);
	void DamagedBody_ExitState(struct FPoseLink* Param_DamagedBody_ExitState);
	void DamagedBody_IdleState(struct FPoseLink* Param_DamagedBody_IdleState);
	void DebugLeftHandGrip(bool Debug);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ApplyAdditive_97D32B9E4EDEBF8062879598BBA3B80F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ControlRig_D082873B410138465D165884DD5CD24D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ControlRig_FA2DBFBC4B33E58F20D3FD8F3717F4F3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_LayeredBoneBlend_B6306FD94283CEAE6247C2B57F00AC00();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_LayeredBoneBlend_BF11ACB54AC02FF6BFCB0BB6845F895C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_LayeredBoneBlend_C224D7C444EEC299631E70B6E1201044();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_0439964B4ECF16BB4F00718D6907B65F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_2FDF775042C1B78F78EE2E96F0FCCB93();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_38F148D1418972CB3A5244902555B40C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_3A77BC794C50E0D93DC61295A3B7A5AC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_3BEEFE824BFD478E63B031A320CC8A81();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_683C4D71469282B5A63DEA97A0A89C34();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_8A797929418A9D4701196E8167D62C1B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_8E20E8D44E16660409A242A926D85012();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_99EDC8F345AD26B962D91D9953871730();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_D53CE9524A1F50358C178C8D7FBFEC9B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_Mirror_EFC13D9649A45662D17380AB8256E8C7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_00117B194FCE8F9AA7E5B2AA803BE3B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_056724AC41A3D51E4013C0A46AAF52F8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_151796C54F756CBD5058FD824DFCCBC8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_17CB7E154505AFFCA9F6EC91589175CF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_276DF31F4DB360CC209C35BCD8A678E6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_27BEE0B648AFF0858D6BA38CBB1D813C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_7CB50E504F83E19BBDB196943E179E53();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_8FD236484B3931D217C354BBA5228C83();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_C460FABC41BB1ADCE23FED8496F8183F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_CC2A51D540F5913EAECD12A96F4AEE4F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_D2699BB64CBF9D3321C26583007770C0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_DE9E6E2C4D6F4AD3956F03BDBB15EE23();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_EF985F1540151CDFA48D04B0B41CE3BC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_ModifyBone_FA1E0B0A40D77CA2535FBA980CD30A9F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_OrientationWarping_14F98F624EFCCD1ECBDF77AA8AB7C879();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_OrientationWarping_C32000AE4A7638894F2AC8A5C4B49BFD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_OrientationWarping_C73F781D471D8560F22E99ACD08B0DE6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_OrientationWarping_C81641E8412A4AD229AC47887BE5D3F3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_RotationOffsetBlendSpace_A2996F4748E0B08C7A8145B2BC5F55EA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_RotationOffsetBlendSpace_DDBD57A441AFF4DE529477867E065925();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_StrideWarping_1CCE23D7499F3001F18632ABB3F905CF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_StrideWarping_4A1481F34EE89A3F2E30948FE5A72051();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_StrideWarping_50D85482489F79D94D32509BDA5C92A4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_StrideWarping_B97AF28F4961C4E5439050A1EEFC2E26();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_0590E1B44E47872DBB66719B28F35757();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_1E1566564CD293A5E9F2C39D097D7CFA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_3548AB6A4EDAED717A96DEB889FF83CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_3683638345B4F7C2C25389B80EFA905A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_369A8BE54B91380DEF0D41A92DC190B2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_45B0B3EB4B0A8AAFFD46F3AE3E19C044();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_4E7C2DFE40A020F2C59ACD92F8020B16();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_52E0A612417BBD74602B47809F50CD98();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_57743975414DCA88895B5990F113FED2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_6C72BC2B40C0FFE390B11D89A8823FC6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_7B728525442FE93F91544DB1C3BF2C24();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_828519C946CDD2312720CCB36C007BF6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_8304108A494239FDC8869C9B4E8F7A4E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_84A251F6458E06F3CA6657ACF13A82B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_B3545D4440B67140F51945B5EEA643FC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_C1B71DD74057727604711492EA1BEBC9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_D80174DC4A7D5E51E200E48EA75999F3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Item_AnimGraphNode_TransitionResult_E4B3371F4DC9866A134B409AEFA75F05();
	void ExecuteUbergraph_ABP_Item(int32 EntryPoint);
	void FindTransform(struct FTransform* Transform);
	void FullBody_Aiming(const struct FPoseLink& PreAimPose, double Param_AimYaw, double Param_AimPitch, struct FPoseLink* Param_FullBody_Aiming);
	void FullBody_AnimAbility(struct FPoseLink* Param_FullBody_AnimAbility);
	void FullBody_CycleState(struct FPoseLink* Param_FullBody_CycleState);
	void FullBody_FallLandState(struct FPoseLink* Param_FullBody_FallLandState);
	void FullBody_FallLoopState(struct FPoseLink* Param_FullBody_FallLoopState);
	void FullBody_IdleState(struct FPoseLink* Param_FullBody_IdleState);
	void FullBody_JumpApexState(struct FPoseLink* Param_FullBody_JumpApexState);
	void FullBody_JumpStartLoopState(struct FPoseLink* Param_FullBody_JumpStartLoopState);
	void FullBody_JumpStartState(struct FPoseLink* Param_FullBody_JumpStartState);
	void FullBody_PivotState(struct FPoseLink* Param_FullBody_PivotState);
	void FullBody_StartState(struct FPoseLink* Param_FullBody_StartState);
	void FullBody_StopState(struct FPoseLink* Param_FullBody_StopState);
	void FullBodyAdditives(struct FPoseLink* Param_FullBodyAdditives);
	void GetAimCorrection(bool* AimCorrection);
	class UAnimSequenceBase* GetDesiredPivotSequence(ECardinalDirectionType InDirection);
	void GetJumpLean(struct FRotator* Lean);
	class UABP_Human_C* GetMainAnimBPThreadSafe();
	void GetMirrorState(bool* IsMirror);
	class UCharacterMovementComponent* GetMovementComponent();
	void KneeSlide_State(struct FPoseLink* Param_KneeSlide_State);
	void Land_Recovery_Start(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void Limbless_State(struct FPoseLink* Param_Limbless_State);
	void NPC_CoverState(struct FPoseLink* Param_NPC_CoverState);
	void ProcessIdleBreakTransitionLogic(double DeltaTime);
	void ResetIdleBreakTransitionLogic();
	struct FTransform Select_Aim_Transform(const struct FTransform& Rarm_Laim, const struct FTransform& Rarm_Raim, const struct FTransform& Larm_Laim, const struct FTransform& Larm_Raim);
	class UAnimSequence* SelectAimCorrectivePose(const struct FAnimStruct_AimingCorrection& AnimStruct_AimingCorrection);
	class UAnimSequence* SelectDirectionAnimation(ECardinalDirectionType Param_Index, class UAnimSequence* Forward, class UAnimSequence* Backward, class UAnimSequence* Left, class UAnimSequence* Right, bool Mirror);
	void SelectStanceTransition(const struct FAnimStruct_StanceTransitions& Anim_Struct, class UAnimSequence** Transition_Animation);
	void SelectTurnInPlaceAnimation(double Direction, class UAnimSequence** Result);
	void SetAimOffset(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetLimbState();
	void SetUpFallLandAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetUpIdleBreakAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetUpIdleState(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetupIdleTransition(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetupNPC_LeanIn(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetupNPC_LeanOut(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetUpPivotAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetUpStartAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetUpStopAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetupTurnInPlaceAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetUpTurnInPlaceRecoveryState(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetUpTurnInPlaceRotationState(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	bool ShouldDistanceMatchStop();
	bool ShouldEnableFootPlacement();
	void Update_Blend_Weight_Data(double DeltaTime);
	void UpdateAimCorrection(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateArmGripWeight(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateCycleAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateFallLandAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateHandGripPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateHipFireRaiseWeaponPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateIdleAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateIdleState(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateIdleTransition(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateJumpFallData(double DeltaTime);
	void UpdateKneeSlideCycle(struct FAnimUpdateContext& Context, struct FAnimNodeReference& Node);
	void UpdateKneeSlideEnd(struct FAnimUpdateContext& Context, struct FAnimNodeReference& Node);
	void UpdateKneeSlideStart(struct FAnimUpdateContext& Context, struct FAnimNodeReference& Node);
	void UpdateMainABPIdleNative(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateNPC_CoverIdle(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateNPC_LeanIdle(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdatePivotAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateSkelControlData();
	void UpdateStartAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateStopAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateTurnInPlaceAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateTurnInPlaceRecoveryAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

	double GetPredictedStopDistance() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Item_C">();
	}
	static class UABP_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Item_C>();
	}
};
static_assert(alignof(UABP_Item_C) == 0x000010, "Wrong alignment on UABP_Item_C");
static_assert(sizeof(UABP_Item_C) == 0x0071F0, "Wrong size on UABP_Item_C");
static_assert(offsetof(UABP_Item_C, UberGraphFrame) == 0x0008B0, "Member 'UABP_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __AnimBlueprintMutables) == 0x0008B8, "Member 'UABP_Item_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimBlueprintExtension_PropertyAccess) == 0x0009B8, "Member 'UABP_Item_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimBlueprintExtension_NodeRelevancy) == 0x0009C0, "Member 'UABP_Item_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimBlueprintExtension_Base) == 0x000A68, "Member 'UABP_Item_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_UseCachedPose_3) == 0x000A70, "Member 'UABP_Item_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_UseCachedPose_2) == 0x000A98, "Member 'UABP_Item_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_UseCachedPose_1) == 0x000AC0, "Member 'UABP_Item_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_12) == 0x000AE8, "Member 'UABP_Item_C::AnimGraphNode_Mirror_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_11) == 0x000B30, "Member 'UABP_Item_C::AnimGraphNode_Mirror_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ControlRig_1) == 0x000B78, "Member 'UABP_Item_C::AnimGraphNode_ControlRig_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_21) == 0x001048, "Member 'UABP_Item_C::AnimGraphNode_Root_21' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_33) == 0x001068, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_32) == 0x001090, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_31) == 0x0010B8, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_25) == 0x0010E0, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_25) == 0x001128, "Member 'UABP_Item_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_24) == 0x001148, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_24) == 0x001190, "Member 'UABP_Item_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_23) == 0x0011B0, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_23) == 0x0011F8, "Member 'UABP_Item_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateMachine_7) == 0x001218, "Member 'UABP_Item_C::AnimGraphNode_StateMachine_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_10) == 0x0012E0, "Member 'UABP_Item_C::AnimGraphNode_Mirror_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_14) == 0x001328, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_14' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_18) == 0x001450, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_18' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_18) == 0x001470, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_18' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_20) == 0x001490, "Member 'UABP_Item_C::AnimGraphNode_Root_20' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_19) == 0x0014B0, "Member 'UABP_Item_C::AnimGraphNode_Root_19' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_30) == 0x0014D0, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_29) == 0x0014F8, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_28) == 0x001520, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_27) == 0x001548, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_26) == 0x001570, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_22) == 0x001598, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_22) == 0x0015E0, "Member 'UABP_Item_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_21) == 0x001600, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_21) == 0x001648, "Member 'UABP_Item_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_20) == 0x001668, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_20) == 0x0016B0, "Member 'UABP_Item_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_19) == 0x0016D0, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_19) == 0x001718, "Member 'UABP_Item_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateMachine_6) == 0x001738, "Member 'UABP_Item_C::AnimGraphNode_StateMachine_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_18) == 0x001800, "Member 'UABP_Item_C::AnimGraphNode_Root_18' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_17) == 0x001820, "Member 'UABP_Item_C::AnimGraphNode_Root_17' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_25) == 0x001840, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_24) == 0x001868, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_23) == 0x001890, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_22) == 0x0018B8, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_IdentityPose) == 0x0018E0, "Member 'UABP_Item_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TwoWayBlend) == 0x0018F0, "Member 'UABP_Item_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_18) == 0x0019B8, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_18) == 0x001A00, "Member 'UABP_Item_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_17) == 0x001A20, "Member 'UABP_Item_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_16) == 0x001A40, "Member 'UABP_Item_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateMachine_5) == 0x001A60, "Member 'UABP_Item_C::AnimGraphNode_StateMachine_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_16) == 0x001B28, "Member 'UABP_Item_C::AnimGraphNode_Root_16' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_21) == 0x001B48, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_20) == 0x001B70, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_19) == 0x001B98, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_18) == 0x001BC0, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_17) == 0x001BE8, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_16) == 0x001C10, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_15) == 0x001C38, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_17) == 0x001C60, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_15) == 0x001CA8, "Member 'UABP_Item_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_16) == 0x001CC8, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_14) == 0x001D10, "Member 'UABP_Item_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_14) == 0x001D30, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_14' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_13) == 0x001D70, "Member 'UABP_Item_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_14) == 0x001D90, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_13) == 0x001DB8, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_12) == 0x001DE0, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_15) == 0x001E08, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_12) == 0x001E50, "Member 'UABP_Item_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_14) == 0x001E70, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_11) == 0x001EB8, "Member 'UABP_Item_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateMachine_4) == 0x001ED8, "Member 'UABP_Item_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_10) == 0x001FA0, "Member 'UABP_Item_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateMachine_3) == 0x001FC0, "Member 'UABP_Item_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_9) == 0x002088, "Member 'UABP_Item_C::AnimGraphNode_Mirror_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_17) == 0x0020D0, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_17' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_17) == 0x0020F0, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_17' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_13) == 0x002110, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_15) == 0x002238, "Member 'UABP_Item_C::AnimGraphNode_Root_15' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_13) == 0x002258, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_13' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_OrientationWarping_3) == 0x0022A0, "Member 'UABP_Item_C::AnimGraphNode_OrientationWarping_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_16) == 0x0024C0, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_16' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_16) == 0x0024E0, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_16' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StrideWarping_3) == 0x002500, "Member 'UABP_Item_C::AnimGraphNode_StrideWarping_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_15) == 0x002748, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_15' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_15) == 0x002768, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_15' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_8) == 0x002788, "Member 'UABP_Item_C::AnimGraphNode_Mirror_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_12) == 0x0027D0, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_14) == 0x0028F8, "Member 'UABP_Item_C::AnimGraphNode_Root_14' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_13) == 0x002918, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_OrientationWarping_2) == 0x002960, "Member 'UABP_Item_C::AnimGraphNode_OrientationWarping_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_14) == 0x002B80, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_14' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_14) == 0x002BA0, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_14' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StrideWarping_2) == 0x002BC0, "Member 'UABP_Item_C::AnimGraphNode_StrideWarping_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_7) == 0x002E08, "Member 'UABP_Item_C::AnimGraphNode_Mirror_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_11) == 0x002E50, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_13) == 0x002F78, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_13' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_13) == 0x002F98, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_13' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_13) == 0x002FB8, "Member 'UABP_Item_C::AnimGraphNode_Root_13' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_12) == 0x002FD8, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_6) == 0x003018, "Member 'UABP_Item_C::AnimGraphNode_Mirror_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_12) == 0x003060, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_12) == 0x003080, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_10) == 0x0030A0, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_12) == 0x0031C8, "Member 'UABP_Item_C::AnimGraphNode_Root_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_11) == 0x0031E8, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StrideWarping_1) == 0x003210, "Member 'UABP_Item_C::AnimGraphNode_StrideWarping_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_11) == 0x003458, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_11) == 0x003478, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_OrientationWarping_1) == 0x0034A0, "Member 'UABP_Item_C::AnimGraphNode_OrientationWarping_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_11) == 0x0036C0, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_9) == 0x003700, "Member 'UABP_Item_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StrideWarping) == 0x003720, "Member 'UABP_Item_C::AnimGraphNode_StrideWarping' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_10) == 0x003968, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_10) == 0x003988, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_OrientationWarping) == 0x0039B0, "Member 'UABP_Item_C::AnimGraphNode_OrientationWarping' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_10) == 0x003BD0, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_8) == 0x003C10, "Member 'UABP_Item_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateMachine_2) == 0x003C30, "Member 'UABP_Item_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_5) == 0x003CF8, "Member 'UABP_Item_C::AnimGraphNode_Mirror_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_9) == 0x003D40, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_9) == 0x003D60, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_9) == 0x003D80, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_11) == 0x003EA8, "Member 'UABP_Item_C::AnimGraphNode_Root_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LinkedInputPose_1) == 0x003EC8, "Member 'UABP_Item_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SaveCachedPose_2) == 0x003F80, "Member 'UABP_Item_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SaveCachedPose_1) == 0x004000, "Member 'UABP_Item_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_UseCachedPose) == 0x004080, "Member 'UABP_Item_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ApplyAdditive_2) == 0x0040A8, "Member 'UABP_Item_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x004170, "Member 'UABP_Item_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_9) == 0x004288, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LayeredBoneBlend_6) == 0x0042C8, "Member 'UABP_Item_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LayeredBoneBlend_5) == 0x0043B8, "Member 'UABP_Item_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_8) == 0x0044A8, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ApplyAdditive_1) == 0x0044E8, "Member 'UABP_Item_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SaveCachedPose) == 0x0045B0, "Member 'UABP_Item_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ControlRig) == 0x004630, "Member 'UABP_Item_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_7) == 0x004B00, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LinkedInputPose) == 0x004B40, "Member 'UABP_Item_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ApplyAdditive) == 0x004BF8, "Member 'UABP_Item_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_10) == 0x004CC0, "Member 'UABP_Item_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_12) == 0x004CE0, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_9) == 0x004D28, "Member 'UABP_Item_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_11) == 0x004D48, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_8) == 0x004D90, "Member 'UABP_Item_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_10) == 0x004DB0, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_9) == 0x004DD8, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_8) == 0x004E00, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_10) == 0x004E28, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_7) == 0x004E70, "Member 'UABP_Item_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_6) == 0x004E90, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_6) == 0x004ED0, "Member 'UABP_Item_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_9) == 0x004EF0, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_5) == 0x004F38, "Member 'UABP_Item_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateMachine_1) == 0x004F58, "Member 'UABP_Item_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_7) == 0x005020, "Member 'UABP_Item_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_8) == 0x005040, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x005088, "Member 'UABP_Item_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_6) == 0x0051A0, "Member 'UABP_Item_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_5) == 0x0051C0, "Member 'UABP_Item_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_7) == 0x0051E0, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LayeredBoneBlend_4) == 0x005228, "Member 'UABP_Item_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_5) == 0x005318, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_8) == 0x005358, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_8) == 0x005378, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_8) == 0x0054A0, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_7) == 0x0054C0, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_4) == 0x0054E0, "Member 'UABP_Item_C::AnimGraphNode_Mirror_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_7) == 0x005528, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_7) == 0x005650, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_4) == 0x005670, "Member 'UABP_Item_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_6) == 0x005690, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LayeredBoneBlend_3) == 0x0056D8, "Member 'UABP_Item_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_4) == 0x0057C8, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_6) == 0x005808, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_6) == 0x005828, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_6) == 0x005950, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_5) == 0x005970, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_3) == 0x005990, "Member 'UABP_Item_C::AnimGraphNode_Mirror_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_5) == 0x0059D8, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x005B00, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_3) == 0x005B20, "Member 'UABP_Item_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_3) == 0x005B40, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LayeredBoneBlend_2) == 0x005B80, "Member 'UABP_Item_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_2) == 0x005C70, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_2) == 0x005CB0, "Member 'UABP_Item_C::AnimGraphNode_Mirror_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_4) == 0x005CF8, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_4) == 0x005D18, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x005E40, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_2) == 0x005E60, "Member 'UABP_Item_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LayeredBoneBlend_1) == 0x005E80, "Member 'UABP_Item_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator_1) == 0x005F70, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_7) == 0x005FB0, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_6) == 0x005FD8, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_5) == 0x006000, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_4) == 0x006028, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_3) == 0x006050, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_2) == 0x006078, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult_1) == 0x0060A0, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_5) == 0x0060C8, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_4) == 0x006110, "Member 'UABP_Item_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_TransitionResult) == 0x006130, "Member 'UABP_Item_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_4) == 0x006158, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_3) == 0x0061A0, "Member 'UABP_Item_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_3) == 0x0061C0, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_2) == 0x006208, "Member 'UABP_Item_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_2) == 0x006228, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult_1) == 0x006270, "Member 'UABP_Item_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_3) == 0x006290, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_3) == 0x0062B0, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x0063D8, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer_1) == 0x0063F8, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateResult) == 0x006440, "Member 'UABP_Item_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_StateMachine) == 0x006460, "Member 'UABP_Item_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_2) == 0x006528, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror_1) == 0x006548, "Member 'UABP_Item_C::AnimGraphNode_Mirror_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_2) == 0x006590, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0066B8, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root_1) == 0x0066D8, "Member 'UABP_Item_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequencePlayer) == 0x0066F8, "Member 'UABP_Item_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LayeredBoneBlend) == 0x006740, "Member 'UABP_Item_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_SequenceEvaluator) == 0x006830, "Member 'UABP_Item_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace_1) == 0x006870, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x006890, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone_1) == 0x0068B0, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Mirror) == 0x0069D8, "Member 'UABP_Item_C::AnimGraphNode_Mirror' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ModifyBone) == 0x006A20, "Member 'UABP_Item_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_LocalToComponentSpace) == 0x006B48, "Member 'UABP_Item_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_ComponentToLocalSpace) == 0x006B68, "Member 'UABP_Item_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AnimGraphNode_Root) == 0x006B88, "Member 'UABP_Item_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Gpapple_Left_FA2DBFBC4B33E58F20D3FD8F3717F4F3) == 0x006BA8, "Member 'UABP_Item_C::__CustomProperty_Gpapple_Left_FA2DBFBC4B33E58F20D3FD8F3717F4F3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Grapple_Right_FA2DBFBC4B33E58F20D3FD8F3717F4F3) == 0x006BA9, "Member 'UABP_Item_C::__CustomProperty_Grapple_Right_FA2DBFBC4B33E58F20D3FD8F3717F4F3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Pitch_FA2DBFBC4B33E58F20D3FD8F3717F4F3) == 0x006BB0, "Member 'UABP_Item_C::__CustomProperty_Pitch_FA2DBFBC4B33E58F20D3FD8F3717F4F3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Yaw_FA2DBFBC4B33E58F20D3FD8F3717F4F3) == 0x006BB8, "Member 'UABP_Item_C::__CustomProperty_Yaw_FA2DBFBC4B33E58F20D3FD8F3717F4F3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Kinetic_Left_FA2DBFBC4B33E58F20D3FD8F3717F4F3) == 0x006BC0, "Member 'UABP_Item_C::__CustomProperty_Kinetic_Left_FA2DBFBC4B33E58F20D3FD8F3717F4F3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Kinetic_Right_FA2DBFBC4B33E58F20D3FD8F3717F4F3) == 0x006BC1, "Member 'UABP_Item_C::__CustomProperty_Kinetic_Right_FA2DBFBC4B33E58F20D3FD8F3717F4F3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Distance_FA2DBFBC4B33E58F20D3FD8F3717F4F3) == 0x006BC8, "Member 'UABP_Item_C::__CustomProperty_Distance_FA2DBFBC4B33E58F20D3FD8F3717F4F3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_AimPoint_FA2DBFBC4B33E58F20D3FD8F3717F4F3) == 0x006BD0, "Member 'UABP_Item_C::__CustomProperty_AimPoint_FA2DBFBC4B33E58F20D3FD8F3717F4F3' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_IsCyberLeftArm_ACAD45A947B11AE87262E7B8AC9AEC08) == 0x006BE8, "Member 'UABP_Item_C::__CustomProperty_IsCyberLeftArm_ACAD45A947B11AE87262E7B8AC9AEC08' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Kinetic_ACAD45A947B11AE87262E7B8AC9AEC08) == 0x006BE9, "Member 'UABP_Item_C::__CustomProperty_Kinetic_ACAD45A947B11AE87262E7B8AC9AEC08' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_CyberArm_ACAD45A947B11AE87262E7B8AC9AEC08) == 0x006BEA, "Member 'UABP_Item_C::__CustomProperty_CyberArm_ACAD45A947B11AE87262E7B8AC9AEC08' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_AimPoint_ACAD45A947B11AE87262E7B8AC9AEC08) == 0x006BF0, "Member 'UABP_Item_C::__CustomProperty_AimPoint_ACAD45A947B11AE87262E7B8AC9AEC08' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Pistol_D082873B410138465D165884DD5CD24D) == 0x006C08, "Member 'UABP_Item_C::__CustomProperty_Pistol_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Transform_D082873B410138465D165884DD5CD24D) == 0x006C10, "Member 'UABP_Item_C::__CustomProperty_Transform_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Yaw_D082873B410138465D165884DD5CD24D) == 0x006C70, "Member 'UABP_Item_C::__CustomProperty_Yaw_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_Pitch_D082873B410138465D165884DD5CD24D) == 0x006C78, "Member 'UABP_Item_C::__CustomProperty_Pitch_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_isCrouch_D082873B410138465D165884DD5CD24D) == 0x006C80, "Member 'UABP_Item_C::__CustomProperty_isCrouch_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_TargetAimWithoutCorrection_D082873B410138465D165884DD5CD24D) == 0x006C88, "Member 'UABP_Item_C::__CustomProperty_TargetAimWithoutCorrection_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_LeftArm_D082873B410138465D165884DD5CD24D) == 0x006CA0, "Member 'UABP_Item_C::__CustomProperty_LeftArm_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_RightShoulder_D082873B410138465D165884DD5CD24D) == 0x006CA1, "Member 'UABP_Item_C::__CustomProperty_RightShoulder_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_RightArm_D082873B410138465D165884DD5CD24D) == 0x006CA2, "Member 'UABP_Item_C::__CustomProperty_RightArm_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, __CustomProperty_AimTransform_D082873B410138465D165884DD5CD24D) == 0x006CA8, "Member 'UABP_Item_C::__CustomProperty_AimTransform_D082873B410138465D165884DD5CD24D' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AimPitch) == 0x006CC0, "Member 'UABP_Item_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AimYaw) == 0x006CC8, "Member 'UABP_Item_C::AimYaw' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_62) == 0x006CD0, "Member 'UABP_Item_C::K2Node_PropertyAccess_62' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_61) == 0x006CD8, "Member 'UABP_Item_C::K2Node_PropertyAccess_61' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_60) == 0x006CF0, "Member 'UABP_Item_C::K2Node_PropertyAccess_60' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_33) == 0x006D08, "Member 'UABP_Item_C::K2Node_PropertyAccess_33' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_32) == 0x006D09, "Member 'UABP_Item_C::K2Node_PropertyAccess_32' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_31) == 0x006D0A, "Member 'UABP_Item_C::K2Node_PropertyAccess_31' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_30) == 0x006D0B, "Member 'UABP_Item_C::K2Node_PropertyAccess_30' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_13) == 0x006D0C, "Member 'UABP_Item_C::K2Node_PropertyAccess_13' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_12) == 0x006D10, "Member 'UABP_Item_C::K2Node_PropertyAccess_12' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_11) == 0x006D14, "Member 'UABP_Item_C::K2Node_PropertyAccess_11' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_10) == 0x006D18, "Member 'UABP_Item_C::K2Node_PropertyAccess_10' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_9) == 0x006D1C, "Member 'UABP_Item_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_8) == 0x006D20, "Member 'UABP_Item_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, K2Node_PropertyAccess_2) == 0x006D38, "Member 'UABP_Item_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, RaiseWeaponAfterFiringWhenCrouched) == 0x006D40, "Member 'UABP_Item_C::RaiseWeaponAfterFiringWhenCrouched' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, RaiseWeaponAfterFiringDuration) == 0x006D48, "Member 'UABP_Item_C::RaiseWeaponAfterFiringDuration' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, HipFireUpperBodyOverrideWeight) == 0x006D50, "Member 'UABP_Item_C::HipFireUpperBodyOverrideWeight' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AimOffsetBlendWeight) == 0x006D58, "Member 'UABP_Item_C::AimOffsetBlendWeight' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, HandIK_Left_Alpha) == 0x006D60, "Member 'UABP_Item_C::HandIK_Left_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, HandIK_Right_Alpha) == 0x006D68, "Member 'UABP_Item_C::HandIK_Right_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, DisableHandIK) == 0x006D70, "Member 'UABP_Item_C::DisableHandIK' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, TimeFalling) == 0x006D78, "Member 'UABP_Item_C::TimeFalling' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, TimeUntilNextIdleBreak) == 0x006D80, "Member 'UABP_Item_C::TimeUntilNextIdleBreak' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, IdleBreakDelayTime) == 0x006D88, "Member 'UABP_Item_C::IdleBreakDelayTime' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, TurnInPlaceAnimTime) == 0x006D90, "Member 'UABP_Item_C::TurnInPlaceAnimTime' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, TurnInPlaceRotationDirection) == 0x006D98, "Member 'UABP_Item_C::TurnInPlaceRotationDirection' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, TurnInPlaceRecoveryDirection) == 0x006DA0, "Member 'UABP_Item_C::TurnInPlaceRecoveryDirection' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, EnableLeftHandPoseOverride) == 0x006DA8, "Member 'UABP_Item_C::EnableLeftHandPoseOverride' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, LeftHandPoseOverrideWeight) == 0x006DB0, "Member 'UABP_Item_C::LeftHandPoseOverrideWeight' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, StrideWarpingPivotAlpha) == 0x006DB8, "Member 'UABP_Item_C::StrideWarpingPivotAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, TimeAtPivotStop) == 0x006DC0, "Member 'UABP_Item_C::TimeAtPivotStop' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, LocomotionDistanceCurveName) == 0x006DC8, "Member 'UABP_Item_C::LocomotionDistanceCurveName' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, StrideWarpingCycleAlpha) == 0x006DD0, "Member 'UABP_Item_C::StrideWarpingCycleAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, PlayRateClampCycle) == 0x006DD8, "Member 'UABP_Item_C::PlayRateClampCycle' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, PivotStartingAcceleration) == 0x006DE8, "Member 'UABP_Item_C::PivotStartingAcceleration' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, PlayRateClampStartsPivots) == 0x006E00, "Member 'UABP_Item_C::PlayRateClampStartsPivots' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, StrideWarpingBlendInDurationScaled) == 0x006E10, "Member 'UABP_Item_C::StrideWarpingBlendInDurationScaled' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, StrideWarpingBlendInStartOffset) == 0x006E18, "Member 'UABP_Item_C::StrideWarpingBlendInStartOffset' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, CurrentIdleBreakIndex) == 0x006E20, "Member 'UABP_Item_C::CurrentIdleBreakIndex' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, StrideWarpingStartAlpha) == 0x006E28, "Member 'UABP_Item_C::StrideWarpingStartAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, LandRecoveryAlpha) == 0x006E30, "Member 'UABP_Item_C::LandRecoveryAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, WantsIdleBreak) == 0x006E38, "Member 'UABP_Item_C::WantsIdleBreak' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Hand_FKWeight) == 0x006E3C, "Member 'UABP_Item_C::Hand_FKWeight' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, NPC_Cover_Idle) == 0x006E40, "Member 'UABP_Item_C::NPC_Cover_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, NPC_Crouch_Cover_Idle) == 0x006E48, "Member 'UABP_Item_C::NPC_Crouch_Cover_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, NPC_Lean_Idle) == 0x006E50, "Member 'UABP_Item_C::NPC_Lean_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, NPC_Lean_In) == 0x006E60, "Member 'UABP_Item_C::NPC_Lean_In' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, NPC_Lean_Out) == 0x006E70, "Member 'UABP_Item_C::NPC_Lean_Out' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, NPC_Crouch_Lean_Idle) == 0x006E80, "Member 'UABP_Item_C::NPC_Crouch_Lean_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, NPC_Crouch_Lean_In) == 0x006E90, "Member 'UABP_Item_C::NPC_Crouch_Lean_In' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, NPC_Crouch_Lean_Out) == 0x006EA0, "Member 'UABP_Item_C::NPC_Crouch_Lean_Out' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, LastLeanDirection) == 0x006EB0, "Member 'UABP_Item_C::LastLeanDirection' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Legless_StateEnterAnim_PlayRate) == 0x006EB8, "Member 'UABP_Item_C::Legless_StateEnterAnim_PlayRate' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Legless_StateExitAnim_PlayRate) == 0x006EC0, "Member 'UABP_Item_C::Legless_StateExitAnim_PlayRate' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, WeaponAimOffset) == 0x006EC8, "Member 'UABP_Item_C::WeaponAimOffset' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, KneeSlide_Cycle) == 0x006ED0, "Member 'UABP_Item_C::KneeSlide_Cycle' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, KneeSlide_Start_FWD) == 0x006ED8, "Member 'UABP_Item_C::KneeSlide_Start_FWD' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, KneeSlide_Start_Left) == 0x006EE0, "Member 'UABP_Item_C::KneeSlide_Start_Left' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, KneeSlide_Start_Right) == 0x006EE8, "Member 'UABP_Item_C::KneeSlide_Start_Right' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, KneeSlide_PreStart) == 0x006EF0, "Member 'UABP_Item_C::KneeSlide_PreStart' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, ItemType) == 0x006EF8, "Member 'UABP_Item_C::ItemType' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, VerticalGripPose) == 0x006F00, "Member 'UABP_Item_C::VerticalGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, WeaponGripType) == 0x006F08, "Member 'UABP_Item_C::WeaponGripType' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, VerticalAngledGripPose) == 0x006F10, "Member 'UABP_Item_C::VerticalAngledGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, AngledGripPose) == 0x006F18, "Member 'UABP_Item_C::AngledGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, HorizontalGripPose) == 0x006F20, "Member 'UABP_Item_C::HorizontalGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, SideGripPose) == 0x006F28, "Member 'UABP_Item_C::SideGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, HandGripPosesWeight) == 0x006F30, "Member 'UABP_Item_C::HandGripPosesWeight' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, CyberArmAimLocation) == 0x006F38, "Member 'UABP_Item_C::CyberArmAimLocation' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Kinetic_Left) == 0x006F50, "Member 'UABP_Item_C::Kinetic_Left' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, As_Gz_Multi_Part_Character) == 0x006F58, "Member 'UABP_Item_C::As_Gz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Quick_CyberArm_Right) == 0x006F60, "Member 'UABP_Item_C::Quick_CyberArm_Right' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Quick_CyberArm_Left) == 0x006F68, "Member 'UABP_Item_C::Quick_CyberArm_Left' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Crouch_ADS_AimOffset) == 0x006F70, "Member 'UABP_Item_C::Crouch_ADS_AimOffset' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Idle_Knockdown_Sequence) == 0x006F78, "Member 'UABP_Item_C::Idle_Knockdown_Sequence' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Knockdown_Turn_In_Place_Right_Sequence) == 0x006F80, "Member 'UABP_Item_C::Knockdown_Turn_In_Place_Right_Sequence' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Knockdown_Turn_In_Place_Left_Sequence) == 0x006F88, "Member 'UABP_Item_C::Knockdown_Turn_In_Place_Left_Sequence' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, KneeSlide_End) == 0x006F90, "Member 'UABP_Item_C::KneeSlide_End' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, SuperSprint) == 0x006F98, "Member 'UABP_Item_C::SuperSprint' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Mirror_Aim) == 0x006FA0, "Member 'UABP_Item_C::Mirror_Aim' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Stand_Aim_Additive_Correction) == 0x006FA8, "Member 'UABP_Item_C::Stand_Aim_Additive_Correction' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Crouch_Aim_Additive_Correction) == 0x006FC8, "Member 'UABP_Item_C::Crouch_Aim_Additive_Correction' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Stand_to_Crouch) == 0x006FE8, "Member 'UABP_Item_C::Stand_to_Crouch' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Crouch_to_Stand) == 0x007030, "Member 'UABP_Item_C::Crouch_to_Stand' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Stand_Idle_anims) == 0x007078, "Member 'UABP_Item_C::Stand_Idle_anims' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Crouch_Idle_anims) == 0x0070C8, "Member 'UABP_Item_C::Crouch_Idle_anims' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Mirrored_Stand_Turn_Left) == 0x007118, "Member 'UABP_Item_C::Mirrored_Stand_Turn_Left' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Mirrored_Stand_Turn_Right) == 0x007130, "Member 'UABP_Item_C::Mirrored_Stand_Turn_Right' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Mirrored_Crouch_Turn_Left) == 0x007148, "Member 'UABP_Item_C::Mirrored_Crouch_Turn_Left' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Mirrored_Crouch_Turn_Right) == 0x007160, "Member 'UABP_Item_C::Mirrored_Crouch_Turn_Right' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Jump_Fall_to_ParaFall_Sequence) == 0x007178, "Member 'UABP_Item_C::Jump_Fall_to_ParaFall_Sequence' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Jump_ParaFall_to_Fall_Sequence) == 0x007180, "Member 'UABP_Item_C::Jump_ParaFall_to_Fall_Sequence' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Jump_ParaFall_Sequence) == 0x007188, "Member 'UABP_Item_C::Jump_ParaFall_Sequence' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, LeftHandGrip) == 0x007190, "Member 'UABP_Item_C::LeftHandGrip' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Kinetic_Right) == 0x0071E0, "Member 'UABP_Item_C::Kinetic_Right' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Right_Arm) == 0x0071E1, "Member 'UABP_Item_C::Right_Arm' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Left_Arm) == 0x0071E2, "Member 'UABP_Item_C::Left_Arm' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Legs) == 0x0071E3, "Member 'UABP_Item_C::Legs' has a wrong offset!");
static_assert(offsetof(UABP_Item_C, Local_Controller) == 0x0071E4, "Member 'UABP_Item_C::Local_Controller' has a wrong offset!");

}

