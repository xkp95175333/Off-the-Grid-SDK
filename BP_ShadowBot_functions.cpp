#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShadowBot

#include "Basic.hpp"

#include "BP_ShadowBot_classes.hpp"
#include "BP_ShadowBot_parameters.hpp"


namespace SDK
{

// Function BP_ShadowBot.BP_ShadowBot_C.UseLeftArmLimb
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::UseLeftArmLimb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "UseLeftArmLimb");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.StopMoveRight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::StopMoveRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "StopMoveRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.UseRightArmLimb
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::UseRightArmLimb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "UseRightArmLimb");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.UseLegsLimb
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::UseLegsLimb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "UseLegsLimb");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.StopMoveForward
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::StopMoveForward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "StopMoveForward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.StopMoveLeft
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::StopMoveLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "StopMoveLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.StopMoveDown
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::StopMoveDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "StopMoveDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.StopAim
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::StopAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "StopAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.StartAim
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::StartAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "StartAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.SelectWeapon2
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::SelectWeapon2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "SelectWeapon2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.SelectWeapon1
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::SelectWeapon1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "SelectWeapon1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.SelectRandomSkin
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::SelectRandomSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "SelectRandomSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.SelectPistol
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::SelectPistol()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "SelectPistol");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShadowBot_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "ReceiveTick");

	Params::BP_ShadowBot_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShadowBot.BP_ShadowBot_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ShadowBot_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.MoveRight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::MoveRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "MoveRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.MoveLeft
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::MoveLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "MoveLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.MoveForward
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::MoveForward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "MoveForward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.MoveBack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::MoveBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "MoveBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.IsMovingOnGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ShadowBot_C::IsMovingOnGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "IsMovingOnGround");

	Params::BP_ShadowBot_C_IsMovingOnGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ShadowBot.BP_ShadowBot_C.IsFalling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ShadowBot_C::IsFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "IsFalling");

	Params::BP_ShadowBot_C_IsFalling Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ShadowBot.BP_ShadowBot_C.IsEnemyVisible
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShadowBot_C::IsEnemyVisible(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "IsEnemyVisible");

	Params::BP_ShadowBot_C_IsEnemyVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ShadowBot.BP_ShadowBot_C.IsDeploymentPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShadowBot_C::IsDeploymentPawn(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "IsDeploymentPawn");

	Params::BP_ShadowBot_C_IsDeploymentPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ShadowBot.BP_ShadowBot_C.ExecuteUbergraph_BP_ShadowBot
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShadowBot_C::ExecuteUbergraph_BP_ShadowBot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "ExecuteUbergraph_BP_ShadowBot");

	Params::BP_ShadowBot_C_ExecuteUbergraph_BP_ShadowBot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShadowBot.BP_ShadowBot_C.EquipRandonWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::EquipRandonWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "EquipRandonWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.EquipRandomLimb
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzLimbType                             LimbType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShadowBot_C::EquipRandomLimb(EGzLimbType LimbType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "EquipRandomLimb");

	Params::BP_ShadowBot_C_EquipRandomLimb Parms{};

	Parms.LimbType = LimbType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShadowBot.BP_ShadowBot_C.DoShoot
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::DoShoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "DoShoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.DoJump
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::DoJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "DoJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.DoCrouch
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::DoCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "DoCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.CalculateMovementTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Dir                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShadowBot_C::CalculateMovementTime(const struct FVector& Dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "CalculateMovementTime");

	Params::BP_ShadowBot_C_CalculateMovementTime Parms{};

	Parms.Dir = std::move(Dir);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShadowBot.BP_ShadowBot_C.AddAllConumableItems
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ShadowBot_C::AddAllConumableItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "AddAllConumableItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShadowBot.BP_ShadowBot_C.IsWingSuiteMoveMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ShadowBot_C::IsWingSuiteMoveMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "IsWingSuiteMoveMode");

	Params::BP_ShadowBot_C_IsWingSuiteMoveMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ShadowBot.BP_ShadowBot_C.HasPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ShadowBot_C::HasPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShadowBot_C", "HasPawn");

	Params::BP_ShadowBot_C_HasPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

