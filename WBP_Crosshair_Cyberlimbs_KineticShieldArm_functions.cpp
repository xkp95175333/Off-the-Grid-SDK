#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_Cyberlimbs_KineticShieldArm

#include "Basic.hpp"

#include "WBP_Crosshair_Cyberlimbs_KineticShieldArm_classes.hpp"
#include "WBP_Crosshair_Cyberlimbs_KineticShieldArm_parameters.hpp"


namespace SDK
{

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.ChangeProgressBarBackgroundColor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UProgressBar*                     Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      Background_Image_Tint                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FProgressBarStyle                ProgressBarStyle                                       (Parm, OutParm)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::ChangeProgressBarBackgroundColor(class UProgressBar* Target, const struct FSlateColor& Background_Image_Tint, struct FProgressBarStyle* ProgressBarStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "ChangeProgressBarBackgroundColor");

	Params::WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor Parms{};

	Parms.Target = Target;
	Parms.Background_Image_Tint = std::move(Background_Image_Tint);

	UObject::ProcessEvent(Func, &Parms);

	if (ProgressBarStyle != nullptr)
		*ProgressBarStyle = std::move(Parms.ProgressBarStyle);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm");

	Params::WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.HandleDMG
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::HandleDMG(double Damage, double MaxDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "HandleDMG");

	Params::WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG Parms{};

	Parms.Damage = Damage;
	Parms.MaxDamage = MaxDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.HandleHP
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health_Value                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHealthValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::HandleHP(double Health_Value, double MaxHealthValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "HandleHP");

	Params::WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP Parms{};

	Parms.Health_Value = Health_Value;
	Parms.MaxHealthValue = MaxHealthValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.OnBlast
// (BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::OnBlast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "OnBlast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.OnBlastReady
// (BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::OnBlastReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "OnBlastReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.OnLimbActivated
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzLimbType                             LimbType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGzLimbGaugeData                 GaugeData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::OnLimbActivated(EGzLimbType LimbType, const struct FGzLimbGaugeData& GaugeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "OnLimbActivated");

	Params::WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated Parms{};

	Parms.LimbType = LimbType;
	Parms.GaugeData = std::move(GaugeData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.OnLimbActivationEnded
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzLimbType                             LimbType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::OnLimbActivationEnded(EGzLimbType LimbType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "OnLimbActivationEnded");

	Params::WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivationEnded Parms{};

	Parms.LimbType = LimbType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.ResetWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::ResetWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "ResetWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.Set UI Health and Damage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::Set_UI_Health_and_Damage(double Damage, double MaxDamage, double Health, double MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "Set UI Health and Damage");

	Params::WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage Parms{};

	Parms.Damage = Damage;
	Parms.MaxDamage = MaxDamage;
	Parms.Health = Health;
	Parms.MaxHealth = MaxHealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.ShieldSpawned
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KineticShield_C*              KineticShieldReference                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_KineticShieldArm_C::ShieldSpawned(class ABP_KineticShield_C* KineticShieldReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_KineticShieldArm_C", "ShieldSpawned");

	Params::WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ShieldSpawned Parms{};

	Parms.KineticShieldReference = KineticShieldReference;

	UObject::ProcessEvent(Func, &Parms);
}

}

