#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_SpiderMine_TextData

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct S_SpiderMine_TextData.S_SpiderMine_TextData
// 0x0090 (0x0090 - 0x0000)
struct FS_SpiderMine_TextData final
{
public:
	class FString                                 NoValidLocation_5_2E9E37C647EF5E4B5C0CE18D635571D6; // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DistanceTooFar_11_DF96E0A746580C58146D4F9021E1CAC6; // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LinkTooFar_14_38CBD34D4094A666FCD476B93A028911;    // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NoMine_13_60A21EF14BA8F9C6F3D68997BD5E7B9D;        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LinkAvailable_15_0B79122944E91DBC4096DCBFB5925F70; // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LinkUnavailable_16_6281E6134C35128850B4C2A7E5D04CFE; // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PlacementUnavailable_19_500C91DF44F18AE2651ADB8FC2F0B283; // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PlacementAvailable_20_305135374969E2F09872F7B0690B29BA; // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ActiveMines_22_18055D6C499A35BF021980ACFCDA6F84;   // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_SpiderMine_TextData) == 0x000008, "Wrong alignment on FS_SpiderMine_TextData");
static_assert(sizeof(FS_SpiderMine_TextData) == 0x000090, "Wrong size on FS_SpiderMine_TextData");
static_assert(offsetof(FS_SpiderMine_TextData, NoValidLocation_5_2E9E37C647EF5E4B5C0CE18D635571D6) == 0x000000, "Member 'FS_SpiderMine_TextData::NoValidLocation_5_2E9E37C647EF5E4B5C0CE18D635571D6' has a wrong offset!");
static_assert(offsetof(FS_SpiderMine_TextData, DistanceTooFar_11_DF96E0A746580C58146D4F9021E1CAC6) == 0x000010, "Member 'FS_SpiderMine_TextData::DistanceTooFar_11_DF96E0A746580C58146D4F9021E1CAC6' has a wrong offset!");
static_assert(offsetof(FS_SpiderMine_TextData, LinkTooFar_14_38CBD34D4094A666FCD476B93A028911) == 0x000020, "Member 'FS_SpiderMine_TextData::LinkTooFar_14_38CBD34D4094A666FCD476B93A028911' has a wrong offset!");
static_assert(offsetof(FS_SpiderMine_TextData, NoMine_13_60A21EF14BA8F9C6F3D68997BD5E7B9D) == 0x000030, "Member 'FS_SpiderMine_TextData::NoMine_13_60A21EF14BA8F9C6F3D68997BD5E7B9D' has a wrong offset!");
static_assert(offsetof(FS_SpiderMine_TextData, LinkAvailable_15_0B79122944E91DBC4096DCBFB5925F70) == 0x000040, "Member 'FS_SpiderMine_TextData::LinkAvailable_15_0B79122944E91DBC4096DCBFB5925F70' has a wrong offset!");
static_assert(offsetof(FS_SpiderMine_TextData, LinkUnavailable_16_6281E6134C35128850B4C2A7E5D04CFE) == 0x000050, "Member 'FS_SpiderMine_TextData::LinkUnavailable_16_6281E6134C35128850B4C2A7E5D04CFE' has a wrong offset!");
static_assert(offsetof(FS_SpiderMine_TextData, PlacementUnavailable_19_500C91DF44F18AE2651ADB8FC2F0B283) == 0x000060, "Member 'FS_SpiderMine_TextData::PlacementUnavailable_19_500C91DF44F18AE2651ADB8FC2F0B283' has a wrong offset!");
static_assert(offsetof(FS_SpiderMine_TextData, PlacementAvailable_20_305135374969E2F09872F7B0690B29BA) == 0x000070, "Member 'FS_SpiderMine_TextData::PlacementAvailable_20_305135374969E2F09872F7B0690B29BA' has a wrong offset!");
static_assert(offsetof(FS_SpiderMine_TextData, ActiveMines_22_18055D6C499A35BF021980ACFCDA6F84) == 0x000080, "Member 'FS_SpiderMine_TextData::ActiveMines_22_18055D6C499A35BF021980ACFCDA6F84' has a wrong offset!");

}

