#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HEX_Extractor

#include "Basic.hpp"

#include "BP_HEX_Extractor_classes.hpp"
#include "BP_HEX_Extractor_parameters.hpp"


namespace SDK
{

// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateWidgets
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdatePauseStateClient
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdatePauseStateClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdatePauseStateClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateOpenedState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateOpenedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateOpenedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateMeshDynamicMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateMeshDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateMeshDynamicMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateInteractableComponentActiveState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateInteractableComponentActiveState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateInteractableComponentActiveState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateHexMeshVisibilityFromCurrentHex
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateHexMeshVisibilityFromCurrentHex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateHexMeshVisibilityFromCurrentHex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateHexMeshVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateHexMeshVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateHexMeshVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateHexInsideWidgetsState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzItemData*                      ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::UpdateHexInsideWidgetsState(class UGzItemData* ItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateHexInsideWidgetsState");

	Params::BP_HEX_Extractor_C_UpdateHexInsideWidgetsState Parms{};

	Parms.ItemData = ItemData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateExtractionTimerForUnpausedExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateExtractionTimerForUnpausedExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateExtractionTimerForUnpausedExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateExtractionTimerForStartedExtraction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateExtractionTimerForStartedExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateExtractionTimerForStartedExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateExtractionTimerForRestoredExtraction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateExtractionTimerForRestoredExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateExtractionTimerForRestoredExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateExtractionTimerForPausedExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateExtractionTimerForPausedExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateExtractionTimerForPausedExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateExtractionTimerForHackedExtraction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateExtractionTimerForHackedExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateExtractionTimerForHackedExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateExtractionTimerForEndedExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateExtractionTimerForEndedExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateExtractionTimerForEndedExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateExtractionStateClient
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateExtractionStateClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateExtractionStateClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateExtractionProgressTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::UpdateExtractionProgressTime(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateExtractionProgressTime");

	Params::BP_HEX_Extractor_C_UpdateExtractionProgressTime Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateDynamicMaterialColor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateDynamicMaterialColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateDynamicMaterialColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UpdateDiegeticWidgetExtractionState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UpdateDiegeticWidgetExtractionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UpdateDiegeticWidgetExtractionState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UnpauseExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UnpauseExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UnpauseExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.UnbindEventsOnExtractionEnded
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::UnbindEventsOnExtractionEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "UnbindEventsOnExtractionEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.TrySyncExtractionProgressForHackingState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::TrySyncExtractionProgressForHackingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "TrySyncExtractionProgressForHackingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.TrySyncExtractionProgressForExtractingState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::TrySyncExtractionProgressForExtractingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "TrySyncExtractionProgressForExtractingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.SyncExtractionProgressTimeClient
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::SyncExtractionProgressTimeClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "SyncExtractionProgressTimeClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.StoreDiegeticWidgetVariables
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::StoreDiegeticWidgetVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "StoreDiegeticWidgetVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.StopScreenSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::StopScreenSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "StopScreenSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.StopFeedback
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::StopFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "StopFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.StartHexInsertionAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzInteractableComponent*         Interactable                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::StartHexInsertionAnimation(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "StartHexInsertionAnimation");

	Params::BP_HEX_Extractor_C_StartHexInsertionAnimation Parms{};

	Parms.InteractedBy = InteractedBy;
	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.StartExtraction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGzPlayerState*                   ExtractingPlayer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzItemData*                      Hex                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::StartExtraction(class AGzPlayerState* ExtractingPlayer, class UGzItemData* Hex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "StartExtraction");

	Params::BP_HEX_Extractor_C_StartExtraction Parms{};

	Parms.ExtractingPlayer = ExtractingPlayer;
	Parms.Hex = Hex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.Show3DWidgets
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::Show3DWidgets(bool bShow, double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "Show3DWidgets");

	Params::BP_HEX_Extractor_C_Show3DWidgets Parms{};

	Parms.bShow = bShow;
	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.Show3DWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGzWidgetComponent*               Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::Show3DWidget(bool bShow, class UGzWidgetComponent* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "Show3DWidget");

	Params::BP_HEX_Extractor_C_Show3DWidget Parms{};

	Parms.bShow = bShow;
	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.SetupState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::SetupState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "SetupState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.SetUnpausedState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::SetUnpausedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "SetUnpausedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.SetPausedState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::SetPausedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "SetPausedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.RestoreItemExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::RestoreItemExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "RestoreItemExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ReceiveZoneOverloadSwitched
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInOverloadZone                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::ReceiveZoneOverloadSwitched(bool bInOverloadZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ReceiveZoneOverloadSwitched");

	Params::BP_HEX_Extractor_C_ReceiveZoneOverloadSwitched Parms{};

	Parms.bInOverloadZone = bInOverloadZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ReceiveTick");

	Params::BP_HEX_Extractor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ReceiveEndPlay");

	Params::BP_HEX_Extractor_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_HEX_Extractor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ReceiveActiveStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewActive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::ReceiveActiveStateChanged(bool bNewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ReceiveActiveStateChanged");

	Params::BP_HEX_Extractor_C_ReceiveActiveStateChanged Parms{};

	Parms.bNewActive = bNewActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ProcessUserInputBasedInteraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::ProcessUserInputBasedInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ProcessUserInputBasedInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ProcessInteractionForLocalPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzInteractableComponent*         Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::ProcessInteractionForLocalPlayer(class UGzInteractableComponent* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ProcessInteractionForLocalPlayer");

	Params::BP_HEX_Extractor_C_ProcessInteractionForLocalPlayer Parms{};

	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ProcessInteractionForAuthority
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzInteractableComponent*         Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::ProcessInteractionForAuthority(class UGzInteractableComponent* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ProcessInteractionForAuthority");

	Params::BP_HEX_Extractor_C_ProcessInteractionForAuthority Parms{};

	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ProcessAutoInsertInteraction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::ProcessAutoInsertInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ProcessAutoInsertInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.PrepareUpdateExtractionStateClient
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::PrepareUpdateExtractionStateClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "PrepareUpdateExtractionStateClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.PrepareRestoreItemExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::PrepareRestoreItemExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "PrepareRestoreItemExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.PrepareHackItemExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::PrepareHackItemExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "PrepareHackItemExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.PlayScreenSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::PlayScreenSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "PlayScreenSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.PlayFeedback
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::PlayFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "PlayFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.PauseExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::PauseExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "PauseExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnStartItemExtraction
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)
// Parameters:
// class AGzPlayerState*                   Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzItemData*                      ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::OnStartItemExtraction(class AGzPlayerState* Player, class UGzItemData* ItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnStartItemExtraction");

	Params::BP_HEX_Extractor_C_OnStartItemExtraction Parms{};

	Parms.Player = Player;
	Parms.ItemData = ItemData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnRestoreItemExtraction
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void ABP_HEX_Extractor_C::OnRestoreItemExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnRestoreItemExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnRep_bTerminalOpened
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::OnRep_bTerminalOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnRep_bTerminalOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnPauseChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::OnPauseChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnPauseChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnInteractionCanceled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzInteractableComponent*         Interactable                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::OnInteractionCanceled(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnInteractionCanceled");

	Params::BP_HEX_Extractor_C_OnInteractionCanceled Parms{};

	Parms.InteractedBy = InteractedBy;
	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnHexConfirmed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzItemData*                      Hex                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::OnHexConfirmed(class UGzItemData* Hex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnHexConfirmed");

	Params::BP_HEX_Extractor_C_OnHexConfirmed Parms{};

	Parms.Hex = Hex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnHackItemExtraction
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void ABP_HEX_Extractor_C::OnHackItemExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnHackItemExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnExtractorMenuWidgetCreated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzNavigationWidget*              NavigationWidget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::OnExtractorMenuWidgetCreated(class UGzNavigationWidget* NavigationWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnExtractorMenuWidgetCreated");

	Params::BP_HEX_Extractor_C_OnExtractorMenuWidgetCreated Parms{};

	Parms.NavigationWidget = NavigationWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnExtractionStateChanged
// (Event, Protected, BlueprintEvent)

void ABP_HEX_Extractor_C::OnExtractionStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnExtractionStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnExtractionEnded
// (Event, Protected, BlueprintEvent)

void ABP_HEX_Extractor_C::OnExtractionEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnExtractionEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnCompleteItemExtraction
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void ABP_HEX_Extractor_C::OnCompleteItemExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnCompleteItemExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.OnCancelItemExtraction
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void ABP_HEX_Extractor_C::OnCancelItemExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "OnCancelItemExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.IsNoneState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bNoneState                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::IsNoneState(bool* bNoneState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "IsNoneState");

	Params::BP_HEX_Extractor_C_IsNoneState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNoneState != nullptr)
		*bNoneState = Parms.bNoneState;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.IsLocalPlayerExtracting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::IsLocalPlayerExtracting(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "IsLocalPlayerExtracting");

	Params::BP_HEX_Extractor_C_IsLocalPlayerExtracting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.IsHackingInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_HEX_Extractor_C::IsHackingInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "IsHackingInteraction");

	Params::BP_HEX_Extractor_C_IsHackingInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.IsExtractionPaused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPaused                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::IsExtractionPaused(bool* bPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "IsExtractionPaused");

	Params::BP_HEX_Extractor_C_IsExtractionPaused Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPaused != nullptr)
		*bPaused = Parms.bPaused;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.InitGameModeSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::InitGameModeSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "InitGameModeSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.InitBindings
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::InitBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "InitBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.HasSelectedItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzItemData*                      ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bHasItem                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::HasSelectedItem(class APlayerState* PlayerState, class UGzItemData* ItemData, bool* bHasItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "HasSelectedItem");

	Params::BP_HEX_Extractor_C_HasSelectedItem Parms{};

	Parms.PlayerState = PlayerState;
	Parms.ItemData = ItemData;

	UObject::ProcessEvent(Func, &Parms);

	if (bHasItem != nullptr)
		*bHasItem = Parms.bHasItem;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.HandleInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzInteractableComponent*         Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::HandleInteraction(class AActor* InteractedBy, class UGzInteractableComponent* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "HandleInteraction");

	Params::BP_HEX_Extractor_C_HandleInteraction Parms{};

	Parms.InteractedBy = InteractedBy;
	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.HackItemExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::HackItemExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "HackItemExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetTotalExtractionTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::GetTotalExtractionTime(double* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetTotalExtractionTime");

	Params::BP_HEX_Extractor_C_GetTotalExtractionTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetServerTimeWhenStateChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ExtractionProgressWhenStateChanged                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::GetServerTimeWhenStateChanged(double* ExtractionProgressWhenStateChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetServerTimeWhenStateChanged");

	Params::BP_HEX_Extractor_C_GetServerTimeWhenStateChanged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExtractionProgressWhenStateChanged != nullptr)
		*ExtractionProgressWhenStateChanged = Parms.ExtractionProgressWhenStateChanged;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetRemainedTimeForHackedExtraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  RemainedTime                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::GetRemainedTimeForHackedExtraction(double* RemainedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetRemainedTimeForHackedExtraction");

	Params::BP_HEX_Extractor_C_GetRemainedTimeForHackedExtraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainedTime != nullptr)
		*RemainedTime = Parms.RemainedTime;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetRemainedTimeForExtraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  RemainedTime                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::GetRemainedTimeForExtraction(double* RemainedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetRemainedTimeForExtraction");

	Params::BP_HEX_Extractor_C_GetRemainedTimeForExtraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainedTime != nullptr)
		*RemainedTime = Parms.RemainedTime;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetProgressSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::GetProgressSpeed(double* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetProgressSpeed");

	Params::BP_HEX_Extractor_C_GetProgressSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetExtractionProgressWhenStateChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ExtractionProgressWhenStateChanged                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::GetExtractionProgressWhenStateChanged(double* ExtractionProgressWhenStateChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetExtractionProgressWhenStateChanged");

	Params::BP_HEX_Extractor_C_GetExtractionProgressWhenStateChanged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExtractionProgressWhenStateChanged != nullptr)
		*ExtractionProgressWhenStateChanged = Parms.ExtractionProgressWhenStateChanged;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetCurrentHexItemData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGzItemData*                      CurrentHexItemData                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::GetCurrentHexItemData(class UGzItemData** CurrentHexItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetCurrentHexItemData");

	Params::BP_HEX_Extractor_C_GetCurrentHexItemData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentHexItemData != nullptr)
		*CurrentHexItemData = Parms.CurrentHexItemData;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.Finish Terminal Animation
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::Finish_Terminal_Animation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "Finish Terminal Animation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ExtractionPauseChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::ExtractionPauseChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ExtractionPauseChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ExecuteUbergraph_BP_HEX_Extractor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::ExecuteUbergraph_BP_HEX_Extractor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ExecuteUbergraph_BP_HEX_Extractor");

	Params::BP_HEX_Extractor_C_ExecuteUbergraph_BP_HEX_Extractor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.EndExtraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::EndExtraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "EndExtraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.DispatchAnimationFinishToServer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::DispatchAnimationFinishToServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "DispatchAnimationFinishToServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.DeactivateHackingState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::DeactivateHackingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "DeactivateHackingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.CompleteInteraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::CompleteInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "CompleteInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.CloseActiveWidget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::CloseActiveWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "CloseActiveWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.CheckForCloseEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::CheckForCloseEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "CheckForCloseEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.CheckAnimationEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::CheckAnimationEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "CheckAnimationEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_HEX_Extractor_C_BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_HEX_Extractor_C::BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_HEX_Extractor_C_BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.BndEvt__BP_HEX_Extractor_InteractableComponent_K2Node_ComponentBoundEvent_1_GzOnInteract__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           InteractedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzInteractableComponent*         Interactable                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::BndEvt__BP_HEX_Extractor_InteractableComponent_K2Node_ComponentBoundEvent_1_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "BndEvt__BP_HEX_Extractor_InteractableComponent_K2Node_ComponentBoundEvent_1_GzOnInteract__DelegateSignature");

	Params::BP_HEX_Extractor_C_BndEvt__BP_HEX_Extractor_InteractableComponent_K2Node_ComponentBoundEvent_1_GzOnInteract__DelegateSignature Parms{};

	Parms.InteractedBy = InteractedBy;
	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.AddHexMeshToTerminal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzItemRarity                           Rarity                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::AddHexMeshToTerminal(EGzItemRarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "AddHexMeshToTerminal");

	Params::BP_HEX_Extractor_C_AddHexMeshToTerminal Parms{};

	Parms.Rarity = Rarity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.AddExtractionWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::AddExtractionWidget(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "AddExtractionWidget");

	Params::BP_HEX_Extractor_C_AddExtractionWidget Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ActivateHackingState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::ActivateHackingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ActivateHackingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ActivateCelebrationNiagara
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::ActivateCelebrationNiagara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ActivateCelebrationNiagara");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.Extracting__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::Extracting__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "Extracting__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ExtractionHacked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::ExtractionHacked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ExtractionHacked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ExtractionCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::ExtractionCompleted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ExtractionCompleted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.ExtractionCanceled__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_HEX_Extractor_C::ExtractionCanceled__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "ExtractionCanceled__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.IsHackingState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::IsHackingState(bool* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "IsHackingState");

	Params::BP_HEX_Extractor_C_IsHackingState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.IsFriendlyExtraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   InstigatorPlayerID                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::IsFriendlyExtraction(int32 InstigatorPlayerID, bool* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "IsFriendlyExtraction");

	Params::BP_HEX_Extractor_C_IsFriendlyExtraction Parms{};

	Parms.InstigatorPlayerID = InstigatorPlayerID;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.IsExtractingState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::IsExtractingState(bool* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "IsExtractingState");

	Params::BP_HEX_Extractor_C_IsExtractingState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.IsATeammate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bTeammate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HEX_Extractor_C::IsATeammate(class APlayerState* PlayerState, bool* bTeammate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "IsATeammate");

	Params::BP_HEX_Extractor_C_IsATeammate Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (bTeammate != nullptr)
		*bTeammate = Parms.bTeammate;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetPingVoiceLineData
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FGzPingVoiceLineData       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NoDestructor)

const struct FGzPingVoiceLineData ABP_HEX_Extractor_C::GetPingVoiceLineData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetPingVoiceLineData");

	Params::BP_HEX_Extractor_C_GetPingVoiceLineData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetLocalHexItemTransforms
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<struct FTransform>               ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FTransform> ABP_HEX_Extractor_C::GetLocalHexItemTransforms() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetLocalHexItemTransforms");

	Params::BP_HEX_Extractor_C_GetLocalHexItemTransforms Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HEX_Extractor.BP_HEX_Extractor_C.GetCurrentInteractionInfo
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AGzCharacter*                     InteractedBy                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FGzInteractionInfo>       InteractionInfoArray                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FGameplayTag                     OutInteractionTag                                      (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// struct FGzInteractionData               OutInteractionData                                     (Parm, OutParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_HEX_Extractor_C::GetCurrentInteractionInfo(const class AGzCharacter* InteractedBy, const TArray<struct FGzInteractionInfo>& InteractionInfoArray, struct FGameplayTag* OutInteractionTag, struct FGzInteractionData* OutInteractionData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HEX_Extractor_C", "GetCurrentInteractionInfo");

	Params::BP_HEX_Extractor_C_GetCurrentInteractionInfo Parms{};

	Parms.InteractedBy = InteractedBy;
	Parms.InteractionInfoArray = std::move(InteractionInfoArray);

	UObject::ProcessEvent(Func, &Parms);

	if (OutInteractionTag != nullptr)
		*OutInteractionTag = std::move(Parms.OutInteractionTag);

	if (OutInteractionData != nullptr)
		*OutInteractionData = std::move(Parms.OutInteractionData);

	return Parms.ReturnValue;
}

}

