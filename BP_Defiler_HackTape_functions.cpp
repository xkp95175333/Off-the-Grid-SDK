#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Defiler_HackTape

#include "Basic.hpp"

#include "BP_Defiler_HackTape_classes.hpp"
#include "BP_Defiler_HackTape_parameters.hpp"


namespace SDK
{

// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ApplyDefilerAreaEffefct
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Defiler_HackTape_C::ApplyDefilerAreaEffefct(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "ApplyDefilerAreaEffefct");

	Params::BP_Defiler_HackTape_C_ApplyDefilerAreaEffefct Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ApplyGameplayEffectToTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Effect                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Defiler_HackTape_C::ApplyGameplayEffectToTarget(class UClass* Effect, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "ApplyGameplayEffectToTarget");

	Params::BP_Defiler_HackTape_C_ApplyGameplayEffectToTarget Parms{};

	Parms.Effect = Effect;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Defiler_HackTape_C::BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Defiler_HackTape_C::BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Defiler_HackTape_C_BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.BP_OnDeath
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    HasDeathHitPoint                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DeathHitPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Defiler_HackTape_C::BP_OnDeath(bool HasDeathHitPoint, const struct FVector& DeathHitPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "BP_OnDeath");

	Params::BP_Defiler_HackTape_C_BP_OnDeath Parms{};

	Parms.HasDeathHitPoint = HasDeathHitPoint;
	Parms.DeathHitPoint = std::move(DeathHitPoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ExecuteUbergraph_BP_Defiler_HackTape
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Defiler_HackTape_C::ExecuteUbergraph_BP_Defiler_HackTape(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "ExecuteUbergraph_BP_Defiler_HackTape");

	Params::BP_Defiler_HackTape_C_ExecuteUbergraph_BP_Defiler_HackTape Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.GetSocketName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_Defiler_HackTape_C::GetSocketName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "GetSocketName");

	Params::BP_Defiler_HackTape_C_GetSocketName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.Hit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::Hit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "Hit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.Hit Tape SVE
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::Hit_Tape_SVE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "Hit Tape SVE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::HitEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "HitEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitEnemySVE
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::HitEnemySVE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "HitEnemySVE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitFriend
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::HitFriend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "HitFriend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitFriendSVE
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::HitFriendSVE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "HitFriendSVE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitObject
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::HitObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "HitObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitObjectSVE
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::HitObjectSVE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "HitObjectSVE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.HitSVE
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::HitSVE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "HitSVE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.InitSVEClient
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::InitSVEClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "InitSVEClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.On Destroy SVE
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::On_Destroy_SVE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "On Destroy SVE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.Pulse
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::Pulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "Pulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.PulseGameplayEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::PulseGameplayEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "PulseGameplayEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Defiler_HackTape_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_Defiler_HackTape_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Defiler_HackTape_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "ReceiveTick");

	Params::BP_Defiler_HackTape_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SetFriendColorForField
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::SetFriendColorForField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "SetFriendColorForField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SetHostileColorForField
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::SetHostileColorForField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "SetHostileColorForField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SetHP
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::SetHP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "SetHP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SetupSphereCollision
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::SetupSphereCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "SetupSphereCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.Spawn Vision Area
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::Spawn_Vision_Area()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "Spawn Vision Area");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SpawnBrockenLimbVFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzLimbType                             LimbType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Defiler_HackTape_C::SpawnBrockenLimbVFX(EGzLimbType LimbType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "SpawnBrockenLimbVFX");

	Params::BP_Defiler_HackTape_C_SpawnBrockenLimbVFX Parms{};

	Parms.LimbType = LimbType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_HackTape.BP_Defiler_HackTape_C.SpawnTraceVFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Defiler_HackTape_C::SpawnTraceVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_HackTape_C", "SpawnTraceVFX");

	UObject::ProcessEvent(Func, nullptr);
}

}

