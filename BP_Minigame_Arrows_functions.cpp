#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Minigame_Arrows

#include "Basic.hpp"

#include "BP_Minigame_Arrows_classes.hpp"
#include "BP_Minigame_Arrows_parameters.hpp"


namespace SDK
{

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.CancelCountdownTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::CancelCountdownTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "CancelCountdownTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.CreateNextKeypresses
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::CreateNextKeypresses()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "CreateNextKeypresses");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.ExecuteUbergraph_BP_Minigame_Arrows
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Minigame_Arrows_C::ExecuteUbergraph_BP_Minigame_Arrows(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "ExecuteUbergraph_BP_Minigame_Arrows");

	Params::BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.InputKeySound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Minigame_Arrows_C::InputKeySound(uint8 Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "InputKeySound");

	Params::BP_Minigame_Arrows_C_InputKeySound Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.OnKeyReceived
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PressedKey                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Minigame_Arrows_C::OnKeyReceived(uint8 PressedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "OnKeyReceived");

	Params::BP_Minigame_Arrows_C_OnKeyReceived Parms{};

	Parms.PressedKey = PressedKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.OnMinigameStateReceived
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::OnMinigameStateReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "OnMinigameStateReceived");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.OnRep_CurrentRound
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::OnRep_CurrentRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "OnRep_CurrentRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.OnRep_NextKeyPresses
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::OnRep_NextKeyPresses()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "OnRep_NextKeyPresses");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.OnRep_ProgressCount
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::OnRep_ProgressCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "OnRep_ProgressCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.OnRep_Seed
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::OnRep_Seed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "OnRep_Seed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Minigame_Arrows_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Minigame_Arrows_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "ReceiveTick");

	Params::BP_Minigame_Arrows_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.SetCountdownTimerText
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::SetCountdownTimerText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "SetCountdownTimerText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.SetScreenMatState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsMinigame                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         MID_Ref                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Minigame_Arrows_C::SetScreenMatState(bool IsMinigame, class UMaterialInstanceDynamic** MID_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "SetScreenMatState");

	Params::BP_Minigame_Arrows_C_SetScreenMatState Parms{};

	Parms.IsMinigame = IsMinigame;

	UObject::ProcessEvent(Func, &Parms);

	if (MID_Ref != nullptr)
		*MID_Ref = Parms.MID_Ref;
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.StartCountdownTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::StartCountdownTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "StartCountdownTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.StartMinigame
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::StartMinigame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "StartMinigame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.TimeOutMinigame
// (BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::TimeOutMinigame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "TimeOutMinigame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.UpdateRoundsRemainingText
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Minigame_Arrows_C::UpdateRoundsRemainingText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minigame_Arrows_C", "UpdateRoundsRemainingText");

	UObject::ProcessEvent(Func, nullptr);
}

}

