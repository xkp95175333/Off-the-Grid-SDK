#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShadowBot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ShadowBot.BP_ShadowBot_C
// 0x0090 (0x03D0 - 0x0340)
class ABP_ShadowBot_C final : public AGzShadowBot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FInputActionInstance                   NewVar_0;                                          // 0x0350(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class APawn*                                  EnemyRef;                                          // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MinTime;                                           // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTime;                                           // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopNum;                                           // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UseLeftArmLimb();
	void StopMoveRight();
	void UseRightArmLimb();
	void UseLegsLimb();
	void StopMoveForward();
	void StopMoveLeft();
	void StopMoveDown();
	void StopAim();
	void StartAim();
	void SelectWeapon2();
	void SelectWeapon1();
	void SelectRandomSkin();
	void SelectPistol();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void MoveRight();
	void MoveLeft();
	void MoveForward();
	void MoveBack();
	bool IsMovingOnGround();
	bool IsFalling();
	void IsEnemyVisible(bool* Return);
	void IsDeploymentPawn(bool* Return);
	void ExecuteUbergraph_BP_ShadowBot(int32 EntryPoint);
	void EquipRandonWeapon();
	void EquipRandomLimb(EGzLimbType LimbType);
	void DoShoot();
	void DoJump();
	void DoCrouch();
	void CalculateMovementTime(const struct FVector& Dir);
	void AddAllConumableItems();

	bool IsWingSuiteMoveMode() const;
	bool HasPawn() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ShadowBot_C">();
	}
	static class ABP_ShadowBot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ShadowBot_C>();
	}
};
static_assert(alignof(ABP_ShadowBot_C) == 0x000008, "Wrong alignment on ABP_ShadowBot_C");
static_assert(sizeof(ABP_ShadowBot_C) == 0x0003D0, "Wrong size on ABP_ShadowBot_C");
static_assert(offsetof(ABP_ShadowBot_C, UberGraphFrame) == 0x000340, "Member 'ABP_ShadowBot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ShadowBot_C, DefaultSceneRoot) == 0x000348, "Member 'ABP_ShadowBot_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ShadowBot_C, NewVar_0) == 0x000350, "Member 'ABP_ShadowBot_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_ShadowBot_C, EnemyRef) == 0x0003B0, "Member 'ABP_ShadowBot_C::EnemyRef' has a wrong offset!");
static_assert(offsetof(ABP_ShadowBot_C, MinTime) == 0x0003B8, "Member 'ABP_ShadowBot_C::MinTime' has a wrong offset!");
static_assert(offsetof(ABP_ShadowBot_C, MaxTime) == 0x0003C0, "Member 'ABP_ShadowBot_C::MaxTime' has a wrong offset!");
static_assert(offsetof(ABP_ShadowBot_C, LoopNum) == 0x0003C8, "Member 'ABP_ShadowBot_C::LoopNum' has a wrong offset!");

}

