#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TurretState

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "G01_structs.hpp"


namespace SDK::Params
{

// Function GA_TurretState.GA_TurretState_C.OnSeatChanged
// 0x0010 (0x0010 - 0x0000)
struct GA_TurretState_C_OnSeatChanged final
{
public:
	class AGzCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            NewSeat;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            OldSeat;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TurretState_C_OnSeatChanged) == 0x000008, "Wrong alignment on GA_TurretState_C_OnSeatChanged");
static_assert(sizeof(GA_TurretState_C_OnSeatChanged) == 0x000010, "Wrong size on GA_TurretState_C_OnSeatChanged");
static_assert(offsetof(GA_TurretState_C_OnSeatChanged, Character) == 0x000000, "Member 'GA_TurretState_C_OnSeatChanged::Character' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_OnSeatChanged, NewSeat) == 0x000008, "Member 'GA_TurretState_C_OnSeatChanged::NewSeat' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_OnSeatChanged, OldSeat) == 0x000009, "Member 'GA_TurretState_C_OnSeatChanged::OldSeat' has a wrong offset!");

// Function GA_TurretState.GA_TurretState_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_TurretState_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_TurretState_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_TurretState_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_TurretState_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_TurretState_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_TurretState_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_TurretState_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_TurretState.GA_TurretState_C.ExecuteUbergraph_GA_TurretState
// 0x0110 (0x0110 - 0x0000)
struct GA_TurretState_C_ExecuteUbergraph_GA_TurretState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6112[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0008(0x00B0)(ConstParm)
	class AGzCharacter*                           K2Node_CustomEvent_Character;                      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            K2Node_CustomEvent_NewSeat;                        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            K2Node_CustomEvent_OldSeat;                        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6113[0x5];                                     // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6114[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6115[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGzCharacter* Character, EGzVehicleSeatType NewSeat, EGzVehicleSeatType OldSeat)> K2Node_CreateDelegate_OutputDelegate;              // 0x00E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6116[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue_1;         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue_2;         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue_1;         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState) == 0x000008, "Wrong alignment on GA_TurretState_C_ExecuteUbergraph_GA_TurretState");
static_assert(sizeof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState) == 0x000110, "Wrong size on GA_TurretState_C_ExecuteUbergraph_GA_TurretState");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, EntryPoint) == 0x000000, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, K2Node_Event_EventData) == 0x000008, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, K2Node_CustomEvent_Character) == 0x0000B8, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, K2Node_CustomEvent_NewSeat) == 0x0000C0, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::K2Node_CustomEvent_NewSeat' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, K2Node_CustomEvent_OldSeat) == 0x0000C1, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::K2Node_CustomEvent_OldSeat' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C2, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, CallFunc_GetOwningCharacter_ReturnValue) == 0x0000C8, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D0, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, CallFunc_GetCombatComponent_ReturnValue) == 0x0000D8, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, CallFunc_K2_HasAuthority_ReturnValue) == 0x0000E0, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, K2Node_CreateDelegate_OutputDelegate) == 0x0000E4, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, CallFunc_GetOwningCharacter_ReturnValue_1) == 0x0000F8, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::CallFunc_GetOwningCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, CallFunc_GetOwningCharacter_ReturnValue_2) == 0x000100, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::CallFunc_GetOwningCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_TurretState_C_ExecuteUbergraph_GA_TurretState, CallFunc_GetCombatComponent_ReturnValue_1) == 0x000108, "Member 'GA_TurretState_C_ExecuteUbergraph_GA_TurretState::CallFunc_GetCombatComponent_ReturnValue_1' has a wrong offset!");

}

