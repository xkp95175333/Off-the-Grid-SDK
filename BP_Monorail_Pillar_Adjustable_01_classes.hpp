#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Monorail_Pillar_Adjustable_01

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Monorail_Pillar_Adjustable_01.BP_Monorail_Pillar_Adjustable_01_C
// 0x00B0 (0x0350 - 0x02A0)
class ABP_Monorail_Pillar_Adjustable_01_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_Monorail_Pillar_Base_01;                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Monorail_Pillar_Clamp_02;                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Monorail_Pillar_Clamp_01;                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Monorail_Pillar_Horizontal;                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Monorail_Pillar_Vertical;                          // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Monorail_Pillar_BaseConcrete;                   // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Monorail_Pillar_VerticalAdjustable;             // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             T_PillarHeight;                                    // 0x02E0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_isSingleTrack;                                   // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Monorail_Pillar_Adjustable_01_C">();
	}
	static class ABP_Monorail_Pillar_Adjustable_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Monorail_Pillar_Adjustable_01_C>();
	}
};
static_assert(alignof(ABP_Monorail_Pillar_Adjustable_01_C) == 0x000010, "Wrong alignment on ABP_Monorail_Pillar_Adjustable_01_C");
static_assert(sizeof(ABP_Monorail_Pillar_Adjustable_01_C) == 0x000350, "Wrong size on ABP_Monorail_Pillar_Adjustable_01_C");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, SM_Monorail_Pillar_Base_01) == 0x0002A0, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::SM_Monorail_Pillar_Base_01' has a wrong offset!");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, Monorail_Pillar_Clamp_02) == 0x0002A8, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::Monorail_Pillar_Clamp_02' has a wrong offset!");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, Monorail_Pillar_Clamp_01) == 0x0002B0, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::Monorail_Pillar_Clamp_01' has a wrong offset!");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, Monorail_Pillar_Horizontal) == 0x0002B8, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::Monorail_Pillar_Horizontal' has a wrong offset!");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, Monorail_Pillar_Vertical) == 0x0002C0, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::Monorail_Pillar_Vertical' has a wrong offset!");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, SM_Monorail_Pillar_BaseConcrete) == 0x0002C8, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::SM_Monorail_Pillar_BaseConcrete' has a wrong offset!");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, SM_Monorail_Pillar_VerticalAdjustable) == 0x0002D0, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::SM_Monorail_Pillar_VerticalAdjustable' has a wrong offset!");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, DefaultSceneRoot) == 0x0002D8, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, T_PillarHeight) == 0x0002E0, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::T_PillarHeight' has a wrong offset!");
static_assert(offsetof(ABP_Monorail_Pillar_Adjustable_01_C, b_isSingleTrack) == 0x000340, "Member 'ABP_Monorail_Pillar_Adjustable_01_C::b_isSingleTrack' has a wrong offset!");

}

