#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Jetpack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_JetpackParticleType_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Jetpack.BP_Jetpack_C
// 0x0108 (0x0228 - 0x0120)
class UBP_Jetpack_C final : public UGzJetpackComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0120(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<E_JetpackParticleType, class UNiagaraSystem*> Particles;                                         // 0x0128(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_JetpackParticleType, class UNiagaraComponent*> ParticleComponents;                                // 0x0178(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<E_JetpackParticleType, class FName>      ParticleAttachmentSockets;                         // 0x01C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        HitReactionVFXDuration;                            // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HitReactionTimerHandle;                            // 0x0220(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Activate_Effects();
	void Activate_Particle_by_Type(E_JetpackParticleType ParticleType);
	void ActivateParticlesBasedOnState();
	void Deactivate_Particle_by_Type(E_JetpackParticleType ParticleType);
	void DetachJetpackBoostVisual();
	void DisableAllParticles();
	void EnableGeneralParticles();
	void ExecuteUbergraph_BP_Jetpack(int32 EntryPoint);
	void HitReactionParticlesDurationFinished();
	void K2_EndZiplineJumpOffVFX();
	void K2_EndZiplineJumpOnVFX();
	void K2_OnEndWingsuit();
	void K2_OnPlayerHit();
	void K2_OnStartWingsuit();
	void K2_StartZiplineJumpOffVFX();
	void K2_StartZiplineJumpOnVFX();
	void OnMeshAssetChanged(class USkeletalMesh* InSkeletalMeshAsset);
	void ReceiveBeginPlay();
	void Set_Int_Parameter_to_Particle_by_Type(E_JetpackParticleType Type, class FName ParameterName, int32 Param);
	void SetJetpackBoostVisual(class UStaticMesh* JetpackBoostVisual, bool bShow);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Jetpack_C">();
	}
	static class UBP_Jetpack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Jetpack_C>();
	}
};
static_assert(alignof(UBP_Jetpack_C) == 0x000008, "Wrong alignment on UBP_Jetpack_C");
static_assert(sizeof(UBP_Jetpack_C) == 0x000228, "Wrong size on UBP_Jetpack_C");
static_assert(offsetof(UBP_Jetpack_C, UberGraphFrame) == 0x000120, "Member 'UBP_Jetpack_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Jetpack_C, Particles) == 0x000128, "Member 'UBP_Jetpack_C::Particles' has a wrong offset!");
static_assert(offsetof(UBP_Jetpack_C, ParticleComponents) == 0x000178, "Member 'UBP_Jetpack_C::ParticleComponents' has a wrong offset!");
static_assert(offsetof(UBP_Jetpack_C, ParticleAttachmentSockets) == 0x0001C8, "Member 'UBP_Jetpack_C::ParticleAttachmentSockets' has a wrong offset!");
static_assert(offsetof(UBP_Jetpack_C, HitReactionVFXDuration) == 0x000218, "Member 'UBP_Jetpack_C::HitReactionVFXDuration' has a wrong offset!");
static_assert(offsetof(UBP_Jetpack_C, HitReactionTimerHandle) == 0x000220, "Member 'UBP_Jetpack_C::HitReactionTimerHandle' has a wrong offset!");

}

