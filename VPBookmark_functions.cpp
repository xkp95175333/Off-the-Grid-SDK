#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VPBookmark

#include "Basic.hpp"

#include "VPBookmark_classes.hpp"
#include "VPBookmark_parameters.hpp"


namespace SDK
{

// Function VPBookmark.VPBookmarkProvider.GenerateBookmarkName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IVPBookmarkProvider::GenerateBookmarkName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VPBookmarkProvider", "GenerateBookmarkName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VPBookmark.VPBookmarkProvider.HideBookmarkSplineMeshIndicator
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IVPBookmarkProvider::HideBookmarkSplineMeshIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VPBookmarkProvider", "HideBookmarkSplineMeshIndicator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VPBookmark.VPBookmarkProvider.OnBookmarkActivation
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UVPBookmark*                      BookMark                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActivate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IVPBookmarkProvider::OnBookmarkActivation(class UVPBookmark* BookMark, bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VPBookmarkProvider", "OnBookmarkActivation");

	Params::VPBookmarkProvider_OnBookmarkActivation Parms{};

	Parms.BookMark = BookMark;
	Parms.bActivate = bActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VPBookmark.VPBookmarkProvider.OnBookmarkChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UVPBookmark*                      BookMark                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IVPBookmarkProvider::OnBookmarkChanged(class UVPBookmark* BookMark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VPBookmarkProvider", "OnBookmarkChanged");

	Params::VPBookmarkProvider_OnBookmarkChanged Parms{};

	Parms.BookMark = BookMark;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VPBookmark.VPBookmarkProvider.UpdateBookmarkSplineMeshIndicator
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IVPBookmarkProvider::UpdateBookmarkSplineMeshIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VPBookmarkProvider", "UpdateBookmarkSplineMeshIndicator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VPBookmark.VPBookmark.GetAssociatedBookmarkActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UVPBookmark::GetAssociatedBookmarkActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VPBookmark", "GetAssociatedBookmarkActor");

	Params::VPBookmark_GetAssociatedBookmarkActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VPBookmark.VPBookmark.GetBookmarkIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVPBookmark::GetBookmarkIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VPBookmark", "GetBookmarkIndex");

	Params::VPBookmark_GetBookmarkIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VPBookmark.VPBookmark.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UVPBookmark::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VPBookmark", "GetDisplayName");

	Params::VPBookmark_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VPBookmark.VPBookmark.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVPBookmark::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VPBookmark", "IsActive");

	Params::VPBookmark_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VPBookmark.VPBookmarkBlueprintLibrary.CreateVPBookmarkName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           BookMark                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FormatString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           GeneratedNumber                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           GeneratedLetter                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVPBookmarkBlueprintLibrary::CreateVPBookmarkName(class AActor* BookMark, const class FString& FormatString, class FString* GeneratedNumber, class FString* GeneratedLetter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VPBookmarkBlueprintLibrary", "CreateVPBookmarkName");

	Params::VPBookmarkBlueprintLibrary_CreateVPBookmarkName Parms{};

	Parms.BookMark = BookMark;
	Parms.FormatString = std::move(FormatString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GeneratedNumber != nullptr)
		*GeneratedNumber = std::move(Parms.GeneratedNumber);

	if (GeneratedLetter != nullptr)
		*GeneratedLetter = std::move(Parms.GeneratedLetter);

	return Parms.ReturnValue;
}


// Function VPBookmark.VPBookmarkBlueprintLibrary.FindVPBookmark
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UVPBookmark*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UVPBookmark* UVPBookmarkBlueprintLibrary::FindVPBookmark(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VPBookmarkBlueprintLibrary", "FindVPBookmark");

	Params::VPBookmarkBlueprintLibrary_FindVPBookmark Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VPBookmark.VPBookmarkBlueprintLibrary.GetAllVPBookmark
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UVPBookmark*>              OutBookmarks                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UVPBookmarkBlueprintLibrary::GetAllVPBookmark(const class UObject* WorldContextObject, TArray<class UVPBookmark*>* OutBookmarks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VPBookmarkBlueprintLibrary", "GetAllVPBookmark");

	Params::VPBookmarkBlueprintLibrary_GetAllVPBookmark Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBookmarks != nullptr)
		*OutBookmarks = std::move(Parms.OutBookmarks);
}


// Function VPBookmark.VPBookmarkBlueprintLibrary.GetAllVPBookmarkActors
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   OutActors                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UVPBookmarkBlueprintLibrary::GetAllVPBookmarkActors(const class UObject* WorldContextObject, TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VPBookmarkBlueprintLibrary", "GetAllVPBookmarkActors");

	Params::VPBookmarkBlueprintLibrary_GetAllVPBookmarkActors Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);
}

}

