#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OpportunityMission

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "UMG_structs.hpp"
#include "MissionGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_OpportunityMission.WBP_OpportunityMission_C.ExecuteUbergraph_WBP_OpportunityMission
// 0x0018 (0x0018 - 0x0000)
struct WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorById_ReturnValue;                 // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission) == 0x000004, "Wrong alignment on WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission");
static_assert(sizeof(WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission) == 0x000018, "Wrong size on WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission");
static_assert(offsetof(WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission, EntryPoint) == 0x000000, "Member 'WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission, CallFunc_GetColorById_ReturnValue) == 0x000004, "Member 'WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission::CallFunc_GetColorById_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission, K2Node_Event_IsDesignTime) == 0x000014, "Member 'WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_OpportunityMission.WBP_OpportunityMission_C.OnMissionStateChanged
// 0x0028 (0x0028 - 0x0000)
struct WBP_OpportunityMission_C_OnMissionStateChanged final
{
public:
	class AGzMission*                             Param_Mission;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGzMissionState                        OldState;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FGzMissionState                        MissionState;                                      // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OpportunityMission_C_OnMissionStateChanged) == 0x000008, "Wrong alignment on WBP_OpportunityMission_C_OnMissionStateChanged");
static_assert(sizeof(WBP_OpportunityMission_C_OnMissionStateChanged) == 0x000028, "Wrong size on WBP_OpportunityMission_C_OnMissionStateChanged");
static_assert(offsetof(WBP_OpportunityMission_C_OnMissionStateChanged, Param_Mission) == 0x000000, "Member 'WBP_OpportunityMission_C_OnMissionStateChanged::Param_Mission' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnMissionStateChanged, OldState) == 0x000008, "Member 'WBP_OpportunityMission_C_OnMissionStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnMissionStateChanged, MissionState) == 0x000014, "Member 'WBP_OpportunityMission_C_OnMissionStateChanged::MissionState' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnMissionStateChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'WBP_OpportunityMission_C_OnMissionStateChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_OpportunityMission.WBP_OpportunityMission_C.OnObjectiveProgressChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_OpportunityMission_C_OnObjectiveProgressChanged final
{
public:
	class UMissionObjective*                      Objective;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OpportunityMission_C_OnObjectiveProgressChanged) == 0x000008, "Wrong alignment on WBP_OpportunityMission_C_OnObjectiveProgressChanged");
static_assert(sizeof(WBP_OpportunityMission_C_OnObjectiveProgressChanged) == 0x000008, "Wrong size on WBP_OpportunityMission_C_OnObjectiveProgressChanged");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveProgressChanged, Objective) == 0x000000, "Member 'WBP_OpportunityMission_C_OnObjectiveProgressChanged::Objective' has a wrong offset!");

// Function WBP_OpportunityMission.WBP_OpportunityMission_C.OnObjectiveStateChanged
// 0x0080 (0x0080 - 0x0000)
struct WBP_OpportunityMission_C_OnObjectiveStateChanged final
{
public:
	class UMissionObjective*                      Objective;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveState                        OldState;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionObjectiveState                        NewState;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D44[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UMissionObjective* Objective)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMissionObjective* Objective)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D45[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayObjective*                     K2Node_DynamicCast_AsGameplay_Objective;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D46[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UMissionObjective* Objective, EMissionObjectiveState OldState, EMissionObjectiveState NewState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMissionObjective* Objective, EMissionObjectiveState OldState, EMissionObjectiveState NewState)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D47[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMission*                               CallFunc_GetMissionChecked_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMissionObjective*                      CallFunc_GetRootObjective_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayObjective*                     K2Node_DynamicCast_AsGameplay_Objective_1;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OpportunityMission_C_OnObjectiveStateChanged) == 0x000008, "Wrong alignment on WBP_OpportunityMission_C_OnObjectiveStateChanged");
static_assert(sizeof(WBP_OpportunityMission_C_OnObjectiveStateChanged) == 0x000080, "Wrong size on WBP_OpportunityMission_C_OnObjectiveStateChanged");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, Objective) == 0x000000, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::Objective' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, OldState) == 0x000008, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, NewState) == 0x000009, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, K2Node_DynamicCast_AsGameplay_Objective) == 0x000030, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::K2Node_DynamicCast_AsGameplay_Objective' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, K2Node_CreateDelegate_OutputDelegate_3) == 0x00004C, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, CallFunc_GetMissionChecked_ReturnValue) == 0x000060, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::CallFunc_GetMissionChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, CallFunc_GetRootObjective_ReturnValue) == 0x000068, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::CallFunc_GetRootObjective_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, K2Node_DynamicCast_AsGameplay_Objective_1) == 0x000070, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::K2Node_DynamicCast_AsGameplay_Objective_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_OnObjectiveStateChanged, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_OpportunityMission_C_OnObjectiveStateChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_OpportunityMission.WBP_OpportunityMission_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_OpportunityMission_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OpportunityMission_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_OpportunityMission_C_PreConstruct");
static_assert(sizeof(WBP_OpportunityMission_C_PreConstruct) == 0x000001, "Wrong size on WBP_OpportunityMission_C_PreConstruct");
static_assert(offsetof(WBP_OpportunityMission_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_OpportunityMission_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_OpportunityMission.WBP_OpportunityMission_C.Set Mission Data
// 0x0068 (0x0068 - 0x0000)
struct WBP_OpportunityMission_C_Set_Mission_Data final
{
public:
	class AGzMission*                             Param_Mission;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMissionObjective* Objective)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D48[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayObjective*                     K2Node_DynamicCast_AsGameplay_Objective;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D49[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UMissionObjective* Objective, EMissionObjectiveState OldState, EMissionObjectiveState NewState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4A[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionObjective*                      CallFunc_GetRootObjective_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzMissionData*                         CallFunc_GetMissionData_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzMission* Mission, const struct FGzMissionState& OldState, const struct FGzMissionState& MissionState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OpportunityMission_C_Set_Mission_Data) == 0x000008, "Wrong alignment on WBP_OpportunityMission_C_Set_Mission_Data");
static_assert(sizeof(WBP_OpportunityMission_C_Set_Mission_Data) == 0x000068, "Wrong size on WBP_OpportunityMission_C_Set_Mission_Data");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, Param_Mission) == 0x000000, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::Param_Mission' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, Temp_bool_Variable) == 0x000008, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, Temp_byte_Variable) == 0x000009, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, K2Node_DynamicCast_AsGameplay_Objective) == 0x000020, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::K2Node_DynamicCast_AsGameplay_Objective' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, CallFunc_GetRootObjective_ReturnValue) == 0x000040, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::CallFunc_GetRootObjective_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, CallFunc_GetMissionData_ReturnValue) == 0x000048, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::CallFunc_GetMissionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, K2Node_Select_Default) == 0x000060, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_Set_Mission_Data, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000061, "Member 'WBP_OpportunityMission_C_Set_Mission_Data::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_OpportunityMission.WBP_OpportunityMission_C.Update Objective Timer
// 0x0010 (0x0010 - 0x0000)
struct WBP_OpportunityMission_C_Update_Objective_Timer final
{
public:
	class FText                                   CallFunc_GetObjectiveTimeText_Text;                // 0x0000(0x0010)()
};
static_assert(alignof(WBP_OpportunityMission_C_Update_Objective_Timer) == 0x000008, "Wrong alignment on WBP_OpportunityMission_C_Update_Objective_Timer");
static_assert(sizeof(WBP_OpportunityMission_C_Update_Objective_Timer) == 0x000010, "Wrong size on WBP_OpportunityMission_C_Update_Objective_Timer");
static_assert(offsetof(WBP_OpportunityMission_C_Update_Objective_Timer, CallFunc_GetObjectiveTimeText_Text) == 0x000000, "Member 'WBP_OpportunityMission_C_Update_Objective_Timer::CallFunc_GetObjectiveTimeText_Text' has a wrong offset!");

// Function WBP_OpportunityMission.WBP_OpportunityMission_C.UpdateObjectiveInfo
// 0x01F0 (0x01F0 - 0x0000)
struct WBP_OpportunityMission_C_UpdateObjectiveInfo final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTimed_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetHudText_ReturnValue;                   // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4C[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayObjective*                     K2Node_DynamicCast_AsGameplay_Objective;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4D[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4E[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0080(0x0010)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0090(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0150(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_SelectText_ReturnValue;                   // 0x0160(0x0010)()
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0170(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0178(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D0(0x0010)()
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast_1;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OpportunityMission_C_UpdateObjectiveInfo) == 0x000008, "Wrong alignment on WBP_OpportunityMission_C_UpdateObjectiveInfo");
static_assert(sizeof(WBP_OpportunityMission_C_UpdateObjectiveInfo) == 0x0001F0, "Wrong size on WBP_OpportunityMission_C_UpdateObjectiveInfo");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_IsTimed_ReturnValue) == 0x000001, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_IsTimed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_GetHudText_ReturnValue) == 0x000008, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_GetHudText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000060, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, K2Node_DynamicCast_AsGameplay_Objective) == 0x000068, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::K2Node_DynamicCast_AsGameplay_Objective' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_FTrunc_ReturnValue) == 0x000074, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_FTrunc_ReturnValue_1) == 0x000078, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000080, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000090, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, K2Node_MakeArray_Array) == 0x000130, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_Format_ReturnValue) == 0x000140, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000150, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_SelectText_ReturnValue) == 0x000160, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_SelectText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000170, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x000178, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, K2Node_MakeArray_Array_1) == 0x0001C0, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_Format_ReturnValue_1) == 0x0001D0, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_FTrunc_A_ImplicitCast) == 0x0001E0, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_OpportunityMission_C_UpdateObjectiveInfo, CallFunc_FTrunc_A_ImplicitCast_1) == 0x0001E8, "Member 'WBP_OpportunityMission_C_UpdateObjectiveInfo::CallFunc_FTrunc_A_ImplicitCast_1' has a wrong offset!");

}

