#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_Cyberlimbs_MicroMissiles

#include "Basic.hpp"

#include "WBP_Crosshair_Cyberlimbs_MicroMissiles_classes.hpp"
#include "WBP_Crosshair_Cyberlimbs_MicroMissiles_parameters.hpp"


namespace SDK
{

// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_MicroMissiles
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_MicroMissiles(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_MicroMissiles");

	Params::WBP_Crosshair_Cyberlimbs_MicroMissiles_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_MicroMissiles Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.InitAvailableChargesIndication
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::InitAvailableChargesIndication()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "InitAvailableChargesIndication");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.InitLocksContainer
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::InitLocksContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "InitLocksContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.OnLimbActivated
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzLimbType                             LimbType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGzLimbGaugeData                 GaugeData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::OnLimbActivated(EGzLimbType LimbType, const struct FGzLimbGaugeData& GaugeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "OnLimbActivated");

	Params::WBP_Crosshair_Cyberlimbs_MicroMissiles_C_OnLimbActivated Parms{};

	Parms.LimbType = LimbType;
	Parms.GaugeData = std::move(GaugeData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.OnLimbActivationEnded
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzLimbType                             LimbType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::OnLimbActivationEnded(EGzLimbType LimbType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "OnLimbActivationEnded");

	Params::WBP_Crosshair_Cyberlimbs_MicroMissiles_C_OnLimbActivationEnded Parms{};

	Parms.LimbType = LimbType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.OnLockOnInterrupted
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzMicroMissiles_LockOnTarget    TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::OnLockOnInterrupted(const struct FGzMicroMissiles_LockOnTarget& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "OnLockOnInterrupted");

	Params::WBP_Crosshair_Cyberlimbs_MicroMissiles_C_OnLockOnInterrupted Parms{};

	Parms.TargetData = std::move(TargetData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.OnLockOnStarted
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzMicroMissiles_LockOnTarget    TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::OnLockOnStarted(const struct FGzMicroMissiles_LockOnTarget& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "OnLockOnStarted");

	Params::WBP_Crosshair_Cyberlimbs_MicroMissiles_C_OnLockOnStarted Parms{};

	Parms.TargetData = std::move(TargetData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.OnLockOnStatusChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzMicroMissiles_LockOnTarget    TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::OnLockOnStatusChanged(const struct FGzMicroMissiles_LockOnTarget& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "OnLockOnStatusChanged");

	Params::WBP_Crosshair_Cyberlimbs_MicroMissiles_C_OnLockOnStatusChanged Parms{};

	Parms.TargetData = std::move(TargetData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.OnLockSuccess
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzMicroMissiles_LockOnTarget    TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::OnLockSuccess(const struct FGzMicroMissiles_LockOnTarget& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "OnLockSuccess");

	Params::WBP_Crosshair_Cyberlimbs_MicroMissiles_C_OnLockSuccess Parms{};

	Parms.TargetData = std::move(TargetData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.OnTargetingStopped
// (BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::OnTargetingStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "OnTargetingStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.SetLockedOnTargets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ToAdd                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::SetLockedOnTargets(bool ToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "SetLockedOnTargets");

	Params::WBP_Crosshair_Cyberlimbs_MicroMissiles_C_SetLockedOnTargets Parms{};

	Parms.ToAdd = ToAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_MicroMissiles.WBP_Crosshair_Cyberlimbs_MicroMissiles_C.IsUsingLockOnLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGzMicroMissiles_LockOnTarget    TargetData                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_MicroMissiles_C::IsUsingLockOnLocation(struct FGzMicroMissiles_LockOnTarget& TargetData, bool* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_MicroMissiles_C", "IsUsingLockOnLocation");

	Params::WBP_Crosshair_Cyberlimbs_MicroMissiles_C_IsUsingLockOnLocation Parms{};

	Parms.TargetData = std::move(TargetData);

	UObject::ProcessEvent(Func, &Parms);

	TargetData = std::move(Parms.TargetData);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

