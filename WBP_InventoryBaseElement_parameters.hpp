#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryBaseElement

#include "Basic.hpp"

#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryBaseElement.WBP_InventoryBaseElement_C.ExecuteUbergraph_WBP_InventoryBaseElement
// 0x0038 (0x0038 - 0x0000)
struct WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGzInvChangeEvent State, struct FGzInvItem& Item)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B22[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            K2Node_CustomEvent_Item_Data;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryInitInventoryElement_bInitSuccessful;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzInvChangeEvent                             K2Node_CustomEvent_State;                          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B23[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             K2Node_CustomEvent_Item;                           // 0x0028(0x0010)(ConstParm)
};
static_assert(alignof(WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement) == 0x000008, "Wrong alignment on WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement");
static_assert(sizeof(WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement) == 0x000038, "Wrong size on WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement");
static_assert(offsetof(WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement, EntryPoint) == 0x000000, "Member 'WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement, K2Node_CustomEvent_Item_Data) == 0x000018, "Member 'WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement::K2Node_CustomEvent_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement, CallFunc_TryInitInventoryElement_bInitSuccessful) == 0x000020, "Member 'WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement::CallFunc_TryInitInventoryElement_bInitSuccessful' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement, K2Node_CustomEvent_State) == 0x000021, "Member 'WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement, K2Node_CustomEvent_Item) == 0x000028, "Member 'WBP_InventoryBaseElement_C_ExecuteUbergraph_WBP_InventoryBaseElement::K2Node_CustomEvent_Item' has a wrong offset!");

// Function WBP_InventoryBaseElement.WBP_InventoryBaseElement_C.OnInventoryChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryBaseElement_C_OnInventoryChanged final
{
public:
	EGzInvChangeEvent                             State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B24[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             Item;                                              // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_InventoryBaseElement_C_OnInventoryChanged) == 0x000008, "Wrong alignment on WBP_InventoryBaseElement_C_OnInventoryChanged");
static_assert(sizeof(WBP_InventoryBaseElement_C_OnInventoryChanged) == 0x000018, "Wrong size on WBP_InventoryBaseElement_C_OnInventoryChanged");
static_assert(offsetof(WBP_InventoryBaseElement_C_OnInventoryChanged, State) == 0x000000, "Member 'WBP_InventoryBaseElement_C_OnInventoryChanged::State' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_OnInventoryChanged, Item) == 0x000008, "Member 'WBP_InventoryBaseElement_C_OnInventoryChanged::Item' has a wrong offset!");

// Function WBP_InventoryBaseElement.WBP_InventoryBaseElement_C.OnItemUpdated
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryBaseElement_C_OnItemUpdated final
{
public:
	class UGzItemData*                            Param_Item_Data;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBaseElement_C_OnItemUpdated) == 0x000008, "Wrong alignment on WBP_InventoryBaseElement_C_OnItemUpdated");
static_assert(sizeof(WBP_InventoryBaseElement_C_OnItemUpdated) == 0x000008, "Wrong size on WBP_InventoryBaseElement_C_OnItemUpdated");
static_assert(offsetof(WBP_InventoryBaseElement_C_OnItemUpdated, Param_Item_Data) == 0x000000, "Member 'WBP_InventoryBaseElement_C_OnItemUpdated::Param_Item_Data' has a wrong offset!");

// Function WBP_InventoryBaseElement.WBP_InventoryBaseElement_C.TryInitInventoryElement
// 0x0038 (0x0038 - 0x0000)
struct WBP_InventoryBaseElement_C_TryInitInventoryElement final
{
public:
	bool                                          bInitSuccessful;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B25[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B26[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryBaseElement_C_TryInitInventoryElement) == 0x000008, "Wrong alignment on WBP_InventoryBaseElement_C_TryInitInventoryElement");
static_assert(sizeof(WBP_InventoryBaseElement_C_TryInitInventoryElement) == 0x000038, "Wrong size on WBP_InventoryBaseElement_C_TryInitInventoryElement");
static_assert(offsetof(WBP_InventoryBaseElement_C_TryInitInventoryElement, bInitSuccessful) == 0x000000, "Member 'WBP_InventoryBaseElement_C_TryInitInventoryElement::bInitSuccessful' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_TryInitInventoryElement, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_InventoryBaseElement_C_TryInitInventoryElement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_TryInitInventoryElement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_InventoryBaseElement_C_TryInitInventoryElement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_TryInitInventoryElement, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'WBP_InventoryBaseElement_C_TryInitInventoryElement::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_TryInitInventoryElement, K2Node_DynamicCast_AsGz_Player_Character) == 0x000018, "Member 'WBP_InventoryBaseElement_C_TryInitInventoryElement::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_TryInitInventoryElement, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_InventoryBaseElement_C_TryInitInventoryElement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_TryInitInventoryElement, CallFunc_GetInventoryComponent_ReturnValue) == 0x000028, "Member 'WBP_InventoryBaseElement_C_TryInitInventoryElement::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_TryInitInventoryElement, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WBP_InventoryBaseElement_C_TryInitInventoryElement::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryBaseElement_C_TryInitInventoryElement, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'WBP_InventoryBaseElement_C_TryInitInventoryElement::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

