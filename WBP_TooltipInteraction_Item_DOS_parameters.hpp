#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TooltipInteraction_Item_DOS

#include "Basic.hpp"

#include "E_TooltipItemType_structs.hpp"
#include "G01_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_TooltipInteraction_Item_DOS.WBP_TooltipInteraction_Item_DOS_C.ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS
// 0x0008 (0x0008 - 0x0000)
struct WBP_TooltipInteraction_Item_DOS_C_ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipInteraction_Item_DOS_C_ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS) == 0x000004, "Wrong alignment on WBP_TooltipInteraction_Item_DOS_C_ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS");
static_assert(sizeof(WBP_TooltipInteraction_Item_DOS_C_ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS) == 0x000008, "Wrong size on WBP_TooltipInteraction_Item_DOS_C_ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS, EntryPoint) == 0x000000, "Member 'WBP_TooltipInteraction_Item_DOS_C_ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_TooltipInteraction_Item_DOS_C_ExecuteUbergraph_WBP_TooltipInteraction_Item_DOS::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_TooltipInteraction_Item_DOS.WBP_TooltipInteraction_Item_DOS_C.FindCurrentWeaponData
// 0x0030 (0x0030 - 0x0000)
struct WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData final
{
public:
	class UGzWeaponItemData*                      CurrentWeaponData;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Pawn;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D45[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponItemData*                      CallFunc_GetWeaponDataInHand_CurrentWeaponData;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData) == 0x000008, "Wrong alignment on WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData");
static_assert(sizeof(WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData) == 0x000030, "Wrong size on WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData, CurrentWeaponData) == 0x000000, "Member 'WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData::CurrentWeaponData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData, Pawn) == 0x000008, "Member 'WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData::Pawn' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData, K2Node_DynamicCast_AsGz_Character) == 0x000010, "Member 'WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData, CallFunc_GetWeaponDataInHand_CurrentWeaponData) == 0x000020, "Member 'WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData::CallFunc_GetWeaponDataInHand_CurrentWeaponData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000028, "Member 'WBP_TooltipInteraction_Item_DOS_C_FindCurrentWeaponData::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");

// Function WBP_TooltipInteraction_Item_DOS.WBP_TooltipInteraction_Item_DOS_C.InitItemSetup
// 0x0010 (0x0010 - 0x0000)
struct WBP_TooltipInteraction_Item_DOS_C_InitItemSetup final
{
public:
	class UGzItemData*                            Param_ItemData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TooltipItemType                             ItemType;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipInteraction_Item_DOS_C_InitItemSetup) == 0x000008, "Wrong alignment on WBP_TooltipInteraction_Item_DOS_C_InitItemSetup");
static_assert(sizeof(WBP_TooltipInteraction_Item_DOS_C_InitItemSetup) == 0x000010, "Wrong size on WBP_TooltipInteraction_Item_DOS_C_InitItemSetup");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_InitItemSetup, Param_ItemData) == 0x000000, "Member 'WBP_TooltipInteraction_Item_DOS_C_InitItemSetup::Param_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_InitItemSetup, Quantity) == 0x000008, "Member 'WBP_TooltipInteraction_Item_DOS_C_InitItemSetup::Quantity' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_InitItemSetup, ItemType) == 0x00000C, "Member 'WBP_TooltipInteraction_Item_DOS_C_InitItemSetup::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_InitItemSetup, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'WBP_TooltipInteraction_Item_DOS_C_InitItemSetup::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_TooltipInteraction_Item_DOS.WBP_TooltipInteraction_Item_DOS_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TooltipInteraction_Item_DOS_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipInteraction_Item_DOS_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TooltipInteraction_Item_DOS_C_PreConstruct");
static_assert(sizeof(WBP_TooltipInteraction_Item_DOS_C_PreConstruct) == 0x000001, "Wrong size on WBP_TooltipInteraction_Item_DOS_C_PreConstruct");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TooltipInteraction_Item_DOS_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TooltipInteraction_Item_DOS.WBP_TooltipInteraction_Item_DOS_C.SetAmmoDescription
// 0x03E0 (0x03E0 - 0x0000)
struct WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription final
{
public:
	class UGzItemData*                            Param_ItemData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         GlobalLen;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D46[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Font;                                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	class FText                                   WeaponShortName;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	EGzWeaponType                                 CurrWeaponType;                                    // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D47[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AllDescreptions;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D48[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAmmoItemData*                        K2Node_DynamicCast_AsGz_Ammo_Item_Data;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D49[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4A[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	EGzWeaponType                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4B[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
	class FText                                   CallFunc_GetWeaponTypeName_WeaponName;             // 0x0090(0x0010)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4C[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4D[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0108(0x0010)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4E[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0120(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4F[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0170(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D50[0x2];                                     // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0200(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0248(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0290(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x02D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0320(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0330(0x0010)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D51[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponItemData*                      CallFunc_FindCurrentWeaponData_CurrentWeaponData;  // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D52[0x6];                                     // 0x0352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0358(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0368(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x03B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x03C0(0x0010)()
	class FText                                   K2Node_Select_Default_1;                           // 0x03D0(0x0010)()
};
static_assert(alignof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription) == 0x000008, "Wrong alignment on WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription");
static_assert(sizeof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription) == 0x0003E0, "Wrong size on WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, Param_ItemData) == 0x000000, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::Param_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, GlobalLen) == 0x000008, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::GlobalLen' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, Font) == 0x000010, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::Font' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, WeaponShortName) == 0x000020, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::WeaponShortName' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CurrWeaponType) == 0x000030, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CurrWeaponType' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, AllDescreptions) == 0x000038, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::AllDescreptions' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, Temp_bool_Variable) == 0x000048, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_DynamicCast_AsGz_Ammo_Item_Data) == 0x000050, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_DynamicCast_AsGz_Ammo_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, Temp_bool_True_if_break_was_hit_Variable) == 0x000059, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, Temp_int_Array_Index_Variable) == 0x000064, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeArray_Array) == 0x000068, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_GetWeaponTypeName_WeaponName) == 0x000090, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_GetWeaponTypeName_WeaponName' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F0, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Len_ReturnValue) == 0x000100, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Conv_StringToText_ReturnValue) == 0x000108, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Greater_IntInt_ReturnValue) == 0x000118, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeStruct_FormatArgumentData_1) == 0x000120, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, Temp_bool_Variable_1) == 0x000168, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeStruct_FormatArgumentData_2) == 0x000170, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeArray_Array_1) == 0x0001B8, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Format_ReturnValue_1) == 0x0001C8, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0001D8, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Len_ReturnValue_1) == 0x0001E8, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, Temp_int_Loop_Counter_Variable) == 0x0001EC, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Add_IntInt_ReturnValue) == 0x0001F0, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001F4, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Less_IntInt_ReturnValue) == 0x0001F8, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_BooleanAND_ReturnValue) == 0x0001F9, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001FC, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeStruct_FormatArgumentData_3) == 0x000200, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeStruct_FormatArgumentData_4) == 0x000248, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeStruct_FormatArgumentData_5) == 0x000290, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeStruct_FormatArgumentData_6) == 0x0002D8, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeArray_Array_2) == 0x000320, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Format_ReturnValue_2) == 0x000330, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000340, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_FindCurrentWeaponData_CurrentWeaponData) == 0x000348, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_FindCurrentWeaponData_CurrentWeaponData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_IsValid_ReturnValue) == 0x000350, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000351, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_Select_Default) == 0x000358, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeStruct_FormatArgumentData_7) == 0x000368, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_MakeArray_Array_3) == 0x0003B0, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, CallFunc_Format_ReturnValue_3) == 0x0003C0, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription, K2Node_Select_Default_1) == 0x0003D0, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetAmmoDescription::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_TooltipInteraction_Item_DOS.WBP_TooltipInteraction_Item_DOS_C.SetItemDescription
// 0x0028 (0x0028 - 0x0000)
struct WBP_TooltipInteraction_Item_DOS_C_SetItemDescription final
{
public:
	class UGzItemData*                            Param_ItemData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetShortDescription_ReturnValue;          // 0x0008(0x0010)(ConstParm)
	class FText                                   CallFunc_CutText_Result;                           // 0x0018(0x0010)()
};
static_assert(alignof(WBP_TooltipInteraction_Item_DOS_C_SetItemDescription) == 0x000008, "Wrong alignment on WBP_TooltipInteraction_Item_DOS_C_SetItemDescription");
static_assert(sizeof(WBP_TooltipInteraction_Item_DOS_C_SetItemDescription) == 0x000028, "Wrong size on WBP_TooltipInteraction_Item_DOS_C_SetItemDescription");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetItemDescription, Param_ItemData) == 0x000000, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetItemDescription::Param_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetItemDescription, CallFunc_GetShortDescription_ReturnValue) == 0x000008, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetItemDescription::CallFunc_GetShortDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_SetItemDescription, CallFunc_CutText_Result) == 0x000018, "Member 'WBP_TooltipInteraction_Item_DOS_C_SetItemDescription::CallFunc_CutText_Result' has a wrong offset!");

// Function WBP_TooltipInteraction_Item_DOS.WBP_TooltipInteraction_Item_DOS_C.UpdateRarity
// 0x0020 (0x0020 - 0x0000)
struct WBP_TooltipInteraction_Item_DOS_C_UpdateRarity final
{
public:
	class UGzItemData*                            Param_ItemData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowRaryty;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 Rarity;                                            // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity) == 0x000008, "Wrong alignment on WBP_TooltipInteraction_Item_DOS_C_UpdateRarity");
static_assert(sizeof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity) == 0x000020, "Wrong size on WBP_TooltipInteraction_Item_DOS_C_UpdateRarity");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, Param_ItemData) == 0x000000, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::Param_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, ShowRaryty) == 0x000008, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::ShowRaryty' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, Rarity) == 0x000009, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::Rarity' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, Temp_bool_Variable) == 0x00000A, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, CallFunc_GetRarity_ReturnValue) == 0x00000B, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, Temp_byte_Variable) == 0x00000C, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, Temp_byte_Variable_1) == 0x00000D, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, K2Node_Select_Default) == 0x00000F, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_Item_DOS_C_UpdateRarity, CallFunc_GetRarityColor_ReturnValue) == 0x000010, "Member 'WBP_TooltipInteraction_Item_DOS_C_UpdateRarity::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");

}

