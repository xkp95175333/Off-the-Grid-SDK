#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DefaultWeaponMagazineProp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_DefaultWeaponMagazineProp.BP_DefaultWeaponMagazineProp_C.DebugSurface
// 0x02B8 (0x02B8 - 0x0000)
struct BP_DefaultWeaponMagazineProp_C_DebugSurface final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C6[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C7[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C8[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x01D8(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x01E8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01F8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0240(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0288(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0298(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefaultWeaponMagazineProp_C_DebugSurface) == 0x000008, "Wrong alignment on BP_DefaultWeaponMagazineProp_C_DebugSurface");
static_assert(sizeof(BP_DefaultWeaponMagazineProp_C_DebugSurface) == 0x0002B8, "Wrong size on BP_DefaultWeaponMagazineProp_C_DebugSurface");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, Actor) == 0x000000, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::Actor' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, Hit) == 0x000008, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::Hit' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_bBlockingHit) == 0x000100, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_bInitialOverlap) == 0x000101, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_Time) == 0x000104, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_Distance) == 0x000108, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_Location) == 0x000110, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_Normal) == 0x000140, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_BoneName) == 0x000190, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_TraceStart) == 0x0001A8, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_BreakHitResult_TraceEnd) == 0x0001C0, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0001D8, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0001E8, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, K2Node_MakeStruct_FormatArgumentData) == 0x0001F8, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, K2Node_MakeStruct_FormatArgumentData_1) == 0x000240, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, K2Node_MakeArray_Array) == 0x000288, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_Format_ReturnValue) == 0x000298, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_DebugSurface, CallFunc_Conv_TextToString_ReturnValue) == 0x0002A8, "Member 'BP_DefaultWeaponMagazineProp_C_DebugSurface::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_DefaultWeaponMagazineProp.BP_DefaultWeaponMagazineProp_C.ExecuteUbergraph_BP_DefaultWeaponMagazineProp
// 0x0138 (0x0138 - 0x0000)
struct BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C9[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_SelfActor;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0040(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp) == 0x000008, "Wrong alignment on BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp");
static_assert(sizeof(BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp) == 0x000138, "Wrong size on BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp, EntryPoint) == 0x000000, "Member 'BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp, K2Node_CustomEvent_SelfActor) == 0x000018, "Member 'BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp::K2Node_CustomEvent_SelfActor' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp, K2Node_CustomEvent_OtherActor) == 0x000020, "Member 'BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp, K2Node_CustomEvent_NormalImpulse) == 0x000028, "Member 'BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp, K2Node_CustomEvent_Hit) == 0x000040, "Member 'BP_DefaultWeaponMagazineProp_C_ExecuteUbergraph_BP_DefaultWeaponMagazineProp::K2Node_CustomEvent_Hit' has a wrong offset!");

// Function BP_DefaultWeaponMagazineProp.BP_DefaultWeaponMagazineProp_C.NewFunction
// 0x01E0 (0x01E0 - 0x0000)
struct BP_DefaultWeaponMagazineProp_C_NewFunction final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CA[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CB[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CC[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CallFunc_GetEventForPhysicalMaterial_ReturnValue;  // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefaultWeaponMagazineProp_C_NewFunction) == 0x000008, "Wrong alignment on BP_DefaultWeaponMagazineProp_C_NewFunction");
static_assert(sizeof(BP_DefaultWeaponMagazineProp_C_NewFunction) == 0x0001E0, "Wrong size on BP_DefaultWeaponMagazineProp_C_NewFunction");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, Hit) == 0x000000, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::Hit' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_GetEventForPhysicalMaterial_ReturnValue) == 0x0001D0, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_GetEventForPhysicalMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_PostEventAtLocation_ReturnValue) == 0x0001D8, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_NewFunction, CallFunc_IsValid_ReturnValue) == 0x0001DC, "Member 'BP_DefaultWeaponMagazineProp_C_NewFunction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DefaultWeaponMagazineProp.BP_DefaultWeaponMagazineProp_C.OnActorHit_Event
// 0x0120 (0x0120 - 0x0000)
struct BP_DefaultWeaponMagazineProp_C_OnActorHit_Event final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0028(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DefaultWeaponMagazineProp_C_OnActorHit_Event) == 0x000008, "Wrong alignment on BP_DefaultWeaponMagazineProp_C_OnActorHit_Event");
static_assert(sizeof(BP_DefaultWeaponMagazineProp_C_OnActorHit_Event) == 0x000120, "Wrong size on BP_DefaultWeaponMagazineProp_C_OnActorHit_Event");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_OnActorHit_Event, SelfActor) == 0x000000, "Member 'BP_DefaultWeaponMagazineProp_C_OnActorHit_Event::SelfActor' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_OnActorHit_Event, OtherActor) == 0x000008, "Member 'BP_DefaultWeaponMagazineProp_C_OnActorHit_Event::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_OnActorHit_Event, NormalImpulse) == 0x000010, "Member 'BP_DefaultWeaponMagazineProp_C_OnActorHit_Event::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_DefaultWeaponMagazineProp_C_OnActorHit_Event, Hit) == 0x000028, "Member 'BP_DefaultWeaponMagazineProp_C_OnActorHit_Event::Hit' has a wrong offset!");

}

