#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaLogin

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_classes.hpp"
#include "XsollaLogin_structs.hpp"


namespace SDK
{

// Class XsollaLogin.XsollaLoginBrowserWrapper
// 0x0010 (0x02F0 - 0x02E0)
class UXsollaLoginBrowserWrapper : public UUserWidget
{
public:
	uint8                                         Pad_282E[0x10];                                    // 0x02E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ExecuteBrowserClosed(bool bAuthenticationCompleted);
	void LoadUrl(const class FString& URL);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaLoginBrowserWrapper">();
	}
	static class UXsollaLoginBrowserWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaLoginBrowserWrapper>();
	}
};
static_assert(alignof(UXsollaLoginBrowserWrapper) == 0x000008, "Wrong alignment on UXsollaLoginBrowserWrapper");
static_assert(sizeof(UXsollaLoginBrowserWrapper) == 0x0002F0, "Wrong size on UXsollaLoginBrowserWrapper");

// Class XsollaLogin.XsollaLoginLibrary
// 0x0000 (0x0028 - 0x0028)
class UXsollaLoginLibrary final : public UBlueprintFunctionLibrary
{
public:
	static TArray<uint8> ConvertTextureToByteArray(class UTexture2D* Texture);
	static class FString GetAppId();
	static class FString GetDeviceId();
	static class FString GetDeviceName();
	static class FString GetSessionTicket();
	static class FString GetStringCommandLineParam(const class FString& ParamName);
	static class FString GetUrlParameter(const class FString& URL, const class FString& Parameter);
	static bool IsEmailValid(const class FString& Email);
	static bool IsSteamBuildValid(class FString* OutError);
	static void LaunchPlatfromBrowser(const class FString& URL);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaLoginLibrary">();
	}
	static class UXsollaLoginLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaLoginLibrary>();
	}
};
static_assert(alignof(UXsollaLoginLibrary) == 0x000008, "Wrong alignment on UXsollaLoginLibrary");
static_assert(sizeof(UXsollaLoginLibrary) == 0x000028, "Wrong size on UXsollaLoginLibrary");

// Class XsollaLogin.XsollaLoginSave
// 0x0058 (0x0080 - 0x0028)
class UXsollaLoginSave final : public USaveGame
{
public:
	struct FXsollaLoginData                       LoginData;                                         // 0x0028(0x0058)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaLoginSave">();
	}
	static class UXsollaLoginSave* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaLoginSave>();
	}
};
static_assert(alignof(UXsollaLoginSave) == 0x000008, "Wrong alignment on UXsollaLoginSave");
static_assert(sizeof(UXsollaLoginSave) == 0x000080, "Wrong size on UXsollaLoginSave");
static_assert(offsetof(UXsollaLoginSave, LoginData) == 0x000028, "Member 'UXsollaLoginSave::LoginData' has a wrong offset!");

// Class XsollaLogin.XsollaLoginSubsystem
// 0x00C0 (0x00F0 - 0x0030)
class UXsollaLoginSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_2831[0x88];                                    // 0x0030(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UXsollaLoginBrowserWrapper> DefaultBrowserWidgetClass;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TDelegate<void(struct FXsollaLoginData& LoginData)> NativeSuccessCallback;                             // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TDelegate<void()>                             NativeCancelCallback;                              // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TDelegate<void(const class FString& Code, const class FString& Description)> NativeErrorCallback;                               // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void AuthenticateUser(const class FString& Username, const class FString& Password, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback, const bool bRememberMe);
	void AuthenticateViaDeviceId(const class FString& DeviceName, const class FString& DeviceID, const class FString& State, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void AuthenticateViaSocialNetwork(const class FString& ProviderName, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void()>& CancelCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback, const bool bRememberMe, const class FString& State);
	void AuthenticateWithSessionTicket(const class FString& ProviderName, const class FString& SessionTicket, const class FString& Code, const class FString& AppId, const class FString& State, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void AuthViaAccessTokenOfSocialNetwork(const class FString& AuthToken, const class FString& AuthTokenSecret, const class FString& OpenId, const class FString& ProviderName, const class FString& State, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void AuthWithXsollaWidget(class UObject* WorldContextObject, class UXsollaLoginBrowserWrapper** BrowserWidget, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void()>& CancelCallback, const bool bRememberMe);
	void CheckUserAge(const class FString& DateOfBirth, const TDelegate<void(struct FXsollaCheckUserAgeResult& CheckUserAgeResult)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void CompleteAuthByEmail(const class FString& Code, const class FString& OperationId, const class FString& Email, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void CompleteAuthByPhoneNumber(const class FString& Code, const class FString& OperationId, const class FString& PhoneNumber, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void CreateAccountLinkingCode(const class FString& AuthToken, const TDelegate<void(const class FString& Code)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void DropLoginData(const bool ClearCache);
	void ExchangeAuthenticationCodeToToken(const class FString& AuthenticationCode, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void GetAuthConfirmationCode(const class FString& UserId, const class FString& OperationId, const TDelegate<void(const class FString& Code, const class FString& OperationId)>& SuccessCallback, const TDelegate<void(const class FString& OperationId)>& TimeoutCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void GetFriends(const class FString& AuthToken, const EXsollaFriendsType Type, const EXsollaUsersSortCriteria SortBy, const EXsollaUsersSortOrder SortOrder, const TDelegate<void(struct FXsollaFriendsData& FriendsData, EXsollaFriendsType Type)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback, const class FString& After, const int32 Limit);
	void GetLinkedSocialNetworks(const class FString& AuthToken, const TDelegate<void(TArray<struct FXsollaLinkedSocialNetworkData>& LinkedSocialNetworks)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void GetSocialAuthenticationUrl(const class FString& ProviderName, const class FString& State, const TDelegate<void(const class FString& URL)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void GetSocialAuthLinks(const class FString& AuthToken, const class FString& Locale, const TDelegate<void(TArray<struct FXsollaSocialAuthLink>& Links)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void GetSocialFriends(const class FString& AuthToken, const class FString& Platform, const TDelegate<void(struct FXsollaSocialFriendsData& SocialFriendsData)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback, const int32 Offset, const int32 Limit, const bool FromThisGame);
	void GetUserAttributes(const class FString& AuthToken, const class FString& UserId, const TArray<class FString>& AttributeKeys, const TDelegate<void(TArray<struct FXsollaUserAttribute>& UserAttributes)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void GetUserDetails(const class FString& AuthToken, const TDelegate<void(struct FXsollaUserDetails& UserDetails)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void GetUserEmail(const class FString& AuthToken, const TDelegate<void(const class FString& Param)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void GetUserPhoneNumber(const class FString& AuthToken, const TDelegate<void(const class FString& Param)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void GetUserProfile(const class FString& AuthToken, const class FString& UserId, const TDelegate<void(struct FXsollaPublicProfile& UserProfile)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void GetUserReadOnlyAttributes(const class FString& AuthToken, const class FString& UserId, const TArray<class FString>& AttributeKeys, const TDelegate<void(TArray<struct FXsollaUserAttribute>& UserAttributes)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void GetUsersDevices(const class FString& AuthToken, const TDelegate<void(TArray<struct FXsollaUserDevice>& UserDevices)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void GetUsersFriends(const class FString& AuthToken, const class FString& Platform, const TDelegate<void(const class FString& Code)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void Initialize(const class FString& InProjectId, const class FString& InLoginId, const class FString& InClientId);
	void LaunchNativeSocialAuthentication(const class FString& ProviderName, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void()>& CancelCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback, const bool bRememberMe, const class FString& State);
	void LaunchSocialAuthentication(class UObject* WorldContextObject, class UUserWidget** BrowserWidget, const bool bRememberMe);
	void LinkDeviceToAccount(const class FString& AuthToken, const class FString& PlatformName, const class FString& DeviceName, const class FString& DeviceID, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void LinkEmailAndPassword(const class FString& AuthToken, const class FString& Email, const class FString& Password, const bool ReceiveNewsConsent, const class FString& Username, const TDelegate<void(bool bNeedToConfirmEmail)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void LinkSocialNetworkToUserAccount(const class FString& AuthToken, const class FString& ProviderName, const TDelegate<void(const class FString& Content)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void LogoutUser(const class FString& AuthToken, const EXsollaSessionType Sessions, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void ModifyFriends(const class FString& AuthToken, const EXsollaFriendAction Action, const class FString& UserId, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void ModifyUserAttributes(const class FString& AuthToken, const TArray<struct FXsollaUserAttribute>& AttributesToModify, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void ModifyUserDetails(const class FString& AuthToken, const class FString& birthday, const class FString& FirstName, const class FString& LastName, const class FString& Gender, const class FString& Nickname, const TDelegate<void(struct FXsollaUserDetails& UserDetails)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void ModifyUserPhoneNumber(const class FString& AuthToken, const class FString& PhoneNumber, const TDelegate<void(const class FString& Param)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void ModifyUserProfilePicture(const class FString& AuthToken, const class UTexture2D* Picture, const TDelegate<void(const class FString& Param)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void RefreshToken(const class FString& Param_RefreshToken, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void RegisterUser(const class FString& Username, const class FString& Password, const class FString& Email, const class FString& State, const class FString& Locale, const bool PersonalDataProcessingConsent, const bool ReceiveNewsConsent, const TMap<class FString, class FString>& AdditionalFields, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void RemoveProfilePicture(const class FString& AuthToken, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void RemoveUserAttributes(const class FString& AuthToken, const TArray<class FString>& AttributesToRemove, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void RemoveUserPhoneNumber(const class FString& AuthToken, const class FString& PhoneNumber, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void ResendAccountConfirmationEmail(const class FString& Username, const class FString& State, const class FString& Locale, const TDelegate<void()>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void ResetUserPassword(const class FString& User, const class FString& Locale, const TDelegate<void()>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void SearchUsersByNickname(const class FString& AuthToken, const class FString& Nickname, const TDelegate<void(struct FXsollaUserSearchResult& SearchResult)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback, const int32 Offset, const int32 Limit);
	void SetLoginData(const struct FXsollaLoginData& Data, const bool ClearCache);
	void SetToken(const class FString& Token);
	void SocialAuthUrlReceivedCallback(const class FString& URL);
	void StartAuthByEmail(const class FString& Email, const class FString& State, const TDelegate<void(const class FString& OperationId)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void StartAuthByPhoneNumber(const class FString& PhoneNumber, const class FString& State, const TDelegate<void(const class FString& OperationId)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);
	void UnlinkDeviceFromAccount(const class FString& AuthToken, const int64 DeviceID, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback);
	void UpdateAuthTokenData(const class FString& AccessToken, int32 ExpiresIn, const class FString& RefreshToken, bool bRememberMe);
	void ValidateToken(const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback);

	struct FXsollaLoginData GetLoginData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaLoginSubsystem">();
	}
	static class UXsollaLoginSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaLoginSubsystem>();
	}
};
static_assert(alignof(UXsollaLoginSubsystem) == 0x000008, "Wrong alignment on UXsollaLoginSubsystem");
static_assert(sizeof(UXsollaLoginSubsystem) == 0x0000F0, "Wrong size on UXsollaLoginSubsystem");
static_assert(offsetof(UXsollaLoginSubsystem, DefaultBrowserWidgetClass) == 0x0000B8, "Member 'UXsollaLoginSubsystem::DefaultBrowserWidgetClass' has a wrong offset!");
static_assert(offsetof(UXsollaLoginSubsystem, NativeSuccessCallback) == 0x0000C0, "Member 'UXsollaLoginSubsystem::NativeSuccessCallback' has a wrong offset!");
static_assert(offsetof(UXsollaLoginSubsystem, NativeCancelCallback) == 0x0000D0, "Member 'UXsollaLoginSubsystem::NativeCancelCallback' has a wrong offset!");
static_assert(offsetof(UXsollaLoginSubsystem, NativeErrorCallback) == 0x0000E0, "Member 'UXsollaLoginSubsystem::NativeErrorCallback' has a wrong offset!");

}

