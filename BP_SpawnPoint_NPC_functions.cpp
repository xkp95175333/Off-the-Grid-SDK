#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnPoint_NPC

#include "Basic.hpp"

#include "BP_SpawnPoint_NPC_classes.hpp"
#include "BP_SpawnPoint_NPC_parameters.hpp"


namespace SDK
{

// Function BP_SpawnPoint_NPC.BP_SpawnPoint_NPC_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SpawnPoint_NPC_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnPoint_NPC_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnPoint_NPC.BP_SpawnPoint_NPC_C.UpdateSplineToSpawner
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpawnPoint_NPC_C::UpdateSplineToSpawner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnPoint_NPC_C", "UpdateSplineToSpawner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnPoint_NPC.BP_SpawnPoint_NPC_C.SpawnNPC
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_TeamID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            SpawnedNPC                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABPC_NPC_Enemy_C*                 Controller                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnPoint_NPC_C::SpawnNPC(int32 Param_TeamID, class APawn** SpawnedNPC, class ABPC_NPC_Enemy_C** Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnPoint_NPC_C", "SpawnNPC");

	Params::BP_SpawnPoint_NPC_C_SpawnNPC Parms{};

	Parms.Param_TeamID = Param_TeamID;

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnedNPC != nullptr)
		*SpawnedNPC = Parms.SpawnedNPC;

	if (Controller != nullptr)
		*Controller = Parms.Controller;
}


// Function BP_SpawnPoint_NPC.BP_SpawnPoint_NPC_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_SpawnPoint_NPC_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnPoint_NPC_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnPoint_NPC.BP_SpawnPoint_NPC_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SpawnPoint_NPC_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnPoint_NPC_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnPoint_NPC.BP_SpawnPoint_NPC_C.ExecuteUbergraph_BP_SpawnPoint_NPC
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnPoint_NPC_C::ExecuteUbergraph_BP_SpawnPoint_NPC(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnPoint_NPC_C", "ExecuteUbergraph_BP_SpawnPoint_NPC");

	Params::BP_SpawnPoint_NPC_C_ExecuteUbergraph_BP_SpawnPoint_NPC Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnPoint_NPC.BP_SpawnPoint_NPC_C.CalculateNPCType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ReturnNPCType                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnPoint_NPC_C::CalculateNPCType(struct FGameplayTag* ReturnNPCType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnPoint_NPC_C", "CalculateNPCType");

	Params::BP_SpawnPoint_NPC_C_CalculateNPCType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnNPCType != nullptr)
		*ReturnNPCType = std::move(Parms.ReturnNPCType);
}

}

