#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FS_MasterFieldGZ

#include "Basic.hpp"

#include "FS_MasterFieldGZ_classes.hpp"
#include "FS_MasterFieldGZ_parameters.hpp"


namespace SDK
{

// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AFS_MasterFieldGZ_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.SetVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AFS_MasterFieldGZ_C::SetVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "SetVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFS_MasterFieldGZ_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "ReceiveTick");

	Params::FS_MasterFieldGZ_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AFS_MasterFieldGZ_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.MakeDynamic_EnableNonGC
// (Public, BlueprintCallable, BlueprintEvent)

void AFS_MasterFieldGZ_C::MakeDynamic_EnableNonGC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "MakeDynamic_EnableNonGC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.InitializeFieldVariables
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AFS_MasterFieldGZ_C::InitializeFieldVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "InitializeFieldVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.ForceMultiplier
// (Public, BlueprintCallable, BlueprintEvent)

void AFS_MasterFieldGZ_C::ForceMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "ForceMultiplier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.FalloffShapeSwitch
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFieldFalloffType                       FalloffType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Param_FalloffMinMax                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOperatorField*                   OperatorFieldOut                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AFS_MasterFieldGZ_C::FalloffShapeSwitch(EFieldFalloffType FalloffType, const struct FVector2D& Param_FalloffMinMax, class UOperatorField** OperatorFieldOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "FalloffShapeSwitch");

	Params::FS_MasterFieldGZ_C_FalloffShapeSwitch Parms{};

	Parms.FalloffType = FalloffType;
	Parms.Param_FalloffMinMax = std::move(Param_FalloffMinMax);

	UObject::ProcessEvent(Func, &Parms);

	if (OperatorFieldOut != nullptr)
		*OperatorFieldOut = Parms.OperatorFieldOut;
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.FalloffAndCullSwitch_Main
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Magnitude                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFieldFalloffType                       FalloffType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Param_FalloffMinMax                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOperatorField*                   OperatorField                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UCullingField*                    CullingField                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AFS_MasterFieldGZ_C::FalloffAndCullSwitch_Main(double Magnitude, EFieldFalloffType FalloffType, const struct FVector2D& Param_FalloffMinMax, class UOperatorField* OperatorField, class UCullingField** CullingField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "FalloffAndCullSwitch_Main");

	Params::FS_MasterFieldGZ_C_FalloffAndCullSwitch_Main Parms{};

	Parms.Magnitude = Magnitude;
	Parms.FalloffType = FalloffType;
	Parms.Param_FalloffMinMax = std::move(Param_FalloffMinMax);
	Parms.OperatorField = OperatorField;

	UObject::ProcessEvent(Func, &Parms);

	if (CullingField != nullptr)
		*CullingField = Parms.CullingField;
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.ExecuteUbergraph_FS_MasterFieldGZ
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFS_MasterFieldGZ_C::ExecuteUbergraph_FS_MasterFieldGZ(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "ExecuteUbergraph_FS_MasterFieldGZ");

	Params::FS_MasterFieldGZ_C_ExecuteUbergraph_FS_MasterFieldGZ Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.DisplayTextSetup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AFS_MasterFieldGZ_C::DisplayTextSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "DisplayTextSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.CE_Trigger
// (BlueprintCallable, BlueprintEvent)

void AFS_MasterFieldGZ_C::CE_Trigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "CE_Trigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FS_MasterFieldGZ.FS_MasterFieldGZ_C.CalculateNoise
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNoiseField*                      OutputPin                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AFS_MasterFieldGZ_C::CalculateNoise(class UNoiseField** OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FS_MasterFieldGZ_C", "CalculateNoise");

	Params::FS_MasterFieldGZ_C_CalculateNoise Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}

}

