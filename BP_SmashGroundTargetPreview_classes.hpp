#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmashGroundTargetPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SmashGroundTargetPreview.BP_SmashGroundTargetPreview_C
// 0x0170 (0x0410 - 0x02A0)
class ABP_SmashGroundTargetPreview_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Niagara;                                           // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               GroundTargetDMI;                                   // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLength;                                       // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5C30[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  As_Gz_Multi_Part_Character;                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AGzCharacter*                           OwningCharacter;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                ActorLocation;                                     // 0x02D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxRange;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                LandingLocation;                                   // 0x02F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviousValid;                                     // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C31[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Target_Location_Hit_Result;                        // 0x0318(0x00F8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)

public:
	void ExecuteUbergraph_BP_SmashGroundTargetPreview(int32 EntryPoint);
	void FindTargetLocation(struct FHitResult* Hit);
	void GetMaxDistanceLocation(struct FHitResult* OutHit, struct FVector* Location, float* Distance);
	void IsValidLandingSpot(const struct FHitResult& Hit, bool* IsValid_, struct FVector* Param_ActorLocation, struct FVector* Param_LandingLocation, double* Distance, struct FHitResult* TargetLocationHitResult);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetIsInvalid();
	void SetIsValid();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SmashGroundTargetPreview_C">();
	}
	static class ABP_SmashGroundTargetPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SmashGroundTargetPreview_C>();
	}
};
static_assert(alignof(ABP_SmashGroundTargetPreview_C) == 0x000008, "Wrong alignment on ABP_SmashGroundTargetPreview_C");
static_assert(sizeof(ABP_SmashGroundTargetPreview_C) == 0x000410, "Wrong size on ABP_SmashGroundTargetPreview_C");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_SmashGroundTargetPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, Niagara) == 0x0002A8, "Member 'ABP_SmashGroundTargetPreview_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, Scene) == 0x0002B0, "Member 'ABP_SmashGroundTargetPreview_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, GroundTargetDMI) == 0x0002B8, "Member 'ABP_SmashGroundTargetPreview_C::GroundTargetDMI' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, TraceLength) == 0x0002C0, "Member 'ABP_SmashGroundTargetPreview_C::TraceLength' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, As_Gz_Multi_Part_Character) == 0x0002C8, "Member 'ABP_SmashGroundTargetPreview_C::As_Gz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, OwningCharacter) == 0x0002D0, "Member 'ABP_SmashGroundTargetPreview_C::OwningCharacter' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, ActorLocation) == 0x0002D8, "Member 'ABP_SmashGroundTargetPreview_C::ActorLocation' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, MaxRange) == 0x0002F0, "Member 'ABP_SmashGroundTargetPreview_C::MaxRange' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, LandingLocation) == 0x0002F8, "Member 'ABP_SmashGroundTargetPreview_C::LandingLocation' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, PreviousValid) == 0x000310, "Member 'ABP_SmashGroundTargetPreview_C::PreviousValid' has a wrong offset!");
static_assert(offsetof(ABP_SmashGroundTargetPreview_C, Target_Location_Hit_Result) == 0x000318, "Member 'ABP_SmashGroundTargetPreview_C::Target_Location_Hit_Result' has a wrong offset!");

}

