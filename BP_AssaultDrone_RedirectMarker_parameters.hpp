#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AssaultDrone_RedirectMarker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AssaultDrone_RedirectMarker.BP_AssaultDrone_RedirectMarker_C.ExecuteUbergraph_BP_AssaultDrone_RedirectMarker
// 0x0160 (0x0160 - 0x0000)
struct BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D7D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D7E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D7F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0058(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker) == 0x000008, "Wrong alignment on BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker");
static_assert(sizeof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker) == 0x000160, "Wrong size on BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, EntryPoint) == 0x000000, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000058, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000150, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000158, "Member 'BP_AssaultDrone_RedirectMarker_C_ExecuteUbergraph_BP_AssaultDrone_RedirectMarker::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_AssaultDrone_RedirectMarker.BP_AssaultDrone_RedirectMarker_C.GetDistanceMultiplayer
// 0x0038 (0x0038 - 0x0000)
struct BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D80[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer) == 0x000008, "Wrong alignment on BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer");
static_assert(sizeof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer) == 0x000038, "Wrong size on BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer, ReturnValue) == 0x000000, "Member 'BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer, CallFunc_GetDistanceTo_ReturnValue) == 0x000014, "Member 'BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'BP_AssaultDrone_RedirectMarker_C_GetDistanceMultiplayer::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_AssaultDrone_RedirectMarker.BP_AssaultDrone_RedirectMarker_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AssaultDrone_RedirectMarker_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultDrone_RedirectMarker_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AssaultDrone_RedirectMarker_C_ReceiveTick");
static_assert(sizeof(BP_AssaultDrone_RedirectMarker_C_ReceiveTick) == 0x000004, "Wrong size on BP_AssaultDrone_RedirectMarker_C_ReceiveTick");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AssaultDrone_RedirectMarker_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AssaultDrone_RedirectMarker.BP_AssaultDrone_RedirectMarker_C.UpdateFromDistance
// 0x0138 (0x0138 - 0x0000)
struct BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance final
{
public:
	double                                        CallFunc_GetDistanceMultiplayer_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0040(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance) == 0x000008, "Wrong alignment on BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance");
static_assert(sizeof(BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance) == 0x000138, "Wrong size on BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance, CallFunc_GetDistanceMultiplayer_ReturnValue) == 0x000000, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance::CallFunc_GetDistanceMultiplayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000010, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000040, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateFromDistance::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_AssaultDrone_RedirectMarker.BP_AssaultDrone_RedirectMarker_C.UpdateScale
// 0x0168 (0x0168 - 0x0000)
struct BP_AssaultDrone_RedirectMarker_C_UpdateScale final
{
public:
	float                                         InputPin;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D81[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDistanceMultiplayer_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceMultiplayer_ReturnValue_1;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0060(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultDrone_RedirectMarker_C_UpdateScale) == 0x000008, "Wrong alignment on BP_AssaultDrone_RedirectMarker_C_UpdateScale");
static_assert(sizeof(BP_AssaultDrone_RedirectMarker_C_UpdateScale) == 0x000168, "Wrong size on BP_AssaultDrone_RedirectMarker_C_UpdateScale");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, InputPin) == 0x000000, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::InputPin' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_GetDistanceMultiplayer_ReturnValue) == 0x000008, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_GetDistanceMultiplayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_GetDistanceMultiplayer_ReturnValue_1) == 0x000020, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_GetDistanceMultiplayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000028, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000060, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000158, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AssaultDrone_RedirectMarker_C_UpdateScale, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000160, "Member 'BP_AssaultDrone_RedirectMarker_C_UpdateScale::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

