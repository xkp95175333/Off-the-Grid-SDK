#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CyberlimbsPanel_Limb_DOS

#include "Basic.hpp"

#include "EN_CyberlimbTextStyle_structs.hpp"
#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.ClearEnergyTimer
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer final
{
public:
	bool                                          bShouldStayActive;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B3[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0008(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_1;                            // 0x0028(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_2;                            // 0x0048(0x0020)()
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Select_Default;                             // 0x0070(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer) == 0x0000A8, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, bShouldStayActive) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::bShouldStayActive' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, Temp_byte_Variable) == 0x000001, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, Temp_struct_Variable) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, Temp_struct_Variable_1) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, Temp_struct_Variable_2) == 0x000048, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, CallFunc_GetGzAbilitySystemComponent_ReturnValue) == 0x000068, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::CallFunc_GetGzAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, K2Node_Select_Default) == 0x000070, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000090, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0000A0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0000A1, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ClearEnergyTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS
// 0x05C8 (0x05C8 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_7;                          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_6;                          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B5[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable_1;                            // 0x0048(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_2;                            // 0x0068(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_3;                            // 0x0088(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable_1;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B6[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable_4;                            // 0x00B0(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_5;                            // 0x00D0(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_6;                            // 0x00F0(0x0020)()
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0110(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_5;                          // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_4;                          // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_7;                            // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B7[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag_3;                          // 0x014C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_2;                          // 0x0164(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x016C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_8;                            // 0x017C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_1;                          // 0x0194(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x019C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_9;                            // 0x01B4(0x0008)(NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable_2;                              // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B8[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable_10;                           // 0x01C0(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_11;                           // 0x01E0(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_12;                           // 0x0200(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B9[0x6];                                     // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlock*                         K2Node_CustomEvent_ReloadIconText;                 // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Character;                      // 0x0230(0x0010)()
	struct FGameplayAttribute                     Temp_struct_Variable_13;                           // 0x0240(0x0038)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0278(0x0048)(HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSatisfyTagRequirements_BP_ReturnValue; // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BA[0x2];                                     // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ViewTarget;                           // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TrySetViewTarget_View_Target;             // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BB[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BC[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x02F0(0x0010)()
	float                                         Temp_real_Variable_1;                              // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BD[0x2];                                     // 0x0306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Get_Limb_Icon_AbilityIcon;                // 0x0318(0x0028)(HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable_3;                              // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BE[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLimbCurrentHealth_ReturnValue;         // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLimbWidgetState                            K2Node_Event_NewState;                             // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bLimbValid;                           // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bLimbAbilityValid;                    // 0x0353(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShow;                                // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHaveMaxCharges;                      // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bRecharging;                          // 0x0356(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BF[0x1];                                     // 0x0357(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue;     // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C0[0x6];                                     // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLimbCurrentHealth_ReturnValue_1;       // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x0370(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x03B0(0x0010)()
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x03C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLimbCurrentHealth_ReturnValue_2;       // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C1[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue;  // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x03E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Select_Default;                             // 0x03F8(0x0020)()
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0418(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue; // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C2[0x7];                                     // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0430(0x0010)()
	struct FGameplayTagContainer                  K2Node_Select_Default_1;                           // 0x0440(0x0020)()
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue_1; // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1; // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0470(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0480(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClearEnergyTimer_bShouldStayActive;       // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClearEnergyTimer_bShouldStayActive_1;     // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x048B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C3[0x4];                                     // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0490(0x0010)()
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C4[0x7];                                     // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x04A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x04F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0500(0x0010)()
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C5[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue_2; // 0x0518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2; // 0x0520(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C6[0x2];                                     // 0x052A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bLimbAbilityComponentValid;           // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C7[0x7];                                     // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue_3; // 0x0538(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Select_Default_3;                           // 0x0540(0x0020)()
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_3; // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0568(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0578(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClearEnergyTimer_bShouldStayActive_2;     // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C8[0x6];                                     // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0588(0x0010)()
	class FText                                   Temp_text_Variable_4;                              // 0x0598(0x0010)()
	class FText                                   K2Node_Select_Default_4;                           // 0x05A8(0x0010)()
	float                                         CallFunc_UpdateLimbHealth_NewHealth_ImplicitCast;  // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateLimbHealth_NewHealth_ImplicitCast_1; // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateLimbHealth_NewHealth_ImplicitCast_2; // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS) == 0x0005C8, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, EntryPoint) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Tag_7) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Tag_7' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Tag_6) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Tag_6' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable) == 0x000038, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_byte_Variable) == 0x000040, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_1) == 0x000048, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_2) == 0x000068, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_3) == 0x000088, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_byte_Variable_1) == 0x0000A9, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_4) == 0x0000B0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_5) == 0x0000D0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_6) == 0x0000F0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_2) == 0x000110, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Tag_5) == 0x000120, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Tag_5' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Tag_4) == 0x000128, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Tag_4' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_3) == 0x000130, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_7) == 0x000140, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_2) == 0x000148, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Tag_3) == 0x00014C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Tag_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_4) == 0x000154, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Tag_2) == 0x000164, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Tag_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_5) == 0x00016C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_8) == 0x00017C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_6) == 0x000184, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Tag_1) == 0x000194, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Tag) == 0x00019C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001A4, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_9) == 0x0001B4, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_byte_Variable_2) == 0x0001BC, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_10) == 0x0001C0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_11) == 0x0001E0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_12) == 0x000200, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_3) == 0x000220, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_4) == 0x000221, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_ReloadIconText) == 0x000228, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_ReloadIconText' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Character) == 0x000230, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_struct_Variable_13) == 0x000240, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_MakeStruct_FormatArgumentData) == 0x000278, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_real_Variable) == 0x0002C0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_5) == 0x0002C4, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_DoesSatisfyTagRequirements_BP_ReturnValue) == 0x0002C5, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_DoesSatisfyTagRequirements_BP_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Event_ViewTarget) == 0x0002C8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Event_ViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_TrySetViewTarget_View_Target) == 0x0002D0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_TrySetViewTarget_View_Target' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_6) == 0x0002D8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0002E0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_7) == 0x0002E8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_text_Variable) == 0x0002F0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_real_Variable_1) == 0x000300, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_8) == 0x000304, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_9) == 0x000305, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetRarityColor_ReturnValue) == 0x000308, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_Get_Limb_Icon_AbilityIcon) == 0x000318, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_Get_Limb_Icon_AbilityIcon' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_byte_Variable_3) == 0x000340, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetLimbCurrentHealth_ReturnValue) == 0x000348, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetLimbCurrentHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Event_NewState) == 0x000350, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_SwitchEnum_CmpSuccess) == 0x000351, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Event_bLimbValid) == 0x000352, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Event_bLimbValid' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Event_bLimbAbilityValid) == 0x000353, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Event_bLimbAbilityValid' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Event_bShow) == 0x000354, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Event_bShow' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Event_bHaveMaxCharges) == 0x000355, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Event_bHaveMaxCharges' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Event_bRecharging) == 0x000356, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Event_bRecharging' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_ListenForAttributeChange_ReturnValue) == 0x000358, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_ListenForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_10) == 0x000360, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_11) == 0x000361, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetLimbCurrentHealth_ReturnValue_1) == 0x000368, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetLimbCurrentHealth_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_Attribute) == 0x000370, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_NewValue) == 0x0003A8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CustomEvent_OldValue) == 0x0003AC, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_text_Variable_1) == 0x0003B0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_8) == 0x0003C0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetLimbCurrentHealth_ReturnValue_2) == 0x0003D0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetLimbCurrentHealth_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0003D8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetGzAbilitySystemComponent_ReturnValue) == 0x0003E0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetGzAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_9) == 0x0003E8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Select_Default) == 0x0003F8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000418, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue) == 0x000420, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_12) == 0x000428, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_text_Variable_2) == 0x000430, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Select_Default_1) == 0x000440, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetGzAbilitySystemComponent_ReturnValue_1) == 0x000460, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetGzAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1) == 0x000468, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_10) == 0x000470, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000480, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_13) == 0x000488, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_ClearEnergyTimer_bShouldStayActive) == 0x000489, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_ClearEnergyTimer_bShouldStayActive' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_ClearEnergyTimer_bShouldStayActive_1) == 0x00048A, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_ClearEnergyTimer_bShouldStayActive_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_bool_Variable) == 0x00048B, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Select_Default_2) == 0x000490, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0004A0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_MakeStruct_FormatArgumentData_1) == 0x0004A8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_MakeArray_Array) == 0x0004F0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_Format_ReturnValue) == 0x000500, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x000510, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetGzAbilitySystemComponent_ReturnValue_2) == 0x000518, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetGzAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2) == 0x000520, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_14) == 0x000528, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000529, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x00052C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Event_bLimbAbilityComponentValid) == 0x000530, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Event_bLimbAbilityComponentValid' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_GetGzAbilitySystemComponent_ReturnValue_3) == 0x000538, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_GetGzAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Select_Default_3) == 0x000540, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_3) == 0x000560, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_CreateDelegate_OutputDelegate_11) == 0x000568, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000578, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_IsValid_ReturnValue_15) == 0x000580, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_ClearEnergyTimer_bShouldStayActive_2) == 0x000581, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_ClearEnergyTimer_bShouldStayActive_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_text_Variable_3) == 0x000588, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, Temp_text_Variable_4) == 0x000598, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, K2Node_Select_Default_4) == 0x0005A8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_UpdateLimbHealth_NewHealth_ImplicitCast) == 0x0005B8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_UpdateLimbHealth_NewHealth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_UpdateLimbHealth_NewHealth_ImplicitCast_1) == 0x0005BC, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_UpdateLimbHealth_NewHealth_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS, CallFunc_UpdateLimbHealth_NewHealth_ImplicitCast_2) == 0x0005C0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS::CallFunc_UpdateLimbHealth_NewHealth_ImplicitCast_2' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.Get Activation Availability
// 0x0010 (0x0010 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability final
{
public:
	class UGzGA_BaseLimbAbility*                  Param_LimbAbility;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SatisfyTagRequirements;                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSatisfyTagRequirements_BP_ReturnValue; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsActive_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability) == 0x000010, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability, Param_LimbAbility) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability::Param_LimbAbility' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability, IsActive) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability::IsActive' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability, SatisfyTagRequirements) == 0x000009, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability::SatisfyTagRequirements' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability, CallFunc_DoesSatisfyTagRequirements_BP_ReturnValue) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability::CallFunc_DoesSatisfyTagRequirements_BP_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability, CallFunc_BP_IsActive_ReturnValue) == 0x00000D, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Activation_Availability::CallFunc_BP_IsActive_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.Get Limb Icon
// 0x0058 (0x0058 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon final
{
public:
	TSoftObjectPtr<class UTexture2D>              AbilityIcon;                                       // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C9[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0030(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon) == 0x000058, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon, AbilityIcon) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon::AbilityIcon' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon, Temp_bool_Variable) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000029, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon, K2Node_Select_Default) == 0x000030, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Get_Limb_Icon::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.GetAbilityData
// 0x0030 (0x0030 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData final
{
public:
	class UGzBodyPartAbilityData*                 AsGz_Body_Part_Ability_Data;                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzItemData*                            CallFunc_GetLimbItemData_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzBodyPartItemData*                    K2Node_DynamicCast_AsGz_Body_Part_Item_Data;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13CA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBodyPartAbilityData*                 K2Node_DynamicCast_AsGz_Body_Part_Ability_Data;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData) == 0x000030, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData, AsGz_Body_Part_Ability_Data) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData::AsGz_Body_Part_Ability_Data' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData, CallFunc_GetLimbItemData_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData::CallFunc_GetLimbItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData, K2Node_DynamicCast_AsGz_Body_Part_Item_Data) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData::K2Node_DynamicCast_AsGz_Body_Part_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData, K2Node_DynamicCast_AsGz_Body_Part_Ability_Data) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData::K2Node_DynamicCast_AsGz_Body_Part_Ability_Data' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetAbilityData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.GetCurrentChargeCooldownProgress
// 0x0038 (0x0038 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress final
{
public:
	double                                        ChargeCooldownProgress;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalTimeRemaining; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalRechargeDuration; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress) == 0x000038, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress, ChargeCooldownProgress) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress::ChargeCooldownProgress' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress, CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalTimeRemaining) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress::CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalTimeRemaining' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress, CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalRechargeDuration) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress::CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalRechargeDuration' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress, CallFunc_FMax_A_ImplicitCast) == 0x000030, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetCurrentChargeCooldownProgress::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.GetDoubleLimbComponent
// 0x0028 (0x0028 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent final
{
public:
	class UGzGA_BaseLimbAbility*                  Param_LimbAbility;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzLimbDoubleAbilityComponent*          AsGz_Limb_Double_Ability_Component;                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_BP_GetAbilityComponent_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzLimbDoubleAbilityComponent*          K2Node_DynamicCast_AsGz_Limb_Double_Ability_Component; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent) == 0x000028, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent, Param_LimbAbility) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent::Param_LimbAbility' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent, AsGz_Limb_Double_Ability_Component) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent::AsGz_Limb_Double_Ability_Component' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent, CallFunc_BP_GetAbilityComponent_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent::CallFunc_BP_GetAbilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent, K2Node_DynamicCast_AsGz_Limb_Double_Ability_Component) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent::K2Node_DynamicCast_AsGz_Limb_Double_Ability_Component' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetDoubleLimbComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.GetLimbCurrentHealth
// 0x0020 (0x0020 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13CB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth) == 0x000020, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth, ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth, CallFunc_SelectFloat_A_ImplicitCast) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbCurrentHealth::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.GetLimbItemData
// 0x0070 (0x0070 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData final
{
public:
	class UGzItemData*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetLimbItemType_Output;                   // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13CC[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzPlayerViewTargetInterface> K2Node_DynamicCast_AsGz_Player_View_Target_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13CD[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzInvComponent*                        CallFunc_GetViewTargetInventory_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzInvPocket                           CallFunc_GetPocketByItemType_ReturnValue;          // 0x0038(0x0028)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13CE[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData) == 0x000070, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData, ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData, CallFunc_GetLimbItemType_Output) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData::CallFunc_GetLimbItemType_Output' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData, K2Node_DynamicCast_AsGz_Player_View_Target_Interface) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData::K2Node_DynamicCast_AsGz_Player_View_Target_Interface' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData, CallFunc_GetViewTargetInventory_ReturnValue) == 0x000030, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData::CallFunc_GetViewTargetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData, CallFunc_GetPocketByItemType_ReturnValue) == 0x000038, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData::CallFunc_GetPocketByItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData, CallFunc_GetItemData_ReturnValue) == 0x000068, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemData::CallFunc_GetItemData_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.GetLimbItemType
// 0x002C (0x002C - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType final
{
public:
	struct FGameplayTag                           Output;                                            // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13CF[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType) == 0x00002C, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType, Output) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType::Output' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType, Temp_byte_Variable) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType, Temp_struct_Variable) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType, Temp_struct_Variable_2) == 0x00001C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType, K2Node_Select_Default) == 0x000024, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbItemType::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.GetLimbMaxHealth
// 0x0020 (0x0020 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D0[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth) == 0x000020, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth, ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth, CallFunc_SelectFloat_A_ImplicitCast) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_GetLimbMaxHealth::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.HandleLimbCooldown
// 0x0040 (0x0040 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBodyPartAbilityData*                 CallFunc_BP_GetAbilityData_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalTimeRemaining; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalRechargeDuration; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetCurrentRemainingRechargeTimeAndDuration_TimeRemaining; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetCurrentRemainingRechargeTimeAndDuration_RechargeDuration; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0010)()
	double                                        CallFunc_FCeil_A_ImplicitCast;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown) == 0x000040, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, Temp_bool_Variable) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, CallFunc_BP_GetAbilityData_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::CallFunc_BP_GetAbilityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalTimeRemaining) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalTimeRemaining' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalRechargeDuration) == 0x000014, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::CallFunc_BP_GetTotalRemainingRechargeTimeAndDuration_TotalRechargeDuration' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, CallFunc_BP_GetCurrentRemainingRechargeTimeAndDuration_TimeRemaining) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::CallFunc_BP_GetCurrentRemainingRechargeTimeAndDuration_TimeRemaining' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, CallFunc_BP_GetCurrentRemainingRechargeTimeAndDuration_RechargeDuration) == 0x00001C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::CallFunc_BP_GetCurrentRemainingRechargeTimeAndDuration_RechargeDuration' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, K2Node_Select_Default) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, CallFunc_FCeil_ReturnValue) == 0x000024, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown, CallFunc_FCeil_A_ImplicitCast) == 0x000038, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleLimbCooldown::CallFunc_FCeil_A_ImplicitCast' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.HandlePercentageCooldownState
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageCooldownState final
{
public:
	int32                                         Param_CurrentChargePercentage;                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageCooldownState) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageCooldownState");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageCooldownState) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageCooldownState");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageCooldownState, Param_CurrentChargePercentage) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageCooldownState::Param_CurrentChargePercentage' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageCooldownState, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageCooldownState::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.HandlePercentageUpdate
// 0x0030 (0x0030 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecharging_ReturnValue;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D2[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAbilityChargePercentage_ReturnValue;   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D3[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate) == 0x000030, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate, CallFunc_IsRecharging_ReturnValue) == 0x000012, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate::CallFunc_IsRecharging_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate, CallFunc_GetAbilityChargePercentage_ReturnValue) == 0x000014, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate::CallFunc_GetAbilityChargePercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate, CallFunc_Round_ReturnValue) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandlePercentageUpdate::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.HandleRechargeDone
// 0x0001 (0x0001 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeDone final
{
public:
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeDone) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeDone");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeDone) == 0x000001, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeDone");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeDone, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeDone::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.HandleRechargeWhenEmpty
// 0x0028 (0x0028 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty final
{
public:
	class UGzGA_BaseLimbAbility*                  Param_LimbAbility;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Only_Recharge_when_Empty;                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReadyToRecharge;                                   // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D4[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecharging_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D5[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBodyPartAbilityData*                 CallFunc_BP_GetAbilityData_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty) == 0x000028, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty, Param_LimbAbility) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty::Param_LimbAbility' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty, Only_Recharge_when_Empty) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty::Only_Recharge_when_Empty' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty, ReadyToRecharge) == 0x000009, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty::ReadyToRecharge' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty, CallFunc_GetCurrentCharges_ReturnValue) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty, CallFunc_IsRecharging_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty::CallFunc_IsRecharging_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty, CallFunc_BP_GetAbilityData_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty::CallFunc_BP_GetAbilityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_HandleRechargeWhenEmpty::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.InitAttributes
// 0x01D0 (0x01D0 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes final
{
public:
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0008(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_1;                            // 0x0040(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_2;                            // 0x0078(0x0038)(HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D7[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Temp_struct_Variable_3;                            // 0x00B8(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_4;                            // 0x00F0(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_5;                            // 0x0128(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_Select_Default;                             // 0x0160(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_Select_Default_1;                           // 0x0198(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes) == 0x0001D0, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, Temp_byte_Variable) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, Temp_struct_Variable) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, Temp_struct_Variable_1) == 0x000040, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, Temp_struct_Variable_2) == 0x000078, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, Temp_byte_Variable_1) == 0x0000B0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, Temp_struct_Variable_3) == 0x0000B8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, Temp_struct_Variable_4) == 0x0000F0, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, Temp_struct_Variable_5) == 0x000128, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, K2Node_Select_Default) == 0x000160, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes, K2Node_Select_Default_1) == 0x000198, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_InitAttributes::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.Is Limb Recharging
// 0x0002 (0x0002 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_Is_Limb_Recharging final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecharging_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_Is_Limb_Recharging) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_Is_Limb_Recharging");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_Is_Limb_Recharging) == 0x000002, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_Is_Limb_Recharging");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Is_Limb_Recharging, ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Is_Limb_Recharging::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_Is_Limb_Recharging, CallFunc_IsRecharging_ReturnValue) == 0x000001, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_Is_Limb_Recharging::CallFunc_IsRecharging_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.IsLimbAtMaxCharges
// 0x0018 (0x0018 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges final
{
public:
	class UGzGA_BaseLimbAbility*                  Param_LimbAbility;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LimbIsAtMaxCharges;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D8[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxCharges_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges) == 0x000018, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges, Param_LimbAbility) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges::Param_LimbAbility' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges, LimbIsAtMaxCharges) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges::LimbIsAtMaxCharges' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges, CallFunc_GetCurrentCharges_ReturnValue) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges, CallFunc_GetMaxCharges_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges::CallFunc_GetMaxCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbAtMaxCharges::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.IsLimbDamaged
// 0x0028 (0x0028 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLimbCurrentHealth_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLimbMaxHealth_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged) == 0x000028, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged, ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged, CallFunc_GetLimbCurrentHealth_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged::CallFunc_GetLimbCurrentHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged, CallFunc_GetLimbMaxHealth_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged::CallFunc_GetLimbMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbDamaged::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.IsLimbOnCooldown
// 0x0018 (0x0018 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown final
{
public:
	class UGzGA_BaseLimbAbility*                  Param_LimbAbility;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          OnCooldown;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecharging_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13DA[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown) == 0x000018, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown, Param_LimbAbility) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown::Param_LimbAbility' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown, OnCooldown) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown::OnCooldown' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown, CallFunc_IsRecharging_ReturnValue) == 0x000009, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown::CallFunc_IsRecharging_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown, CallFunc_GetCurrentCharges_ReturnValue) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbOnCooldown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.IsLimbSeverlyDamaged
// 0x0028 (0x0028 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13DB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLimbCurrentHealth_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLimbMaxHealth_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged) == 0x000028, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged, ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged, CallFunc_GetLimbCurrentHealth_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged::CallFunc_GetLimbCurrentHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged, CallFunc_GetLimbMaxHealth_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged::CallFunc_GetLimbMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000021, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_IsLimbSeverlyDamaged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.LimbAbilityBlockedSound
// 0x0048 (0x0048 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound final
{
public:
	const class UGameplayAbility*                 FailedAbility;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  FailureReasonTags;                                 // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0028(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzGA_BaseLimbAbility*                  K2Node_DynamicCast_AsGz_GA_Base_Limb_Ability;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13DC[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound) == 0x000048, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound, FailedAbility) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound::FailedAbility' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound, FailureReasonTags) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound::FailureReasonTags' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound, Temp_delegate_Variable) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound, K2Node_DynamicCast_AsGz_GA_Base_Limb_Ability) == 0x000038, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound::K2Node_DynamicCast_AsGz_GA_Base_Limb_Ability' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound, CallFunc_PostEvent_ReturnValue) == 0x000044, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_LimbAbilityBlockedSound::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.LimbHasCharges
// 0x000C (0x000C - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges final
{
public:
	bool                                          bHasCharges;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13DD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxCharges_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges) == 0x00000C, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges, bHasCharges) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges::bHasCharges' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges, CallFunc_GetMaxCharges_ReturnValue) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges::CallFunc_GetMaxCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_LimbHasCharges::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnActivationStateUpdated
// 0x0001 (0x0001 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnActivationStateUpdated final
{
public:
	EGzLimbWidgetState                            NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnActivationStateUpdated) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnActivationStateUpdated");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnActivationStateUpdated) == 0x000001, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnActivationStateUpdated");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnActivationStateUpdated, NewState) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnActivationStateUpdated::NewState' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1
// 0x0040 (0x0040 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1) == 0x000040, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1, Attribute) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1, NewValue) == 0x000038, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1, OldValue) == 0x00003C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1::OldValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnLimbAbilityComponentUpdated
// 0x0001 (0x0001 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityComponentUpdated final
{
public:
	bool                                          bLimbAbilityComponentValid;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityComponentUpdated) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityComponentUpdated");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityComponentUpdated) == 0x000001, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityComponentUpdated");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityComponentUpdated, bLimbAbilityComponentValid) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityComponentUpdated::bLimbAbilityComponentValid' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnLimbAbilityUpdated
// 0x0001 (0x0001 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityUpdated final
{
public:
	bool                                          bLimbAbilityValid;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityUpdated) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityUpdated");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityUpdated) == 0x000001, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityUpdated");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityUpdated, bLimbAbilityValid) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAbilityUpdated::bLimbAbilityValid' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnLimbAtMaxCharges
// 0x0001 (0x0001 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAtMaxCharges final
{
public:
	bool                                          bHaveMaxCharges;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAtMaxCharges) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAtMaxCharges");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAtMaxCharges) == 0x000001, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAtMaxCharges");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAtMaxCharges, bHaveMaxCharges) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbAtMaxCharges::bHaveMaxCharges' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnLimbChargeAmountChanged
// 0x0030 (0x0030 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged final
{
public:
	int32                                         NewChargeAmount;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousChargeAmount;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13DE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13DF[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged) == 0x000030, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged, NewChargeAmount) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged::NewChargeAmount' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged, PreviousChargeAmount) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged::PreviousChargeAmount' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged, Temp_delegate_Variable) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00001C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged, CallFunc_SelectInt_ReturnValue) == 0x000024, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged, CallFunc_PostEvent_ReturnValue) == 0x00002C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbChargeAmountChanged::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnLimbRecharging
// 0x0001 (0x0001 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbRecharging final
{
public:
	bool                                          bRecharging;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbRecharging) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbRecharging");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbRecharging) == 0x000001, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbRecharging");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbRecharging, bRecharging) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbRecharging::bRecharging' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnLimbUpdated
// 0x0001 (0x0001 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbUpdated final
{
public:
	bool                                          bLimbValid;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbUpdated) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbUpdated");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbUpdated) == 0x000001, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbUpdated");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbUpdated, bLimbValid) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnLimbUpdated::bLimbValid' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnTagAdded_174A896A46CE757E46AC6C9D958A0398
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_174A896A46CE757E46AC6C9D958A0398 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_174A896A46CE757E46AC6C9D958A0398) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_174A896A46CE757E46AC6C9D958A0398");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_174A896A46CE757E46AC6C9D958A0398) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_174A896A46CE757E46AC6C9D958A0398");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_174A896A46CE757E46AC6C9D958A0398, Tag) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_174A896A46CE757E46AC6C9D958A0398::Tag' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnTagAdded_979886E342A37918F238A898252A58EF
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_979886E342A37918F238A898252A58EF final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_979886E342A37918F238A898252A58EF) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_979886E342A37918F238A898252A58EF");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_979886E342A37918F238A898252A58EF) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_979886E342A37918F238A898252A58EF");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_979886E342A37918F238A898252A58EF, Tag) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_979886E342A37918F238A898252A58EF::Tag' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnTagAdded_B57BDA014CD17D3F2554C59BF87ADDDA
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_B57BDA014CD17D3F2554C59BF87ADDDA final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_B57BDA014CD17D3F2554C59BF87ADDDA) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_B57BDA014CD17D3F2554C59BF87ADDDA");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_B57BDA014CD17D3F2554C59BF87ADDDA) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_B57BDA014CD17D3F2554C59BF87ADDDA");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_B57BDA014CD17D3F2554C59BF87ADDDA, Tag) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_B57BDA014CD17D3F2554C59BF87ADDDA::Tag' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnTagAdded_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B, Tag) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnTagAdded_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B::Tag' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnTagRemoved_174A896A46CE757E46AC6C9D958A0398
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_174A896A46CE757E46AC6C9D958A0398 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_174A896A46CE757E46AC6C9D958A0398) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_174A896A46CE757E46AC6C9D958A0398");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_174A896A46CE757E46AC6C9D958A0398) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_174A896A46CE757E46AC6C9D958A0398");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_174A896A46CE757E46AC6C9D958A0398, Tag) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_174A896A46CE757E46AC6C9D958A0398::Tag' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnTagRemoved_979886E342A37918F238A898252A58EF
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_979886E342A37918F238A898252A58EF final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_979886E342A37918F238A898252A58EF) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_979886E342A37918F238A898252A58EF");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_979886E342A37918F238A898252A58EF) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_979886E342A37918F238A898252A58EF");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_979886E342A37918F238A898252A58EF, Tag) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_979886E342A37918F238A898252A58EF::Tag' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnTagRemoved_B57BDA014CD17D3F2554C59BF87ADDDA
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_B57BDA014CD17D3F2554C59BF87ADDDA final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_B57BDA014CD17D3F2554C59BF87ADDDA) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_B57BDA014CD17D3F2554C59BF87ADDDA");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_B57BDA014CD17D3F2554C59BF87ADDDA) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_B57BDA014CD17D3F2554C59BF87ADDDA");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_B57BDA014CD17D3F2554C59BF87ADDDA, Tag) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_B57BDA014CD17D3F2554C59BF87ADDDA::Tag' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnTagRemoved_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B, Tag) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnTagRemoved_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B::Tag' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.OnViewTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_OnViewTargetChanged final
{
public:
	class APawn*                                  Param_ViewTarget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_OnViewTargetChanged) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_OnViewTargetChanged");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_OnViewTargetChanged) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_OnViewTargetChanged");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_OnViewTargetChanged, Param_ViewTarget) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_OnViewTargetChanged::Param_ViewTarget' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.ReloadIconText_Event
// 0x0018 (0x0018 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_ReloadIconText_Event final
{
public:
	class URichTextBlock*                         ReloadIconText;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Character;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_ReloadIconText_Event) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_ReloadIconText_Event");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_ReloadIconText_Event) == 0x000018, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_ReloadIconText_Event");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ReloadIconText_Event, ReloadIconText) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ReloadIconText_Event::ReloadIconText' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ReloadIconText_Event, Character) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ReloadIconText_Event::Character' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetActiveStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetActiveStyle final
{
public:
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetActiveStyle) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetActiveStyle");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetActiveStyle) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetActiveStyle");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetActiveStyle, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetActiveStyle::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetCooldownStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownStyle final
{
public:
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownStyle) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownStyle");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownStyle) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownStyle");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownStyle, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownStyle::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetCooldownText
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownText final
{
public:
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownText) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownText");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownText) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownText");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownText, CallFunc_GetCurrentCharges_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownText::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetCooldownText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetDefaultStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetDefaultStyle final
{
public:
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetDefaultStyle) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetDefaultStyle");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetDefaultStyle) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetDefaultStyle");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetDefaultStyle, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetDefaultStyle::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetDisabled Style
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetDisabled_Style final
{
public:
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetDisabled_Style) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetDisabled_Style");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetDisabled_Style) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetDisabled_Style");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetDisabled_Style, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetDisabled_Style::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetEmptyStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetEmptyStyle final
{
public:
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetEmptyStyle) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetEmptyStyle");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetEmptyStyle) == 0x000008, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetEmptyStyle");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetEmptyStyle, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetEmptyStyle::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetRechargeBoost
// 0x0003 (0x0003 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecharging_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost) == 0x000003, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost, CallFunc_IsRecharging_ReturnValue) == 0x000001, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost::CallFunc_IsRecharging_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetRechargeBoost::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetSlotBackgroundStateStyle
// 0x0010 (0x0010 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle final
{
public:
	class UGzGA_BaseLimbAbility*                  Param_LimbAbility;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Activation_Availability_IsActive;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Activation_Availability_SatisfyTagRequirements; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle) == 0x000010, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle, Param_LimbAbility) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle::Param_LimbAbility' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle, CallFunc_Get_Activation_Availability_IsActive) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle::CallFunc_Get_Activation_Availability_IsActive' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle, CallFunc_Get_Activation_Availability_SatisfyTagRequirements) == 0x000009, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetSlotBackgroundStateStyle::CallFunc_Get_Activation_Availability_SatisfyTagRequirements' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetText
// 0x0160 (0x0160 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	EN_CyberlimbTextStyle                         Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0120(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0140(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0150(0x0010)()
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetText");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText) == 0x000160, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetText");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, Text) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::Text' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, Temp_byte_Variable) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, K2Node_MakeArray_Array) == 0x000060, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, CallFunc_Format_ReturnValue_1) == 0x000120, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, K2Node_MakeArray_Array_2) == 0x000130, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, CallFunc_Format_ReturnValue_2) == 0x000140, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetText, K2Node_Select_Default) == 0x000150, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.SetupChargeState
// 0x0028 (0x0028 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState final
{
public:
	class UGzBodyPartAbilityData*                 CallFunc_GetAbilityData_AsGz_Body_Part_Ability_Data; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E1[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetRechargeTypeTag_ReturnValue;           // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E2[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetRechargeTypeTag_ReturnValue_1;         // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState) == 0x000028, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState, CallFunc_GetAbilityData_AsGz_Body_Part_Ability_Data) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState::CallFunc_GetAbilityData_AsGz_Body_Part_Ability_Data' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState, CallFunc_GetRechargeTypeTag_ReturnValue) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState::CallFunc_GetRechargeTypeTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState, CallFunc_GetRechargeTypeTag_ReturnValue_1) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState::CallFunc_GetRechargeTypeTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_SetupChargeState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.ShouldShowCooldownText
// 0x0020 (0x0020 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText final
{
public:
	bool                                          ShowCooldownText;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E3[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzBodyPartAbilityData*                 CallFunc_BP_GetAbilityData_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E4[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxCharges_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText) == 0x000020, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, ShowCooldownText) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::ShowCooldownText' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, Temp_bool_Variable) == 0x000001, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, CallFunc_GetCurrentCharges_ReturnValue) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, CallFunc_BP_GetAbilityData_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::CallFunc_BP_GetAbilityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, CallFunc_GetMaxCharges_ReturnValue) == 0x000014, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::CallFunc_GetMaxCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText, K2Node_Select_Default) == 0x00001A, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShouldShowCooldownText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.ShowCooldownText
// 0x0001 (0x0001 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_ShowCooldownText final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_ShowCooldownText) == 0x000001, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_ShowCooldownText");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_ShowCooldownText) == 0x000001, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_ShowCooldownText");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_ShowCooldownText, bShow) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_ShowCooldownText::bShow' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.TryListenForMinChargeReached
// 0x0024 (0x0024 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E5[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NewChargeAmount, int32 PreviousChargeAmount)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGameplayAbility* FailedAbility, struct FGameplayTagContainer& FailureReasonTags)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached) == 0x000004, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached) == 0x000024, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TryListenForMinChargeReached::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.TrySetViewTarget
// 0x0050 (0x0050 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget final
{
public:
	class APawn*                                  NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  View_Target;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E6[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzPlayerViewTargetInterface> K2Node_DynamicCast_AsGz_Player_View_Target_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E8[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzBaseCharacter*                       CallFunc_GetViewTargetCharacter_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget) == 0x000050, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget, NewViewTarget) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget::NewViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget, View_Target) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget::View_Target' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget, K2Node_DynamicCast_AsGz_Character) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget, K2Node_DynamicCast_AsGz_Player_View_Target_Interface) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget::K2Node_DynamicCast_AsGz_Player_View_Target_Interface' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget, CallFunc_GetViewTargetCharacter_ReturnValue) == 0x000040, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget::CallFunc_GetViewTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_TrySetViewTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.UpdateBackgroundColor
// 0x0018 (0x0018 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor final
{
public:
	bool                                          Equiped;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Empty;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E9[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLimbSeverlyDamaged_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor) == 0x000018, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor, Equiped) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor::Equiped' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor, Empty) == 0x000001, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor::Empty' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000002, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor, CallFunc_IsLimbSeverlyDamaged_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateBackgroundColor::CallFunc_IsLimbSeverlyDamaged_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.UpdateChargesText
// 0x0018 (0x0018 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText final
{
public:
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText) == 0x000018, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText, CallFunc_GetCurrentCharges_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateChargesText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.UpdateLimbHealth
// 0x0040 (0x0040 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth final
{
public:
	float                                         NewHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HealthFraction;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EB[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLimbMaxHealth_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth) == 0x000040, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, NewHealth) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::NewHealth' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, OldValue) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, HealthFraction) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::HealthFraction' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, CallFunc_GetLimbMaxHealth_ReturnValue) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::CallFunc_GetLimbMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth, CallFunc_SafeDivide_A_ImplicitCast) == 0x000038, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbHealth::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.UpdateLimbStatus
// 0x0010 (0x0010 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus final
{
public:
	double                                        EnergyFraction;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus) == 0x000010, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus, EnergyFraction) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus::EnergyFraction' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateLimbStatus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.UpdateMultiChargeLimb
// 0x0028 (0x0028 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb final
{
public:
	double                                        EnergyFraction;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13ED[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBodyPartAbilityData*                 CallFunc_BP_GetAbilityData_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecharging_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EE[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb) == 0x000028, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, EnergyFraction) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::EnergyFraction' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_BP_GetAbilityData_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_BP_GetAbilityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_IsRecharging_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_IsRecharging_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_Not_PreBool_ReturnValue_1) == 0x000019, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_GetCurrentCharges_ReturnValue) == 0x00001C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb, CallFunc_IsValid_ReturnValue_2) == 0x000022, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateMultiChargeLimb::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.UpdateProgress
// 0x0010 (0x0010 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress final
{
public:
	double                                        CallFunc_GetCurrentChargeCooldownProgress_ChargeCooldownProgress; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleRechargeWhenEmpty_Only_Recharge_when_Empty; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleRechargeWhenEmpty_ReadyToRecharge;  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EF[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress) == 0x000010, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress, CallFunc_GetCurrentChargeCooldownProgress_ChargeCooldownProgress) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress::CallFunc_GetCurrentChargeCooldownProgress_ChargeCooldownProgress' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress, CallFunc_HandleRechargeWhenEmpty_Only_Recharge_when_Empty) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress::CallFunc_HandleRechargeWhenEmpty_Only_Recharge_when_Empty' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress, CallFunc_HandleRechargeWhenEmpty_ReadyToRecharge) == 0x000009, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress::CallFunc_HandleRechargeWhenEmpty_ReadyToRecharge' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateProgress::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.UpdateSecondaryChargeLimb
// 0x0038 (0x0038 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb final
{
public:
	double                                        EnergyFraction;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F0[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzLimbDoubleAbilityComponent*          CallFunc_GetDoubleLimbComponent_AsGz_Limb_Double_Ability_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F1[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSecondaryChargesAvailable_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb) == 0x000038, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb, EnergyFraction) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb::EnergyFraction' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb, CallFunc_GetDoubleLimbComponent_AsGz_Limb_Double_Ability_Component) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb::CallFunc_GetDoubleLimbComponent_AsGz_Limb_Double_Ability_Component' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb, CallFunc_GetCurrentCharges_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb, CallFunc_GetSecondaryChargesAvailable_ReturnValue) == 0x000031, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargeLimb::CallFunc_GetSecondaryChargesAvailable_ReturnValue' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.UpdateSecondaryChargesText
// 0x0028 (0x0028 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSecondaryCharges_ReturnValue;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0010)()
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText) == 0x000028, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText, CallFunc_GetCurrentSecondaryCharges_ReturnValue) == 0x000004, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText::CallFunc_GetCurrentSecondaryCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText, CallFunc_FTrunc_A_ImplicitCast) == 0x000020, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSecondaryChargesText::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C.UpdateSingleChargeLimb
// 0x0030 (0x0030 - 0x0000)
struct WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb final
{
public:
	double                                        EnergyFraction;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F4[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb) == 0x000008, "Wrong alignment on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb");
static_assert(sizeof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb) == 0x000030, "Wrong size on WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb, EnergyFraction) == 0x000000, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb::EnergyFraction' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb, CallFunc_GetCurrentCharges_ReturnValue) == 0x00000C, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_CyberlimbsPanel_Limb_DOS_C_UpdateSingleChargeLimb::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

