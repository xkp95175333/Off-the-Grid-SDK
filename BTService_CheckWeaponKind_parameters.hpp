#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_CheckWeaponKind

#include "Basic.hpp"

#include "G01_structs.hpp"


namespace SDK::Params
{

// Function BTService_CheckWeaponKind.BTService_CheckWeaponKind_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTService_CheckWeaponKind_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_CheckWeaponKind_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTService_CheckWeaponKind_C_ReceiveTickAI");
static_assert(sizeof(BTService_CheckWeaponKind_C_ReceiveTickAI) == 0x000018, "Wrong size on BTService_CheckWeaponKind_C_ReceiveTickAI");
static_assert(offsetof(BTService_CheckWeaponKind_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTService_CheckWeaponKind_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTService_CheckWeaponKind_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTService_CheckWeaponKind_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTService_CheckWeaponKind.BTService_CheckWeaponKind_C.ExecuteUbergraph_BTService_CheckWeaponKind
// 0x0088 (0x0088 - 0x0000)
struct BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_678B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_678C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_678D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEquippedWeapon_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_678E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzWeaponActor*                         CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_678F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponItemData*                      CallFunc_GetItemData_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AGzWeaponActor*>                 CallFunc_GetAllWeapons_OutWeapons;                 // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6790[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzWeaponActor*                         CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6791[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvPocketId                         CallFunc_GetDedicatedPocketID_ReturnValue;         // 0x007C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind) == 0x000008, "Wrong alignment on BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind");
static_assert(sizeof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind) == 0x000088, "Wrong size on BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, EntryPoint) == 0x000000, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, K2Node_Event_OwnerController) == 0x000008, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, K2Node_DynamicCast_AsGz_Character) == 0x000020, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_GetCombatComponent_ReturnValue) == 0x000030, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_HasEquippedWeapon_ReturnValue) == 0x000038, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_HasEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000040, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_GetItemData_ReturnValue) == 0x000050, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_GetAllWeapons_OutWeapons) == 0x000058, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_GetAllWeapons_OutWeapons' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_Array_Get_Item) == 0x000070, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_GetDedicatedPocketID_ReturnValue) == 0x00007C, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_GetDedicatedPocketID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000084, "Member 'BTService_CheckWeaponKind_C_ExecuteUbergraph_BTService_CheckWeaponKind::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

}

