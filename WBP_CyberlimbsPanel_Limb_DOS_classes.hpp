#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CyberlimbsPanel_Limb_DOS

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EN_CyberlimbTextStyle_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CyberlimbsPanel_Limb_DOS.WBP_CyberlimbsPanel_Limb_DOS_C
// 0x0240 (0x0638 - 0x03F8)
class UWBP_CyberlimbsPanel_Limb_DOS_C final : public UGzCyberLimbsPanel_Limb
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       LowHealthAnimation;                                // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               ChargedAndCooldown_SizeBox;                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EmptySlotState_Image;                              // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzActionWidget*                        InputActionWidget;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Keybinding;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LimbAbilityIcon_Image;                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           LimbEnergy_ProgressBar;                            // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           LimbHealth_ProgressBar;                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LimbSlotColor_Image;                               // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           LimbType_Text;                                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quality_Image;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           StateText;                                         // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Color_LimbHealth_Okay;                             // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_LimbHealth_Damaged;                          // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_LimbHealth_Danger;                           // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     HealthAttribute;                                   // 0x0490(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayAttribute                     MaxHealthAttribute;                                // 0x04C8(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        LimbSeverelyDamagedThreshold;                      // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EnableLimbBackground;                              // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ViewTarget;                                        // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   EmptyLimbName;                                     // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           DisabledLimbBackground;                            // 0x0540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputDisabledOpacity;                              // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputDefaultOpacity;                               // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              T_AbilityIconPlaceholder;                          // 0x0558(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         AbilityIconDisabledOpacity;                        // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AbilityIconDefaultOpacity;                         // 0x0584(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           GzCharRef;                                         // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LimbDamagedThreshold;                              // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MissingLimbBackground;                             // 0x0598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           Health_Async_Task;                                 // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ChargeTag;                                         // 0x05B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzBodyPartAbilityData*                 As_Gz_Body_Part_Ability_Data;                      // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentChargePercentage;                           // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B0[0x4];                                     // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskGameplayTagAddedRemoved*    ActiveAsyncTask;                                   // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EnergyTimer;                                       // 0x05D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    ChargeAsyncTask;                                   // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EN_CyberlimbTextStyle                         Text_Style;                                        // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B1[0x7];                                     // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskGameplayTagAddedRemoved*    BackpackRechargerAsyncTask;                        // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseFillColor;                                     // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackpackRechargerFillColor;                        // 0x0600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseAbilityIconColor;                              // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasRechargerBoost;                                // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B2[0x7];                                     // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzLimbDoubleAbilityComponent*          As_Gz_Limb_Double_Ability_Component;               // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    PassiveRegenListen;                                // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ClearEnergyTimer(bool* bShouldStayActive);
	void CollapseCooldownElements();
	void ExecuteUbergraph_WBP_CyberlimbsPanel_Limb_DOS(int32 EntryPoint);
	void Get_Activation_Availability(class UGzGA_BaseLimbAbility*& Param_LimbAbility, bool* IsActive, bool* SatisfyTagRequirements);
	void Get_Limb_Icon(TSoftObjectPtr<class UTexture2D>* AbilityIcon);
	void GetAbilityData(class UGzBodyPartAbilityData** AsGz_Body_Part_Ability_Data);
	void GetCurrentChargeCooldownProgress(double* ChargeCooldownProgress);
	void GetDoubleLimbComponent(class UGzGA_BaseLimbAbility* Param_LimbAbility, class UGzLimbDoubleAbilityComponent** AsGz_Limb_Double_Ability_Component);
	double GetLimbCurrentHealth();
	class UGzItemData* GetLimbItemData();
	void GetLimbItemType(struct FGameplayTag* Output);
	double GetLimbMaxHealth();
	void HandleLimbCooldown();
	void HandleMaxPercentage();
	void HandlePercentageCooldownState(int32 Param_CurrentChargePercentage);
	void HandlePercentageUpdate();
	void HandleRechargeDone();
	void HandleRechargeWhenEmpty(class UGzGA_BaseLimbAbility* Param_LimbAbility, bool* Only_Recharge_when_Empty, bool* ReadyToRecharge);
	void InitAttributes();
	void InitializeLimbInfo();
	bool Is_Limb_Recharging();
	void IsLimbAtMaxCharges(class UGzGA_BaseLimbAbility* Param_LimbAbility, bool* LimbIsAtMaxCharges);
	bool IsLimbDamaged();
	void IsLimbOnCooldown(class UGzGA_BaseLimbAbility* Param_LimbAbility, bool* OnCooldown);
	bool IsLimbSeverlyDamaged();
	void LimbAbilityBlockedSound(const class UGameplayAbility* FailedAbility, const struct FGameplayTagContainer& FailureReasonTags);
	void LimbHasCharges(bool* bHasCharges);
	void ListenForActive();
	void ListenForCharging();
	void ListenForPercentagePassiveRegen();
	void ListenForRechargerBackpack();
	void OnActivationStateUpdated(EGzLimbWidgetState NewState);
	void OnAttributeChanged_F81225A2481F1169B334E0A9F2C216C1(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnInitialized();
	void OnLimbAbilityComponentUpdated(bool bLimbAbilityComponentValid);
	void OnLimbAbilityUpdated(bool bLimbAbilityValid);
	void OnLimbAtMaxCharges(bool bHaveMaxCharges);
	void OnLimbChargeAmountChanged(int32 NewChargeAmount, int32 PreviousChargeAmount);
	void OnLimbRecharging(bool bRecharging);
	void OnLimbUpdated(bool bLimbValid);
	void OnTagAdded_174A896A46CE757E46AC6C9D958A0398(const struct FGameplayTag& Tag);
	void OnTagAdded_979886E342A37918F238A898252A58EF(const struct FGameplayTag& Tag);
	void OnTagAdded_B57BDA014CD17D3F2554C59BF87ADDDA(const struct FGameplayTag& Tag);
	void OnTagAdded_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B(const struct FGameplayTag& Tag);
	void OnTagRemoved_174A896A46CE757E46AC6C9D958A0398(const struct FGameplayTag& Tag);
	void OnTagRemoved_979886E342A37918F238A898252A58EF(const struct FGameplayTag& Tag);
	void OnTagRemoved_B57BDA014CD17D3F2554C59BF87ADDDA(const struct FGameplayTag& Tag);
	void OnTagRemoved_F2B3FE1F4AAC6A54943DA9BDEF8DCF2B(const struct FGameplayTag& Tag);
	void OnViewTargetChanged(class APawn* Param_ViewTarget);
	void ReloadIconText_Event(class URichTextBlock* ReloadIconText, const class FText& Character);
	void SetActiveStyle();
	void SetBaseColors();
	void SetCooldownStyle();
	void SetCooldownText();
	void SetDefaultStyle();
	void SetDisabled_Style();
	void SetEmptyStyle();
	void SetRechargeBoost();
	void SetSlotBackgroundStateStyle(class UGzGA_BaseLimbAbility* Param_LimbAbility);
	void SetText(const class FText& Text);
	void SetupChargeState();
	void ShouldShowCooldownText(bool* ShowCooldownText);
	void ShowCooldownText(bool bShow);
	void TryListenForMinChargeReached();
	void TrySetViewTarget(class APawn* NewViewTarget, class APawn** View_Target);
	void UpdateBackgroundColor(bool Equiped, bool Empty);
	void UpdateChargesText();
	void UpdateEnergy();
	void UpdateLimbHealth(float NewHealth, float OldValue);
	void UpdateLimbStatus();
	void UpdateMultiChargeLimb();
	void UpdateProgress();
	void UpdateSecondaryChargeLimb();
	void UpdateSecondaryChargesText();
	void UpdateSingleChargeLimb();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CyberlimbsPanel_Limb_DOS_C">();
	}
	static class UWBP_CyberlimbsPanel_Limb_DOS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CyberlimbsPanel_Limb_DOS_C>();
	}
};
static_assert(alignof(UWBP_CyberlimbsPanel_Limb_DOS_C) == 0x000008, "Wrong alignment on UWBP_CyberlimbsPanel_Limb_DOS_C");
static_assert(sizeof(UWBP_CyberlimbsPanel_Limb_DOS_C) == 0x000638, "Wrong size on UWBP_CyberlimbsPanel_Limb_DOS_C");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, UberGraphFrame) == 0x0003F8, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, LowHealthAnimation) == 0x000400, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::LowHealthAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, ChargedAndCooldown_SizeBox) == 0x000408, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::ChargedAndCooldown_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, EmptySlotState_Image) == 0x000410, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::EmptySlotState_Image' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, InputActionWidget) == 0x000418, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::InputActionWidget' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, Keybinding) == 0x000420, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::Keybinding' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, LimbAbilityIcon_Image) == 0x000428, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::LimbAbilityIcon_Image' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, LimbEnergy_ProgressBar) == 0x000430, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::LimbEnergy_ProgressBar' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, LimbHealth_ProgressBar) == 0x000438, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::LimbHealth_ProgressBar' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, LimbSlotColor_Image) == 0x000440, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::LimbSlotColor_Image' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, LimbType_Text) == 0x000448, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::LimbType_Text' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, Quality_Image) == 0x000450, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::Quality_Image' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, StateText) == 0x000458, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::StateText' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, Color_LimbHealth_Okay) == 0x000460, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::Color_LimbHealth_Okay' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, Color_LimbHealth_Damaged) == 0x000470, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::Color_LimbHealth_Damaged' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, Color_LimbHealth_Danger) == 0x000480, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::Color_LimbHealth_Danger' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, HealthAttribute) == 0x000490, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::HealthAttribute' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, MaxHealthAttribute) == 0x0004C8, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::MaxHealthAttribute' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, AbilitySystemComponent) == 0x000500, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, InputAction) == 0x000508, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::InputAction' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, LimbSeverelyDamagedThreshold) == 0x000510, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::LimbSeverelyDamagedThreshold' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, EnableLimbBackground) == 0x000518, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::EnableLimbBackground' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, ViewTarget) == 0x000528, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::ViewTarget' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, EmptyLimbName) == 0x000530, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::EmptyLimbName' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, DisabledLimbBackground) == 0x000540, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::DisabledLimbBackground' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, InputDisabledOpacity) == 0x000550, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::InputDisabledOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, InputDefaultOpacity) == 0x000554, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::InputDefaultOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, T_AbilityIconPlaceholder) == 0x000558, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::T_AbilityIconPlaceholder' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, AbilityIconDisabledOpacity) == 0x000580, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::AbilityIconDisabledOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, AbilityIconDefaultOpacity) == 0x000584, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::AbilityIconDefaultOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, GzCharRef) == 0x000588, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::GzCharRef' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, LimbDamagedThreshold) == 0x000590, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::LimbDamagedThreshold' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, MissingLimbBackground) == 0x000598, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::MissingLimbBackground' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, Health_Async_Task) == 0x0005A8, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::Health_Async_Task' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, ChargeTag) == 0x0005B0, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::ChargeTag' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, As_Gz_Body_Part_Ability_Data) == 0x0005B8, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::As_Gz_Body_Part_Ability_Data' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, CurrentChargePercentage) == 0x0005C0, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::CurrentChargePercentage' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, ActiveAsyncTask) == 0x0005C8, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::ActiveAsyncTask' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, EnergyTimer) == 0x0005D0, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::EnergyTimer' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, ChargeAsyncTask) == 0x0005D8, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::ChargeAsyncTask' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, Text_Style) == 0x0005E0, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::Text_Style' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, BackpackRechargerAsyncTask) == 0x0005E8, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::BackpackRechargerAsyncTask' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, BaseFillColor) == 0x0005F0, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::BaseFillColor' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, BackpackRechargerFillColor) == 0x000600, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::BackpackRechargerFillColor' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, BaseAbilityIconColor) == 0x000610, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::BaseAbilityIconColor' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, bHasRechargerBoost) == 0x000620, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::bHasRechargerBoost' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, As_Gz_Limb_Double_Ability_Component) == 0x000628, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::As_Gz_Limb_Double_Ability_Component' has a wrong offset!");
static_assert(offsetof(UWBP_CyberlimbsPanel_Limb_DOS_C, PassiveRegenListen) == 0x000630, "Member 'UWBP_CyberlimbsPanel_Limb_DOS_C::PassiveRegenListen' has a wrong offset!");

}

