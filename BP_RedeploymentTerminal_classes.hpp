#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RedeploymentTerminal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RedeploymentTerminal.BP_RedeploymentTerminal_C
// 0x0130 (0x04F0 - 0x03C0)
class ABP_RedeploymentTerminal_C final : public AGzRedeploymentTerminal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_HEX_Redeployment_Terminal;                      // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Redepoyment_Terminal_holder;                    // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Redepoyment_Terminal_keyboard;                  // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PlayerLocation;                                    // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Redepoyment_Terminal_01;                        // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzMarkerComponent*                     MarkerComponent;                                   // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AGzPlayerState*>                 V_Teammates;                                       // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<struct FTransform>                     SpawnpointTransform;                               // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          CanPlayerInteract;                                 // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4B[0x7];                                     // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AGzPlayerState*>                 DeadTeammates;                                     // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AGzPlayerCharacter*                     OwnPlayerCharacter;                                // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             RedeployingTeammate;                               // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector                                SpawnOffset;                                       // 0x0458(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Redeployment_C*                    Menu;                                              // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzPingVoiceLineData                   TerminalPingVoiceLineData;                         // 0x0478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGzPingVoiceLineData                   ReviveMePingVoiceLineData;                         // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<class AGzPlayerCharacter*>             PlayersNextToTerminal;                             // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTagContainer                  PrematchTags;                                      // 0x04A8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Is_in_the_Zone;                                    // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Progress;                                       // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TerminalIsOpen;                                    // 0x04CA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4C[0x5];                                     // 0x04CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           AnimationCheckTimer;                               // 0x04D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Terminal;                                          // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Blue_Glow;                                         // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Index_BP_RedeploymentTerminal_C;                   // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overloaded;                                        // 0x04E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindEvents();
	void BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_HEX_Extractor_Sphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_RedeploymentTerminal_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable);
	void CanActivateForCurrentGameStage(bool* bCanActivate);
	bool CanScanOnAnyDistance();
	void CheckForPlayersInside();
	void ExecuteUbergraph_BP_RedeploymentTerminal(int32 EntryPoint);
	void FinishInteraction();
	void GameStageChanged();
	struct FTransform GetRedeploymentTransformOverride();
	void InitSoloGameModeState();
	bool Isn_Not_Pre_Match();
	void OnAnimationEnd();
	void OnAvailabilityChanged(bool bNewAvailable);
	void OnInteract(class AActor* Initiator);
	void OnRep_TerminalIsOpen();
	void ReceiveActiveStateChanged(bool bNewActive);
	void ReceiveBeginPlay();
	void RedeployingTeamates();
	void RedeployingTeammate__DelegateSignature();
	void TrySetActiveState(bool bDesiredActive);
	void TrySetInteractionAllowed(bool bDesiredAllowed);
	void UserConstructionScript();

	const struct FGzPingVoiceLineData GetPingVoiceLineData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RedeploymentTerminal_C">();
	}
	static class ABP_RedeploymentTerminal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RedeploymentTerminal_C>();
	}
};
static_assert(alignof(ABP_RedeploymentTerminal_C) == 0x000008, "Wrong alignment on ABP_RedeploymentTerminal_C");
static_assert(sizeof(ABP_RedeploymentTerminal_C) == 0x0004F0, "Wrong size on ABP_RedeploymentTerminal_C");
static_assert(offsetof(ABP_RedeploymentTerminal_C, UberGraphFrame) == 0x0003C0, "Member 'ABP_RedeploymentTerminal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, SM_HEX_Redeployment_Terminal) == 0x0003C8, "Member 'ABP_RedeploymentTerminal_C::SM_HEX_Redeployment_Terminal' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, SM_Redepoyment_Terminal_holder) == 0x0003D0, "Member 'ABP_RedeploymentTerminal_C::SM_Redepoyment_Terminal_holder' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, SM_Redepoyment_Terminal_keyboard) == 0x0003D8, "Member 'ABP_RedeploymentTerminal_C::SM_Redepoyment_Terminal_keyboard' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, Cube) == 0x0003E0, "Member 'ABP_RedeploymentTerminal_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, Sphere) == 0x0003E8, "Member 'ABP_RedeploymentTerminal_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, PlayerLocation) == 0x0003F0, "Member 'ABP_RedeploymentTerminal_C::PlayerLocation' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, SK_Redepoyment_Terminal_01) == 0x0003F8, "Member 'ABP_RedeploymentTerminal_C::SK_Redepoyment_Terminal_01' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, MarkerComponent) == 0x000400, "Member 'ABP_RedeploymentTerminal_C::MarkerComponent' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, V_Teammates) == 0x000408, "Member 'ABP_RedeploymentTerminal_C::V_Teammates' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, SpawnpointTransform) == 0x000418, "Member 'ABP_RedeploymentTerminal_C::SpawnpointTransform' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, CanPlayerInteract) == 0x000428, "Member 'ABP_RedeploymentTerminal_C::CanPlayerInteract' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, DeadTeammates) == 0x000430, "Member 'ABP_RedeploymentTerminal_C::DeadTeammates' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, OwnPlayerCharacter) == 0x000440, "Member 'ABP_RedeploymentTerminal_C::OwnPlayerCharacter' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, RedeployingTeammate) == 0x000448, "Member 'ABP_RedeploymentTerminal_C::RedeployingTeammate' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, SpawnOffset) == 0x000458, "Member 'ABP_RedeploymentTerminal_C::SpawnOffset' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, Menu) == 0x000470, "Member 'ABP_RedeploymentTerminal_C::Menu' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, TerminalPingVoiceLineData) == 0x000478, "Member 'ABP_RedeploymentTerminal_C::TerminalPingVoiceLineData' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, ReviveMePingVoiceLineData) == 0x000488, "Member 'ABP_RedeploymentTerminal_C::ReviveMePingVoiceLineData' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, PlayersNextToTerminal) == 0x000498, "Member 'ABP_RedeploymentTerminal_C::PlayersNextToTerminal' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, PrematchTags) == 0x0004A8, "Member 'ABP_RedeploymentTerminal_C::PrematchTags' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, Is_in_the_Zone) == 0x0004C8, "Member 'ABP_RedeploymentTerminal_C::Is_in_the_Zone' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, In_Progress) == 0x0004C9, "Member 'ABP_RedeploymentTerminal_C::In_Progress' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, TerminalIsOpen) == 0x0004CA, "Member 'ABP_RedeploymentTerminal_C::TerminalIsOpen' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, AnimationCheckTimer) == 0x0004D0, "Member 'ABP_RedeploymentTerminal_C::AnimationCheckTimer' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, Terminal) == 0x0004D8, "Member 'ABP_RedeploymentTerminal_C::Terminal' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, Blue_Glow) == 0x0004E0, "Member 'ABP_RedeploymentTerminal_C::Blue_Glow' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, Index_BP_RedeploymentTerminal_C) == 0x0004E8, "Member 'ABP_RedeploymentTerminal_C::Index_BP_RedeploymentTerminal_C' has a wrong offset!");
static_assert(offsetof(ABP_RedeploymentTerminal_C, Overloaded) == 0x0004E9, "Member 'ABP_RedeploymentTerminal_C::Overloaded' has a wrong offset!");

}

