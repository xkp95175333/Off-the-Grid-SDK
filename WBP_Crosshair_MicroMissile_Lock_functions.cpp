#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_MicroMissile_Lock

#include "Basic.hpp"

#include "WBP_Crosshair_MicroMissile_Lock_classes.hpp"
#include "WBP_Crosshair_MicroMissile_Lock_parameters.hpp"


namespace SDK
{

// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.ExecuteUbergraph_WBP_Crosshair_MicroMissile_Lock
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_MicroMissile_Lock_C::ExecuteUbergraph_WBP_Crosshair_MicroMissile_Lock(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "ExecuteUbergraph_WBP_Crosshair_MicroMissile_Lock");

	Params::WBP_Crosshair_MicroMissile_Lock_C_ExecuteUbergraph_WBP_Crosshair_MicroMissile_Lock Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.OnLockingAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::OnLockingAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "OnLockingAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.OnLockingAnimationStarted
// (BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::OnLockingAnimationStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "OnLockingAnimationStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.OnLockOnInterrupted
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::OnLockOnInterrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "OnLockOnInterrupted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.OnLockOnStatusChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewLocking                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_MicroMissile_Lock_C::OnLockOnStatusChanged(bool bNewLocking, double Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "OnLockOnStatusChanged");

	Params::WBP_Crosshair_MicroMissile_Lock_C_OnLockOnStatusChanged Parms{};

	Parms.bNewLocking = bNewLocking;
	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.OnLockOnSucceed
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::OnLockOnSucceed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "OnLockOnSucceed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.OnTargetingStopped
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::OnTargetingStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "OnTargetingStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.ResetLock
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::ResetLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "ResetLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.StartLockOnTarget
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::StartLockOnTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "StartLockOnTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.UnbindEvents
// (BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_MicroMissile_Lock_C::UnbindEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "UnbindEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.UpdateStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NeedsToContinueTick                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_MicroMissile_Lock_C::UpdateStatus(double DeltaTime, bool* NeedsToContinueTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "UpdateStatus");

	Params::WBP_Crosshair_MicroMissile_Lock_C_UpdateStatus Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (NeedsToContinueTick != nullptr)
		*NeedsToContinueTick = Parms.NeedsToContinueTick;
}


// Function WBP_Crosshair_MicroMissile_Lock.WBP_Crosshair_MicroMissile_Lock_C.GetPlaybackSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  PlaybackSpeed                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_MicroMissile_Lock_C::GetPlaybackSpeed(double* PlaybackSpeed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_MicroMissile_Lock_C", "GetPlaybackSpeed");

	Params::WBP_Crosshair_MicroMissile_Lock_C_GetPlaybackSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlaybackSpeed != nullptr)
		*PlaybackSpeed = Parms.PlaybackSpeed;
}

}

