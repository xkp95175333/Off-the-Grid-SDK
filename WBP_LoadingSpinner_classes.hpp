#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LoadingSpinner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LoadingSpinner.WBP_LoadingSpinner_C
// 0x0038 (0x0318 - 0x02E0)
class UWBP_LoadingSpinner_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Spinner_Image;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           AnimationTimerHandle;                              // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve;                                             // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         AnimationTime;                                     // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6087[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AnimationSpeedFactor;                              // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_LoadingSpinner(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LoadingSpinner_C">();
	}
	static class UWBP_LoadingSpinner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LoadingSpinner_C>();
	}
};
static_assert(alignof(UWBP_LoadingSpinner_C) == 0x000008, "Wrong alignment on UWBP_LoadingSpinner_C");
static_assert(sizeof(UWBP_LoadingSpinner_C) == 0x000318, "Wrong size on UWBP_LoadingSpinner_C");
static_assert(offsetof(UWBP_LoadingSpinner_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_LoadingSpinner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingSpinner_C, Spinner_Image) == 0x0002E8, "Member 'UWBP_LoadingSpinner_C::Spinner_Image' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingSpinner_C, AnimationTimerHandle) == 0x0002F0, "Member 'UWBP_LoadingSpinner_C::AnimationTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingSpinner_C, Curve) == 0x0002F8, "Member 'UWBP_LoadingSpinner_C::Curve' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingSpinner_C, AnimationTime) == 0x000300, "Member 'UWBP_LoadingSpinner_C::AnimationTime' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingSpinner_C, AnimationSpeedFactor) == 0x000308, "Member 'UWBP_LoadingSpinner_C::AnimationSpeedFactor' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingSpinner_C, Time) == 0x000310, "Member 'UWBP_LoadingSpinner_C::Time' has a wrong offset!");

}

