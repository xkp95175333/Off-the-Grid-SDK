#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CLA_Drone_PT_Recon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CLA_Drone_PT_Recon.ABP_CLA_Drone_PT_Recon_C
// 0x0390 (0x0700 - 0x0370)
class UABP_CLA_Drone_PT_Recon_C final : public UAnimInstance
{
public:
	uint8                                         Pad_63F1[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x03A8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0418(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0468(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0490(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x04D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x04F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0540(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0560(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x05A8(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x05C8(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0608(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0628(0x00C8)()
	bool                                          IsActivate;                                        // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStarted;                                          // 0x06F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_CLA_Drone_PT_Recon(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CLA_Drone_PT_Recon_C">();
	}
	static class UABP_CLA_Drone_PT_Recon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CLA_Drone_PT_Recon_C>();
	}
};
static_assert(alignof(UABP_CLA_Drone_PT_Recon_C) == 0x000010, "Wrong alignment on UABP_CLA_Drone_PT_Recon_C");
static_assert(sizeof(UABP_CLA_Drone_PT_Recon_C) == 0x000700, "Wrong size on UABP_CLA_Drone_PT_Recon_C");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, UberGraphFrame) == 0x000370, "Member 'UABP_CLA_Drone_PT_Recon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_Slot) == 0x0003A8, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_TransitionResult_3) == 0x0003F0, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_TransitionResult_2) == 0x000418, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_TransitionResult_1) == 0x000440, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_TransitionResult) == 0x000468, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_SequencePlayer_2) == 0x000490, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_StateResult_3) == 0x0004D8, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_SequencePlayer_1) == 0x0004F8, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_StateResult_2) == 0x000540, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_SequencePlayer) == 0x000560, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_StateResult_1) == 0x0005A8, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_SequenceEvaluator) == 0x0005C8, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_StateResult) == 0x000608, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, AnimGraphNode_StateMachine) == 0x000628, "Member 'UABP_CLA_Drone_PT_Recon_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, IsActivate) == 0x0006F0, "Member 'UABP_CLA_Drone_PT_Recon_C::IsActivate' has a wrong offset!");
static_assert(offsetof(UABP_CLA_Drone_PT_Recon_C, bStarted) == 0x0006F1, "Member 'UABP_CLA_Drone_PT_Recon_C::bStarted' has a wrong offset!");

}

