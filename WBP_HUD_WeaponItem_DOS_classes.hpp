#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_WeaponItem_DOS

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "Engine_structs.hpp"
#include "EHUD_WeaponItemState_structs.hpp"
#include "CommonInput_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_WeaponItem_DOS.WBP_HUD_WeaponItem_DOS_C
// 0x00A0 (0x03E0 - 0x0340)
class UWBP_HUD_WeaponItem_DOS_C final : public UGzHUDComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGzActionWidget*                        ActionWidget;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzActionWidget*                        ActionWidget_Controller;                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           AmmoInStock_GzText;                                // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AmmoType_Image;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DoublePressOverlay;                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EmptyBackground_Image;                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EmptyWeaponSlot_Image;                             // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        InputAction_WidgetSwitcher;                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         QualityAndAmmo_HorizontalBox;                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QualityBar_Image;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Weapon_Image;                                      // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Weapon_SizeBox;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WeaponBackground_Image;                            // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WeaponPreview_WidgetSwitcher;                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           WeaponSlot_VerticalBox;                            // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGameplayTag                           WeaponSlot;                                        // 0x03C0(0x0008)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Selected;                                       // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUD_WeaponItemState                          CurrentSlotState;                                  // 0x03D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C02[0x2];                                     // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvPocketId                         SideArmPocketID;                                   // 0x03D4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateBlockSlotState(bool bLocked);
	void DoesHaveAnyLimbs(bool* Redult);
	void ExecuteUbergraph_WBP_HUD_WeaponItem_DOS(int32 EntryPoint);
	void GetCombatComponent(class UGzCombatComponent** Result);
	class UGzInvComponent* GetInventoryComponent();
	struct FGzInvPocketId GetPocketId();
	class UGzWeaponItemData* GetWeaponItemData();
	bool HasSideArmEquipped();
	void InputMethodChanged(ECommonInputType bNewInputType);
	void IsValidWeaponInSlot(bool* bValid);
	void OnInitialized();
	void OnViewTargetChanged(class APawn* ViewTarget);
	void ReceiveBindEvents(class APawn* NewViewTarget);
	void ReceiveUnbindEvents(class APawn* OldViewTarget);
	void SetAsSelectedSlot(bool bIsSelected);
	void SetControllerActionInputVisibility(bool Param_IsVisible);
	void SetKeyBinding();
	void SetSidearmDoublePressInput();
	void SetStateActionWidget(bool bActive);
	void SetWeaponData();
	void SetWeaponSlotState(EHUD_WeaponItemState State);
	void Update_Can_Equip();
	void Update_Weapon();
	void UpdateVisualBlockSlotState();
	void UpdateWeaponAmmoInStock();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_WeaponItem_DOS_C">();
	}
	static class UWBP_HUD_WeaponItem_DOS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_WeaponItem_DOS_C>();
	}
};
static_assert(alignof(UWBP_HUD_WeaponItem_DOS_C) == 0x000008, "Wrong alignment on UWBP_HUD_WeaponItem_DOS_C");
static_assert(sizeof(UWBP_HUD_WeaponItem_DOS_C) == 0x0003E0, "Wrong size on UWBP_HUD_WeaponItem_DOS_C");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, UberGraphFrame) == 0x000340, "Member 'UWBP_HUD_WeaponItem_DOS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, ActionWidget) == 0x000348, "Member 'UWBP_HUD_WeaponItem_DOS_C::ActionWidget' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, ActionWidget_Controller) == 0x000350, "Member 'UWBP_HUD_WeaponItem_DOS_C::ActionWidget_Controller' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, AmmoInStock_GzText) == 0x000358, "Member 'UWBP_HUD_WeaponItem_DOS_C::AmmoInStock_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, AmmoType_Image) == 0x000360, "Member 'UWBP_HUD_WeaponItem_DOS_C::AmmoType_Image' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, DoublePressOverlay) == 0x000368, "Member 'UWBP_HUD_WeaponItem_DOS_C::DoublePressOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, EmptyBackground_Image) == 0x000370, "Member 'UWBP_HUD_WeaponItem_DOS_C::EmptyBackground_Image' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, EmptyWeaponSlot_Image) == 0x000378, "Member 'UWBP_HUD_WeaponItem_DOS_C::EmptyWeaponSlot_Image' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, InputAction_WidgetSwitcher) == 0x000380, "Member 'UWBP_HUD_WeaponItem_DOS_C::InputAction_WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, QualityAndAmmo_HorizontalBox) == 0x000388, "Member 'UWBP_HUD_WeaponItem_DOS_C::QualityAndAmmo_HorizontalBox' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, QualityBar_Image) == 0x000390, "Member 'UWBP_HUD_WeaponItem_DOS_C::QualityBar_Image' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, Weapon_Image) == 0x000398, "Member 'UWBP_HUD_WeaponItem_DOS_C::Weapon_Image' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, Weapon_SizeBox) == 0x0003A0, "Member 'UWBP_HUD_WeaponItem_DOS_C::Weapon_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, WeaponBackground_Image) == 0x0003A8, "Member 'UWBP_HUD_WeaponItem_DOS_C::WeaponBackground_Image' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, WeaponPreview_WidgetSwitcher) == 0x0003B0, "Member 'UWBP_HUD_WeaponItem_DOS_C::WeaponPreview_WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, WeaponSlot_VerticalBox) == 0x0003B8, "Member 'UWBP_HUD_WeaponItem_DOS_C::WeaponSlot_VerticalBox' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, WeaponSlot) == 0x0003C0, "Member 'UWBP_HUD_WeaponItem_DOS_C::WeaponSlot' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, InputAction) == 0x0003C8, "Member 'UWBP_HUD_WeaponItem_DOS_C::InputAction' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, Is_Selected) == 0x0003D0, "Member 'UWBP_HUD_WeaponItem_DOS_C::Is_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, CurrentSlotState) == 0x0003D1, "Member 'UWBP_HUD_WeaponItem_DOS_C::CurrentSlotState' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WeaponItem_DOS_C, SideArmPocketID) == 0x0003D4, "Member 'UWBP_HUD_WeaponItem_DOS_C::SideArmPocketID' has a wrong offset!");

}

