#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovementAction_NotifyState

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MovementAction_NotifyState.MovementAction_NotifyState_C.GetNotifyName
// 0x0030 (0x0030 - 0x0000)
struct MovementAction_NotifyState_C_GetNotifyName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MovementAction_NotifyState_C_GetNotifyName) == 0x000008, "Wrong alignment on MovementAction_NotifyState_C_GetNotifyName");
static_assert(sizeof(MovementAction_NotifyState_C_GetNotifyName) == 0x000030, "Wrong size on MovementAction_NotifyState_C_GetNotifyName");
static_assert(offsetof(MovementAction_NotifyState_C_GetNotifyName, ReturnValue) == 0x000000, "Member 'MovementAction_NotifyState_C_GetNotifyName::ReturnValue' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_GetNotifyName, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'MovementAction_NotifyState_C_GetNotifyName::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_GetNotifyName, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'MovementAction_NotifyState_C_GetNotifyName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function MovementAction_NotifyState.MovementAction_NotifyState_C.Received_NotifyBegin
// 0x0070 (0x0070 - 0x0000)
struct MovementAction_NotifyState_C_Received_NotifyBegin final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5758[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0018(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5759[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ILocomotionCharacterInterface> K2Node_DynamicCast_AsLocomotion_Character_Interface; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MovementAction_NotifyState_C_Received_NotifyBegin) == 0x000008, "Wrong alignment on MovementAction_NotifyState_C_Received_NotifyBegin");
static_assert(sizeof(MovementAction_NotifyState_C_Received_NotifyBegin) == 0x000070, "Wrong size on MovementAction_NotifyState_C_Received_NotifyBegin");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyBegin, MeshComp) == 0x000000, "Member 'MovementAction_NotifyState_C_Received_NotifyBegin::MeshComp' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyBegin, Animation) == 0x000008, "Member 'MovementAction_NotifyState_C_Received_NotifyBegin::Animation' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyBegin, TotalDuration) == 0x000010, "Member 'MovementAction_NotifyState_C_Received_NotifyBegin::TotalDuration' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyBegin, EventReference) == 0x000018, "Member 'MovementAction_NotifyState_C_Received_NotifyBegin::EventReference' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyBegin, ReturnValue) == 0x000048, "Member 'MovementAction_NotifyState_C_Received_NotifyBegin::ReturnValue' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyBegin, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'MovementAction_NotifyState_C_Received_NotifyBegin::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyBegin, K2Node_DynamicCast_AsLocomotion_Character_Interface) == 0x000058, "Member 'MovementAction_NotifyState_C_Received_NotifyBegin::K2Node_DynamicCast_AsLocomotion_Character_Interface' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyBegin, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'MovementAction_NotifyState_C_Received_NotifyBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MovementAction_NotifyState.MovementAction_NotifyState_C.Received_NotifyEnd
// 0x00A0 (0x00A0 - 0x0000)
struct MovementAction_NotifyState_C_Received_NotifyEnd final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLocomotionCurrentStates               Temp_struct_Variable;                              // 0x0041(0x0009)(NoDestructor)
	uint8                                         Pad_575A[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ILocomotionCharacterInterface> K2Node_DynamicCast_AsLocomotion_Character_Interface; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_BreakLocomotionCurrentStates_PawnMovementMode; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionMovementState                      CallFunc_BreakLocomotionCurrentStates_MovementState; // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionMovementState                      CallFunc_BreakLocomotionCurrentStates_PrevMovementState; // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionMovementAction                     CallFunc_BreakLocomotionCurrentStates_MovementAction; // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionRotationMode                       CallFunc_BreakLocomotionCurrentStates_RotationMode; // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               CallFunc_BreakLocomotionCurrentStates_ActualGait;  // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionStance                             CallFunc_BreakLocomotionCurrentStates_ActualStance; // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionViewMode                           CallFunc_BreakLocomotionCurrentStates_ViewMode;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionOverlayState                       CallFunc_BreakLocomotionCurrentStates_OverlayState; // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLocomotionCurrentStates               CallFunc_GetCurrentStates_States;                  // 0x0072(0x0009)(NoDestructor)
	uint8                                         Pad_575B[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ILocomotionCharacterInterface> K2Node_DynamicCast_AsLocomotion_Character_Interface_1; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MovementAction_NotifyState_C_Received_NotifyEnd) == 0x000008, "Wrong alignment on MovementAction_NotifyState_C_Received_NotifyEnd");
static_assert(sizeof(MovementAction_NotifyState_C_Received_NotifyEnd) == 0x0000A0, "Wrong size on MovementAction_NotifyState_C_Received_NotifyEnd");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, MeshComp) == 0x000000, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::MeshComp' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, Animation) == 0x000008, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::Animation' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, EventReference) == 0x000010, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::EventReference' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, ReturnValue) == 0x000040, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, Temp_struct_Variable) == 0x000041, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, K2Node_DynamicCast_AsLocomotion_Character_Interface) == 0x000058, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::K2Node_DynamicCast_AsLocomotion_Character_Interface' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_BreakLocomotionCurrentStates_PawnMovementMode) == 0x000069, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_BreakLocomotionCurrentStates_PawnMovementMode' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_BreakLocomotionCurrentStates_MovementState) == 0x00006A, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_BreakLocomotionCurrentStates_MovementState' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_BreakLocomotionCurrentStates_PrevMovementState) == 0x00006B, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_BreakLocomotionCurrentStates_PrevMovementState' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_BreakLocomotionCurrentStates_MovementAction) == 0x00006C, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_BreakLocomotionCurrentStates_MovementAction' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_BreakLocomotionCurrentStates_RotationMode) == 0x00006D, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_BreakLocomotionCurrentStates_RotationMode' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_BreakLocomotionCurrentStates_ActualGait) == 0x00006E, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_BreakLocomotionCurrentStates_ActualGait' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_BreakLocomotionCurrentStates_ActualStance) == 0x00006F, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_BreakLocomotionCurrentStates_ActualStance' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_BreakLocomotionCurrentStates_ViewMode) == 0x000070, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_BreakLocomotionCurrentStates_ViewMode' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_BreakLocomotionCurrentStates_OverlayState) == 0x000071, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_BreakLocomotionCurrentStates_OverlayState' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_GetCurrentStates_States) == 0x000072, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_GetCurrentStates_States' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_GetOwner_ReturnValue_1) == 0x000080, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, K2Node_DynamicCast_AsLocomotion_Character_Interface_1) == 0x000088, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::K2Node_DynamicCast_AsLocomotion_Character_Interface_1' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MovementAction_NotifyState_C_Received_NotifyEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000099, "Member 'MovementAction_NotifyState_C_Received_NotifyEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

