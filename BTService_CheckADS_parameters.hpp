#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_CheckADS

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BTService_CheckADS.BTService_CheckADS_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTService_CheckADS_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_CheckADS_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTService_CheckADS_C_ReceiveTickAI");
static_assert(sizeof(BTService_CheckADS_C_ReceiveTickAI) == 0x000018, "Wrong size on BTService_CheckADS_C_ReceiveTickAI");
static_assert(offsetof(BTService_CheckADS_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTService_CheckADS_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTService_CheckADS_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTService_CheckADS_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTService_CheckADS.BTService_CheckADS_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTService_CheckADS_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_CheckADS_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTService_CheckADS_C_ReceiveActivationAI");
static_assert(sizeof(BTService_CheckADS_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTService_CheckADS_C_ReceiveActivationAI");
static_assert(offsetof(BTService_CheckADS_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTService_CheckADS_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTService_CheckADS_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BTService_CheckADS.BTService_CheckADS_C.ExecuteUbergraph_BTService_CheckADS
// 0x0088 (0x0088 - 0x0000)
struct BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0018(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B4[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAbilitySystemComponent*              K2Node_DynamicCast_AsGz_Ability_System_Component;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B5[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B6[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAbilitySystemComponent*              K2Node_DynamicCast_AsGz_Ability_System_Component_1; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue_1;  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityActive_ReturnValue;              // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalculateShouldAIM_T_F;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B7[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0070(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivateAbility_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B8[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x007C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivateAbility_ReturnValue_1;         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS) == 0x000008, "Wrong alignment on BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS");
static_assert(sizeof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS) == 0x000088, "Wrong size on BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, EntryPoint) == 0x000000, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, K2Node_Event_OwnerController) == 0x000008, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, Temp_struct_Variable) == 0x000018, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000028, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, K2Node_DynamicCast_AsGz_Ability_System_Component) == 0x000030, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::K2Node_DynamicCast_AsGz_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, K2Node_Event_OwnerController_1) == 0x000040, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, K2Node_Event_ControlledPawn_1) == 0x000048, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, K2Node_Event_DeltaSeconds) == 0x000050, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x000054, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_IsValid_ReturnValue_1) == 0x000055, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000058, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, K2Node_DynamicCast_AsGz_Ability_System_Component_1) == 0x000060, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::K2Node_DynamicCast_AsGz_Ability_System_Component_1' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_TryActivateAbilityByClass_ReturnValue_1) == 0x00006A, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_TryActivateAbilityByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_IsAbilityActive_ReturnValue) == 0x00006B, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_IsAbilityActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_CalculateShouldAIM_T_F) == 0x00006C, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_CalculateShouldAIM_T_F' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, Temp_struct_Variable_1) == 0x000070, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_CanActivateAbility_ReturnValue) == 0x000078, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_CanActivateAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, Temp_struct_Variable_2) == 0x00007C, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS, CallFunc_CanActivateAbility_ReturnValue_1) == 0x000084, "Member 'BTService_CheckADS_C_ExecuteUbergraph_BTService_CheckADS::CallFunc_CanActivateAbility_ReturnValue_1' has a wrong offset!");

// Function BTService_CheckADS.BTService_CheckADS_C.CalculateShouldAIM
// 0x0010 (0x0010 - 0x0000)
struct BTService_CheckADS_C_CalculateShouldAIM final
{
public:
	class UBlackboardComponent*                   BB;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          F;                                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAim;                                         // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_CheckADS_C_CalculateShouldAIM) == 0x000008, "Wrong alignment on BTService_CheckADS_C_CalculateShouldAIM");
static_assert(sizeof(BTService_CheckADS_C_CalculateShouldAIM) == 0x000010, "Wrong size on BTService_CheckADS_C_CalculateShouldAIM");
static_assert(offsetof(BTService_CheckADS_C_CalculateShouldAIM, BB) == 0x000000, "Member 'BTService_CheckADS_C_CalculateShouldAIM::BB' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_CalculateShouldAIM, F) == 0x000008, "Member 'BTService_CheckADS_C_CalculateShouldAIM::F' has a wrong offset!");
static_assert(offsetof(BTService_CheckADS_C_CalculateShouldAIM, ShouldAim) == 0x000009, "Member 'BTService_CheckADS_C_CalculateShouldAIM::ShouldAim' has a wrong offset!");

}

