#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RangeIndicator

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_RangeIndicator.WBP_RangeIndicator_C.ExecuteUbergraph_WBP_RangeIndicator
// 0x0338 (0x0338 - 0x0000)
struct WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B1[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B2[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B3[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetViewHitResult_ReturnValue;             // 0x0088(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B4[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B5[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B6[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Divide_Int64Int64_ReturnValue;            // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Percent_Int64Int64_ReturnValue;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B7[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Subtract_Int64Int64_ReturnValue;          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0288(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0298(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02E0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0300(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0310(0x0010)()
	class FName                                   K2Node_Select_Default_1;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B8[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToInt64_InDouble_ImplicitCast; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator) == 0x000008, "Wrong alignment on WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator");
static_assert(sizeof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator) == 0x000338, "Wrong size on WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, EntryPoint) == 0x000000, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, Temp_bool_Variable) == 0x000004, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, Temp_name_Variable) == 0x000008, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, Temp_bool_Variable_1) == 0x000010, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, Temp_name_Variable_1) == 0x000014, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, K2Node_Event_MyGeometry) == 0x00001C, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, K2Node_Event_InDeltaTime) == 0x000054, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_K2_GetPawn_ReturnValue) == 0x000060, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, K2Node_DynamicCast_AsGz_Character) == 0x000070, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_GetCombatComponent_ReturnValue) == 0x000080, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_GetViewHitResult_ReturnValue) == 0x000088, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_GetViewHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_bBlockingHit) == 0x000180, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_bInitialOverlap) == 0x000181, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_Time) == 0x000184, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_Distance) == 0x000188, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_Location) == 0x000190, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_Normal) == 0x0001C0, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D8, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_BoneName) == 0x000210, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_ElementIndex) == 0x00021C, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_FaceIndex) == 0x000220, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_Conv_DoubleToInt64_ReturnValue) == 0x000258, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_Conv_DoubleToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, K2Node_Select_Default) == 0x000260, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_Divide_Int64Int64_ReturnValue) == 0x000268, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_Divide_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_Percent_Int64Int64_ReturnValue) == 0x000270, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_Percent_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000278, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_Subtract_Int64Int64_ReturnValue) == 0x000280, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_Subtract_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000288, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, K2Node_MakeStruct_FormatArgumentData) == 0x000298, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, K2Node_MakeArray_Array) == 0x0002E0, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, K2Node_MakeArray_Array_1) == 0x0002F0, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_Format_ReturnValue) == 0x000300, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_Format_ReturnValue_1) == 0x000310, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, K2Node_Select_Default_1) == 0x000320, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000328, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator, CallFunc_Conv_DoubleToInt64_InDouble_ImplicitCast) == 0x000330, "Member 'WBP_RangeIndicator_C_ExecuteUbergraph_WBP_RangeIndicator::CallFunc_Conv_DoubleToInt64_InDouble_ImplicitCast' has a wrong offset!");

// Function WBP_RangeIndicator.WBP_RangeIndicator_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_RangeIndicator_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RangeIndicator_C_Tick) == 0x000004, "Wrong alignment on WBP_RangeIndicator_C_Tick");
static_assert(sizeof(WBP_RangeIndicator_C_Tick) == 0x00003C, "Wrong size on WBP_RangeIndicator_C_Tick");
static_assert(offsetof(WBP_RangeIndicator_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_RangeIndicator_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RangeIndicator_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_RangeIndicator_C_Tick::InDeltaTime' has a wrong offset!");

}

