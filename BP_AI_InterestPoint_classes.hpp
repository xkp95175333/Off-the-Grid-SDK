#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI_InterestPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AI_InterestPoint.BP_AI_InterestPoint_C
// 0x0018 (0x02D0 - 0x02B8)
class ABP_AI_InterestPoint_C final : public AInterestPoint
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    PointIcon;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ResetTime;                                         // 0x02C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AI_InterestPoint(int32 EntryPoint);
	void DelayedFreeThePoint();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AI_InterestPoint_C">();
	}
	static class ABP_AI_InterestPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AI_InterestPoint_C>();
	}
};
static_assert(alignof(ABP_AI_InterestPoint_C) == 0x000008, "Wrong alignment on ABP_AI_InterestPoint_C");
static_assert(sizeof(ABP_AI_InterestPoint_C) == 0x0002D0, "Wrong size on ABP_AI_InterestPoint_C");
static_assert(offsetof(ABP_AI_InterestPoint_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_AI_InterestPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AI_InterestPoint_C, PointIcon) == 0x0002C0, "Member 'ABP_AI_InterestPoint_C::PointIcon' has a wrong offset!");
static_assert(offsetof(ABP_AI_InterestPoint_C, ResetTime) == 0x0002C8, "Member 'ABP_AI_InterestPoint_C::ResetTime' has a wrong offset!");

}

