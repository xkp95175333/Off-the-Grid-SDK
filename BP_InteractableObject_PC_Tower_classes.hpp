#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableObject_PC_Tower

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "E_CorpSaboStates_structs.hpp"
#include "BP_InteractionPoint_classes.hpp"
#include "G01_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InteractableObject_PC_Tower.BP_InteractableObject_PC_Tower_C
// 0x0098 (0x0368 - 0x02D0)
class ABP_InteractableObject_PC_Tower_C final : public ABP_InteractionPoint_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_InteractableObject_PC_Tower_C;   // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UInstancedStaticMeshComponent*          Disk_Instance_01;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RandomSmallWires;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RandomBigWires;                                    // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Server_01_Decals;                               // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlacementDebug;                                    // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzStaticAkComponent*                   StaticAudioServerNoise;                            // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzStaticAkComponent*                   StaticAudioChargeCountdown;                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Server_Crushed;                                    // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   C4Mesh;                                            // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzStreamableComponent*                 GzStreamable;                                      // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMissionResourceComponent*              MissionResource;                                   // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Detonation_Time;                                   // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CorpSaboStates                              TargetState;                                       // 0x033C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          OwnedByMissionParticipant;                         // 0x033D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChargeVisibility_CO;                               // 0x033E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4869[0x1];                                     // 0x033F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UStaticMesh>>     BigWiresMeshArray;                                 // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UStaticMesh>>     SmallWiresMeshArray;                               // 0x0350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          NoDiskRandomOffset;                                // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_InteractableObject_PC_Tower_GzInteractable_K2Node_ComponentBoundEvent_1_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable);
	bool CanScanOnAnyDistance();
	void ChargedExplosiveFlash();
	void Detonate_Explosive_SERVER();
	void ExecuteUbergraph_BP_InteractableObject_PC_Tower(int32 EntryPoint);
	void ExplosivePlaceholderVisibility(bool NewVisibility);
	void OnRep_TargetState();
	void ReapplyExpMeshVisibility_CO();
	void ReceiveBeginPlay();
	void ResetDiskInsMeshesToDefault();
	void SetRandomDiskInstMeshes();
	void SetRandomWireMeshes();
	void TargetCharged();
	void TargetExplosion();
	void UserConstructionScript();

	EGzDefilerTargetType GetDefilerTargetType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InteractableObject_PC_Tower_C">();
	}
	static class ABP_InteractableObject_PC_Tower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InteractableObject_PC_Tower_C>();
	}
};
static_assert(alignof(ABP_InteractableObject_PC_Tower_C) == 0x000008, "Wrong alignment on ABP_InteractableObject_PC_Tower_C");
static_assert(sizeof(ABP_InteractableObject_PC_Tower_C) == 0x000368, "Wrong size on ABP_InteractableObject_PC_Tower_C");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, UberGraphFrame_BP_InteractableObject_PC_Tower_C) == 0x0002D0, "Member 'ABP_InteractableObject_PC_Tower_C::UberGraphFrame_BP_InteractableObject_PC_Tower_C' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, Disk_Instance_01) == 0x0002D8, "Member 'ABP_InteractableObject_PC_Tower_C::Disk_Instance_01' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, RandomSmallWires) == 0x0002E0, "Member 'ABP_InteractableObject_PC_Tower_C::RandomSmallWires' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, RandomBigWires) == 0x0002E8, "Member 'ABP_InteractableObject_PC_Tower_C::RandomBigWires' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, SM_Server_01_Decals) == 0x0002F0, "Member 'ABP_InteractableObject_PC_Tower_C::SM_Server_01_Decals' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, PlacementDebug) == 0x0002F8, "Member 'ABP_InteractableObject_PC_Tower_C::PlacementDebug' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, StaticAudioServerNoise) == 0x000300, "Member 'ABP_InteractableObject_PC_Tower_C::StaticAudioServerNoise' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, StaticAudioChargeCountdown) == 0x000308, "Member 'ABP_InteractableObject_PC_Tower_C::StaticAudioChargeCountdown' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, PointLight) == 0x000310, "Member 'ABP_InteractableObject_PC_Tower_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, Server_Crushed) == 0x000318, "Member 'ABP_InteractableObject_PC_Tower_C::Server_Crushed' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, C4Mesh) == 0x000320, "Member 'ABP_InteractableObject_PC_Tower_C::C4Mesh' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, GzStreamable) == 0x000328, "Member 'ABP_InteractableObject_PC_Tower_C::GzStreamable' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, MissionResource) == 0x000330, "Member 'ABP_InteractableObject_PC_Tower_C::MissionResource' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, Detonation_Time) == 0x000338, "Member 'ABP_InteractableObject_PC_Tower_C::Detonation_Time' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, TargetState) == 0x00033C, "Member 'ABP_InteractableObject_PC_Tower_C::TargetState' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, OwnedByMissionParticipant) == 0x00033D, "Member 'ABP_InteractableObject_PC_Tower_C::OwnedByMissionParticipant' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, ChargeVisibility_CO) == 0x00033E, "Member 'ABP_InteractableObject_PC_Tower_C::ChargeVisibility_CO' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, BigWiresMeshArray) == 0x000340, "Member 'ABP_InteractableObject_PC_Tower_C::BigWiresMeshArray' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, SmallWiresMeshArray) == 0x000350, "Member 'ABP_InteractableObject_PC_Tower_C::SmallWiresMeshArray' has a wrong offset!");
static_assert(offsetof(ABP_InteractableObject_PC_Tower_C, NoDiskRandomOffset) == 0x000360, "Member 'ABP_InteractableObject_PC_Tower_C::NoDiskRandomOffset' has a wrong offset!");

}

