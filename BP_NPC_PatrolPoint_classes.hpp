#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_PatrolPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_NPCIdleMontages_structs.hpp"
#include "BP_AI_Point_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPC_PatrolPoint.BP_NPC_PatrolPoint_C
// 0x0030 (0x02F0 - 0x02C0)
class ABP_NPC_PatrolPoint_C final : public ABP_AI_Point_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_NPC_PatrolPoint_C*                  NextPatrolPoint;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	E_NPCIdleMontages                             IdleToPlay;                                        // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5141[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Event_PointMoved;                                  // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABP_NPC_PatrolPoint_C*                  NotRelevantPatrolPoint;                            // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ExecuteUbergraph_BP_NPC_PatrolPoint(int32 EntryPoint);
	void Event_PointMoved__DelegateSignature(class AActor* NextPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPC_PatrolPoint_C">();
	}
	static class ABP_NPC_PatrolPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPC_PatrolPoint_C>();
	}
};
static_assert(alignof(ABP_NPC_PatrolPoint_C) == 0x000008, "Wrong alignment on ABP_NPC_PatrolPoint_C");
static_assert(sizeof(ABP_NPC_PatrolPoint_C) == 0x0002F0, "Wrong size on ABP_NPC_PatrolPoint_C");
static_assert(offsetof(ABP_NPC_PatrolPoint_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_NPC_PatrolPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NPC_PatrolPoint_C, NextPatrolPoint) == 0x0002C8, "Member 'ABP_NPC_PatrolPoint_C::NextPatrolPoint' has a wrong offset!");
static_assert(offsetof(ABP_NPC_PatrolPoint_C, IdleToPlay) == 0x0002D0, "Member 'ABP_NPC_PatrolPoint_C::IdleToPlay' has a wrong offset!");
static_assert(offsetof(ABP_NPC_PatrolPoint_C, Event_PointMoved) == 0x0002D8, "Member 'ABP_NPC_PatrolPoint_C::Event_PointMoved' has a wrong offset!");
static_assert(offsetof(ABP_NPC_PatrolPoint_C, NotRelevantPatrolPoint) == 0x0002E8, "Member 'ABP_NPC_PatrolPoint_C::NotRelevantPatrolPoint' has a wrong offset!");

}

