#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Phosphorous_Dart

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Phosphorous_Dart.GA_Phosphorous_Dart_C
// 0x0160 (0x07D8 - 0x0678)
class UGA_Phosphorous_Dart_C final : public UGzGA_BaseLimbAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AGzMultiPartCharacter*                  As_Gz_Multi_Part_Character;                        // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_Phosphorous_Dart_Projectile_C*      ExplosiveDart;                                     // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SocketLocation;                                    // 0x0690(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Phosphorous_Dart_Component_C*       As_BP_Explosive_Dart_Component;                    // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Launch_Position;                                   // 0x06B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x06C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x06E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithDebug;                                         // 0x06E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6232[0x3];                                     // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAT_WaitCustomInputRelease*           WaitInputReleaseTask;                              // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadius;                                   // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6233[0x4];                                     // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x06F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0710(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FActiveGameplayEffectHandle            ChargingEffect;                                    // 0x0738(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ReloadTime;                                        // 0x0740(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6234[0x4];                                     // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAT_WaitCustomInputPress*             Async_Task;                                        // 0x0748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     GzPlayerCharacter;                                 // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            AimingEfect;                                       // 0x0758(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ReadyTag;                                          // 0x0760(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ChargingTag;                                       // 0x0768(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ShootTag;                                          // 0x0770(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ReloadTag;                                         // 0x0778(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DeactivationTag;                                   // 0x0780(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      ChargeSmoke;                                       // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TargetLocationTimerHandle;                         // 0x0790(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      ChargeSparks;                                      // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnRightOffset;                                  // 0x07A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LimbHealthUponChargeStart;                         // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentLimbDamage;                                 // 0x07BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageToDestroyDart;                               // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6235[0x4];                                     // 0x07C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskAttributeChanged*           ListenForDamageTask;                               // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ChargeEffectHandler;                               // 0x07D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CalculateLaunchParams(const struct FHitResult& Hit, struct FVector* LaunchLocation, struct FVector* LaunchDirection, double* LaunchSpeed, double* GravityScale);
	void ClientCharge();
	void DetonateDartIfDamagedArm(double NewHealthValue);
	void ExecuteUbergraph_GA_Phosphorous_Dart(int32 EntryPoint);
	void FireDart();
	void FireMissile(const struct FGameplayAbilityTargetDataHandle& HitResult);
	void Get_Sockets(EGzLimbType Type, class AGzMultiPartCharacter* Target, struct FVector* Location, struct FRotator* Rotation, class FName* SocketName);
	struct FVector GetMissileDirection(const struct FHitResult& Hit);
	void Holster_and_Aim();
	bool IsLocal();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void MakeAndSendDataToServer();
	void OnInput_A99436DB4130813D00BDDBBB953728B9(float Time);
	void OnInput_BEB4D64E4E267787F713BABC8DD80BEF(float Time);
	void OnSync_2B190A114ADAD1646D072A96C8C53E83();
	void OnSync_47676D0D4C787225B290A09B14CA27FC();
	void OnSync_694937294D95DC624647A5A35123EBD3();
	void OnSync_7AB258FC41AF101E254CB795268C2878();
	void OnSync_F41F3CB643E7F21A18738D932EAAAF9A();
	void ReloadDart();
	void SendSpawnTransformToServer();
	void SendTargetDataFromViewHitResult();
	void SetAimingTargetLocation();
	void SetCameraMode(const struct FGameplayTag& LeftArmCameraModeTag, bool bWithInterpolation, const struct FGameplayTag& RightArmCameraModeTag);
	void SetExplosiveDartRefs();
	void SpawnChargeSparks();
	void SpawnExplosiveDart(const struct FHitResult& HitResult);
	void StartCharge(const TDelegate<void()>& Delegate);
	void ValidData_785A7189420676B668931EA4A7BE98FC(const struct FGameplayAbilityTargetDataHandle& Param_Data);
	void ValidData_FCC6CB9246E78371DA20EFBCBB507B6F(const struct FGameplayAbilityTargetDataHandle& Param_Data);

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Phosphorous_Dart_C">();
	}
	static class UGA_Phosphorous_Dart_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Phosphorous_Dart_C>();
	}
};
static_assert(alignof(UGA_Phosphorous_Dart_C) == 0x000008, "Wrong alignment on UGA_Phosphorous_Dart_C");
static_assert(sizeof(UGA_Phosphorous_Dart_C) == 0x0007D8, "Wrong size on UGA_Phosphorous_Dart_C");
static_assert(offsetof(UGA_Phosphorous_Dart_C, UberGraphFrame) == 0x000678, "Member 'UGA_Phosphorous_Dart_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, As_Gz_Multi_Part_Character) == 0x000680, "Member 'UGA_Phosphorous_Dart_C::As_Gz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ExplosiveDart) == 0x000688, "Member 'UGA_Phosphorous_Dart_C::ExplosiveDart' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, SocketLocation) == 0x000690, "Member 'UGA_Phosphorous_Dart_C::SocketLocation' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, As_BP_Explosive_Dart_Component) == 0x0006A8, "Member 'UGA_Phosphorous_Dart_C::As_BP_Explosive_Dart_Component' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, Launch_Position) == 0x0006B0, "Member 'UGA_Phosphorous_Dart_C::Launch_Position' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, Direction) == 0x0006C8, "Member 'UGA_Phosphorous_Dart_C::Direction' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, Speed) == 0x0006E0, "Member 'UGA_Phosphorous_Dart_C::Speed' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, WithDebug) == 0x0006E4, "Member 'UGA_Phosphorous_Dart_C::WithDebug' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, WaitInputReleaseTask) == 0x0006E8, "Member 'UGA_Phosphorous_Dart_C::WaitInputReleaseTask' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ExplosionRadius) == 0x0006F0, "Member 'UGA_Phosphorous_Dart_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, EffectContext) == 0x0006F8, "Member 'UGA_Phosphorous_Dart_C::EffectContext' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, Data) == 0x000710, "Member 'UGA_Phosphorous_Dart_C::Data' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ChargingEffect) == 0x000738, "Member 'UGA_Phosphorous_Dart_C::ChargingEffect' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ReloadTime) == 0x000740, "Member 'UGA_Phosphorous_Dart_C::ReloadTime' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, Async_Task) == 0x000748, "Member 'UGA_Phosphorous_Dart_C::Async_Task' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, GzPlayerCharacter) == 0x000750, "Member 'UGA_Phosphorous_Dart_C::GzPlayerCharacter' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, AimingEfect) == 0x000758, "Member 'UGA_Phosphorous_Dart_C::AimingEfect' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ReadyTag) == 0x000760, "Member 'UGA_Phosphorous_Dart_C::ReadyTag' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ChargingTag) == 0x000768, "Member 'UGA_Phosphorous_Dart_C::ChargingTag' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ShootTag) == 0x000770, "Member 'UGA_Phosphorous_Dart_C::ShootTag' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ReloadTag) == 0x000778, "Member 'UGA_Phosphorous_Dart_C::ReloadTag' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, DeactivationTag) == 0x000780, "Member 'UGA_Phosphorous_Dart_C::DeactivationTag' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ChargeSmoke) == 0x000788, "Member 'UGA_Phosphorous_Dart_C::ChargeSmoke' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, TargetLocationTimerHandle) == 0x000790, "Member 'UGA_Phosphorous_Dart_C::TargetLocationTimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ChargeSparks) == 0x000798, "Member 'UGA_Phosphorous_Dart_C::ChargeSparks' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, SpawnRightOffset) == 0x0007A0, "Member 'UGA_Phosphorous_Dart_C::SpawnRightOffset' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, LimbHealthUponChargeStart) == 0x0007B8, "Member 'UGA_Phosphorous_Dart_C::LimbHealthUponChargeStart' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, CurrentLimbDamage) == 0x0007BC, "Member 'UGA_Phosphorous_Dart_C::CurrentLimbDamage' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, DamageToDestroyDart) == 0x0007C0, "Member 'UGA_Phosphorous_Dart_C::DamageToDestroyDart' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ListenForDamageTask) == 0x0007C8, "Member 'UGA_Phosphorous_Dart_C::ListenForDamageTask' has a wrong offset!");
static_assert(offsetof(UGA_Phosphorous_Dart_C, ChargeEffectHandler) == 0x0007D0, "Member 'UGA_Phosphorous_Dart_C::ChargeEffectHandler' has a wrong offset!");

}

