#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBP_DestructibleAsset

#include "Basic.hpp"

#include "DBP_DestructibleAsset_classes.hpp"
#include "DBP_DestructibleAsset_parameters.hpp"


namespace SDK
{

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.BP_ClientOnDiedPlayFx
// (BlueprintCosmetic, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          LastHitLocation                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_DestructibleAsset_C::BP_ClientOnDiedPlayFx(const struct FVector& LastHitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "BP_ClientOnDiedPlayFx");

	Params::DBP_DestructibleAsset_C_BP_ClientOnDiedPlayFx Parms{};

	Parms.LastHitLocation = std::move(LastHitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.BP_OnHealthChange
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_DestructibleAsset_C::BP_OnHealthChange(float Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "BP_OnHealthChange");

	Params::DBP_DestructibleAsset_C_BP_OnHealthChange Parms{};

	Parms.Health = Health;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.BP_OnHitApplied
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ADBP_DestructibleAsset_C::BP_OnHitApplied(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "BP_OnHitApplied");

	Params::DBP_DestructibleAsset_C_BP_OnHitApplied Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.DoDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ADBP_DestructibleAsset_C::DoDamage(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "DoDamage");

	Params::DBP_DestructibleAsset_C_DoDamage Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.ExecuteUbergraph_DBP_DestructibleAsset
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_DestructibleAsset_C::ExecuteUbergraph_DBP_DestructibleAsset(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "ExecuteUbergraph_DBP_DestructibleAsset");

	Params::DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.OnDied
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADBP_DestructibleAsset_C::OnDied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "OnDied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.PlayExplosionFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_DestructibleAsset_C::PlayExplosionFX(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "PlayExplosionFX");

	Params::DBP_DestructibleAsset_C_PlayExplosionFX Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.TryDestroyOriginalMesh
// (Public, BlueprintCallable, BlueprintEvent)

void ADBP_DestructibleAsset_C::TryDestroyOriginalMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "TryDestroyOriginalMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.TrySetupRenderTarget
// (Public, BlueprintCallable, BlueprintEvent)

void ADBP_DestructibleAsset_C::TrySetupRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "TrySetupRenderTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.UpdateDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ADBP_DestructibleAsset_C::UpdateDamage(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "UpdateDamage");

	Params::DBP_DestructibleAsset_C_UpdateDamage Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADBP_DestructibleAsset_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.CanAttachTo
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ADBP_DestructibleAsset_C::CanAttachTo(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "CanAttachTo");

	Params::DBP_DestructibleAsset_C_CanAttachTo Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.IsValidAttachment
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ADBP_DestructibleAsset_C::IsValidAttachment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_DestructibleAsset_C", "IsValidAttachment");

	Params::DBP_DestructibleAsset_C_IsValidAttachment Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

