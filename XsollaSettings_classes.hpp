#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaSettings

#include "Basic.hpp"

#include "XsollaSettings_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class XsollaSettings.XsollaProjectSettings
// 0x0128 (0x0150 - 0x0028)
class UXsollaProjectSettings final : public UObject
{
public:
	class FString                                 ProjectID;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoginID;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ClientID;                                          // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RedirectUri;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EncryptCachedCredentials;                          // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_280D[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 XsollaSaveEncryptionKey;                           // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SendPasswordlessAuthURL;                           // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_280E[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PasswordlessAuthURL;                               // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UsePlatformBrowser;                                // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableSandbox;                                     // 0x0099(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_280F[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WebStoreURL;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FacebookAppId;                                     // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FacebookClientToken;                               // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GoogleAppId;                                       // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 WeChatAppId;                                       // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 QQAppId;                                           // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PaymentInterfaceThemeId;                           // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXsollaPaymentUiSize                          PaymentInterfaceSize;                              // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXsollaPaymentUiVersion                       PaymentInterfaceVersion;                           // 0x0111(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseSettingsFromPublisherAccount;                   // 0x0112(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2810[0x5];                                     // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnUrl;                                         // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXsollaPaymentRedirectCondition               RedirectCondition;                                 // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2811[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RedirectDelay;                                     // 0x012C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXsollaPaymentRedirectStatusManual            RedirectStatusManual;                              // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2812[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RedirectButtonCaption;                             // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BuildForSteam;                                     // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2813[0x7];                                     // 0x0149(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaProjectSettings">();
	}
	static class UXsollaProjectSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaProjectSettings>();
	}
};
static_assert(alignof(UXsollaProjectSettings) == 0x000008, "Wrong alignment on UXsollaProjectSettings");
static_assert(sizeof(UXsollaProjectSettings) == 0x000150, "Wrong size on UXsollaProjectSettings");
static_assert(offsetof(UXsollaProjectSettings, ProjectID) == 0x000028, "Member 'UXsollaProjectSettings::ProjectID' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, LoginID) == 0x000038, "Member 'UXsollaProjectSettings::LoginID' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, ClientID) == 0x000048, "Member 'UXsollaProjectSettings::ClientID' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, RedirectUri) == 0x000058, "Member 'UXsollaProjectSettings::RedirectUri' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, EncryptCachedCredentials) == 0x000068, "Member 'UXsollaProjectSettings::EncryptCachedCredentials' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, XsollaSaveEncryptionKey) == 0x000070, "Member 'UXsollaProjectSettings::XsollaSaveEncryptionKey' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, SendPasswordlessAuthURL) == 0x000080, "Member 'UXsollaProjectSettings::SendPasswordlessAuthURL' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, PasswordlessAuthURL) == 0x000088, "Member 'UXsollaProjectSettings::PasswordlessAuthURL' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, UsePlatformBrowser) == 0x000098, "Member 'UXsollaProjectSettings::UsePlatformBrowser' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, EnableSandbox) == 0x000099, "Member 'UXsollaProjectSettings::EnableSandbox' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, WebStoreURL) == 0x0000A0, "Member 'UXsollaProjectSettings::WebStoreURL' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, FacebookAppId) == 0x0000B0, "Member 'UXsollaProjectSettings::FacebookAppId' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, FacebookClientToken) == 0x0000C0, "Member 'UXsollaProjectSettings::FacebookClientToken' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, GoogleAppId) == 0x0000D0, "Member 'UXsollaProjectSettings::GoogleAppId' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, WeChatAppId) == 0x0000E0, "Member 'UXsollaProjectSettings::WeChatAppId' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, QQAppId) == 0x0000F0, "Member 'UXsollaProjectSettings::QQAppId' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, PaymentInterfaceThemeId) == 0x000100, "Member 'UXsollaProjectSettings::PaymentInterfaceThemeId' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, PaymentInterfaceSize) == 0x000110, "Member 'UXsollaProjectSettings::PaymentInterfaceSize' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, PaymentInterfaceVersion) == 0x000111, "Member 'UXsollaProjectSettings::PaymentInterfaceVersion' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, UseSettingsFromPublisherAccount) == 0x000112, "Member 'UXsollaProjectSettings::UseSettingsFromPublisherAccount' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, ReturnUrl) == 0x000118, "Member 'UXsollaProjectSettings::ReturnUrl' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, RedirectCondition) == 0x000128, "Member 'UXsollaProjectSettings::RedirectCondition' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, RedirectDelay) == 0x00012C, "Member 'UXsollaProjectSettings::RedirectDelay' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, RedirectStatusManual) == 0x000130, "Member 'UXsollaProjectSettings::RedirectStatusManual' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, RedirectButtonCaption) == 0x000138, "Member 'UXsollaProjectSettings::RedirectButtonCaption' has a wrong offset!");
static_assert(offsetof(UXsollaProjectSettings, BuildForSteam) == 0x000148, "Member 'UXsollaProjectSettings::BuildForSteam' has a wrong offset!");

// Class XsollaSettings.XsollaSettingsLibrary
// 0x0000 (0x0028 - 0x0028)
class UXsollaSettingsLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UXsollaProjectSettings* GetProjectSettings();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaSettingsLibrary">();
	}
	static class UXsollaSettingsLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaSettingsLibrary>();
	}
};
static_assert(alignof(UXsollaSettingsLibrary) == 0x000008, "Wrong alignment on UXsollaSettingsLibrary");
static_assert(sizeof(UXsollaSettingsLibrary) == 0x000028, "Wrong size on UXsollaSettingsLibrary");

}

