#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TeamGameOver

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_TeamGameOver.WBP_TeamGameOver_C.UpdateRank
// 0x0128 (0x0128 - 0x0000)
struct WBP_TeamGameOver_C_UpdateRank final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    K2Node_DynamicCast_AsGz_Player_Controller;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B0[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzMatchResult                         CallFunc_GetMatchResult_ReturnValue;               // 0x0020(0x0090)(ConstParm)
	bool                                          CallFunc_IsMatchResultSet_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B1[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0010)()
};
static_assert(alignof(WBP_TeamGameOver_C_UpdateRank) == 0x000008, "Wrong alignment on WBP_TeamGameOver_C_UpdateRank");
static_assert(sizeof(WBP_TeamGameOver_C_UpdateRank) == 0x000128, "Wrong size on WBP_TeamGameOver_C_UpdateRank");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_TeamGameOver_C_UpdateRank::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000008, "Member 'WBP_TeamGameOver_C_UpdateRank::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, K2Node_DynamicCast_AsGz_Player_Controller) == 0x000010, "Member 'WBP_TeamGameOver_C_UpdateRank::K2Node_DynamicCast_AsGz_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_TeamGameOver_C_UpdateRank::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_TeamGameOver_C_UpdateRank::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, CallFunc_GetMatchResult_ReturnValue) == 0x000020, "Member 'WBP_TeamGameOver_C_UpdateRank::CallFunc_GetMatchResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, CallFunc_IsMatchResultSet_ReturnValue) == 0x0000B0, "Member 'WBP_TeamGameOver_C_UpdateRank::CallFunc_IsMatchResultSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000B8, "Member 'WBP_TeamGameOver_C_UpdateRank::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, K2Node_MakeStruct_FormatArgumentData) == 0x0000C0, "Member 'WBP_TeamGameOver_C_UpdateRank::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, K2Node_MakeArray_Array) == 0x000108, "Member 'WBP_TeamGameOver_C_UpdateRank::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_UpdateRank, CallFunc_Format_ReturnValue) == 0x000118, "Member 'WBP_TeamGameOver_C_UpdateRank::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_TeamGameOver.WBP_TeamGameOver_C.OnMatchResult
// 0x0008 (0x0008 - 0x0000)
struct WBP_TeamGameOver_C_OnMatchResult final
{
public:
	class AGzPlayerController*                    PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TeamGameOver_C_OnMatchResult) == 0x000008, "Wrong alignment on WBP_TeamGameOver_C_OnMatchResult");
static_assert(sizeof(WBP_TeamGameOver_C_OnMatchResult) == 0x000008, "Wrong size on WBP_TeamGameOver_C_OnMatchResult");
static_assert(offsetof(WBP_TeamGameOver_C_OnMatchResult, PlayerController) == 0x000000, "Member 'WBP_TeamGameOver_C_OnMatchResult::PlayerController' has a wrong offset!");

// Function WBP_TeamGameOver.WBP_TeamGameOver_C.ExecuteUbergraph_WBP_TeamGameOver
// 0x0030 (0x0030 - 0x0000)
struct WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    K2Node_DynamicCast_AsGz_Player_Controller;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver) == 0x000008, "Wrong alignment on WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver");
static_assert(sizeof(WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver) == 0x000030, "Wrong size on WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver");
static_assert(offsetof(WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver, EntryPoint) == 0x000000, "Member 'WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver, K2Node_DynamicCast_AsGz_Player_Controller) == 0x000020, "Member 'WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver::K2Node_DynamicCast_AsGz_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_TeamGameOver_C_ExecuteUbergraph_WBP_TeamGameOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

