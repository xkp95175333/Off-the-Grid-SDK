#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SquadScreen_MuteButton

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_SquadScreen_MuteButton.WBP_SquadScreen_MuteButton_C.UpdateButtonIcon
// 0x0028 (0x0028 - 0x0000)
struct WBP_SquadScreen_MuteButton_C_UpdateButtonIcon final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B23[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerBlocked_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B24[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MuteButton_C_UpdateButtonIcon) == 0x000008, "Wrong alignment on WBP_SquadScreen_MuteButton_C_UpdateButtonIcon");
static_assert(sizeof(WBP_SquadScreen_MuteButton_C_UpdateButtonIcon) == 0x000028, "Wrong size on WBP_SquadScreen_MuteButton_C_UpdateButtonIcon");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_UpdateButtonIcon, Temp_bool_Variable) == 0x000000, "Member 'WBP_SquadScreen_MuteButton_C_UpdateButtonIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_UpdateButtonIcon, Temp_object_Variable) == 0x000008, "Member 'WBP_SquadScreen_MuteButton_C_UpdateButtonIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_UpdateButtonIcon, Temp_object_Variable_1) == 0x000010, "Member 'WBP_SquadScreen_MuteButton_C_UpdateButtonIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_UpdateButtonIcon, CallFunc_IsEmpty_ReturnValue) == 0x000018, "Member 'WBP_SquadScreen_MuteButton_C_UpdateButtonIcon::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_UpdateButtonIcon, CallFunc_IsPlayerBlocked_ReturnValue) == 0x000019, "Member 'WBP_SquadScreen_MuteButton_C_UpdateButtonIcon::CallFunc_IsPlayerBlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_UpdateButtonIcon, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'WBP_SquadScreen_MuteButton_C_UpdateButtonIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_UpdateButtonIcon, K2Node_Select_Default) == 0x000020, "Member 'WBP_SquadScreen_MuteButton_C_UpdateButtonIcon::K2Node_Select_Default' has a wrong offset!");

// Function WBP_SquadScreen_MuteButton.WBP_SquadScreen_MuteButton_C.TogglePlayerMutedState
// 0x0003 (0x0003 - 0x0000)
struct WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState final
{
public:
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerBlocked_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState) == 0x000001, "Wrong alignment on WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState");
static_assert(sizeof(WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState) == 0x000003, "Wrong size on WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState, CallFunc_IsEmpty_ReturnValue) == 0x000000, "Member 'WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState, CallFunc_IsPlayerBlocked_ReturnValue) == 0x000002, "Member 'WBP_SquadScreen_MuteButton_C_TogglePlayerMutedState::CallFunc_IsPlayerBlocked_ReturnValue' has a wrong offset!");

// Function WBP_SquadScreen_MuteButton.WBP_SquadScreen_MuteButton_C.SetPlayer
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadScreen_MuteButton_C_SetPlayer final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MuteButton_C_SetPlayer) == 0x000008, "Wrong alignment on WBP_SquadScreen_MuteButton_C_SetPlayer");
static_assert(sizeof(WBP_SquadScreen_MuteButton_C_SetPlayer) == 0x000008, "Wrong size on WBP_SquadScreen_MuteButton_C_SetPlayer");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_SetPlayer, PlayerState) == 0x000000, "Member 'WBP_SquadScreen_MuteButton_C_SetPlayer::PlayerState' has a wrong offset!");

// Function WBP_SquadScreen_MuteButton.WBP_SquadScreen_MuteButton_C.Init
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadScreen_MuteButton_C_Init final
{
public:
	class AGzPlayerState*                         PS;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MuteButton_C_Init) == 0x000008, "Wrong alignment on WBP_SquadScreen_MuteButton_C_Init");
static_assert(sizeof(WBP_SquadScreen_MuteButton_C_Init) == 0x000008, "Wrong size on WBP_SquadScreen_MuteButton_C_Init");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_Init, PS) == 0x000000, "Member 'WBP_SquadScreen_MuteButton_C_Init::PS' has a wrong offset!");

// Function WBP_SquadScreen_MuteButton.WBP_SquadScreen_MuteButton_C.ExecuteUbergraph_WBP_SquadScreen_MuteButton
// 0x0028 (0x0028 - 0x0000)
struct WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B25[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         K2Node_CustomEvent_PS;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B26[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEpicProductUserId_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton) == 0x000008, "Wrong alignment on WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton");
static_assert(sizeof(WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton) == 0x000028, "Wrong size on WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton, EntryPoint) == 0x000000, "Member 'WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton, K2Node_CustomEvent_PS) == 0x000008, "Member 'WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton::K2Node_CustomEvent_PS' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton, CallFunc_GetEpicProductUserId_ReturnValue) == 0x000018, "Member 'WBP_SquadScreen_MuteButton_C_ExecuteUbergraph_WBP_SquadScreen_MuteButton::CallFunc_GetEpicProductUserId_ReturnValue' has a wrong offset!");

}

