#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_GorillaPassive_RightThruster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_classes.hpp"
#include "G01_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_GorillaPassive_RightThruster.GC_GorillaPassive_RightThruster_C
// 0x0020 (0x0EC8 - 0x0EA8)
class AGC_GorillaPassive_RightThruster_C final : public AGameplayCueNotify_Looping
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0EA8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      PassiveThruster;                                   // 0x0EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ThrusterMaterial;                                  // 0x0EB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMovieGraphMaterialModifier*            GorillaMaterial;                                   // 0x0EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GC_GorillaPassive_RightThruster(int32 EntryPoint);
	void OnApplication(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);
	void OnRemoval(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_GorillaPassive_RightThruster_C">();
	}
	static class AGC_GorillaPassive_RightThruster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_GorillaPassive_RightThruster_C>();
	}
};
static_assert(alignof(AGC_GorillaPassive_RightThruster_C) == 0x000008, "Wrong alignment on AGC_GorillaPassive_RightThruster_C");
static_assert(sizeof(AGC_GorillaPassive_RightThruster_C) == 0x000EC8, "Wrong size on AGC_GorillaPassive_RightThruster_C");
static_assert(offsetof(AGC_GorillaPassive_RightThruster_C, UberGraphFrame) == 0x000EA8, "Member 'AGC_GorillaPassive_RightThruster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_GorillaPassive_RightThruster_C, PassiveThruster) == 0x000EB0, "Member 'AGC_GorillaPassive_RightThruster_C::PassiveThruster' has a wrong offset!");
static_assert(offsetof(AGC_GorillaPassive_RightThruster_C, ThrusterMaterial) == 0x000EB8, "Member 'AGC_GorillaPassive_RightThruster_C::ThrusterMaterial' has a wrong offset!");
static_assert(offsetof(AGC_GorillaPassive_RightThruster_C, GorillaMaterial) == 0x000EC0, "Member 'AGC_GorillaPassive_RightThruster_C::GorillaMaterial' has a wrong offset!");

}

