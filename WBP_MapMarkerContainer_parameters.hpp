#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapMarkerContainer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.ExecuteUbergraph_WBP_MapMarkerContainer
// 0x0050 (0x0050 - 0x0000)
struct WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B02[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzMarkerWidget*                        K2Node_Event_MarkerWidget;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzMarkerComponent*                     K2Node_Event_MarkerComponent;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MapMarker_Player_C*                K2Node_DynamicCast_AsWBP_Map_Marker_Player;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B03[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_TeamAttitude;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B04[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         CallFunc_GetPersistentPlayerState_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexInTeam_OutputPin;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer");
static_assert(sizeof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer) == 0x000050, "Wrong size on WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, EntryPoint) == 0x000000, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, K2Node_Event_MarkerWidget) == 0x000008, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::K2Node_Event_MarkerWidget' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, K2Node_Event_MarkerComponent) == 0x000010, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::K2Node_Event_MarkerComponent' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, K2Node_DynamicCast_AsWBP_Map_Marker_Player) == 0x000018, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::K2Node_DynamicCast_AsWBP_Map_Marker_Player' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, K2Node_DynamicCast_AsGz_Character) == 0x000030, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, CallFunc_GetTeamAttitude_TeamAttitude) == 0x000039, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::CallFunc_GetTeamAttitude_TeamAttitude' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, CallFunc_IsLocallyControlled_ReturnValue) == 0x00003A, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, CallFunc_GetPersistentPlayerState_ReturnValue) == 0x000040, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::CallFunc_GetPersistentPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer, CallFunc_GetIndexInTeam_OutputPin) == 0x000048, "Member 'WBP_MapMarkerContainer_C_ExecuteUbergraph_WBP_MapMarkerContainer::CallFunc_GetIndexInTeam_OutputPin' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.GetMarkerLocation
// 0x0040 (0x0040 - 0x0000)
struct WBP_MapMarkerContainer_C_GetMarkerLocation final
{
public:
	const class UGzMarkerComponent*               MarkerComponent;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_GetMarkerLocation) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_GetMarkerLocation");
static_assert(sizeof(WBP_MapMarkerContainer_C_GetMarkerLocation) == 0x000040, "Wrong size on WBP_MapMarkerContainer_C_GetMarkerLocation");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerLocation, MarkerComponent) == 0x000000, "Member 'WBP_MapMarkerContainer_C_GetMarkerLocation::MarkerComponent' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerLocation, ReturnValue) == 0x000008, "Member 'WBP_MapMarkerContainer_C_GetMarkerLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'WBP_MapMarkerContainer_C_GetMarkerLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerLocation, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000030, "Member 'WBP_MapMarkerContainer_C_GetMarkerLocation::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.GetMarkerRotation
// 0x0098 (0x0098 - 0x0000)
struct WBP_MapMarkerContainer_C_GetMarkerRotation final
{
public:
	const class UGzMarkerComponent*               MarkerComponent;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B05[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B06[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B07[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePlayerMarkerRotationForRemoteClient_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B08[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B09[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_GetMarkerRotation) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_GetMarkerRotation");
static_assert(sizeof(WBP_MapMarkerContainer_C_GetMarkerRotation) == 0x000098, "Wrong size on WBP_MapMarkerContainer_C_GetMarkerRotation");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, MarkerComponent) == 0x000000, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::MarkerComponent' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, ReturnValue) == 0x000008, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000010, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, K2Node_DynamicCast_AsPawn) == 0x000040, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_CalculatePlayerMarkerRotationForRemoteClient_ReturnValue) == 0x000050, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_CalculatePlayerMarkerRotationForRemoteClient_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_GetControlRotation_ReturnValue) == 0x000068, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_BreakRotator_Roll_1) == 0x000084, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_BreakRotator_Pitch_1) == 0x000088, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, CallFunc_BreakRotator_Yaw_1) == 0x00008C, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetMarkerRotation, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000090, "Member 'WBP_MapMarkerContainer_C_GetMarkerRotation::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.GetRelativeLocalPlayerState
// 0x0078 (0x0078 - 0x0000)
struct WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState final
{
public:
	class APlayerState*                           OutPlayerState;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    K2Node_DynamicCast_AsGz_Player_Controller;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B0A[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B0B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzSpectatorPawn*                       K2Node_DynamicCast_AsGz_Spectator_Pawn;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B0C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetSpectatedPawn_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B0D[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzPlayerViewTargetInterface> K2Node_DynamicCast_AsGz_Player_View_Target_Interface; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B0E[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         CallFunc_GetViewTargetPlayerState_ReturnValue;     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState");
static_assert(sizeof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState) == 0x000078, "Wrong size on WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, OutPlayerState) == 0x000000, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::OutPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_AsGz_Player_Controller) == 0x000010, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_AsGz_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000020, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_AsGz_Spectator_Pawn) == 0x000030, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_AsGz_Spectator_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, CallFunc_GetSpectatedPawn_ReturnValue) == 0x000040, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::CallFunc_GetSpectatedPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, CallFunc_IsValid_ReturnValue_3) == 0x000051, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_AsGz_Player_View_Target_Interface) == 0x000058, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_AsGz_Player_View_Target_Interface' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState, CallFunc_GetViewTargetPlayerState_ReturnValue) == 0x000070, "Member 'WBP_MapMarkerContainer_C_GetRelativeLocalPlayerState::CallFunc_GetViewTargetPlayerState_ReturnValue' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.GetTeamAttitude
// 0x0020 (0x0020 - 0x0000)
struct WBP_MapMarkerContainer_C_GetTeamAttitude final
{
public:
	class AActor*                                 InPlayerState;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 TeamAttitude;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B0F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetRelativeLocalPlayerState_OutPlayerState; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_GetTeamAttitude) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_GetTeamAttitude");
static_assert(sizeof(WBP_MapMarkerContainer_C_GetTeamAttitude) == 0x000020, "Wrong size on WBP_MapMarkerContainer_C_GetTeamAttitude");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetTeamAttitude, InPlayerState) == 0x000000, "Member 'WBP_MapMarkerContainer_C_GetTeamAttitude::InPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetTeamAttitude, TeamAttitude) == 0x000008, "Member 'WBP_MapMarkerContainer_C_GetTeamAttitude::TeamAttitude' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetTeamAttitude, CallFunc_GetRelativeLocalPlayerState_OutPlayerState) == 0x000010, "Member 'WBP_MapMarkerContainer_C_GetTeamAttitude::CallFunc_GetRelativeLocalPlayerState_OutPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetTeamAttitude, CallFunc_GetTeamAttitude_ReturnValue) == 0x000018, "Member 'WBP_MapMarkerContainer_C_GetTeamAttitude::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.IsSupportingRotation
// 0x0028 (0x0028 - 0x0000)
struct WBP_MapMarkerContainer_C_IsSupportingRotation final
{
public:
	const class UGzMarkerComponent*               MarkerComponent;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B10[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_IsSupportingRotation) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_IsSupportingRotation");
static_assert(sizeof(WBP_MapMarkerContainer_C_IsSupportingRotation) == 0x000028, "Wrong size on WBP_MapMarkerContainer_C_IsSupportingRotation");
static_assert(offsetof(WBP_MapMarkerContainer_C_IsSupportingRotation, MarkerComponent) == 0x000000, "Member 'WBP_MapMarkerContainer_C_IsSupportingRotation::MarkerComponent' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_IsSupportingRotation, ReturnValue) == 0x000008, "Member 'WBP_MapMarkerContainer_C_IsSupportingRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_IsSupportingRotation, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'WBP_MapMarkerContainer_C_IsSupportingRotation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_IsSupportingRotation, K2Node_DynamicCast_AsGz_Character) == 0x000018, "Member 'WBP_MapMarkerContainer_C_IsSupportingRotation::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_IsSupportingRotation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MapMarkerContainer_C_IsSupportingRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.OnMarkerAdded
// 0x0010 (0x0010 - 0x0000)
struct WBP_MapMarkerContainer_C_OnMarkerAdded final
{
public:
	class UGzMarkerWidget*                        MarkerWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzMarkerComponent*                     MarkerComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_OnMarkerAdded) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_OnMarkerAdded");
static_assert(sizeof(WBP_MapMarkerContainer_C_OnMarkerAdded) == 0x000010, "Wrong size on WBP_MapMarkerContainer_C_OnMarkerAdded");
static_assert(offsetof(WBP_MapMarkerContainer_C_OnMarkerAdded, MarkerWidget) == 0x000000, "Member 'WBP_MapMarkerContainer_C_OnMarkerAdded::MarkerWidget' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_OnMarkerAdded, MarkerComponent) == 0x000008, "Member 'WBP_MapMarkerContainer_C_OnMarkerAdded::MarkerComponent' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.CalculatePlayerMarkerRotationForRemoteClient
// 0x0098 (0x0098 - 0x0000)
struct WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B11[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B12[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWingsuit_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B13[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast_1;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient");
static_assert(sizeof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient) == 0x000098, "Wrong size on WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, InActor) == 0x000000, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::InActor' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, ReturnValue) == 0x000008, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, K2Node_DynamicCast_AsGz_Player_Character) == 0x000010, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_GetVelocity_ReturnValue) == 0x000038, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_MakeRotFromX_ReturnValue) == 0x000060, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_BreakRotator_Roll_1) == 0x000078, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_BreakRotator_Pitch_1) == 0x00007C, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_BreakRotator_Yaw_1) == 0x000080, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, CallFunc_IsWingsuit_ReturnValue) == 0x000084, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::CallFunc_IsWingsuit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000088, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient, K2Node_FunctionResult_ReturnValue_ImplicitCast_1) == 0x000090, "Member 'WBP_MapMarkerContainer_C_CalculatePlayerMarkerRotationForRemoteClient::K2Node_FunctionResult_ReturnValue_ImplicitCast_1' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.GetActorLocation
// 0x0018 (0x0018 - 0x0000)
struct WBP_MapMarkerContainer_C_GetActorLocation final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      Previou;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(WBP_MapMarkerContainer_C_GetActorLocation) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_GetActorLocation");
static_assert(sizeof(WBP_MapMarkerContainer_C_GetActorLocation) == 0x000018, "Wrong size on WBP_MapMarkerContainer_C_GetActorLocation");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorLocation, Actor) == 0x000000, "Member 'WBP_MapMarkerContainer_C_GetActorLocation::Actor' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorLocation, Previou) == 0x000008, "Member 'WBP_MapMarkerContainer_C_GetActorLocation::Previou' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.GetActorRotation
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_MapMarkerContainer_C_GetActorRotation final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B14[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         K2Node_DynamicCast_AsGz_Player_State;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B15[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B16[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzPlayerViewTargetInterface> K2Node_DynamicCast_AsGz_Player_View_Target_Interface; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B17[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         CallFunc_GetViewTargetPlayerState_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B18[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePlayerMarkerRotationForRemoteClient_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B19[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_GetActorRotation) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_GetActorRotation");
static_assert(sizeof(WBP_MapMarkerContainer_C_GetActorRotation) == 0x0000B0, "Wrong size on WBP_MapMarkerContainer_C_GetActorRotation");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, Actor) == 0x000000, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::Actor' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, ReturnValue) == 0x000008, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, K2Node_DynamicCast_AsGz_Player_State) == 0x000010, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::K2Node_DynamicCast_AsGz_Player_State' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, K2Node_DynamicCast_AsGz_Player_View_Target_Interface) == 0x000048, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::K2Node_DynamicCast_AsGz_Player_View_Target_Interface' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_GetViewTargetPlayerState_ReturnValue) == 0x000060, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_GetViewTargetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_CalculatePlayerMarkerRotationForRemoteClient_ReturnValue) == 0x000070, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_CalculatePlayerMarkerRotationForRemoteClient_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_GetController_ReturnValue) == 0x000078, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_GetControlRotation_ReturnValue) == 0x000080, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_IsValid_ReturnValue_3) == 0x000098, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_BreakRotator_Roll_1) == 0x00009C, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_BreakRotator_Pitch_1) == 0x0000A0, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, CallFunc_BreakRotator_Yaw_1) == 0x0000A4, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetActorRotation, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x0000A8, "Member 'WBP_MapMarkerContainer_C_GetActorRotation::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function WBP_MapMarkerContainer.WBP_MapMarkerContainer_C.GetPlayerActorPositionFromMarker
// 0x0048 (0x0048 - 0x0000)
struct WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_TransformScreenToWorldSpace_ReturnValue;  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker) == 0x000008, "Wrong alignment on WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker");
static_assert(sizeof(WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker) == 0x000048, "Wrong size on WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker, Widget) == 0x000000, "Member 'WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker::Widget' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker, ReturnValue) == 0x000008, "Member 'WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker, CallFunc_GetPosition_ReturnValue) == 0x000020, "Member 'WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker, CallFunc_TransformScreenToWorldSpace_ReturnValue) == 0x000038, "Member 'WBP_MapMarkerContainer_C_GetPlayerActorPositionFromMarker::CallFunc_TransformScreenToWorldSpace_ReturnValue' has a wrong offset!");

}

