#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TetherEnd

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_TetherEnd.BP_TetherEnd_C.BP_OnDeath
// 0x0020 (0x0020 - 0x0000)
struct BP_TetherEnd_C_BP_OnDeath final
{
public:
	bool                                          HasDeathHitPoint;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F5B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DeathHitPoint;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_BP_OnDeath) == 0x000008, "Wrong alignment on BP_TetherEnd_C_BP_OnDeath");
static_assert(sizeof(BP_TetherEnd_C_BP_OnDeath) == 0x000020, "Wrong size on BP_TetherEnd_C_BP_OnDeath");
static_assert(offsetof(BP_TetherEnd_C_BP_OnDeath, HasDeathHitPoint) == 0x000000, "Member 'BP_TetherEnd_C_BP_OnDeath::HasDeathHitPoint' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_BP_OnDeath, DeathHitPoint) == 0x000008, "Member 'BP_TetherEnd_C_BP_OnDeath::DeathHitPoint' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.CacheOtherEndLocation
// 0x0020 (0x0020 - 0x0000)
struct BP_TetherEnd_C_CacheOtherEndLocation final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_CacheOtherEndLocation) == 0x000008, "Wrong alignment on BP_TetherEnd_C_CacheOtherEndLocation");
static_assert(sizeof(BP_TetherEnd_C_CacheOtherEndLocation) == 0x000020, "Wrong size on BP_TetherEnd_C_CacheOtherEndLocation");
static_assert(offsetof(BP_TetherEnd_C_CacheOtherEndLocation, DestroyedActor) == 0x000000, "Member 'BP_TetherEnd_C_CacheOtherEndLocation::DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_CacheOtherEndLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_TetherEnd_C_CacheOtherEndLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.DestroyWithParent
// 0x0008 (0x0008 - 0x0000)
struct BP_TetherEnd_C_DestroyWithParent final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_DestroyWithParent) == 0x000008, "Wrong alignment on BP_TetherEnd_C_DestroyWithParent");
static_assert(sizeof(BP_TetherEnd_C_DestroyWithParent) == 0x000008, "Wrong size on BP_TetherEnd_C_DestroyWithParent");
static_assert(offsetof(BP_TetherEnd_C_DestroyWithParent, DestroyedActor) == 0x000000, "Member 'BP_TetherEnd_C_DestroyWithParent::DestroyedActor' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.ExecuteUbergraph_BP_TetherEnd
// 0x01C8 (0x01C8 - 0x0000)
struct BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HasDeathHitPoint;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F5C[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_DeathHitPoint;                        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F5D[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F5E[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00B8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F5F[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd) == 0x000008, "Wrong alignment on BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd");
static_assert(sizeof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd) == 0x0001C8, "Wrong size on BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, EntryPoint) == 0x000000, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, K2Node_Event_HasDeathHitPoint) == 0x000024, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::K2Node_Event_HasDeathHitPoint' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, K2Node_Event_DeathHitPoint) == 0x000028, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::K2Node_Event_DeathHitPoint' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_HasAuthority_ReturnValue) == 0x000058, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, K2Node_Event_EndPlayReason) == 0x000059, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_GetAttachParentActor_ReturnValue) == 0x000060, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000068, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000080, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, K2Node_CustomEvent_DestroyedActor) == 0x000088, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_Vector_Distance_ReturnValue) == 0x000090, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_VLerp_ReturnValue) == 0x000098, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000B8, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001B0, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0001B8, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x0001C0, "Member 'BP_TetherEnd_C_ExecuteUbergraph_BP_TetherEnd::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.OnRep_OtherEnd
// 0x0010 (0x0010 - 0x0000)
struct BP_TetherEnd_C_OnRep_OtherEnd final
{
public:
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_OnRep_OtherEnd) == 0x000004, "Wrong alignment on BP_TetherEnd_C_OnRep_OtherEnd");
static_assert(sizeof(BP_TetherEnd_C_OnRep_OtherEnd) == 0x000010, "Wrong size on BP_TetherEnd_C_OnRep_OtherEnd");
static_assert(offsetof(BP_TetherEnd_C_OnRep_OtherEnd, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_TetherEnd_C_OnRep_OtherEnd::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.PlayExplosionCue
// 0x0120 (0x0120 - 0x0000)
struct BP_TetherEnd_C_PlayExplosionCue final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0048(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(BP_TetherEnd_C_PlayExplosionCue) == 0x000008, "Wrong alignment on BP_TetherEnd_C_PlayExplosionCue");
static_assert(sizeof(BP_TetherEnd_C_PlayExplosionCue) == 0x000120, "Wrong size on BP_TetherEnd_C_PlayExplosionCue");
static_assert(offsetof(BP_TetherEnd_C_PlayExplosionCue, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_TetherEnd_C_PlayExplosionCue::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_PlayExplosionCue, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'BP_TetherEnd_C_PlayExplosionCue::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_PlayExplosionCue, CallFunc_Normal_ReturnValue) == 0x000030, "Member 'BP_TetherEnd_C_PlayExplosionCue::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_PlayExplosionCue, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000048, "Member 'BP_TetherEnd_C_PlayExplosionCue::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_TetherEnd_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_TetherEnd_C_ReceiveEndPlay");
static_assert(sizeof(BP_TetherEnd_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_TetherEnd_C_ReceiveEndPlay");
static_assert(offsetof(BP_TetherEnd_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_TetherEnd_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.SetOtherEndReference
// 0x0018 (0x0018 - 0x0000)
struct BP_TetherEnd_C_SetOtherEndReference final
{
public:
	class AGzTetherEnd*                           Param_OtherEnd;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_TetherEnd_C*                        K2Node_DynamicCast_AsBP_Tether_End;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_SetOtherEndReference) == 0x000008, "Wrong alignment on BP_TetherEnd_C_SetOtherEndReference");
static_assert(sizeof(BP_TetherEnd_C_SetOtherEndReference) == 0x000018, "Wrong size on BP_TetherEnd_C_SetOtherEndReference");
static_assert(offsetof(BP_TetherEnd_C_SetOtherEndReference, Param_OtherEnd) == 0x000000, "Member 'BP_TetherEnd_C_SetOtherEndReference::Param_OtherEnd' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SetOtherEndReference, K2Node_DynamicCast_AsBP_Tether_End) == 0x000008, "Member 'BP_TetherEnd_C_SetOtherEndReference::K2Node_DynamicCast_AsBP_Tether_End' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SetOtherEndReference, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_TetherEnd_C_SetOtherEndReference::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.SetupMaterial
// 0x0010 (0x0010 - 0x0000)
struct BP_TetherEnd_C_SetupMaterial final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F60[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_SetupMaterial) == 0x000008, "Wrong alignment on BP_TetherEnd_C_SetupMaterial");
static_assert(sizeof(BP_TetherEnd_C_SetupMaterial) == 0x000010, "Wrong size on BP_TetherEnd_C_SetupMaterial");
static_assert(offsetof(BP_TetherEnd_C_SetupMaterial, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_TetherEnd_C_SetupMaterial::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SetupMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_TetherEnd_C_SetupMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.SpawnFX
// 0x0040 (0x0040 - 0x0000)
struct BP_TetherEnd_C_SpawnFX final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F61[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_SpawnFX) == 0x000008, "Wrong alignment on BP_TetherEnd_C_SpawnFX");
static_assert(sizeof(BP_TetherEnd_C_SpawnFX) == 0x000040, "Wrong size on BP_TetherEnd_C_SpawnFX");
static_assert(offsetof(BP_TetherEnd_C_SpawnFX, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_TetherEnd_C_SpawnFX::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SpawnFX, CallFunc_PostEventAtLocation_ReturnValue) == 0x000018, "Member 'BP_TetherEnd_C_SpawnFX::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SpawnFX, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000020, "Member 'BP_TetherEnd_C_SpawnFX::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SpawnFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000038, "Member 'BP_TetherEnd_C_SpawnFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_TetherEnd.BP_TetherEnd_C.SpawnOnDestroyedFX
// 0x0048 (0x0048 - 0x0000)
struct BP_TetherEnd_C_SpawnOnDestroyedFX final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F62[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F63[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherEnd_C_SpawnOnDestroyedFX) == 0x000008, "Wrong alignment on BP_TetherEnd_C_SpawnOnDestroyedFX");
static_assert(sizeof(BP_TetherEnd_C_SpawnOnDestroyedFX) == 0x000048, "Wrong size on BP_TetherEnd_C_SpawnOnDestroyedFX");
static_assert(offsetof(BP_TetherEnd_C_SpawnOnDestroyedFX, Temp_bool_Variable) == 0x000000, "Member 'BP_TetherEnd_C_SpawnOnDestroyedFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SpawnOnDestroyedFX, Temp_object_Variable) == 0x000008, "Member 'BP_TetherEnd_C_SpawnOnDestroyedFX::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SpawnOnDestroyedFX, Temp_object_Variable_1) == 0x000010, "Member 'BP_TetherEnd_C_SpawnOnDestroyedFX::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SpawnOnDestroyedFX, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_TetherEnd_C_SpawnOnDestroyedFX::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SpawnOnDestroyedFX, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_TetherEnd_C_SpawnOnDestroyedFX::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SpawnOnDestroyedFX, K2Node_Select_Default) == 0x000038, "Member 'BP_TetherEnd_C_SpawnOnDestroyedFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TetherEnd_C_SpawnOnDestroyedFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000040, "Member 'BP_TetherEnd_C_SpawnOnDestroyedFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

}

