#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryScreen

#include "Basic.hpp"

#include "WBP_InventoryScreen_classes.hpp"
#include "WBP_InventoryScreen_parameters.hpp"


namespace SDK
{

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.AddAttachmentToolTipInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// EGzItemRarity                           Rarity                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGzWeaponAttachmentType                 AttachmentType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_Inventory_Attachment_C*      AddedElement                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::AddAttachmentToolTipInfo(const class FText& Param_Name, EGzItemRarity Rarity, EGzWeaponAttachmentType AttachmentType, class UWBP_Inventory_Attachment_C** AddedElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "AddAttachmentToolTipInfo");

	Params::WBP_InventoryScreen_C_AddAttachmentToolTipInfo Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.Rarity = Rarity;
	Parms.AttachmentType = AttachmentType;

	UObject::ProcessEvent(Func, &Parms);

	if (AddedElement != nullptr)
		*AddedElement = Parms.AddedElement;
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.AddSkinToolTipInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class UWBP_Inventory_SkinShow_C*        AddedElement                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::AddSkinToolTipInfo(const class FText& Param_Name, class UWBP_Inventory_SkinShow_C** AddedElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "AddSkinToolTipInfo");

	Params::WBP_InventoryScreen_C_AddSkinToolTipInfo Parms{};

	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);

	if (AddedElement != nullptr)
		*AddedElement = Parms.AddedElement;
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BindElementsButtonHover
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryScreen_C::BindElementsButtonHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "BindElementsButtonHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    ToShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature(bool ToShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature");

	Params::WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature Parms{};

	Parms.ToShow = ToShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UWBP_InventoryScreen_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.ButtonHover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::ButtonHover(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "ButtonHover");

	Params::WBP_InventoryScreen_C_ButtonHover Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.ButtonUnhover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::ButtonUnhover(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "ButtonUnhover");

	Params::WBP_InventoryScreen_C_ButtonUnhover Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.CREATEDELEGATE_PROXYFUNCTION_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzInvItem                       NewItem                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_InventoryScreen_C::CREATEDELEGATE_PROXYFUNCTION_0(const struct FGzInvItem& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "CREATEDELEGATE_PROXYFUNCTION_0");

	Params::WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_0 Parms{};

	Parms.NewItem = std::move(NewItem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.CREATEDELEGATE_PROXYFUNCTION_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StateBroken                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::CREATEDELEGATE_PROXYFUNCTION_1(bool StateBroken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "CREATEDELEGATE_PROXYFUNCTION_1");

	Params::WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_1 Parms{};

	Parms.StateBroken = StateBroken;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.DynamicInventoryButtonHover
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHover                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGzInvItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_InventoryScreen_C::DynamicInventoryButtonHover(bool IsHover, const struct FGzInvItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "DynamicInventoryButtonHover");

	Params::WBP_InventoryScreen_C_DynamicInventoryButtonHover Parms{};

	Parms.IsHover = IsHover;
	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.ExecuteUbergraph_WBP_InventoryScreen
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::ExecuteUbergraph_WBP_InventoryScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "ExecuteUbergraph_WBP_InventoryScreen");

	Params::WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.GetPlayerInventoryComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGzInvComponent*                  InventoryComponent                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::GetPlayerInventoryComponent(class UGzInvComponent** InventoryComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "GetPlayerInventoryComponent");

	Params::WBP_InventoryScreen_C_GetPlayerInventoryComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InventoryComponent != nullptr)
		*InventoryComponent = Parms.InventoryComponent;
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.HandleTriggeringBackAction
// (BlueprintEvent)

void UWBP_InventoryScreen_C::HandleTriggeringBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "HandleTriggeringBackAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_InventoryScreen_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.OnPawnChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::OnPawnChanged(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "OnPawnChanged");

	Params::WBP_InventoryScreen_C_OnPawnChanged Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.OnSlotDataChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzInvItem                       NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_InventoryScreen_C::OnSlotDataChanged(const struct FGzInvItem& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "OnSlotDataChanged");

	Params::WBP_InventoryScreen_C_OnSlotDataChanged Parms{};

	Parms.NewItem = std::move(NewItem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.OnWeaponSwapInput
// (BlueprintCallable, BlueprintEvent)

void UWBP_InventoryScreen_C::OnWeaponSwapInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "OnWeaponSwapInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.Set Jetpack Texts
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryScreen_C::Set_Jetpack_Texts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "Set Jetpack Texts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.SetDefaultInfoState
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryScreen_C::SetDefaultInfoState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "SetDefaultInfoState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.SetReadOnlyState
// (Event, Protected, BlueprintEvent)

void UWBP_InventoryScreen_C::SetReadOnlyState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "SetReadOnlyState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.SetReadWriteState
// (Event, Protected, BlueprintEvent)

void UWBP_InventoryScreen_C::SetReadWriteState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "SetReadWriteState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.Update Broken State
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Broken                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryScreen_C::Update_Broken_State(bool& Broken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "Update Broken State");

	Params::WBP_InventoryScreen_C_Update_Broken_State Parms{};

	Parms.Broken = Broken;

	UObject::ProcessEvent(Func, &Parms);

	Broken = Parms.Broken;
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.UpdateInventoryInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHover                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGzInvItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_InventoryScreen_C::UpdateInventoryInfo(bool IsHover, const struct FGzInvItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "UpdateInventoryInfo");

	Params::WBP_InventoryScreen_C_UpdateInventoryInfo Parms{};

	Parms.IsHover = IsHover;
	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BP_GetDesiredFocusTarget
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_InventoryScreen_C::BP_GetDesiredFocusTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryScreen_C", "BP_GetDesiredFocusTarget");

	Params::WBP_InventoryScreen_C_BP_GetDesiredFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

