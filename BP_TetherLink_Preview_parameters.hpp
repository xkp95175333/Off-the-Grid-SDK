#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TetherLink_Preview

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_TetherLink_Preview.BP_TetherLink_Preview_C.ExecuteUbergraph_BP_TetherLink_Preview
// 0x0004 (0x0004 - 0x0000)
struct BP_TetherLink_Preview_C_ExecuteUbergraph_BP_TetherLink_Preview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherLink_Preview_C_ExecuteUbergraph_BP_TetherLink_Preview) == 0x000004, "Wrong alignment on BP_TetherLink_Preview_C_ExecuteUbergraph_BP_TetherLink_Preview");
static_assert(sizeof(BP_TetherLink_Preview_C_ExecuteUbergraph_BP_TetherLink_Preview) == 0x000004, "Wrong size on BP_TetherLink_Preview_C_ExecuteUbergraph_BP_TetherLink_Preview");
static_assert(offsetof(BP_TetherLink_Preview_C_ExecuteUbergraph_BP_TetherLink_Preview, EntryPoint) == 0x000000, "Member 'BP_TetherLink_Preview_C_ExecuteUbergraph_BP_TetherLink_Preview::EntryPoint' has a wrong offset!");

// Function BP_TetherLink_Preview.BP_TetherLink_Preview_C.SetupMaterials
// 0x0008 (0x0008 - 0x0000)
struct BP_TetherLink_Preview_C_SetupMaterials final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherLink_Preview_C_SetupMaterials) == 0x000008, "Wrong alignment on BP_TetherLink_Preview_C_SetupMaterials");
static_assert(sizeof(BP_TetherLink_Preview_C_SetupMaterials) == 0x000008, "Wrong size on BP_TetherLink_Preview_C_SetupMaterials");
static_assert(offsetof(BP_TetherLink_Preview_C_SetupMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_TetherLink_Preview_C_SetupMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_TetherLink_Preview.BP_TetherLink_Preview_C.UpdateConnection
// 0x0280 (0x0280 - 0x0000)
struct BP_TetherLink_Preview_C_UpdateConnection final
{
public:
	bool                                          HasNoObstacle;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInRange;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5122[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             NewTransform;                                      // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5123[0x8];                                     // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0180(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_TetherLink_Preview_C_UpdateConnection) == 0x000010, "Wrong alignment on BP_TetherLink_Preview_C_UpdateConnection");
static_assert(sizeof(BP_TetherLink_Preview_C_UpdateConnection) == 0x000280, "Wrong size on BP_TetherLink_Preview_C_UpdateConnection");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, HasNoObstacle) == 0x000000, "Member 'BP_TetherLink_Preview_C_UpdateConnection::HasNoObstacle' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, IsInRange) == 0x000001, "Member 'BP_TetherLink_Preview_C_UpdateConnection::IsInRange' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, Distance) == 0x000008, "Member 'BP_TetherLink_Preview_C_UpdateConnection::Distance' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, NewTransform) == 0x000010, "Member 'BP_TetherLink_Preview_C_UpdateConnection::NewTransform' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_K2_GetComponentScale_ReturnValue) == 0x0000B8, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_BreakVector_X) == 0x0000D0, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_BreakVector_X_1) == 0x0000E8, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_BreakVector_Y_1) == 0x0000F0, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_BreakVector_Z_1) == 0x0000F8, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_MakeVector_ReturnValue) == 0x000100, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateConnection, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000180, "Member 'BP_TetherLink_Preview_C_UpdateConnection::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_TetherLink_Preview.BP_TetherLink_Preview_C.UpdateMaterials
// 0x0030 (0x0030 - 0x0000)
struct BP_TetherLink_Preview_C_UpdateMaterials final
{
public:
	bool                                          HasNoObstacles;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInRange;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5124[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5125[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5126[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TetherLink_Preview_C_UpdateMaterials) == 0x000008, "Wrong alignment on BP_TetherLink_Preview_C_UpdateMaterials");
static_assert(sizeof(BP_TetherLink_Preview_C_UpdateMaterials) == 0x000030, "Wrong size on BP_TetherLink_Preview_C_UpdateMaterials");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, HasNoObstacles) == 0x000000, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::HasNoObstacles' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, IsInRange) == 0x000001, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::IsInRange' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, Distance) == 0x000008, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::Distance' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, Temp_bool_Variable) == 0x000010, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, Temp_real_Variable) == 0x000014, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, Temp_real_Variable_1) == 0x000018, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, K2Node_Select_Default) == 0x000028, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TetherLink_Preview_C_UpdateMaterials, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00002C, "Member 'BP_TetherLink_Preview_C_UpdateMaterials::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

}

