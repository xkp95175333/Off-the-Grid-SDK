#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ViewportMarker_Opportunity_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ViewportMarker_Opportunity_Base.WBP_ViewportMarker_Opportunity_Base_C
// 0x0070 (0x0408 - 0x0398)
class UWBP_ViewportMarker_Opportunity_Base_C : public UGzViewportMarkerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Main_Overlay;                                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ViewportMarker_Content_C*          MarkerContent;                                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Objective_GzText;                                  // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Text_SizeBox;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnStateChange;                                     // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHideAnimationFinished;                           // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTexture2D*                             MarkerImageTexture;                                // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	bool                                          bShowOnlyWhenPinged;                               // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_6EA6[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MissionIconParameterName;                          // 0x03EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          WithBlinkingAnimation;                             // 0x03F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_6EA7[0x3];                                     // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlinkingDuration;                                  // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bWithText;                                         // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsSpecialOpportunity;                              // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Change_Visibility(bool Param_bVisible);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_ViewportMarker_Opportunity_Base(int32 EntryPoint);
	void OnHideAnimationFinished__DelegateSignature();
	void OnMarkerStateChanged(class UGzMarkerComponent* Param_MarkerComponent, const struct FGameplayTagContainer& States);
	void OnStateChange__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void SetMarkerText();
	void UpdateMarkerVisibility(bool Param_bVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ViewportMarker_Opportunity_Base_C">();
	}
	static class UWBP_ViewportMarker_Opportunity_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ViewportMarker_Opportunity_Base_C>();
	}
};
static_assert(alignof(UWBP_ViewportMarker_Opportunity_Base_C) == 0x000008, "Wrong alignment on UWBP_ViewportMarker_Opportunity_Base_C");
static_assert(sizeof(UWBP_ViewportMarker_Opportunity_Base_C) == 0x000408, "Wrong size on UWBP_ViewportMarker_Opportunity_Base_C");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, UberGraphFrame) == 0x000398, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, Main_Overlay) == 0x0003A0, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::Main_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, MarkerContent) == 0x0003A8, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::MarkerContent' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, Objective_GzText) == 0x0003B0, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::Objective_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, Text_SizeBox) == 0x0003B8, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::Text_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, OnStateChange) == 0x0003C0, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::OnStateChange' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, OnHideAnimationFinished) == 0x0003D0, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::OnHideAnimationFinished' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, MarkerImageTexture) == 0x0003E0, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::MarkerImageTexture' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, bShowOnlyWhenPinged) == 0x0003E8, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::bShowOnlyWhenPinged' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, MissionIconParameterName) == 0x0003EC, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::MissionIconParameterName' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, WithBlinkingAnimation) == 0x0003F4, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::WithBlinkingAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, BlinkingDuration) == 0x0003F8, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::BlinkingDuration' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, bWithText) == 0x000400, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::bWithText' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Opportunity_Base_C, IsSpecialOpportunity) == 0x000401, "Member 'UWBP_ViewportMarker_Opportunity_Base_C::IsSpecialOpportunity' has a wrong offset!");

}

