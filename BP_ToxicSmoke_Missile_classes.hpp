#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ToxicSmoke_Missile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ToxicSmoke_Missile.BP_ToxicSmoke_Missile_C
// 0x0010 (0x03A8 - 0x0398)
class ABP_ToxicSmoke_Missile_C final : public AGzToxicSmokeMissile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_ToxicSmoke_TrailActor_C*            AttachedTrailActor;                                // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_ToxicSmoke_Missile(int32 EntryPoint);
	void DetachTrail(const struct FVector& ImpactLocation, const struct FVector& ImpactNormal);
	void BndEvt__BP_ToxicSmoke_Missile_SphereComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ToxicSmoke_Missile_C">();
	}
	static class ABP_ToxicSmoke_Missile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ToxicSmoke_Missile_C>();
	}
};
static_assert(alignof(ABP_ToxicSmoke_Missile_C) == 0x000008, "Wrong alignment on ABP_ToxicSmoke_Missile_C");
static_assert(sizeof(ABP_ToxicSmoke_Missile_C) == 0x0003A8, "Wrong size on ABP_ToxicSmoke_Missile_C");
static_assert(offsetof(ABP_ToxicSmoke_Missile_C, UberGraphFrame) == 0x000398, "Member 'ABP_ToxicSmoke_Missile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_Missile_C, AttachedTrailActor) == 0x0003A0, "Member 'ABP_ToxicSmoke_Missile_C::AttachedTrailActor' has a wrong offset!");

}

