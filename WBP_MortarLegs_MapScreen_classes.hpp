#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MortarLegs_MapScreen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "G01_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MortarLegs_MapScreen.WBP_MortarLegs_MapScreen_C
// 0x0118 (0x05B0 - 0x0498)
class UWBP_MortarLegs_MapScreen_C final : public UGzMortarLegs_MapScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0498(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USlider*                                Angle_Slider;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                AngleDistanceBorder;                               // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Distance_Slider;                                   // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_165;                                         // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_210;                                         // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           InvalidTarget_GzText;                              // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           InvalidTarget_GzText_2;                            // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               InvalidTargetWarning_SizeBox;                      // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MainCanvasPanel;                                   // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ObstaclesWarning_SizeBox;                          // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           ObstacleWarning_GzText;                            // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_GridTiles;                             // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Shooting_GzText;                                   // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ShootingWarning_SizeBox;                           // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MortarLegs_TargetCounter_C*        WBP_MortarLegs_TargetCounter;                      // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MortarLegsMap_C*                   WBP_MortarLegsMap;                                 // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MortarLegsMapController_C*          Controller;                                        // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ObstacleCancelDelay;                               // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F01[0x4];                                     // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ObstacleCancelTimer;                               // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidLocation;                                   // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F02[0x7];                                     // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TargetDistance;                                    // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinRange;                                          // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxRange;                                          // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LimitHalfAngle;                                    // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAngle;                                      // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AvailableColor;                                    // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ErrorColor;                                        // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_MortarLegs_MapCursor_C*            MortarLegsMapCursor;                               // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        AppearDuration;                                    // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AppearProgress;                                    // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAppear;                                      // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CloseScreen();
	void Construct();
	class UGzMortarLegs_MapScreenController* CreateMapController();
	void ExecuteUbergraph_WBP_MortarLegs_MapScreen(int32 EntryPoint);
	void HideMap();
	void InitRadar();
	void OnValidTargetSelected();
	void ShotShootingText();
	void ShowMap();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateAngleSlider();
	void UpdateDistanceSlider();
	void UpdateRetainerBox(double DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MortarLegs_MapScreen_C">();
	}
	static class UWBP_MortarLegs_MapScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MortarLegs_MapScreen_C>();
	}
};
static_assert(alignof(UWBP_MortarLegs_MapScreen_C) == 0x000008, "Wrong alignment on UWBP_MortarLegs_MapScreen_C");
static_assert(sizeof(UWBP_MortarLegs_MapScreen_C) == 0x0005B0, "Wrong size on UWBP_MortarLegs_MapScreen_C");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, UberGraphFrame) == 0x000498, "Member 'UWBP_MortarLegs_MapScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, Angle_Slider) == 0x0004A0, "Member 'UWBP_MortarLegs_MapScreen_C::Angle_Slider' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, AngleDistanceBorder) == 0x0004A8, "Member 'UWBP_MortarLegs_MapScreen_C::AngleDistanceBorder' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, Distance_Slider) == 0x0004B0, "Member 'UWBP_MortarLegs_MapScreen_C::Distance_Slider' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, Image_0) == 0x0004B8, "Member 'UWBP_MortarLegs_MapScreen_C::Image_0' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, Image_165) == 0x0004C0, "Member 'UWBP_MortarLegs_MapScreen_C::Image_165' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, Image_210) == 0x0004C8, "Member 'UWBP_MortarLegs_MapScreen_C::Image_210' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, InvalidTarget_GzText) == 0x0004D0, "Member 'UWBP_MortarLegs_MapScreen_C::InvalidTarget_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, InvalidTarget_GzText_2) == 0x0004D8, "Member 'UWBP_MortarLegs_MapScreen_C::InvalidTarget_GzText_2' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, InvalidTargetWarning_SizeBox) == 0x0004E0, "Member 'UWBP_MortarLegs_MapScreen_C::InvalidTargetWarning_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, MainCanvasPanel) == 0x0004E8, "Member 'UWBP_MortarLegs_MapScreen_C::MainCanvasPanel' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, ObstaclesWarning_SizeBox) == 0x0004F0, "Member 'UWBP_MortarLegs_MapScreen_C::ObstaclesWarning_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, ObstacleWarning_GzText) == 0x0004F8, "Member 'UWBP_MortarLegs_MapScreen_C::ObstacleWarning_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, RetainerBox_GridTiles) == 0x000500, "Member 'UWBP_MortarLegs_MapScreen_C::RetainerBox_GridTiles' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, Shooting_GzText) == 0x000508, "Member 'UWBP_MortarLegs_MapScreen_C::Shooting_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, ShootingWarning_SizeBox) == 0x000510, "Member 'UWBP_MortarLegs_MapScreen_C::ShootingWarning_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, WBP_MortarLegs_TargetCounter) == 0x000518, "Member 'UWBP_MortarLegs_MapScreen_C::WBP_MortarLegs_TargetCounter' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, WBP_MortarLegsMap) == 0x000520, "Member 'UWBP_MortarLegs_MapScreen_C::WBP_MortarLegsMap' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, Controller) == 0x000528, "Member 'UWBP_MortarLegs_MapScreen_C::Controller' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, ObstacleCancelDelay) == 0x000530, "Member 'UWBP_MortarLegs_MapScreen_C::ObstacleCancelDelay' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, ObstacleCancelTimer) == 0x000538, "Member 'UWBP_MortarLegs_MapScreen_C::ObstacleCancelTimer' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, IsValidLocation) == 0x000540, "Member 'UWBP_MortarLegs_MapScreen_C::IsValidLocation' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, TargetDistance) == 0x000548, "Member 'UWBP_MortarLegs_MapScreen_C::TargetDistance' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, MinRange) == 0x000550, "Member 'UWBP_MortarLegs_MapScreen_C::MinRange' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, MaxRange) == 0x000558, "Member 'UWBP_MortarLegs_MapScreen_C::MaxRange' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, LimitHalfAngle) == 0x000560, "Member 'UWBP_MortarLegs_MapScreen_C::LimitHalfAngle' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, CurrentAngle) == 0x000568, "Member 'UWBP_MortarLegs_MapScreen_C::CurrentAngle' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, AvailableColor) == 0x000570, "Member 'UWBP_MortarLegs_MapScreen_C::AvailableColor' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, ErrorColor) == 0x000580, "Member 'UWBP_MortarLegs_MapScreen_C::ErrorColor' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, MortarLegsMapCursor) == 0x000590, "Member 'UWBP_MortarLegs_MapScreen_C::MortarLegsMapCursor' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, AppearDuration) == 0x000598, "Member 'UWBP_MortarLegs_MapScreen_C::AppearDuration' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, AppearProgress) == 0x0005A0, "Member 'UWBP_MortarLegs_MapScreen_C::AppearProgress' has a wrong offset!");
static_assert(offsetof(UWBP_MortarLegs_MapScreen_C, ShouldAppear) == 0x0005A8, "Member 'UWBP_MortarLegs_MapScreen_C::ShouldAppear' has a wrong offset!");

}

