#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Navigation_DarkBG_Button

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Navigation_DarkBG_Button.WBP_Navigation_DarkBG_Button_C.SetWhiteTextStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_Navigation_DarkBG_Button_C_SetWhiteTextStyle final
{
public:
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Navigation_DarkBG_Button_C_SetWhiteTextStyle) == 0x000008, "Wrong alignment on WBP_Navigation_DarkBG_Button_C_SetWhiteTextStyle");
static_assert(sizeof(WBP_Navigation_DarkBG_Button_C_SetWhiteTextStyle) == 0x000008, "Wrong size on WBP_Navigation_DarkBG_Button_C_SetWhiteTextStyle");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_SetWhiteTextStyle, CallFunc_Array_Get_Item) == 0x000000, "Member 'WBP_Navigation_DarkBG_Button_C_SetWhiteTextStyle::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Navigation_DarkBG_Button.WBP_Navigation_DarkBG_Button_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct WBP_Navigation_DarkBG_Button_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Navigation_DarkBG_Button_C_SetText) == 0x000008, "Wrong alignment on WBP_Navigation_DarkBG_Button_C_SetText");
static_assert(sizeof(WBP_Navigation_DarkBG_Button_C_SetText) == 0x000010, "Wrong size on WBP_Navigation_DarkBG_Button_C_SetText");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_SetText, InText) == 0x000000, "Member 'WBP_Navigation_DarkBG_Button_C_SetText::InText' has a wrong offset!");

// Function WBP_Navigation_DarkBG_Button.WBP_Navigation_DarkBG_Button_C.SetGrayTextStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_Navigation_DarkBG_Button_C_SetGrayTextStyle final
{
public:
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Navigation_DarkBG_Button_C_SetGrayTextStyle) == 0x000008, "Wrong alignment on WBP_Navigation_DarkBG_Button_C_SetGrayTextStyle");
static_assert(sizeof(WBP_Navigation_DarkBG_Button_C_SetGrayTextStyle) == 0x000008, "Wrong size on WBP_Navigation_DarkBG_Button_C_SetGrayTextStyle");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_SetGrayTextStyle, CallFunc_Array_Get_Item) == 0x000000, "Member 'WBP_Navigation_DarkBG_Button_C_SetGrayTextStyle::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Navigation_DarkBG_Button.WBP_Navigation_DarkBG_Button_C.SetDefaultText
// 0x0008 (0x0008 - 0x0000)
struct WBP_Navigation_DarkBG_Button_C_SetDefaultText final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Navigation_DarkBG_Button_C_SetDefaultText) == 0x000008, "Wrong alignment on WBP_Navigation_DarkBG_Button_C_SetDefaultText");
static_assert(sizeof(WBP_Navigation_DarkBG_Button_C_SetDefaultText) == 0x000008, "Wrong size on WBP_Navigation_DarkBG_Button_C_SetDefaultText");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_SetDefaultText, Button) == 0x000000, "Member 'WBP_Navigation_DarkBG_Button_C_SetDefaultText::Button' has a wrong offset!");

// Function WBP_Navigation_DarkBG_Button.WBP_Navigation_DarkBG_Button_C.SetBlueTextStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_Navigation_DarkBG_Button_C_SetBlueTextStyle final
{
public:
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Navigation_DarkBG_Button_C_SetBlueTextStyle) == 0x000008, "Wrong alignment on WBP_Navigation_DarkBG_Button_C_SetBlueTextStyle");
static_assert(sizeof(WBP_Navigation_DarkBG_Button_C_SetBlueTextStyle) == 0x000008, "Wrong size on WBP_Navigation_DarkBG_Button_C_SetBlueTextStyle");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_SetBlueTextStyle, CallFunc_Array_Get_Item) == 0x000000, "Member 'WBP_Navigation_DarkBG_Button_C_SetBlueTextStyle::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Navigation_DarkBG_Button.WBP_Navigation_DarkBG_Button_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Navigation_DarkBG_Button_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Navigation_DarkBG_Button_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Navigation_DarkBG_Button_C_PreConstruct");
static_assert(sizeof(WBP_Navigation_DarkBG_Button_C_PreConstruct) == 0x000001, "Wrong size on WBP_Navigation_DarkBG_Button_C_PreConstruct");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Navigation_DarkBG_Button_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Navigation_DarkBG_Button.WBP_Navigation_DarkBG_Button_C.ExecuteUbergraph_WBP_Navigation_DarkBG_Button
// 0x0028 (0x0028 - 0x0000)
struct WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C80[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InText;                               // 0x0008(0x0010)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C81[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_CustomEvent_Button;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button) == 0x000008, "Wrong alignment on WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button");
static_assert(sizeof(WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button) == 0x000028, "Wrong size on WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button, EntryPoint) == 0x000000, "Member 'WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button, K2Node_Event_InText) == 0x000008, "Member 'WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button::K2Node_Event_InText' has a wrong offset!");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button, K2Node_Event_IsDesignTime) == 0x000018, "Member 'WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button, K2Node_CustomEvent_Button) == 0x000020, "Member 'WBP_Navigation_DarkBG_Button_C_ExecuteUbergraph_WBP_Navigation_DarkBG_Button::K2Node_CustomEvent_Button' has a wrong offset!");

}

