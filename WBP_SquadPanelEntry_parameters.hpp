#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SquadPanelEntry

#include "Basic.hpp"

#include "E_SquadInfoStates_structs.hpp"
#include "G01_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.Check for Deployment State
// 0x0018 (0x0018 - 0x0000)
struct WBP_SquadPanelEntry_C_Check_for_Deployment_State final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzDeploymentPawn*                      K2Node_DynamicCast_AsGz_Deployment_Pawn;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_Check_for_Deployment_State) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_Check_for_Deployment_State");
static_assert(sizeof(WBP_SquadPanelEntry_C_Check_for_Deployment_State) == 0x000018, "Wrong size on WBP_SquadPanelEntry_C_Check_for_Deployment_State");
static_assert(offsetof(WBP_SquadPanelEntry_C_Check_for_Deployment_State, Pawn) == 0x000000, "Member 'WBP_SquadPanelEntry_C_Check_for_Deployment_State::Pawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_Check_for_Deployment_State, K2Node_DynamicCast_AsGz_Deployment_Pawn) == 0x000008, "Member 'WBP_SquadPanelEntry_C_Check_for_Deployment_State::K2Node_DynamicCast_AsGz_Deployment_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_Check_for_Deployment_State, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_SquadPanelEntry_C_Check_for_Deployment_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_Check_for_Deployment_State, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_SquadPanelEntry_C_Check_for_Deployment_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.ExecuteUbergraph_WBP_SquadPanelEntry
// 0x0450 (0x0450 - 0x0000)
struct WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzGameState* GameState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC6[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x0018(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0070(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC7[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue;  // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC8[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag_7;                          // 0x00C4(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_6;                          // 0x00EC(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x00F4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC9[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue_1; // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DCA[0x2];                                     // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag_5;                          // 0x0114(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_4;                          // 0x013C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0144(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DCB[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DCC[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x016C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_3;                          // 0x018C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0194(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_2;                          // 0x01A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x01AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x01BC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x01C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_1;                          // 0x01D4(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x01DC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x01E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x01F4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable;                                // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_1;                              // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DCD[0x1];                                     // 0x01FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Temp_struct_Variable_5;                            // 0x0200(0x0038)(HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0240(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x0250(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_15;           // 0x0260(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn)> K2Node_CreateDelegate_OutputDelegate_16;           // 0x0270(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute_1;                    // 0x0280(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_1;                     // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue_1;                     // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_17;           // 0x02C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate_18;           // 0x02D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_19;           // 0x02E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_20;           // 0x02F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0300(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DCE[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue_1;                    // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DCF[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2; // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD0[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Player;                         // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewPawn;                        // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_OldPawn;                        // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_3; // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD1[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         K2Node_CustomEvent_PlayerState;                    // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD2[0x7];                                     // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue_2; // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue;     // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD3[0x6];                                     // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBleeding_ReturnValue;                   // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             K2Node_Select_Default;                             // 0x03D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD4[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD5[0x7];                                     // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue_3; // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue_1;   // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD6[0x6];                                     // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzExtractionRoyaleGameState*           K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State; // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD7[0x3];                                     // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGzEventNotificationData& ActedEvent)> K2Node_CreateDelegate_OutputDelegate_21;           // 0x0414(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD8[0x4];                                     // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSoloGamemode_bIsSolos;                  // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD9[0x7];                                     // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzExtractionRoyaleGameState*           K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State_1; // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry");
static_assert(sizeof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry) == 0x000450, "Wrong size on WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, EntryPoint) == 0x000000, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Attribute) == 0x000018, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_NewValue) == 0x000050, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_OldValue) == 0x000054, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_1) == 0x000058, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_real_Variable) == 0x000068, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_real_Variable_1) == 0x00006C, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_struct_Variable) == 0x000070, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetGzAbilitySystemComponent_ReturnValue) == 0x0000B0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetGzAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue) == 0x0000B8, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_2) == 0x0000C1, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Tag_7) == 0x0000C4, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Tag_7' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000CC, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000DC, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Tag_6) == 0x0000EC, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Tag_6' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_struct_Variable_1) == 0x0000F4, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_3) == 0x0000FC, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetGzAbilitySystemComponent_ReturnValue_1) == 0x000100, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetGzAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1) == 0x000108, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_4) == 0x000110, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_5) == 0x000111, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Tag_5) == 0x000114, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Tag_5' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_4) == 0x00011C, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_5) == 0x00012C, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Tag_4) == 0x00013C, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Tag_4' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_struct_Variable_2) == 0x000144, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_6) == 0x00014C, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetPawn_ReturnValue) == 0x000150, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_6) == 0x000158, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_7) == 0x000168, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_7) == 0x00016C, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_8) == 0x00017C, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Tag_3) == 0x00018C, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Tag_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_9) == 0x000194, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Tag_2) == 0x0001A4, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Tag_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001AC, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_struct_Variable_3) == 0x0001BC, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_11) == 0x0001C4, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Tag_1) == 0x0001D4, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Tag) == 0x0001DC, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_12) == 0x0001E4, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_struct_Variable_4) == 0x0001F4, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_bool_Variable) == 0x0001FC, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_byte_Variable) == 0x0001FD, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_byte_Variable_1) == 0x0001FE, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_struct_Variable_5) == 0x000200, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_real_Variable_2) == 0x000238, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, Temp_real_Variable_3) == 0x00023C, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_13) == 0x000240, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_14) == 0x000250, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_15) == 0x000260, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_16) == 0x000270, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Attribute_1) == 0x000280, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Attribute_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_NewValue_1) == 0x0002B8, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_OldValue_1) == 0x0002BC, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_17) == 0x0002C0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_18) == 0x0002D0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_19) == 0x0002E0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_20) == 0x0002F0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_Event_MyGeometry) == 0x000300, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_Event_InDeltaTime) == 0x000338, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetPawn_ReturnValue_1) == 0x000340, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000348, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_8) == 0x000350, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2) == 0x000358, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_9) == 0x000360, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_Player) == 0x000368, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_NewPawn) == 0x000370, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_NewPawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_OldPawn) == 0x000378, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_OldPawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000380, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_3) == 0x000388, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_10) == 0x000390, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CustomEvent_PlayerState) == 0x000398, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_11) == 0x0003A0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetGzAbilitySystemComponent_ReturnValue_2) == 0x0003A8, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetGzAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_ListenForAttributeChange_ReturnValue) == 0x0003B0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_ListenForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_12) == 0x0003B8, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_13) == 0x0003B9, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x0003C0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x0003C8, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0003D0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_14) == 0x0003D1, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsBleeding_ReturnValue) == 0x0003D2, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsBleeding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_Select_Default) == 0x0003D3, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_PlayAnimation_ReturnValue) == 0x0003D8, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_15) == 0x0003E0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetGzAbilitySystemComponent_ReturnValue_3) == 0x0003E8, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetGzAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_ListenForAttributeChange_ReturnValue_1) == 0x0003F0, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_ListenForAttributeChange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_16) == 0x0003F8, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsValid_ReturnValue_17) == 0x0003F9, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetGameState_ReturnValue) == 0x000400, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State) == 0x000408, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_DynamicCast_bSuccess) == 0x000410, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_CreateDelegate_OutputDelegate_21) == 0x000414, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetOwningPlayer_ReturnValue) == 0x000428, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_GetGameState_ReturnValue_1) == 0x000430, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, CallFunc_IsSoloGamemode_bIsSolos) == 0x000438, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::CallFunc_IsSoloGamemode_bIsSolos' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State_1) == 0x000440, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry, K2Node_DynamicCast_bSuccess_1) == 0x000448, "Member 'WBP_SquadPanelEntry_C_ExecuteUbergraph_WBP_SquadPanelEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.InitializePlayerInformation
// 0x0128 (0x0128 - 0x0000)
struct WBP_SquadPanelEntry_C_InitializePlayerInformation final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlayerClanTag;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DDA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DDB[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DDC[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerSubscriptionIsValid_ReturnValue; // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DDD[0x5];                                     // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerClanTag_ReturnValue;             // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DDE[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIndexInTeam_OutputPin;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexInTeam_OutputPin_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DDF[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetTeammateShapeFromIndex_NewParam;       // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeammateColorFromIndex_OutPlayerColor; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00F0(0x0014)()
	uint8                                         Pad_6DE0[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0118(0x0010)()
};
static_assert(alignof(WBP_SquadPanelEntry_C_InitializePlayerInformation) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_InitializePlayerInformation");
static_assert(sizeof(WBP_SquadPanelEntry_C_InitializePlayerInformation) == 0x000128, "Wrong size on WBP_SquadPanelEntry_C_InitializePlayerInformation");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, PlayerState) == 0x000000, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, PlayerClanTag) == 0x000008, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::PlayerClanTag' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, Temp_bool_Variable) == 0x000018, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, Temp_byte_Variable) == 0x000019, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, Temp_bool_Variable_1) == 0x00001B, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, Temp_byte_Variable_2) == 0x00001C, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, Temp_byte_Variable_3) == 0x00001D, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, Temp_bool_Variable_2) == 0x00001E, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, Temp_byte_Variable_4) == 0x00001F, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, Temp_byte_Variable_5) == 0x000020, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, K2Node_Select_Default) == 0x000038, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_IsEmpty_ReturnValue) == 0x000098, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, K2Node_Select_Default_1) == 0x0000B1, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_GetPlayerSubscriptionIsValid_ReturnValue) == 0x0000B2, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_GetPlayerSubscriptionIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_GetPlayerClanTag_ReturnValue) == 0x0000B8, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_GetPlayerClanTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, K2Node_Select_Default_2) == 0x0000C8, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_GetIndexInTeam_OutputPin) == 0x0000CC, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_GetIndexInTeam_OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_GetIndexInTeam_OutputPin_1) == 0x0000D0, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_GetIndexInTeam_OutputPin_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_GetTeammateShapeFromIndex_NewParam) == 0x0000D8, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_GetTeammateShapeFromIndex_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_GetTeammateColorFromIndex_OutPlayerColor) == 0x0000E0, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_GetTeammateColorFromIndex_OutPlayerColor' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, K2Node_MakeStruct_SlateColor) == 0x0000F0, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_GetPlayerName_ReturnValue) == 0x000108, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InitializePlayerInformation, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000118, "Member 'WBP_SquadPanelEntry_C_InitializePlayerInformation::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.InventoryChangedFilter
// 0x0028 (0x0028 - 0x0000)
struct WBP_SquadPanelEntry_C_InventoryChangedFilter final
{
public:
	struct FGzInvItem                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EGzInvChangeEvent                             ChangeEvent;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE1[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           HexType;                                           // 0x0014(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CurrencyType;                                      // 0x001C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchItemToType_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchItemToType_ReturnValue_1;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_InventoryChangedFilter) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_InventoryChangedFilter");
static_assert(sizeof(WBP_SquadPanelEntry_C_InventoryChangedFilter) == 0x000028, "Wrong size on WBP_SquadPanelEntry_C_InventoryChangedFilter");
static_assert(offsetof(WBP_SquadPanelEntry_C_InventoryChangedFilter, Item) == 0x000000, "Member 'WBP_SquadPanelEntry_C_InventoryChangedFilter::Item' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InventoryChangedFilter, ChangeEvent) == 0x000010, "Member 'WBP_SquadPanelEntry_C_InventoryChangedFilter::ChangeEvent' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InventoryChangedFilter, ReturnValue) == 0x000011, "Member 'WBP_SquadPanelEntry_C_InventoryChangedFilter::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InventoryChangedFilter, HexType) == 0x000014, "Member 'WBP_SquadPanelEntry_C_InventoryChangedFilter::HexType' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InventoryChangedFilter, CurrencyType) == 0x00001C, "Member 'WBP_SquadPanelEntry_C_InventoryChangedFilter::CurrencyType' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InventoryChangedFilter, CallFunc_MatchItemToType_ReturnValue) == 0x000024, "Member 'WBP_SquadPanelEntry_C_InventoryChangedFilter::CallFunc_MatchItemToType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InventoryChangedFilter, CallFunc_MatchItemToType_ReturnValue_1) == 0x000025, "Member 'WBP_SquadPanelEntry_C_InventoryChangedFilter::CallFunc_MatchItemToType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_InventoryChangedFilter, CallFunc_BooleanOR_ReturnValue) == 0x000026, "Member 'WBP_SquadPanelEntry_C_InventoryChangedFilter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.IsBleeding
// 0x0030 (0x0030 - 0x0000)
struct WBP_SquadPanelEntry_C_IsBleeding final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_IsBleeding) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_IsBleeding");
static_assert(sizeof(WBP_SquadPanelEntry_C_IsBleeding) == 0x000030, "Wrong size on WBP_SquadPanelEntry_C_IsBleeding");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsBleeding, ReturnValue) == 0x000000, "Member 'WBP_SquadPanelEntry_C_IsBleeding::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsBleeding, CallFunc_GetGzAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'WBP_SquadPanelEntry_C_IsBleeding::CallFunc_GetGzAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsBleeding, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_SquadPanelEntry_C_IsBleeding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsBleeding, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'WBP_SquadPanelEntry_C_IsBleeding::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsBleeding, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'WBP_SquadPanelEntry_C_IsBleeding::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.IsNotAlive
// 0x0030 (0x0030 - 0x0000)
struct WBP_SquadPanelEntry_C_IsNotAlive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PlayerTags;                                        // 0x0008(0x0020)(Edit, BlueprintVisible)
	EGzAliveState                                 CallFunc_GetPlayerAliveState_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_IsNotAlive) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_IsNotAlive");
static_assert(sizeof(WBP_SquadPanelEntry_C_IsNotAlive) == 0x000030, "Wrong size on WBP_SquadPanelEntry_C_IsNotAlive");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsNotAlive, ReturnValue) == 0x000000, "Member 'WBP_SquadPanelEntry_C_IsNotAlive::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsNotAlive, PlayerTags) == 0x000008, "Member 'WBP_SquadPanelEntry_C_IsNotAlive::PlayerTags' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsNotAlive, CallFunc_GetPlayerAliveState_ReturnValue) == 0x000028, "Member 'WBP_SquadPanelEntry_C_IsNotAlive::CallFunc_GetPlayerAliveState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsNotAlive, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WBP_SquadPanelEntry_C_IsNotAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsNotAlive, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'WBP_SquadPanelEntry_C_IsNotAlive::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.IsPrematch
// 0x0068 (0x0068 - 0x0000)
struct WBP_SquadPanelEntry_C_IsPrematch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PrematchTags;                                      // 0x0008(0x0020)(Edit, BlueprintVisible)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiStageGameState*                 K2Node_DynamicCast_AsGz_Multi_Stage_Game_State;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE6[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetActiveStageTags_ReturnValue;           // 0x0040(0x0020)(ConstParm)
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_IsPrematch) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_IsPrematch");
static_assert(sizeof(WBP_SquadPanelEntry_C_IsPrematch) == 0x000068, "Wrong size on WBP_SquadPanelEntry_C_IsPrematch");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsPrematch, ReturnValue) == 0x000000, "Member 'WBP_SquadPanelEntry_C_IsPrematch::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsPrematch, PrematchTags) == 0x000008, "Member 'WBP_SquadPanelEntry_C_IsPrematch::PrematchTags' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsPrematch, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'WBP_SquadPanelEntry_C_IsPrematch::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsPrematch, K2Node_DynamicCast_AsGz_Multi_Stage_Game_State) == 0x000030, "Member 'WBP_SquadPanelEntry_C_IsPrematch::K2Node_DynamicCast_AsGz_Multi_Stage_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsPrematch, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_SquadPanelEntry_C_IsPrematch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsPrematch, CallFunc_GetActiveStageTags_ReturnValue) == 0x000040, "Member 'WBP_SquadPanelEntry_C_IsPrematch::CallFunc_GetActiveStageTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_IsPrematch, CallFunc_HasAnyTags_ReturnValue) == 0x000060, "Member 'WBP_SquadPanelEntry_C_IsPrematch::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64
// 0x0040 (0x0040 - 0x0000)
struct WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64) == 0x000040, "Wrong size on WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64, Attribute) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64, NewValue) == 0x000038, "Member 'WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64, OldValue) == 0x00003C, "Member 'WBP_SquadPanelEntry_C_OnAttributeChanged_070C980F48AEDB629C9F6798DB672C64::OldValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnAttributeChanged_B7477C04487663A28326BCA299317349
// 0x0040 (0x0040 - 0x0000)
struct WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349) == 0x000040, "Wrong size on WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349, Attribute) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349, NewValue) == 0x000038, "Member 'WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349, OldValue) == 0x00003C, "Member 'WBP_SquadPanelEntry_C_OnAttributeChanged_B7477C04487663A28326BCA299317349::OldValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnComebackArenaStateChange
// 0x0010 (0x0010 - 0x0000)
struct WBP_SquadPanelEntry_C_OnComebackArenaStateChange final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzComebackArenaCandidateState                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzComebackArenaCandidateState                CallFunc_GetComebackArenaState_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_3;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnComebackArenaStateChange) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_OnComebackArenaStateChange");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnComebackArenaStateChange) == 0x000010, "Wrong size on WBP_SquadPanelEntry_C_OnComebackArenaStateChange");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnComebackArenaStateChange, PlayerState) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnComebackArenaStateChange::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnComebackArenaStateChange, Temp_byte_Variable) == 0x000008, "Member 'WBP_SquadPanelEntry_C_OnComebackArenaStateChange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnComebackArenaStateChange, CallFunc_GetComebackArenaState_ReturnValue) == 0x000009, "Member 'WBP_SquadPanelEntry_C_OnComebackArenaStateChange::CallFunc_GetComebackArenaState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnComebackArenaStateChange, Temp_byte_Variable_1) == 0x00000A, "Member 'WBP_SquadPanelEntry_C_OnComebackArenaStateChange::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnComebackArenaStateChange, Temp_byte_Variable_2) == 0x00000B, "Member 'WBP_SquadPanelEntry_C_OnComebackArenaStateChange::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnComebackArenaStateChange, Temp_byte_Variable_3) == 0x00000C, "Member 'WBP_SquadPanelEntry_C_OnComebackArenaStateChange::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnComebackArenaStateChange, K2Node_Select_Default) == 0x00000D, "Member 'WBP_SquadPanelEntry_C_OnComebackArenaStateChange::K2Node_Select_Default' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnEventNotificationReceived
// 0x0058 (0x0058 - 0x0000)
struct WBP_SquadPanelEntry_C_OnEventNotificationReceived final
{
public:
	struct FGzEventNotificationData               ActedEvent;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE7[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnEventNotificationReceived) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_OnEventNotificationReceived");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnEventNotificationReceived) == 0x000058, "Wrong size on WBP_SquadPanelEntry_C_OnEventNotificationReceived");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnEventNotificationReceived, ActedEvent) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnEventNotificationReceived::ActedEvent' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnEventNotificationReceived, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000010, "Member 'WBP_SquadPanelEntry_C_OnEventNotificationReceived::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnEventNotificationReceived, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_SquadPanelEntry_C_OnEventNotificationReceived::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnEventNotificationReceived, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_SquadPanelEntry_C_OnEventNotificationReceived::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnEventNotificationReceived, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000030, "Member 'WBP_SquadPanelEntry_C_OnEventNotificationReceived::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnEventNotificationReceived, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'WBP_SquadPanelEntry_C_OnEventNotificationReceived::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnEventNotificationReceived, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000040, "Member 'WBP_SquadPanelEntry_C_OnEventNotificationReceived::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnEventNotificationReceived, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'WBP_SquadPanelEntry_C_OnEventNotificationReceived::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnEventNotificationReceived, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000050, "Member 'WBP_SquadPanelEntry_C_OnEventNotificationReceived::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnInventoryChanged
// 0x0028 (0x0028 - 0x0000)
struct WBP_SquadPanelEntry_C_OnInventoryChanged final
{
public:
	struct FGzInvItem                             ItemDelta;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EGzInvChangeEvent                             Event;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           HEXTag;                                            // 0x0014(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CurrencyTag;                                       // 0x001C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchItemToType_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchItemToType_ReturnValue_1;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnInventoryChanged) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_OnInventoryChanged");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnInventoryChanged) == 0x000028, "Wrong size on WBP_SquadPanelEntry_C_OnInventoryChanged");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnInventoryChanged, ItemDelta) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnInventoryChanged::ItemDelta' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnInventoryChanged, Event) == 0x000010, "Member 'WBP_SquadPanelEntry_C_OnInventoryChanged::Event' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnInventoryChanged, HEXTag) == 0x000014, "Member 'WBP_SquadPanelEntry_C_OnInventoryChanged::HEXTag' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnInventoryChanged, CurrencyTag) == 0x00001C, "Member 'WBP_SquadPanelEntry_C_OnInventoryChanged::CurrencyTag' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnInventoryChanged, CallFunc_MatchItemToType_ReturnValue) == 0x000024, "Member 'WBP_SquadPanelEntry_C_OnInventoryChanged::CallFunc_MatchItemToType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnInventoryChanged, CallFunc_MatchItemToType_ReturnValue_1) == 0x000025, "Member 'WBP_SquadPanelEntry_C_OnInventoryChanged::CallFunc_MatchItemToType_ReturnValue_1' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnPawnSet
// 0x0058 (0x0058 - 0x0000)
struct WBP_SquadPanelEntry_C_OnPawnSet final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  OldPawn;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzInvItem& ItemDelta, EGzInvChangeEvent Event)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzInvItem& Item, EGzInvChangeEvent ChangeEvent)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnPawnSet) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_OnPawnSet");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnPawnSet) == 0x000058, "Wrong size on WBP_SquadPanelEntry_C_OnPawnSet");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnPawnSet, Player) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnPawnSet::Player' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnPawnSet, NewPawn) == 0x000008, "Member 'WBP_SquadPanelEntry_C_OnPawnSet::NewPawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnPawnSet, OldPawn) == 0x000010, "Member 'WBP_SquadPanelEntry_C_OnPawnSet::OldPawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnPawnSet, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_SquadPanelEntry_C_OnPawnSet::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnPawnSet, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WBP_SquadPanelEntry_C_OnPawnSet::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnPawnSet, CallFunc_GetInventoryComponent_ReturnValue) == 0x000038, "Member 'WBP_SquadPanelEntry_C_OnPawnSet::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnPawnSet, CallFunc_GetPawn_ReturnValue) == 0x000040, "Member 'WBP_SquadPanelEntry_C_OnPawnSet::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnPawnSet, K2Node_DynamicCast_AsGz_Player_Character) == 0x000048, "Member 'WBP_SquadPanelEntry_C_OnPawnSet::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnPawnSet, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_SquadPanelEntry_C_OnPawnSet::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnRedeployCostChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnRedeployCostChanged final
{
public:
	const class AGzGameState*                     GameState;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnRedeployCostChanged) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_OnRedeployCostChanged");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnRedeployCostChanged) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnRedeployCostChanged");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnRedeployCostChanged, GameState) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnRedeployCostChanged::GameState' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnRedeploymentCountChange
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnRedeploymentCountChange final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnRedeploymentCountChange) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_OnRedeploymentCountChange");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnRedeploymentCountChange) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnRedeploymentCountChange");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnRedeploymentCountChange, PlayerState) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnRedeploymentCountChange::PlayerState' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnRespawnTimeChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnRespawnTimeChanged final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnRespawnTimeChanged) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_OnRespawnTimeChanged");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnRespawnTimeChanged) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnRespawnTimeChanged");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnRespawnTimeChanged, PlayerState) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnRespawnTimeChanged::PlayerState' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnTagAdded_1A217ABA48259426AAE2ADB00BD1FDAC
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnTagAdded_1A217ABA48259426AAE2ADB00BD1FDAC final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnTagAdded_1A217ABA48259426AAE2ADB00BD1FDAC) == 0x000004, "Wrong alignment on WBP_SquadPanelEntry_C_OnTagAdded_1A217ABA48259426AAE2ADB00BD1FDAC");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnTagAdded_1A217ABA48259426AAE2ADB00BD1FDAC) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnTagAdded_1A217ABA48259426AAE2ADB00BD1FDAC");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnTagAdded_1A217ABA48259426AAE2ADB00BD1FDAC, Tag) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnTagAdded_1A217ABA48259426AAE2ADB00BD1FDAC::Tag' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnTagAdded_536C3A6E48FCD9A128FDCF96F41D9E58
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnTagAdded_536C3A6E48FCD9A128FDCF96F41D9E58 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnTagAdded_536C3A6E48FCD9A128FDCF96F41D9E58) == 0x000004, "Wrong alignment on WBP_SquadPanelEntry_C_OnTagAdded_536C3A6E48FCD9A128FDCF96F41D9E58");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnTagAdded_536C3A6E48FCD9A128FDCF96F41D9E58) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnTagAdded_536C3A6E48FCD9A128FDCF96F41D9E58");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnTagAdded_536C3A6E48FCD9A128FDCF96F41D9E58, Tag) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnTagAdded_536C3A6E48FCD9A128FDCF96F41D9E58::Tag' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnTagAdded_6A3661EA4F052819F688D09BFF090C73
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnTagAdded_6A3661EA4F052819F688D09BFF090C73 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnTagAdded_6A3661EA4F052819F688D09BFF090C73) == 0x000004, "Wrong alignment on WBP_SquadPanelEntry_C_OnTagAdded_6A3661EA4F052819F688D09BFF090C73");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnTagAdded_6A3661EA4F052819F688D09BFF090C73) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnTagAdded_6A3661EA4F052819F688D09BFF090C73");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnTagAdded_6A3661EA4F052819F688D09BFF090C73, Tag) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnTagAdded_6A3661EA4F052819F688D09BFF090C73::Tag' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnTagAdded_D02C2ECB4AB4C6ED39B8F2945CBF4C9C
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnTagAdded_D02C2ECB4AB4C6ED39B8F2945CBF4C9C final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnTagAdded_D02C2ECB4AB4C6ED39B8F2945CBF4C9C) == 0x000004, "Wrong alignment on WBP_SquadPanelEntry_C_OnTagAdded_D02C2ECB4AB4C6ED39B8F2945CBF4C9C");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnTagAdded_D02C2ECB4AB4C6ED39B8F2945CBF4C9C) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnTagAdded_D02C2ECB4AB4C6ED39B8F2945CBF4C9C");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnTagAdded_D02C2ECB4AB4C6ED39B8F2945CBF4C9C, Tag) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnTagAdded_D02C2ECB4AB4C6ED39B8F2945CBF4C9C::Tag' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnTagRemoved_1A217ABA48259426AAE2ADB00BD1FDAC
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnTagRemoved_1A217ABA48259426AAE2ADB00BD1FDAC final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnTagRemoved_1A217ABA48259426AAE2ADB00BD1FDAC) == 0x000004, "Wrong alignment on WBP_SquadPanelEntry_C_OnTagRemoved_1A217ABA48259426AAE2ADB00BD1FDAC");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnTagRemoved_1A217ABA48259426AAE2ADB00BD1FDAC) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnTagRemoved_1A217ABA48259426AAE2ADB00BD1FDAC");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnTagRemoved_1A217ABA48259426AAE2ADB00BD1FDAC, Tag) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnTagRemoved_1A217ABA48259426AAE2ADB00BD1FDAC::Tag' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnTagRemoved_536C3A6E48FCD9A128FDCF96F41D9E58
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnTagRemoved_536C3A6E48FCD9A128FDCF96F41D9E58 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnTagRemoved_536C3A6E48FCD9A128FDCF96F41D9E58) == 0x000004, "Wrong alignment on WBP_SquadPanelEntry_C_OnTagRemoved_536C3A6E48FCD9A128FDCF96F41D9E58");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnTagRemoved_536C3A6E48FCD9A128FDCF96F41D9E58) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnTagRemoved_536C3A6E48FCD9A128FDCF96F41D9E58");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnTagRemoved_536C3A6E48FCD9A128FDCF96F41D9E58, Tag) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnTagRemoved_536C3A6E48FCD9A128FDCF96F41D9E58::Tag' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnTagRemoved_6A3661EA4F052819F688D09BFF090C73
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnTagRemoved_6A3661EA4F052819F688D09BFF090C73 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnTagRemoved_6A3661EA4F052819F688D09BFF090C73) == 0x000004, "Wrong alignment on WBP_SquadPanelEntry_C_OnTagRemoved_6A3661EA4F052819F688D09BFF090C73");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnTagRemoved_6A3661EA4F052819F688D09BFF090C73) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnTagRemoved_6A3661EA4F052819F688D09BFF090C73");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnTagRemoved_6A3661EA4F052819F688D09BFF090C73, Tag) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnTagRemoved_6A3661EA4F052819F688D09BFF090C73::Tag' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.OnTagRemoved_D02C2ECB4AB4C6ED39B8F2945CBF4C9C
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadPanelEntry_C_OnTagRemoved_D02C2ECB4AB4C6ED39B8F2945CBF4C9C final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_OnTagRemoved_D02C2ECB4AB4C6ED39B8F2945CBF4C9C) == 0x000004, "Wrong alignment on WBP_SquadPanelEntry_C_OnTagRemoved_D02C2ECB4AB4C6ED39B8F2945CBF4C9C");
static_assert(sizeof(WBP_SquadPanelEntry_C_OnTagRemoved_D02C2ECB4AB4C6ED39B8F2945CBF4C9C) == 0x000008, "Wrong size on WBP_SquadPanelEntry_C_OnTagRemoved_D02C2ECB4AB4C6ED39B8F2945CBF4C9C");
static_assert(offsetof(WBP_SquadPanelEntry_C_OnTagRemoved_D02C2ECB4AB4C6ED39B8F2945CBF4C9C, Tag) == 0x000000, "Member 'WBP_SquadPanelEntry_C_OnTagRemoved_D02C2ECB4AB4C6ED39B8F2945CBF4C9C::Tag' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.SoloRedeploymentAvailable
// 0x0010 (0x0010 - 0x0000)
struct WBP_SquadPanelEntry_C_SoloRedeploymentAvailable final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DEA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_SoloRedeploymentAvailable) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_SoloRedeploymentAvailable");
static_assert(sizeof(WBP_SquadPanelEntry_C_SoloRedeploymentAvailable) == 0x000010, "Wrong size on WBP_SquadPanelEntry_C_SoloRedeploymentAvailable");
static_assert(offsetof(WBP_SquadPanelEntry_C_SoloRedeploymentAvailable, Available) == 0x000000, "Member 'WBP_SquadPanelEntry_C_SoloRedeploymentAvailable::Available' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_SoloRedeploymentAvailable, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_SquadPanelEntry_C_SoloRedeploymentAvailable::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_SquadPanelEntry_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_Tick) == 0x000004, "Wrong alignment on WBP_SquadPanelEntry_C_Tick");
static_assert(sizeof(WBP_SquadPanelEntry_C_Tick) == 0x00003C, "Wrong size on WBP_SquadPanelEntry_C_Tick");
static_assert(offsetof(WBP_SquadPanelEntry_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_SquadPanelEntry_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_SquadPanelEntry_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.TickUpdateRespawn
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_SquadPanelEntry_C_TickUpdateRespawn final
{
public:
	struct FGameplayTagContainer                  TagsToCheck;                                       // 0x0000(0x0020)(Edit, BlueprintVisible)
	double                                        TimeToRespawn;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowRespawnTime;                                  // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DEB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BoostTimeDelta;                                    // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResTime;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowBoostTime;                                    // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DEC[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RespawnTime;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DED[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DEE[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DEF[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRespawnTime_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF0[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_ResTime_ImplicitCast;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_TickUpdateRespawn) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_TickUpdateRespawn");
static_assert(sizeof(WBP_SquadPanelEntry_C_TickUpdateRespawn) == 0x0000A0, "Wrong size on WBP_SquadPanelEntry_C_TickUpdateRespawn");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, TagsToCheck) == 0x000000, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::TagsToCheck' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, TimeToRespawn) == 0x000020, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::TimeToRespawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, bShowRespawnTime) == 0x000028, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::bShowRespawnTime' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, BoostTimeDelta) == 0x00002C, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::BoostTimeDelta' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, ResTime) == 0x000030, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::ResTime' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, bShowBoostTime) == 0x000038, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::bShowBoostTime' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, RespawnTime) == 0x00003C, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::RespawnTime' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_FTrunc_ReturnValue) == 0x000040, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_GetPawn_ReturnValue) == 0x000048, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000050, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000060, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000070, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000071, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_GetGameState_ReturnValue) == 0x000078, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000080, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, CallFunc_GetRespawnTime_ReturnValue) == 0x000090, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::CallFunc_GetRespawnTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_TickUpdateRespawn, K2Node_VariableSet_ResTime_ImplicitCast) == 0x000098, "Member 'WBP_SquadPanelEntry_C_TickUpdateRespawn::K2Node_VariableSet_ResTime_ImplicitCast' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UnbindAndUnlistenAll
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_SquadPanelEntry_C_UnbindAndUnlistenAll final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzEventNotificationData& ActedEvent)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF1[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzExtractionRoyaleGameState*           K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF2[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UnbindAndUnlistenAll");
static_assert(sizeof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll) == 0x0000C0, "Wrong size on WBP_SquadPanelEntry_C_UnbindAndUnlistenAll");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State) == 0x000030, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate_3) == 0x00004C, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate_4) == 0x00005C, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate_5) == 0x00006C, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate_6) == 0x00007C, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate_7) == 0x00008C, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate_8) == 0x00009C, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000AC, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UnbindAndUnlistenAll, CallFunc_IsValid_ReturnValue_4) == 0x0000BC, "Member 'WBP_SquadPanelEntry_C_UnbindAndUnlistenAll::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdateArmor
// 0x0028 (0x0028 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdateArmor final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxArmor_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetArmor_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdateArmor) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdateArmor");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdateArmor) == 0x000028, "Wrong size on WBP_SquadPanelEntry_C_UpdateArmor");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateArmor, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdateArmor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateArmor, CallFunc_GetMaxArmor_ReturnValue) == 0x000004, "Member 'WBP_SquadPanelEntry_C_UpdateArmor::CallFunc_GetMaxArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateArmor, CallFunc_GetArmor_ReturnValue) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdateArmor::CallFunc_GetArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateArmor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_SquadPanelEntry_C_UpdateArmor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateArmor, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'WBP_SquadPanelEntry_C_UpdateArmor::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateArmor, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UpdateArmor::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdateBars
// 0x0048 (0x0048 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdateBars final
{
public:
	E_SquadInfoStates                             InfoState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF6[0x1];                                     // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF7[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF8[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPrematch_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdateBars) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdateBars");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdateBars) == 0x000048, "Wrong size on WBP_SquadPanelEntry_C_UpdateBars");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, InfoState) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdateBars::InfoState' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_int_Variable) == 0x000004, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_int_Variable_1) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_int_Variable_2) == 0x00000C, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_int_Variable_3) == 0x000010, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_int_Variable_4) == 0x000014, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_int_Variable_5) == 0x000018, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_int_Variable_6) == 0x00001C, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_int_Variable_7) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_bool_Variable) == 0x000024, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_byte_Variable) == 0x000025, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_byte_Variable_1) == 0x000026, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, CallFunc_GetActiveWidget_ReturnValue) == 0x000028, "Member 'WBP_SquadPanelEntry_C_UpdateBars::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'WBP_SquadPanelEntry_C_UpdateBars::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_int_Variable_8) == 0x000034, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, Temp_byte_Variable_2) == 0x000038, "Member 'WBP_SquadPanelEntry_C_UpdateBars::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, K2Node_Select_Default) == 0x00003C, "Member 'WBP_SquadPanelEntry_C_UpdateBars::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'WBP_SquadPanelEntry_C_UpdateBars::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, CallFunc_IsPrematch_ReturnValue) == 0x000041, "Member 'WBP_SquadPanelEntry_C_UpdateBars::CallFunc_IsPrematch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'WBP_SquadPanelEntry_C_UpdateBars::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, K2Node_Select_Default_1) == 0x000043, "Member 'WBP_SquadPanelEntry_C_UpdateBars::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBars, K2Node_SwitchEnum_CmpSuccess) == 0x000044, "Member 'WBP_SquadPanelEntry_C_UpdateBars::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdateBoostRespawnTime
// 0x0170 (0x0170 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdateBoostRespawnTime final
{
public:
	int32                                         BoostTimeDelta;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowBoostTime;                                    // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ResTime;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DFA[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0010)()
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DFB[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetOldRespawnTime_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DFC[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRespawnTime_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOldRespawnTime_ReturnValue_1;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DFD[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetOldRespawnTime_ReturnValue_2;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DFE[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0060(0x0010)()
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DFF[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00C8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0130(0x0010)()
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdateBoostRespawnTime");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime) == 0x000170, "Wrong size on WBP_SquadPanelEntry_C_UpdateBoostRespawnTime");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, BoostTimeDelta) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::BoostTimeDelta' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, bShowBoostTime) == 0x000004, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::bShowBoostTime' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, ResTime) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::ResTime' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, Temp_bool_Variable) == 0x00000C, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, Temp_text_Variable) == 0x000010, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, Temp_text_Variable_1) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, Temp_bool_Variable_1) == 0x000030, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000031, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, Temp_byte_Variable) == 0x000032, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, Temp_byte_Variable_1) == 0x000033, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, K2Node_Select_Default) == 0x000034, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_GetOldRespawnTime_ReturnValue) == 0x000038, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_GetOldRespawnTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000041, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_GetRespawnTime_ReturnValue) == 0x000044, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_GetRespawnTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_GetOldRespawnTime_ReturnValue_1) == 0x000048, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_GetOldRespawnTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00004C, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_GetOldRespawnTime_ReturnValue_2) == 0x000050, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_GetOldRespawnTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, K2Node_Select_Default_1) == 0x000060, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Abs_ReturnValue) == 0x000070, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_FTrunc_ReturnValue) == 0x0000C0, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Conv_IntToText_ReturnValue) == 0x0000C8, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, K2Node_MakeArray_Array) == 0x000120, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Format_ReturnValue) == 0x000130, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000148, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000150, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000158, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000160, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateBoostRespawnTime, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000168, "Member 'WBP_SquadPanelEntry_C_UpdateBoostRespawnTime::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdateConnectivity
// 0x0050 (0x0050 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdateConnectivity final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerIsConnected;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConnected_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x000C(0x0014)()
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E00[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0024(0x0014)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E01[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzConnectionState                            CallFunc_GetConnectionState_ReturnValue;           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdateConnectivity) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdateConnectivity");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdateConnectivity) == 0x000050, "Wrong size on WBP_SquadPanelEntry_C_UpdateConnectivity");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, PlayerState) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, PlayerIsConnected) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::PlayerIsConnected' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, Temp_byte_Variable) == 0x000009, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, CallFunc_IsConnected_ReturnValue) == 0x00000A, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::CallFunc_IsConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, K2Node_MakeStruct_SlateColor) == 0x00000C, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, Temp_bool_Variable) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, Temp_byte_Variable_2) == 0x000021, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, Temp_byte_Variable_3) == 0x000022, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, K2Node_MakeStruct_SlateColor_1) == 0x000024, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, Temp_bool_Variable_1) == 0x000038, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, K2Node_Select_Default) == 0x000039, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, CallFunc_SelectColor_ReturnValue) == 0x00003C, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, K2Node_Select_Default_1) == 0x00004C, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, CallFunc_GetConnectionState_ReturnValue) == 0x00004D, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::CallFunc_GetConnectionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateConnectivity, K2Node_SwitchEnum_CmpSuccess) == 0x00004E, "Member 'WBP_SquadPanelEntry_C_UpdateConnectivity::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdateCurrency
// 0x0058 (0x0058 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdateCurrency final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E02[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStoredInGameCurrencyQuantity_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E03[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzHealthInterface>    CallFunc_IsAlive_self_CastInput;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E04[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E05[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0034(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E06[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCountByType_ReturnValue;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E07[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0010)()
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdateCurrency) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdateCurrency");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdateCurrency) == 0x000058, "Wrong size on WBP_SquadPanelEntry_C_UpdateCurrency");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, Amount) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::Amount' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, CallFunc_GetStoredInGameCurrencyQuantity_ReturnValue) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::CallFunc_GetStoredInGameCurrencyQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, CallFunc_IsAlive_self_CastInput) == 0x000010, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::CallFunc_IsAlive_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, CallFunc_IsAlive_ReturnValue) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, CallFunc_GetInventoryComponent_ReturnValue) == 0x000028, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, Temp_struct_Variable) == 0x000034, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, CallFunc_IsValid_ReturnValue_2) == 0x00003C, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, CallFunc_GetItemCountByType_ReturnValue) == 0x000040, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::CallFunc_GetItemCountByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateCurrency, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'WBP_SquadPanelEntry_C_UpdateCurrency::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdateHealth
// 0x0050 (0x0050 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdateHealth final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E08[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzHealthInterface>    CallFunc_GetMaxHealth_self_CastInput;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E09[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzHealthInterface>    CallFunc_GetHealth_self_CastInput;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E0A[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdateHealth) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdateHealth");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdateHealth) == 0x000050, "Wrong size on WBP_SquadPanelEntry_C_UpdateHealth");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHealth, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdateHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHealth, CallFunc_GetMaxHealth_self_CastInput) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdateHealth::CallFunc_GetMaxHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHealth, CallFunc_GetMaxHealth_ReturnValue) == 0x000018, "Member 'WBP_SquadPanelEntry_C_UpdateHealth::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHealth, CallFunc_GetHealth_self_CastInput) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UpdateHealth::CallFunc_GetHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHealth, CallFunc_GetHealth_ReturnValue) == 0x000030, "Member 'WBP_SquadPanelEntry_C_UpdateHealth::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHealth, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_SquadPanelEntry_C_UpdateHealth::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHealth, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000040, "Member 'WBP_SquadPanelEntry_C_UpdateHealth::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHealth, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'WBP_SquadPanelEntry_C_UpdateHealth::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdateHex
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdateHex final
{
public:
	int32                                         HighestPrice;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 HighestRarity;                                     // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E0B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            HexItemData;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGzInvItem>                     Hexes;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E0C[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0024(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E0D[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGzInvItem>                     CallFunc_GetItemsByItemType_ReturnValue;           // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E0E[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E0F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E10[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0078(0x0014)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E11[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             CallFunc_Array_Get_Item;                           // 0x0090(0x0010)()
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E12[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E13[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdateHex) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdateHex");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdateHex) == 0x0000C0, "Wrong size on WBP_SquadPanelEntry_C_UpdateHex");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, HighestPrice) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdateHex::HighestPrice' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, HighestRarity) == 0x000004, "Member 'WBP_SquadPanelEntry_C_UpdateHex::HighestRarity' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, HexItemData) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdateHex::HexItemData' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, Hexes) == 0x000010, "Member 'WBP_SquadPanelEntry_C_UpdateHex::Hexes' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_GetRarity_ReturnValue) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_Array_IsEmpty_ReturnValue) == 0x000021, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, Temp_struct_Variable) == 0x000024, "Member 'WBP_SquadPanelEntry_C_UpdateHex::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_SquadPanelEntry_C_UpdateHex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_GetInventoryComponent_ReturnValue) == 0x000038, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_GetItemsByItemType_ReturnValue) == 0x000040, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_GetItemsByItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WBP_SquadPanelEntry_C_UpdateHex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, Temp_byte_Variable) == 0x000054, "Member 'WBP_SquadPanelEntry_C_UpdateHex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, Temp_byte_Variable_1) == 0x000060, "Member 'WBP_SquadPanelEntry_C_UpdateHex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_GetRarityColor_ReturnValue) == 0x000064, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, Temp_bool_Variable) == 0x000074, "Member 'WBP_SquadPanelEntry_C_UpdateHex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, K2Node_MakeStruct_SlateColor) == 0x000078, "Member 'WBP_SquadPanelEntry_C_UpdateHex::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, K2Node_Select_Default) == 0x00008C, "Member 'WBP_SquadPanelEntry_C_UpdateHex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_MakeLiteralByte_ReturnValue) == 0x00008D, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_Array_Get_Item) == 0x000090, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_Greater_ByteByte_ReturnValue) == 0x0000A0, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_GetItemData_ReturnValue) == 0x0000A8, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateHex, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'WBP_SquadPanelEntry_C_UpdateHex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdatePawnSet
// 0x0018 (0x0018 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdatePawnSet final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  OldPawn;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdatePawnSet) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdatePawnSet");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdatePawnSet) == 0x000018, "Wrong size on WBP_SquadPanelEntry_C_UpdatePawnSet");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePawnSet, Player) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdatePawnSet::Player' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePawnSet, NewPawn) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdatePawnSet::NewPawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePawnSet, OldPawn) == 0x000010, "Member 'WBP_SquadPanelEntry_C_UpdatePawnSet::OldPawn' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdatePlayerAliveState
// 0x0060 (0x0060 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdatePlayerAliveState final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_3;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_4;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             Temp_byte_Variable_5;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInComebackArena_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E14[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiStageGameState*                 K2Node_DynamicCast_AsGz_Multi_Stage_Game_State;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBleeding_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E15[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetActiveStageTags_ReturnValue;           // 0x0038(0x0020)(ConstParm)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             K2Node_Select_Default;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNotAlive_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInComebackArenaQueue_ReturnValue;       // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             K2Node_Select_Default_1;                           // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             K2Node_Select_Default_2;                           // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SquadInfoStates                             K2Node_Select_Default_3;                           // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdatePlayerAliveState");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState) == 0x000060, "Wrong size on WBP_SquadPanelEntry_C_UpdatePlayerAliveState");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, PlayerState) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_bool_Variable) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_byte_Variable) == 0x000009, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_bool_Variable_1) == 0x00000A, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_bool_Variable_2) == 0x00000C, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_byte_Variable_2) == 0x00000D, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_byte_Variable_3) == 0x00000E, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_IsValid_ReturnValue) == 0x00000F, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_GetGzAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_GetGzAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_byte_Variable_4) == 0x000019, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_byte_Variable_5) == 0x00001A, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_IsInComebackArena_ReturnValue) == 0x00001B, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_IsInComebackArena_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, K2Node_DynamicCast_AsGz_Multi_Stage_Game_State) == 0x000028, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::K2Node_DynamicCast_AsGz_Multi_Stage_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_IsBleeding_ReturnValue) == 0x000031, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_IsBleeding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_GetActiveStageTags_ReturnValue) == 0x000038, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_GetActiveStageTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_HasTag_ReturnValue) == 0x000058, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, K2Node_Select_Default) == 0x000059, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_IsNotAlive_ReturnValue) == 0x00005A, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_IsNotAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, CallFunc_IsInComebackArenaQueue_ReturnValue) == 0x00005B, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::CallFunc_IsInComebackArenaQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, Temp_bool_Variable_3) == 0x00005C, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, K2Node_Select_Default_1) == 0x00005D, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, K2Node_Select_Default_2) == 0x00005E, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdatePlayerAliveState, K2Node_Select_Default_3) == 0x00005F, "Member 'WBP_SquadPanelEntry_C_UpdatePlayerAliveState::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdateRespawnCost
// 0x0018 (0x0018 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdateRespawnCost final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E16[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRedeploymentCost_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_CurrencyTextFormat_Result;                // 0x0008(0x0010)()
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdateRespawnCost) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdateRespawnCost");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdateRespawnCost) == 0x000018, "Wrong size on WBP_SquadPanelEntry_C_UpdateRespawnCost");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnCost, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnCost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnCost, CallFunc_GetRedeploymentCost_ReturnValue) == 0x000004, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnCost::CallFunc_GetRedeploymentCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnCost, CallFunc_CurrencyTextFormat_Result) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnCost::CallFunc_CurrencyTextFormat_Result' has a wrong offset!");

// Function WBP_SquadPanelEntry.WBP_SquadPanelEntry_C.UpdateRespawnTime
// 0x0028 (0x0028 - 0x0000)
struct WBP_SquadPanelEntry_C_UpdateRespawnTime final
{
public:
	int32                                         RespawnTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShow;                                             // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E17[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0010)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadPanelEntry_C_UpdateRespawnTime) == 0x000008, "Wrong alignment on WBP_SquadPanelEntry_C_UpdateRespawnTime");
static_assert(sizeof(WBP_SquadPanelEntry_C_UpdateRespawnTime) == 0x000028, "Wrong size on WBP_SquadPanelEntry_C_UpdateRespawnTime");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnTime, RespawnTime) == 0x000000, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnTime::RespawnTime' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnTime, bShow) == 0x000004, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnTime::bShow' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnTime, Temp_bool_Variable) == 0x000005, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnTime, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000006, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnTime::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnTime, Temp_byte_Variable) == 0x000007, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnTime::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnTime, Temp_byte_Variable_1) == 0x000008, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnTime::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnTime, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnTime::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadPanelEntry_C_UpdateRespawnTime, K2Node_Select_Default) == 0x000020, "Member 'WBP_SquadPanelEntry_C_UpdateRespawnTime::K2Node_Select_Default' has a wrong offset!");

}

