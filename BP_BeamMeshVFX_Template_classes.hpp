#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BeamMeshVFX_Template

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BeamMeshVFX_Template.BP_BeamMeshVFX_Template_C
// 0x0048 (0x02E8 - 0x02A0)
class ABP_BeamMeshVFX_Template_C : public AActor
{
public:
	class UStaticMeshComponent*                   BeamMesh;                                          // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MaterialInstance;                                  // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            BeamMeshClass;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterialInstance;                           // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x02D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BeamMeshVFX_Template_C">();
	}
	static class ABP_BeamMeshVFX_Template_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BeamMeshVFX_Template_C>();
	}
};
static_assert(alignof(ABP_BeamMeshVFX_Template_C) == 0x000008, "Wrong alignment on ABP_BeamMeshVFX_Template_C");
static_assert(sizeof(ABP_BeamMeshVFX_Template_C) == 0x0002E8, "Wrong size on ABP_BeamMeshVFX_Template_C");
static_assert(offsetof(ABP_BeamMeshVFX_Template_C, BeamMesh) == 0x0002A0, "Member 'ABP_BeamMeshVFX_Template_C::BeamMesh' has a wrong offset!");
static_assert(offsetof(ABP_BeamMeshVFX_Template_C, MaterialInstance) == 0x0002A8, "Member 'ABP_BeamMeshVFX_Template_C::MaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_BeamMeshVFX_Template_C, BeamMeshClass) == 0x0002B0, "Member 'ABP_BeamMeshVFX_Template_C::BeamMeshClass' has a wrong offset!");
static_assert(offsetof(ABP_BeamMeshVFX_Template_C, DynamicMaterialInstance) == 0x0002B8, "Member 'ABP_BeamMeshVFX_Template_C::DynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_BeamMeshVFX_Template_C, Color) == 0x0002C0, "Member 'ABP_BeamMeshVFX_Template_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_BeamMeshVFX_Template_C, Scale) == 0x0002D0, "Member 'ABP_BeamMeshVFX_Template_C::Scale' has a wrong offset!");

}

