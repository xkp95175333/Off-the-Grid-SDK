#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaUtils

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "XsollaUtils_structs.hpp"


namespace SDK::Params
{

// Function XsollaUtils.XsollaDemoGameModeBase.GetLoginDemo
// 0x0008 (0x0008 - 0x0000)
struct XsollaDemoGameModeBase_GetLoginDemo final
{
public:
	TSubclassOf<class UUserWidget>                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaDemoGameModeBase_GetLoginDemo) == 0x000008, "Wrong alignment on XsollaDemoGameModeBase_GetLoginDemo");
static_assert(sizeof(XsollaDemoGameModeBase_GetLoginDemo) == 0x000008, "Wrong size on XsollaDemoGameModeBase_GetLoginDemo");
static_assert(offsetof(XsollaDemoGameModeBase_GetLoginDemo, ReturnValue) == 0x000000, "Member 'XsollaDemoGameModeBase_GetLoginDemo::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaDemoGameModeBase.GetStoreDemo
// 0x0008 (0x0008 - 0x0000)
struct XsollaDemoGameModeBase_GetStoreDemo final
{
public:
	TSubclassOf<class UUserWidget>                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaDemoGameModeBase_GetStoreDemo) == 0x000008, "Wrong alignment on XsollaDemoGameModeBase_GetStoreDemo");
static_assert(sizeof(XsollaDemoGameModeBase_GetStoreDemo) == 0x000008, "Wrong size on XsollaDemoGameModeBase_GetStoreDemo");
static_assert(offsetof(XsollaDemoGameModeBase_GetStoreDemo, ReturnValue) == 0x000000, "Member 'XsollaDemoGameModeBase_GetStoreDemo::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsImageLoader.LoadImage
// 0x0030 (0x0030 - 0x0000)
struct XsollaUtilsImageLoader_LoadImage final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FSlateBrush& ImageBrush, const class FString& ImageUrl)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& ImageUrl)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsImageLoader_LoadImage) == 0x000008, "Wrong alignment on XsollaUtilsImageLoader_LoadImage");
static_assert(sizeof(XsollaUtilsImageLoader_LoadImage) == 0x000030, "Wrong size on XsollaUtilsImageLoader_LoadImage");
static_assert(offsetof(XsollaUtilsImageLoader_LoadImage, URL) == 0x000000, "Member 'XsollaUtilsImageLoader_LoadImage::URL' has a wrong offset!");
static_assert(offsetof(XsollaUtilsImageLoader_LoadImage, SuccessCallback) == 0x000010, "Member 'XsollaUtilsImageLoader_LoadImage::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaUtilsImageLoader_LoadImage, ErrorCallback) == 0x000020, "Member 'XsollaUtilsImageLoader_LoadImage::ErrorCallback' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.Conv_BoolToXsollaJsonVariant
// 0x0020 (0x0020 - 0x0000)
struct XsollaUtilsLibrary_Conv_BoolToXsollaJsonVariant final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_281F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FXsollaJsonVariant                     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_Conv_BoolToXsollaJsonVariant) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_Conv_BoolToXsollaJsonVariant");
static_assert(sizeof(XsollaUtilsLibrary_Conv_BoolToXsollaJsonVariant) == 0x000020, "Wrong size on XsollaUtilsLibrary_Conv_BoolToXsollaJsonVariant");
static_assert(offsetof(XsollaUtilsLibrary_Conv_BoolToXsollaJsonVariant, Value) == 0x000000, "Member 'XsollaUtilsLibrary_Conv_BoolToXsollaJsonVariant::Value' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_Conv_BoolToXsollaJsonVariant, ReturnValue) == 0x000008, "Member 'XsollaUtilsLibrary_Conv_BoolToXsollaJsonVariant::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.Conv_FloatToXsollaJsonVariant
// 0x0020 (0x0020 - 0x0000)
struct XsollaUtilsLibrary_Conv_FloatToXsollaJsonVariant final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2820[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FXsollaJsonVariant                     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_Conv_FloatToXsollaJsonVariant) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_Conv_FloatToXsollaJsonVariant");
static_assert(sizeof(XsollaUtilsLibrary_Conv_FloatToXsollaJsonVariant) == 0x000020, "Wrong size on XsollaUtilsLibrary_Conv_FloatToXsollaJsonVariant");
static_assert(offsetof(XsollaUtilsLibrary_Conv_FloatToXsollaJsonVariant, Value) == 0x000000, "Member 'XsollaUtilsLibrary_Conv_FloatToXsollaJsonVariant::Value' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_Conv_FloatToXsollaJsonVariant, ReturnValue) == 0x000008, "Member 'XsollaUtilsLibrary_Conv_FloatToXsollaJsonVariant::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.Conv_IntToXsollaJsonVariant
// 0x0020 (0x0020 - 0x0000)
struct XsollaUtilsLibrary_Conv_IntToXsollaJsonVariant final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2821[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FXsollaJsonVariant                     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_Conv_IntToXsollaJsonVariant) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_Conv_IntToXsollaJsonVariant");
static_assert(sizeof(XsollaUtilsLibrary_Conv_IntToXsollaJsonVariant) == 0x000020, "Wrong size on XsollaUtilsLibrary_Conv_IntToXsollaJsonVariant");
static_assert(offsetof(XsollaUtilsLibrary_Conv_IntToXsollaJsonVariant, Value) == 0x000000, "Member 'XsollaUtilsLibrary_Conv_IntToXsollaJsonVariant::Value' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_Conv_IntToXsollaJsonVariant, ReturnValue) == 0x000008, "Member 'XsollaUtilsLibrary_Conv_IntToXsollaJsonVariant::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.Conv_StringToXsollaJsonVariant
// 0x0028 (0x0028 - 0x0000)
struct XsollaUtilsLibrary_Conv_StringToXsollaJsonVariant final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FXsollaJsonVariant                     ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_Conv_StringToXsollaJsonVariant) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_Conv_StringToXsollaJsonVariant");
static_assert(sizeof(XsollaUtilsLibrary_Conv_StringToXsollaJsonVariant) == 0x000028, "Wrong size on XsollaUtilsLibrary_Conv_StringToXsollaJsonVariant");
static_assert(offsetof(XsollaUtilsLibrary_Conv_StringToXsollaJsonVariant, Value) == 0x000000, "Member 'XsollaUtilsLibrary_Conv_StringToXsollaJsonVariant::Value' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_Conv_StringToXsollaJsonVariant, ReturnValue) == 0x000010, "Member 'XsollaUtilsLibrary_Conv_StringToXsollaJsonVariant::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.CreateCustomRequest
// 0x0040 (0x0040 - 0x0000)
struct XsollaUtilsLibrary_CreateCustomRequest final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Verb;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Data)>    SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_CreateCustomRequest) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_CreateCustomRequest");
static_assert(sizeof(XsollaUtilsLibrary_CreateCustomRequest) == 0x000040, "Wrong size on XsollaUtilsLibrary_CreateCustomRequest");
static_assert(offsetof(XsollaUtilsLibrary_CreateCustomRequest, URL) == 0x000000, "Member 'XsollaUtilsLibrary_CreateCustomRequest::URL' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_CreateCustomRequest, Verb) == 0x000010, "Member 'XsollaUtilsLibrary_CreateCustomRequest::Verb' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_CreateCustomRequest, SuccessCallback) == 0x000020, "Member 'XsollaUtilsLibrary_CreateCustomRequest::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_CreateCustomRequest, ErrorCallback) == 0x000030, "Member 'XsollaUtilsLibrary_CreateCustomRequest::ErrorCallback' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.GetDefaultObject
// 0x0010 (0x0010 - 0x0000)
struct XsollaUtilsLibrary_GetDefaultObject final
{
public:
	TSubclassOf<class UObject>                    ObjectClass;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                DefaultObj;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_GetDefaultObject) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_GetDefaultObject");
static_assert(sizeof(XsollaUtilsLibrary_GetDefaultObject) == 0x000010, "Wrong size on XsollaUtilsLibrary_GetDefaultObject");
static_assert(offsetof(XsollaUtilsLibrary_GetDefaultObject, ObjectClass) == 0x000000, "Member 'XsollaUtilsLibrary_GetDefaultObject::ObjectClass' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_GetDefaultObject, DefaultObj) == 0x000008, "Member 'XsollaUtilsLibrary_GetDefaultObject::DefaultObj' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.GetImageLoader
// 0x0008 (0x0008 - 0x0000)
struct XsollaUtilsLibrary_GetImageLoader final
{
public:
	class UXsollaUtilsImageLoader*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_GetImageLoader) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_GetImageLoader");
static_assert(sizeof(XsollaUtilsLibrary_GetImageLoader) == 0x000008, "Wrong size on XsollaUtilsLibrary_GetImageLoader");
static_assert(offsetof(XsollaUtilsLibrary_GetImageLoader, ReturnValue) == 0x000000, "Member 'XsollaUtilsLibrary_GetImageLoader::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.GetJsonIntField
// 0x0028 (0x0028 - 0x0000)
struct XsollaUtilsLibrary_GetJsonIntField final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IValue;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2822[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaUtilsLibrary_GetJsonIntField) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_GetJsonIntField");
static_assert(sizeof(XsollaUtilsLibrary_GetJsonIntField) == 0x000028, "Wrong size on XsollaUtilsLibrary_GetJsonIntField");
static_assert(offsetof(XsollaUtilsLibrary_GetJsonIntField, Data) == 0x000000, "Member 'XsollaUtilsLibrary_GetJsonIntField::Data' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_GetJsonIntField, Key) == 0x000010, "Member 'XsollaUtilsLibrary_GetJsonIntField::Key' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_GetJsonIntField, IValue) == 0x000020, "Member 'XsollaUtilsLibrary_GetJsonIntField::IValue' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_GetJsonIntField, ReturnValue) == 0x000024, "Member 'XsollaUtilsLibrary_GetJsonIntField::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.GetJsonStringField
// 0x0038 (0x0038 - 0x0000)
struct XsollaUtilsLibrary_GetJsonStringField final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IValue;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2823[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaUtilsLibrary_GetJsonStringField) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_GetJsonStringField");
static_assert(sizeof(XsollaUtilsLibrary_GetJsonStringField) == 0x000038, "Wrong size on XsollaUtilsLibrary_GetJsonStringField");
static_assert(offsetof(XsollaUtilsLibrary_GetJsonStringField, Data) == 0x000000, "Member 'XsollaUtilsLibrary_GetJsonStringField::Data' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_GetJsonStringField, Key) == 0x000010, "Member 'XsollaUtilsLibrary_GetJsonStringField::Key' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_GetJsonStringField, IValue) == 0x000020, "Member 'XsollaUtilsLibrary_GetJsonStringField::IValue' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_GetJsonStringField, ReturnValue) == 0x000030, "Member 'XsollaUtilsLibrary_GetJsonStringField::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.GetSecondsFromUnixTimestamp
// 0x0010 (0x0010 - 0x0000)
struct XsollaUtilsLibrary_GetSecondsFromUnixTimestamp final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_GetSecondsFromUnixTimestamp) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_GetSecondsFromUnixTimestamp");
static_assert(sizeof(XsollaUtilsLibrary_GetSecondsFromUnixTimestamp) == 0x000010, "Wrong size on XsollaUtilsLibrary_GetSecondsFromUnixTimestamp");
static_assert(offsetof(XsollaUtilsLibrary_GetSecondsFromUnixTimestamp, DateTime) == 0x000000, "Member 'XsollaUtilsLibrary_GetSecondsFromUnixTimestamp::DateTime' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_GetSecondsFromUnixTimestamp, ReturnValue) == 0x000008, "Member 'XsollaUtilsLibrary_GetSecondsFromUnixTimestamp::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.MakeDateTimeFromTimestamp
// 0x0010 (0x0010 - 0x0000)
struct XsollaUtilsLibrary_MakeDateTimeFromTimestamp final
{
public:
	int64                                         Time;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_MakeDateTimeFromTimestamp) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_MakeDateTimeFromTimestamp");
static_assert(sizeof(XsollaUtilsLibrary_MakeDateTimeFromTimestamp) == 0x000010, "Wrong size on XsollaUtilsLibrary_MakeDateTimeFromTimestamp");
static_assert(offsetof(XsollaUtilsLibrary_MakeDateTimeFromTimestamp, Time) == 0x000000, "Member 'XsollaUtilsLibrary_MakeDateTimeFromTimestamp::Time' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_MakeDateTimeFromTimestamp, ReturnValue) == 0x000008, "Member 'XsollaUtilsLibrary_MakeDateTimeFromTimestamp::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsLibrary.SetPartnerInfo
// 0x0020 (0x0020 - 0x0000)
struct XsollaUtilsLibrary_SetPartnerInfo final
{
public:
	class FString                                 Referral;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReferralVersion;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaUtilsLibrary_SetPartnerInfo) == 0x000008, "Wrong alignment on XsollaUtilsLibrary_SetPartnerInfo");
static_assert(sizeof(XsollaUtilsLibrary_SetPartnerInfo) == 0x000020, "Wrong size on XsollaUtilsLibrary_SetPartnerInfo");
static_assert(offsetof(XsollaUtilsLibrary_SetPartnerInfo, Referral) == 0x000000, "Member 'XsollaUtilsLibrary_SetPartnerInfo::Referral' has a wrong offset!");
static_assert(offsetof(XsollaUtilsLibrary_SetPartnerInfo, ReferralVersion) == 0x000010, "Member 'XsollaUtilsLibrary_SetPartnerInfo::ReferralVersion' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsTokenParser.GetBoolTokenParam
// 0x0028 (0x0028 - 0x0000)
struct XsollaUtilsTokenParser_GetBoolTokenParam final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParamName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ParamValue;                                        // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2824[0x6];                                     // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaUtilsTokenParser_GetBoolTokenParam) == 0x000008, "Wrong alignment on XsollaUtilsTokenParser_GetBoolTokenParam");
static_assert(sizeof(XsollaUtilsTokenParser_GetBoolTokenParam) == 0x000028, "Wrong size on XsollaUtilsTokenParser_GetBoolTokenParam");
static_assert(offsetof(XsollaUtilsTokenParser_GetBoolTokenParam, Token) == 0x000000, "Member 'XsollaUtilsTokenParser_GetBoolTokenParam::Token' has a wrong offset!");
static_assert(offsetof(XsollaUtilsTokenParser_GetBoolTokenParam, ParamName) == 0x000010, "Member 'XsollaUtilsTokenParser_GetBoolTokenParam::ParamName' has a wrong offset!");
static_assert(offsetof(XsollaUtilsTokenParser_GetBoolTokenParam, ParamValue) == 0x000020, "Member 'XsollaUtilsTokenParser_GetBoolTokenParam::ParamValue' has a wrong offset!");
static_assert(offsetof(XsollaUtilsTokenParser_GetBoolTokenParam, ReturnValue) == 0x000021, "Member 'XsollaUtilsTokenParser_GetBoolTokenParam::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsTokenParser.GetInt64TokenParam
// 0x0030 (0x0030 - 0x0000)
struct XsollaUtilsTokenParser_GetInt64TokenParam final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParamName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ParamValue;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2825[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaUtilsTokenParser_GetInt64TokenParam) == 0x000008, "Wrong alignment on XsollaUtilsTokenParser_GetInt64TokenParam");
static_assert(sizeof(XsollaUtilsTokenParser_GetInt64TokenParam) == 0x000030, "Wrong size on XsollaUtilsTokenParser_GetInt64TokenParam");
static_assert(offsetof(XsollaUtilsTokenParser_GetInt64TokenParam, Token) == 0x000000, "Member 'XsollaUtilsTokenParser_GetInt64TokenParam::Token' has a wrong offset!");
static_assert(offsetof(XsollaUtilsTokenParser_GetInt64TokenParam, ParamName) == 0x000010, "Member 'XsollaUtilsTokenParser_GetInt64TokenParam::ParamName' has a wrong offset!");
static_assert(offsetof(XsollaUtilsTokenParser_GetInt64TokenParam, ParamValue) == 0x000020, "Member 'XsollaUtilsTokenParser_GetInt64TokenParam::ParamValue' has a wrong offset!");
static_assert(offsetof(XsollaUtilsTokenParser_GetInt64TokenParam, ReturnValue) == 0x000028, "Member 'XsollaUtilsTokenParser_GetInt64TokenParam::ReturnValue' has a wrong offset!");

// Function XsollaUtils.XsollaUtilsTokenParser.GetStringTokenParam
// 0x0038 (0x0038 - 0x0000)
struct XsollaUtilsTokenParser_GetStringTokenParam final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParamName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParamValue;                                        // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2826[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaUtilsTokenParser_GetStringTokenParam) == 0x000008, "Wrong alignment on XsollaUtilsTokenParser_GetStringTokenParam");
static_assert(sizeof(XsollaUtilsTokenParser_GetStringTokenParam) == 0x000038, "Wrong size on XsollaUtilsTokenParser_GetStringTokenParam");
static_assert(offsetof(XsollaUtilsTokenParser_GetStringTokenParam, Token) == 0x000000, "Member 'XsollaUtilsTokenParser_GetStringTokenParam::Token' has a wrong offset!");
static_assert(offsetof(XsollaUtilsTokenParser_GetStringTokenParam, ParamName) == 0x000010, "Member 'XsollaUtilsTokenParser_GetStringTokenParam::ParamName' has a wrong offset!");
static_assert(offsetof(XsollaUtilsTokenParser_GetStringTokenParam, ParamValue) == 0x000020, "Member 'XsollaUtilsTokenParser_GetStringTokenParam::ParamValue' has a wrong offset!");
static_assert(offsetof(XsollaUtilsTokenParser_GetStringTokenParam, ReturnValue) == 0x000030, "Member 'XsollaUtilsTokenParser_GetStringTokenParam::ReturnValue' has a wrong offset!");

}

