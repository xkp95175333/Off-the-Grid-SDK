#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Markers_TeamFeedback

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.CheckDibs
// 0x0090 (0x0090 - 0x0000)
struct WBP_Markers_TeamFeedback_C_CheckDibs final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Agree;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzPingData                            CallFunc_GetPingData_ReturnValue;                  // 0x0010(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD6[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         K2Node_DynamicCast_AsGz_Player_State;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD7[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIndexInTeam_OutputPin;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexInTeam_OutputPin_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_CheckDibs) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_CheckDibs");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_CheckDibs) == 0x000090, "Wrong size on WBP_Markers_TeamFeedback_C_CheckDibs");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_CheckDibs, PlayerState) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_CheckDibs::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_CheckDibs, Agree) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_CheckDibs::Agree' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_CheckDibs, CallFunc_GetPingData_ReturnValue) == 0x000010, "Member 'WBP_Markers_TeamFeedback_C_CheckDibs::CallFunc_GetPingData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_CheckDibs, CallFunc_Array_IsEmpty_ReturnValue) == 0x000070, "Member 'WBP_Markers_TeamFeedback_C_CheckDibs::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_CheckDibs, K2Node_DynamicCast_AsGz_Player_State) == 0x000078, "Member 'WBP_Markers_TeamFeedback_C_CheckDibs::K2Node_DynamicCast_AsGz_Player_State' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_CheckDibs, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_Markers_TeamFeedback_C_CheckDibs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_CheckDibs, CallFunc_GetIndexInTeam_OutputPin) == 0x000084, "Member 'WBP_Markers_TeamFeedback_C_CheckDibs::CallFunc_GetIndexInTeam_OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_CheckDibs, CallFunc_GetIndexInTeam_OutputPin_1) == 0x000088, "Member 'WBP_Markers_TeamFeedback_C_CheckDibs::CallFunc_GetIndexInTeam_OutputPin_1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_CheckDibs, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_Markers_TeamFeedback_C_CheckDibs::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.ClearAll
// 0x0038 (0x0038 - 0x0000)
struct WBP_Markers_TeamFeedback_C_ClearAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD9[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_ClearAll) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_ClearAll");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_ClearAll) == 0x000038, "Wrong size on WBP_Markers_TeamFeedback_C_ClearAll");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ClearAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_ClearAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ClearAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Markers_TeamFeedback_C_ClearAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ClearAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_ClearAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ClearAll, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_Markers_TeamFeedback_C_ClearAll::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ClearAll, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_Markers_TeamFeedback_C_ClearAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ClearAll, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Markers_TeamFeedback_C_ClearAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ClearAll, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_Markers_TeamFeedback_C_ClearAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.DibsConstruct
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_Markers_TeamFeedback_C_DibsConstruct final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BDA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzPingData                            CallFunc_GetPingData_ReturnValue;                  // 0x0010(0x0060)(HasGetValueTypeHash)
	class AGzPlayerState*                         K2Node_DynamicCast_AsGz_Player_State;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BDB[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BDC[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         K2Node_DynamicCast_AsGz_Player_State_1;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_DibsConstruct) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_DibsConstruct");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_DibsConstruct) == 0x0000A0, "Wrong size on WBP_Markers_TeamFeedback_C_DibsConstruct");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, CallFunc_GetPingData_ReturnValue) == 0x000010, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::CallFunc_GetPingData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, K2Node_DynamicCast_AsGz_Player_State) == 0x000070, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::K2Node_DynamicCast_AsGz_Player_State' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00008C, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, K2Node_DynamicCast_AsGz_Player_State_1) == 0x000090, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::K2Node_DynamicCast_AsGz_Player_State_1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_DibsConstruct, CallFunc_Array_IsEmpty_ReturnValue) == 0x000099, "Member 'WBP_Markers_TeamFeedback_C_DibsConstruct::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.ExecuteUbergraph_WBP_Markers_TeamFeedback
// 0x0040 (0x0040 - 0x0000)
struct WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BDD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzMarkerComponent*                     K2Node_CustomEvent_MarkerComponent;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsItem;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BDE[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UGzMarkerComponent* MarkerComponent, struct FGzPingData& PingData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BDF[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGzPlayerState* PlayerState, struct FGzPingData& PingData, bool bAgree)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback) == 0x000040, "Wrong size on WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback, EntryPoint) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback, K2Node_CustomEvent_MarkerComponent) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback::K2Node_CustomEvent_MarkerComponent' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback, K2Node_CustomEvent_IsItem) == 0x000010, "Member 'WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback::K2Node_CustomEvent_IsItem' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_Markers_TeamFeedback_C_ExecuteUbergraph_WBP_Markers_TeamFeedback::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.GetIndexInTeam
// 0x0050 (0x0050 - 0x0000)
struct WBP_Markers_TeamFeedback_C_GetIndexInTeam final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         OutputPin;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzTeam*                                CallFunc_GetTeamFromPlayer_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGzTeamMember>                  CallFunc_GetTeamMembers_ReturnValue;               // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FGzTeamMember                          CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE2[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE3[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_GetIndexInTeam) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_GetIndexInTeam");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_GetIndexInTeam) == 0x000050, "Wrong size on WBP_Markers_TeamFeedback_C_GetIndexInTeam");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, PlayerState) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, OutputPin) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, CallFunc_GetTeamFromPlayer_ReturnValue) == 0x000010, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::CallFunc_GetTeamFromPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, CallFunc_GetTeamMembers_ReturnValue) == 0x000020, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::CallFunc_GetTeamMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00003D, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_GetIndexInTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WBP_Markers_TeamFeedback_C_GetIndexInTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.InitialPingUpdate
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_Markers_TeamFeedback_C_InitialPingUpdate final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzPingData                            CallFunc_GetPingData_ReturnValue;                  // 0x0010(0x0060)(HasGetValueTypeHash)
	class AGzPlayerState*                         K2Node_DynamicCast_AsGz_Player_State;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE5[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerState*                         K2Node_DynamicCast_AsGz_Player_State_1;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE6[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_InitialPingUpdate) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_InitialPingUpdate");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_InitialPingUpdate) == 0x0000A0, "Wrong size on WBP_Markers_TeamFeedback_C_InitialPingUpdate");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, CallFunc_GetPingData_ReturnValue) == 0x000010, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::CallFunc_GetPingData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, K2Node_DynamicCast_AsGz_Player_State) == 0x000070, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::K2Node_DynamicCast_AsGz_Player_State' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, K2Node_DynamicCast_AsGz_Player_State_1) == 0x000088, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::K2Node_DynamicCast_AsGz_Player_State_1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitialPingUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'WBP_Markers_TeamFeedback_C_InitialPingUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.InitTeamFeedback
// 0x0010 (0x0010 - 0x0000)
struct WBP_Markers_TeamFeedback_C_InitTeamFeedback final
{
public:
	class UGzMarkerComponent*                     MarkerComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsItem;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_InitTeamFeedback) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_InitTeamFeedback");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_InitTeamFeedback) == 0x000010, "Wrong size on WBP_Markers_TeamFeedback_C_InitTeamFeedback");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitTeamFeedback, MarkerComponent) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_InitTeamFeedback::MarkerComponent' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_InitTeamFeedback, IsItem) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_InitTeamFeedback::IsItem' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.OnPingAgreementsChanged
// 0x0070 (0x0070 - 0x0000)
struct WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGzPingData                            PingData;                                          // 0x0008(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          bAgree;                                            // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged) == 0x000070, "Wrong size on WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged, PlayerState) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged, PingData) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged::PingData' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged, bAgree) == 0x000068, "Member 'WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged::bAgree' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'WBP_Markers_TeamFeedback_C_OnPingAgreementsChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.OnPingDataChanged
// 0x0080 (0x0080 - 0x0000)
struct WBP_Markers_TeamFeedback_C_OnPingDataChanged final
{
public:
	class UGzMarkerComponent*                     MarkerComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzPingData                            PingData;                                          // 0x0008(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE7[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         K2Node_DynamicCast_AsGz_Player_State;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_OnPingDataChanged) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_OnPingDataChanged");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_OnPingDataChanged) == 0x000080, "Wrong size on WBP_Markers_TeamFeedback_C_OnPingDataChanged");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingDataChanged, MarkerComponent) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_OnPingDataChanged::MarkerComponent' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingDataChanged, PingData) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_OnPingDataChanged::PingData' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingDataChanged, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_Markers_TeamFeedback_C_OnPingDataChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingDataChanged, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'WBP_Markers_TeamFeedback_C_OnPingDataChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingDataChanged, K2Node_DynamicCast_AsGz_Player_State) == 0x000070, "Member 'WBP_Markers_TeamFeedback_C_OnPingDataChanged::K2Node_DynamicCast_AsGz_Player_State' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_OnPingDataChanged, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_Markers_TeamFeedback_C_OnPingDataChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Markers_TeamFeedback_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Markers_TeamFeedback_C_PreConstruct");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_PreConstruct) == 0x000001, "Wrong size on WBP_Markers_TeamFeedback_C_PreConstruct");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.SetPlayerShapesAndColors
// 0x0048 (0x0048 - 0x0000)
struct WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeammateColorFromIndex_OutPlayerColor; // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetTeammateShapeFromIndex_NewParam;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0014)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BE9[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors) == 0x000048, "Wrong size on WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors, Temp_int_Variable) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors, CallFunc_GetTeammateColorFromIndex_OutPlayerColor) == 0x000004, "Member 'WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors::CallFunc_GetTeammateColorFromIndex_OutPlayerColor' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors, CallFunc_GetTeammateShapeFromIndex_NewParam) == 0x000018, "Member 'WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors::CallFunc_GetTeammateShapeFromIndex_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors, Temp_int_Variable_1) == 0x00003C, "Member 'WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors, K2Node_Select_Default) == 0x000040, "Member 'WBP_Markers_TeamFeedback_C_SetPlayerShapesAndColors::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Markers_TeamFeedback.WBP_Markers_TeamFeedback_C.Team Feedback
// 0x0038 (0x0038 - 0x0000)
struct WBP_Markers_TeamFeedback_C_Team_Feedback final
{
public:
	class AGzPlayerState*                         PlayerState1;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Agree;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BEA[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzTeam*                                CallFunc_GetTeam_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BEB[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIndexInTeam_OutputPin;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BEC[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BED[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Markers_TeamFeedback_C_Team_Feedback) == 0x000008, "Wrong alignment on WBP_Markers_TeamFeedback_C_Team_Feedback");
static_assert(sizeof(WBP_Markers_TeamFeedback_C_Team_Feedback) == 0x000038, "Wrong size on WBP_Markers_TeamFeedback_C_Team_Feedback");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, PlayerState1) == 0x000000, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::PlayerState1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, Agree) == 0x000008, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::Agree' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, Temp_bool_Variable) == 0x000009, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, CallFunc_GetTeam_ReturnValue) == 0x000010, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, CallFunc_GetIndexInTeam_OutputPin) == 0x00001C, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::CallFunc_GetIndexInTeam_OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, Temp_byte_Variable) == 0x000020, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, Temp_byte_Variable_1) == 0x000021, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, Temp_int_Variable) == 0x000024, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, K2Node_Select_Default) == 0x000028, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Markers_TeamFeedback_C_Team_Feedback, K2Node_Select_Default_1) == 0x000030, "Member 'WBP_Markers_TeamFeedback_C_Team_Feedback::K2Node_Select_Default_1' has a wrong offset!");

}

