#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_Lighting

#include "Basic.hpp"

#include "BPFL_Lighting_classes.hpp"
#include "BPFL_Lighting_parameters.hpp"


namespace SDK
{

// Function BPFL_Lighting.BPFL_Lighting_C.AddSuspension
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Blueprint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USplineComponent*                 Spline                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      SuspensionMesh                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_Prop_Mesh_01                  PropSettings                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// struct FVector                          PrevAnchor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PrevProp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  PrevSplinePoint0                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FVector>                  PrevSplinePoint1                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FS_Light_Fitting_Mesh_Settings   LightFittingSettings                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::AddSuspension(class UObject* Blueprint, class USplineComponent* Spline, class UStaticMesh* SuspensionMesh, const struct FS_Prop_Mesh_01& PropSettings, const struct FVector& PrevAnchor, const struct FVector& PrevProp, TArray<struct FVector>& PrevSplinePoint0, TArray<struct FVector>& PrevSplinePoint1, const struct FS_Light_Fitting_Mesh_Settings& LightFittingSettings, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "AddSuspension");

	Params::BPFL_Lighting_C_AddSuspension Parms{};

	Parms.Blueprint = Blueprint;
	Parms.Spline = Spline;
	Parms.SuspensionMesh = SuspensionMesh;
	Parms.PropSettings = std::move(PropSettings);
	Parms.PrevAnchor = std::move(PrevAnchor);
	Parms.PrevProp = std::move(PrevProp);
	Parms.PrevSplinePoint0 = std::move(PrevSplinePoint0);
	Parms.PrevSplinePoint1 = std::move(PrevSplinePoint1);
	Parms.LightFittingSettings = std::move(LightFittingSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	PrevSplinePoint0 = std::move(Parms.PrevSplinePoint0);
	PrevSplinePoint1 = std::move(Parms.PrevSplinePoint1);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Bulb 01 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_01_Settings              Param_Bulb_01_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// struct FS_Bulb_Light_01_Settings        Bulb_Light_01_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Off                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_LED_Diode_01                  LED_Diode_01_Settings                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Bulb_01_Settings(class UObject* Self_Reference, const struct FS_Bulb_01_Settings& Param_Bulb_01_Settings, const struct FS_Bulb_Light_01_Settings& Bulb_Light_01_Settings, bool Off, const struct FS_LED_Diode_01& LED_Diode_01_Settings, class UObject* __WorldContext, bool* Is_Bulb_Light_On_, class USpotLightComponent** Spot, class UPointLightComponent** Point, class URectLightComponent** Rect, class UPrimitiveComponent** Prop_Mesh_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Bulb 01 Settings");

	Params::BPFL_Lighting_C_Bulb_01_Settings Parms{};

	Parms.Self_Reference = Self_Reference;
	Parms.Param_Bulb_01_Settings = std::move(Param_Bulb_01_Settings);
	Parms.Bulb_Light_01_Settings = std::move(Bulb_Light_01_Settings);
	Parms.Off = Off;
	Parms.LED_Diode_01_Settings = std::move(LED_Diode_01_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Is_Bulb_Light_On_ != nullptr)
		*Is_Bulb_Light_On_ = Parms.Is_Bulb_Light_On_;

	if (Spot != nullptr)
		*Spot = Parms.Spot;

	if (Point != nullptr)
		*Point = Parms.Point;

	if (Rect != nullptr)
		*Rect = Parms.Rect;

	if (Prop_Mesh_Reference != nullptr)
		*Prop_Mesh_Reference = Parms.Prop_Mesh_Reference;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Bulb 02 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Bulb_02_Settings              Param_Bulb_02_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_Light_02_Settings        Bulb_Light_02_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Off                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_LED_Diode_02                  LED_Diode_02_Settings                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Bulb_02_Settings(const struct FS_Bulb_02_Settings& Param_Bulb_02_Settings, const struct FS_Bulb_Light_02_Settings& Bulb_Light_02_Settings, class UObject* Self_Reference, bool Off, const struct FS_LED_Diode_02& LED_Diode_02_Settings, class UObject* __WorldContext, bool* Is_Bulb_Light_On_, class USpotLightComponent** Spot, class UPointLightComponent** Point, class URectLightComponent** Rect, class UPrimitiveComponent** Prop_Mesh_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Bulb 02 Settings");

	Params::BPFL_Lighting_C_Bulb_02_Settings Parms{};

	Parms.Param_Bulb_02_Settings = std::move(Param_Bulb_02_Settings);
	Parms.Bulb_Light_02_Settings = std::move(Bulb_Light_02_Settings);
	Parms.Self_Reference = Self_Reference;
	Parms.Off = Off;
	Parms.LED_Diode_02_Settings = std::move(LED_Diode_02_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Is_Bulb_Light_On_ != nullptr)
		*Is_Bulb_Light_On_ = Parms.Is_Bulb_Light_On_;

	if (Spot != nullptr)
		*Spot = Parms.Spot;

	if (Point != nullptr)
		*Point = Parms.Point;

	if (Rect != nullptr)
		*Rect = Parms.Rect;

	if (Prop_Mesh_Reference != nullptr)
		*Prop_Mesh_Reference = Parms.Prop_Mesh_Reference;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Bulb 03 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Bulb_03_Settings              Param_Bulb_03_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_Light_03_Settings        Bulb_Light_03_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Off                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_LED_Diode_03                  LED_Diode_03_Settings                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Bulb_03_Settings(const struct FS_Bulb_03_Settings& Param_Bulb_03_Settings, const struct FS_Bulb_Light_03_Settings& Bulb_Light_03_Settings, class UObject* Self_Reference, bool Off, const struct FS_LED_Diode_03& LED_Diode_03_Settings, class UObject* __WorldContext, bool* Is_Bulb_Light_On_, class USpotLightComponent** Spot, class UPointLightComponent** Point, class URectLightComponent** Rect, class UPrimitiveComponent** Prop_Mesh_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Bulb 03 Settings");

	Params::BPFL_Lighting_C_Bulb_03_Settings Parms{};

	Parms.Param_Bulb_03_Settings = std::move(Param_Bulb_03_Settings);
	Parms.Bulb_Light_03_Settings = std::move(Bulb_Light_03_Settings);
	Parms.Self_Reference = Self_Reference;
	Parms.Off = Off;
	Parms.LED_Diode_03_Settings = std::move(LED_Diode_03_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Is_Bulb_Light_On_ != nullptr)
		*Is_Bulb_Light_On_ = Parms.Is_Bulb_Light_On_;

	if (Spot != nullptr)
		*Spot = Parms.Spot;

	if (Point != nullptr)
		*Point = Parms.Point;

	if (Rect != nullptr)
		*Rect = Parms.Rect;

	if (Prop_Mesh_Reference != nullptr)
		*Prop_Mesh_Reference = Parms.Prop_Mesh_Reference;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Bulb 04 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Bulb_04_Setting               Param_Bulb_04_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_Light_04_Settings        Bulb_Light_04_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Off                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_LED_Diode_04                  LED_Diode_04_Settings                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Bulb_04_Settings(const struct FS_Bulb_04_Setting& Param_Bulb_04_Settings, const struct FS_Bulb_Light_04_Settings& Bulb_Light_04_Settings, class UObject* Self_Reference, bool Off, const struct FS_LED_Diode_04& LED_Diode_04_Settings, class UObject* __WorldContext, bool* Is_Bulb_Light_On_, class USpotLightComponent** Spot, class UPointLightComponent** Point, class URectLightComponent** Rect, class UPrimitiveComponent** Prop_Mesh_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Bulb 04 Settings");

	Params::BPFL_Lighting_C_Bulb_04_Settings Parms{};

	Parms.Param_Bulb_04_Settings = std::move(Param_Bulb_04_Settings);
	Parms.Bulb_Light_04_Settings = std::move(Bulb_Light_04_Settings);
	Parms.Self_Reference = Self_Reference;
	Parms.Off = Off;
	Parms.LED_Diode_04_Settings = std::move(LED_Diode_04_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Is_Bulb_Light_On_ != nullptr)
		*Is_Bulb_Light_On_ = Parms.Is_Bulb_Light_On_;

	if (Spot != nullptr)
		*Spot = Parms.Spot;

	if (Point != nullptr)
		*Point = Parms.Point;

	if (Rect != nullptr)
		*Rect = Parms.Rect;

	if (Prop_Mesh_Reference != nullptr)
		*Prop_Mesh_Reference = Parms.Prop_Mesh_Reference;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Bulb Light 01 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Bulb_Light_01_Settings        Param_Bulb_Light_01_Settings                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_Light_01_Emissive_SettingsBulb_Light_01_Emissive_Settings                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_01_Intensity                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Lumen_Int_Output                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Emissive_Int_Output                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Final_Colour_Output                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Ref_Output                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Bulb_Light_01_Settings(const struct FS_Bulb_Light_01_Settings& Param_Bulb_Light_01_Settings, const struct FS_Bulb_Light_01_Emissive_Settings& Bulb_Light_01_Emissive_Settings, class USpotLightComponent* Spot, class UPointLightComponent* Point, class URectLightComponent* Rect, class UPrimitiveComponent* Prop_Mesh_Reference, double Preset_Intensity, const struct FLinearColor& Preset_Colour, bool Use_Preset_Kelvin_, double Preset_Kelvin, bool Is_Bulb_Light_On_, class UObject* __WorldContext, double* Bulb_Light_01_Intensity, double* Final_Lumen_Int_Output, double* Final_Emissive_Int_Output, struct FVector* Final_Colour_Output, class UPrimitiveComponent** Prop_Mesh_Ref_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Bulb Light 01 Settings");

	Params::BPFL_Lighting_C_Bulb_Light_01_Settings Parms{};

	Parms.Param_Bulb_Light_01_Settings = std::move(Param_Bulb_Light_01_Settings);
	Parms.Bulb_Light_01_Emissive_Settings = std::move(Bulb_Light_01_Emissive_Settings);
	Parms.Spot = Spot;
	Parms.Point = Point;
	Parms.Rect = Rect;
	Parms.Prop_Mesh_Reference = Prop_Mesh_Reference;
	Parms.Preset_Intensity = Preset_Intensity;
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Is_Bulb_Light_On_ = Is_Bulb_Light_On_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Bulb_Light_01_Intensity != nullptr)
		*Bulb_Light_01_Intensity = Parms.Bulb_Light_01_Intensity;

	if (Final_Lumen_Int_Output != nullptr)
		*Final_Lumen_Int_Output = Parms.Final_Lumen_Int_Output;

	if (Final_Emissive_Int_Output != nullptr)
		*Final_Emissive_Int_Output = Parms.Final_Emissive_Int_Output;

	if (Final_Colour_Output != nullptr)
		*Final_Colour_Output = std::move(Parms.Final_Colour_Output);

	if (Prop_Mesh_Ref_Output != nullptr)
		*Prop_Mesh_Ref_Output = Parms.Prop_Mesh_Ref_Output;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Bulb Light 02 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Bulb_Light_02_Settings        Param_Bulb_Light_02_Settings                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_Light_02_Emissive_SettingsBulb_Light_02_Emissive_Settings                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_02_Intensity                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Lumen_Int_Output                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Emissive_Int_Output                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Final_Colour_Output                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Ref_Output                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Bulb_Light_02_Settings(const struct FS_Bulb_Light_02_Settings& Param_Bulb_Light_02_Settings, const struct FS_Bulb_Light_02_Emissive_Settings& Bulb_Light_02_Emissive_Settings, class USpotLightComponent* Spot, class UPointLightComponent* Point, class URectLightComponent* Rect, class UPrimitiveComponent* Prop_Mesh_Reference, double Preset_Intensity, const struct FLinearColor& Preset_Colour, bool Use_Preset_Kelvin_, double Preset_Kelvin, bool Is_Bulb_Light_On_, class UObject* __WorldContext, double* Bulb_Light_02_Intensity, double* Final_Lumen_Int_Output, double* Final_Emissive_Int_Output, struct FVector* Final_Colour_Output, class UPrimitiveComponent** Prop_Mesh_Ref_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Bulb Light 02 Settings");

	Params::BPFL_Lighting_C_Bulb_Light_02_Settings Parms{};

	Parms.Param_Bulb_Light_02_Settings = std::move(Param_Bulb_Light_02_Settings);
	Parms.Bulb_Light_02_Emissive_Settings = std::move(Bulb_Light_02_Emissive_Settings);
	Parms.Spot = Spot;
	Parms.Point = Point;
	Parms.Rect = Rect;
	Parms.Prop_Mesh_Reference = Prop_Mesh_Reference;
	Parms.Preset_Intensity = Preset_Intensity;
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Is_Bulb_Light_On_ = Is_Bulb_Light_On_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Bulb_Light_02_Intensity != nullptr)
		*Bulb_Light_02_Intensity = Parms.Bulb_Light_02_Intensity;

	if (Final_Lumen_Int_Output != nullptr)
		*Final_Lumen_Int_Output = Parms.Final_Lumen_Int_Output;

	if (Final_Emissive_Int_Output != nullptr)
		*Final_Emissive_Int_Output = Parms.Final_Emissive_Int_Output;

	if (Final_Colour_Output != nullptr)
		*Final_Colour_Output = std::move(Parms.Final_Colour_Output);

	if (Prop_Mesh_Ref_Output != nullptr)
		*Prop_Mesh_Ref_Output = Parms.Prop_Mesh_Ref_Output;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Bulb Light 03 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Bulb_Light_03_Settings        Param_Bulb_Light_03_Settings                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_Light_03_Emissive_SettingsBulb_Light_03_Emissive_Settings                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_03_Intensity                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Lumen_Int_Output                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Emissive_Int_Output                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Final_Colour_Output                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Ref_Output                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Bulb_Light_03_Settings(const struct FS_Bulb_Light_03_Settings& Param_Bulb_Light_03_Settings, const struct FS_Bulb_Light_03_Emissive_Settings& Bulb_Light_03_Emissive_Settings, class USpotLightComponent* Spot, class UPointLightComponent* Point, class URectLightComponent* Rect, class UPrimitiveComponent* Prop_Mesh_Reference, double Preset_Intensity, const struct FLinearColor& Preset_Colour, bool Use_Preset_Kelvin_, double Preset_Kelvin, bool Is_Bulb_Light_On_, class UObject* __WorldContext, double* Bulb_Light_03_Intensity, double* Final_Lumen_Int_Output, double* Final_Emissive_Int_Output, struct FVector* Final_Colour_Output, class UPrimitiveComponent** Prop_Mesh_Ref_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Bulb Light 03 Settings");

	Params::BPFL_Lighting_C_Bulb_Light_03_Settings Parms{};

	Parms.Param_Bulb_Light_03_Settings = std::move(Param_Bulb_Light_03_Settings);
	Parms.Bulb_Light_03_Emissive_Settings = std::move(Bulb_Light_03_Emissive_Settings);
	Parms.Spot = Spot;
	Parms.Point = Point;
	Parms.Rect = Rect;
	Parms.Prop_Mesh_Reference = Prop_Mesh_Reference;
	Parms.Preset_Intensity = Preset_Intensity;
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Is_Bulb_Light_On_ = Is_Bulb_Light_On_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Bulb_Light_03_Intensity != nullptr)
		*Bulb_Light_03_Intensity = Parms.Bulb_Light_03_Intensity;

	if (Final_Lumen_Int_Output != nullptr)
		*Final_Lumen_Int_Output = Parms.Final_Lumen_Int_Output;

	if (Final_Emissive_Int_Output != nullptr)
		*Final_Emissive_Int_Output = Parms.Final_Emissive_Int_Output;

	if (Final_Colour_Output != nullptr)
		*Final_Colour_Output = std::move(Parms.Final_Colour_Output);

	if (Prop_Mesh_Ref_Output != nullptr)
		*Prop_Mesh_Ref_Output = Parms.Prop_Mesh_Ref_Output;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Bulb Light 04 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Bulb_Light_04_Settings        Param_Bulb_Light_04_Settings                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_Light_04_Emissive_SettingsBulb_Light_04_Emissive_Settings                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_04_Intensity                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Lumen_Int_Output                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Emissive_Int_Output                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Final_Colour_Output                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Ref_Output                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Bulb_Light_04_Settings(const struct FS_Bulb_Light_04_Settings& Param_Bulb_Light_04_Settings, const struct FS_Bulb_Light_04_Emissive_Settings& Bulb_Light_04_Emissive_Settings, class USpotLightComponent* Spot, class UPointLightComponent* Point, class URectLightComponent* Rect, class UPrimitiveComponent* Prop_Mesh_Reference, double Preset_Intensity, const struct FLinearColor& Preset_Colour, bool Use_Preset_Kelvin_, double Preset_Kelvin, bool Is_Bulb_Light_On_, class UObject* __WorldContext, double* Bulb_Light_04_Intensity, double* Final_Lumen_Int_Output, double* Final_Emissive_Int_Output, struct FVector* Final_Colour_Output, class UPrimitiveComponent** Prop_Mesh_Ref_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Bulb Light 04 Settings");

	Params::BPFL_Lighting_C_Bulb_Light_04_Settings Parms{};

	Parms.Param_Bulb_Light_04_Settings = std::move(Param_Bulb_Light_04_Settings);
	Parms.Bulb_Light_04_Emissive_Settings = std::move(Bulb_Light_04_Emissive_Settings);
	Parms.Spot = Spot;
	Parms.Point = Point;
	Parms.Rect = Rect;
	Parms.Prop_Mesh_Reference = Prop_Mesh_Reference;
	Parms.Preset_Intensity = Preset_Intensity;
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Is_Bulb_Light_On_ = Is_Bulb_Light_On_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Bulb_Light_04_Intensity != nullptr)
		*Bulb_Light_04_Intensity = Parms.Bulb_Light_04_Intensity;

	if (Final_Lumen_Int_Output != nullptr)
		*Final_Lumen_Int_Output = Parms.Final_Lumen_Int_Output;

	if (Final_Emissive_Int_Output != nullptr)
		*Final_Emissive_Int_Output = Parms.Final_Emissive_Int_Output;

	if (Final_Colour_Output != nullptr)
		*Final_Colour_Output = std::move(Parms.Final_Colour_Output);

	if (Prop_Mesh_Ref_Output != nullptr)
		*Prop_Mesh_Ref_Output = Parms.Prop_Mesh_Ref_Output;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Create Light 01
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Light_01_Settings             Light_01_Settings                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Off                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot_Lights                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point_Lights                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect_Lights                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Create_Light_01(const struct FS_Light_01_Settings& Light_01_Settings, class UObject* Self_Reference, bool Off, class UObject* __WorldContext, class USpotLightComponent** Spot_Lights, class UPointLightComponent** Point_Lights, class URectLightComponent** Rect_Lights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Create Light 01");

	Params::BPFL_Lighting_C_Create_Light_01 Parms{};

	Parms.Light_01_Settings = std::move(Light_01_Settings);
	Parms.Self_Reference = Self_Reference;
	Parms.Off = Off;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Spot_Lights != nullptr)
		*Spot_Lights = Parms.Spot_Lights;

	if (Point_Lights != nullptr)
		*Point_Lights = Parms.Point_Lights;

	if (Rect_Lights != nullptr)
		*Rect_Lights = Parms.Rect_Lights;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Create Light 02
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Light_02_Settings             Light_02_Settings                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Off                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot_Lights                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point_Lights                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect_Lights                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Create_Light_02(const struct FS_Light_02_Settings& Light_02_Settings, class UObject* Self_Reference, bool Off, class UObject* __WorldContext, class USpotLightComponent** Spot_Lights, class UPointLightComponent** Point_Lights, class URectLightComponent** Rect_Lights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Create Light 02");

	Params::BPFL_Lighting_C_Create_Light_02 Parms{};

	Parms.Light_02_Settings = std::move(Light_02_Settings);
	Parms.Self_Reference = Self_Reference;
	Parms.Off = Off;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Spot_Lights != nullptr)
		*Spot_Lights = Parms.Spot_Lights;

	if (Point_Lights != nullptr)
		*Point_Lights = Parms.Point_Lights;

	if (Rect_Lights != nullptr)
		*Rect_Lights = Parms.Rect_Lights;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Create Light Fitting Meshes
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Light_Fitting_Mesh_Settings   Light_Fitting_Meshes_Settings                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USplineComponent*                 Spline                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Create_Light_Fitting_Meshes(const struct FS_Light_Fitting_Mesh_Settings& Light_Fitting_Meshes_Settings, class UObject* Self_Reference, class USplineComponent* Spline, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Create Light Fitting Meshes");

	Params::BPFL_Lighting_C_Create_Light_Fitting_Meshes Parms{};

	Parms.Light_Fitting_Meshes_Settings = std::move(Light_Fitting_Meshes_Settings);
	Parms.Self_Reference = Self_Reference;
	Parms.Spline = Spline;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Create Main Throw Light
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Main_Throw_Light_01_Settings  Main_Throw_Light_Settings                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Are_Bulb_Lights_On_                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot_Light                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point_Light                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect_Light                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Create_Main_Throw_Light(const struct FS_Main_Throw_Light_01_Settings& Main_Throw_Light_Settings, class UObject* Self_Reference, bool Are_Bulb_Lights_On_, class UObject* __WorldContext, class USpotLightComponent** Spot_Light, class UPointLightComponent** Point_Light, class URectLightComponent** Rect_Light)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Create Main Throw Light");

	Params::BPFL_Lighting_C_Create_Main_Throw_Light Parms{};

	Parms.Main_Throw_Light_Settings = std::move(Main_Throw_Light_Settings);
	Parms.Self_Reference = Self_Reference;
	Parms.Are_Bulb_Lights_On_ = Are_Bulb_Lights_On_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Spot_Light != nullptr)
		*Spot_Light = Parms.Spot_Light;

	if (Point_Light != nullptr)
		*Point_Light = Parms.Point_Light;

	if (Rect_Light != nullptr)
		*Rect_Light = Parms.Rect_Light;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Create Prop Mesh
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Prop_Mesh_01                  Prop_Mesh_01                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USplineComponent*                 SplineIn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             Prop_Mesh_Reference                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Create_Prop_Mesh(const struct FS_Prop_Mesh_01& Prop_Mesh_01, class UObject* Self_Reference, class USplineComponent* SplineIn, class UObject* __WorldContext, class UStaticMeshComponent** Prop_Mesh_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Create Prop Mesh");

	Params::BPFL_Lighting_C_Create_Prop_Mesh Parms{};

	Parms.Prop_Mesh_01 = std::move(Prop_Mesh_01);
	Parms.Self_Reference = Self_Reference;
	Parms.SplineIn = SplineIn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Prop_Mesh_Reference != nullptr)
		*Prop_Mesh_Reference = Parms.Prop_Mesh_Reference;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Emissive Plane Settings
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_Ambient_Emissive_Settings     Ambient_Emissive_Settings                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Emissive_Plane_Settings(class UObject* Self_Reference, const struct FS_Ambient_Emissive_Settings& Ambient_Emissive_Settings, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Emissive Plane Settings");

	Params::BPFL_Lighting_C_Emissive_Plane_Settings Parms{};

	Parms.Self_Reference = Self_Reference;
	Parms.Ambient_Emissive_Settings = std::move(Ambient_Emissive_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Light 01 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Light_01_Settings             Param_Light_01_Settings                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Light_01_Emissive_Settings    Light_01_Emissive_Settings                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             Prop_Mesh_Reference                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Attenuation_Radius                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Lumen_Int_Output                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Emissive_Int_Output                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Final_Colour_Output                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             Prop_Mesh_Ref_Output                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Light_01_Settings(const struct FS_Light_01_Settings& Param_Light_01_Settings, const struct FS_Light_01_Emissive_Settings& Light_01_Emissive_Settings, class USpotLightComponent* Spot, class UPointLightComponent* Point, class URectLightComponent* Rect, class UStaticMeshComponent* Prop_Mesh_Reference, double Preset_Intensity, const struct FLinearColor& Preset_Colour, bool Use_Preset_Kelvin_, double Preset_Kelvin, double Preset_Attenuation_Radius, class UObject* __WorldContext, double* Final_Lumen_Int_Output, double* Final_Emissive_Int_Output, struct FVector* Final_Colour_Output, class UStaticMeshComponent** Prop_Mesh_Ref_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Light 01 Settings");

	Params::BPFL_Lighting_C_Light_01_Settings Parms{};

	Parms.Param_Light_01_Settings = std::move(Param_Light_01_Settings);
	Parms.Light_01_Emissive_Settings = std::move(Light_01_Emissive_Settings);
	Parms.Spot = Spot;
	Parms.Point = Point;
	Parms.Rect = Rect;
	Parms.Prop_Mesh_Reference = Prop_Mesh_Reference;
	Parms.Preset_Intensity = Preset_Intensity;
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Preset_Attenuation_Radius = Preset_Attenuation_Radius;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Final_Lumen_Int_Output != nullptr)
		*Final_Lumen_Int_Output = Parms.Final_Lumen_Int_Output;

	if (Final_Emissive_Int_Output != nullptr)
		*Final_Emissive_Int_Output = Parms.Final_Emissive_Int_Output;

	if (Final_Colour_Output != nullptr)
		*Final_Colour_Output = std::move(Parms.Final_Colour_Output);

	if (Prop_Mesh_Ref_Output != nullptr)
		*Prop_Mesh_Ref_Output = Parms.Prop_Mesh_Ref_Output;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Light 02 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Light_02_Settings             Param_Light_02_Settings                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Light_02_Emissive_Settings    Light_02_Emissive_Settings                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             Prop_Mesh_Reference                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Attenuation_Radius                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Lumen_Int_Output                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Emissive_Int_Output                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Final_Colour_Output                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             Prop_Mesh_Ref_Output                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Light_02_Settings(const struct FS_Light_02_Settings& Param_Light_02_Settings, const struct FS_Light_02_Emissive_Settings& Light_02_Emissive_Settings, class USpotLightComponent* Spot, class UPointLightComponent* Point, class URectLightComponent* Rect, class UStaticMeshComponent* Prop_Mesh_Reference, double Preset_Intensity, const struct FLinearColor& Preset_Colour, bool Use_Preset_Kelvin_, double Preset_Kelvin, double Preset_Attenuation_Radius, class UObject* __WorldContext, double* Final_Lumen_Int_Output, double* Final_Emissive_Int_Output, struct FVector* Final_Colour_Output, class UStaticMeshComponent** Prop_Mesh_Ref_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Light 02 Settings");

	Params::BPFL_Lighting_C_Light_02_Settings Parms{};

	Parms.Param_Light_02_Settings = std::move(Param_Light_02_Settings);
	Parms.Light_02_Emissive_Settings = std::move(Light_02_Emissive_Settings);
	Parms.Spot = Spot;
	Parms.Point = Point;
	Parms.Rect = Rect;
	Parms.Prop_Mesh_Reference = Prop_Mesh_Reference;
	Parms.Preset_Intensity = Preset_Intensity;
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Preset_Attenuation_Radius = Preset_Attenuation_Radius;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Final_Lumen_Int_Output != nullptr)
		*Final_Lumen_Int_Output = Parms.Final_Lumen_Int_Output;

	if (Final_Emissive_Int_Output != nullptr)
		*Final_Emissive_Int_Output = Parms.Final_Emissive_Int_Output;

	if (Final_Colour_Output != nullptr)
		*Final_Colour_Output = std::move(Parms.Final_Colour_Output);

	if (Prop_Mesh_Ref_Output != nullptr)
		*Prop_Mesh_Ref_Output = Parms.Prop_Mesh_Ref_Output;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Lobby Transition From Camera
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   Level_Sequence                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   End_Frame_Number                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Lobby_Transition_From_Camera(class ULevelSequence* Level_Sequence, int32 End_Frame_Number, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Lobby Transition From Camera");

	Params::BPFL_Lighting_C_Lobby_Transition_From_Camera Parms{};

	Parms.Level_Sequence = Level_Sequence;
	Parms.End_Frame_Number = End_Frame_Number;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Lobby Transition to Camera
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   Camera_Sequence                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Lobby_Transition_to_Camera(class ULevelSequence* Camera_Sequence, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Lobby Transition to Camera");

	Params::BPFL_Lighting_C_Lobby_Transition_to_Camera Parms{};

	Parms.Camera_Sequence = Camera_Sequence;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Main Throw Light 01 Settings
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Main_Throw_Light_01_Settings  Param_Main_Throw_Light_01_Settings                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_01_Intensity                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_02_Intensity                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_03_Intensity                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_04_Intensity                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Attenuation_Radius                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Main_Throw_Light_01_Settings(const struct FS_Main_Throw_Light_01_Settings& Param_Main_Throw_Light_01_Settings, class USpotLightComponent* Spot, class UPointLightComponent* Point, class URectLightComponent* Rect, double Bulb_Light_01_Intensity, double Bulb_Light_02_Intensity, double Bulb_Light_03_Intensity, double Bulb_Light_04_Intensity, const struct FLinearColor& Preset_Colour, bool Use_Preset_Kelvin_, double Preset_Kelvin, double Preset_Attenuation_Radius, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Main Throw Light 01 Settings");

	Params::BPFL_Lighting_C_Main_Throw_Light_01_Settings Parms{};

	Parms.Param_Main_Throw_Light_01_Settings = std::move(Param_Main_Throw_Light_01_Settings);
	Parms.Spot = Spot;
	Parms.Point = Point;
	Parms.Rect = Rect;
	Parms.Bulb_Light_01_Intensity = Bulb_Light_01_Intensity;
	Parms.Bulb_Light_02_Intensity = Bulb_Light_02_Intensity;
	Parms.Bulb_Light_03_Intensity = Bulb_Light_03_Intensity;
	Parms.Bulb_Light_04_Intensity = Bulb_Light_04_Intensity;
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Preset_Attenuation_Radius = Preset_Attenuation_Radius;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Main Throw Light 02 Settings
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Main_Throw_Light_02_Settings  Param_Main_Throw_Light_02_Settings                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_01_Intensity                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_02_Intensity                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_03_Intensity                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Bulb_Light_04_Intensity                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Attenuation_Radius                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Main_Throw_Light_02_Settings(const struct FS_Main_Throw_Light_02_Settings& Param_Main_Throw_Light_02_Settings, class USpotLightComponent* Spot, class UPointLightComponent* Point, class URectLightComponent* Rect, double Bulb_Light_01_Intensity, double Bulb_Light_02_Intensity, double Bulb_Light_03_Intensity, double Bulb_Light_04_Intensity, const struct FLinearColor& Preset_Colour, bool Use_Preset_Kelvin_, double Preset_Kelvin, double Preset_Attenuation_Radius, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Main Throw Light 02 Settings");

	Params::BPFL_Lighting_C_Main_Throw_Light_02_Settings Parms{};

	Parms.Param_Main_Throw_Light_02_Settings = std::move(Param_Main_Throw_Light_02_Settings);
	Parms.Spot = Spot;
	Parms.Point = Point;
	Parms.Rect = Rect;
	Parms.Bulb_Light_01_Intensity = Bulb_Light_01_Intensity;
	Parms.Bulb_Light_02_Intensity = Bulb_Light_02_Intensity;
	Parms.Bulb_Light_03_Intensity = Bulb_Light_03_Intensity;
	Parms.Bulb_Light_04_Intensity = Bulb_Light_04_Intensity;
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Preset_Attenuation_Radius = Preset_Attenuation_Radius;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Podium Bulb 01 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_PodiumBulb_01_Settings        Param_Podium_Bulb_01_Settings                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// struct FS_Bulb_Light_01_Settings        Bulb_Light_01_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Off                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_LED_Diode_01                  LED_Diode_01_Settings                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Podium_Bulb_01_Settings(class UObject* Self_Reference, const struct FS_PodiumBulb_01_Settings& Param_Podium_Bulb_01_Settings, const struct FS_Bulb_Light_01_Settings& Bulb_Light_01_Settings, bool Off, const struct FS_LED_Diode_01& LED_Diode_01_Settings, class UObject* __WorldContext, bool* Is_Bulb_Light_On_, class USpotLightComponent** Spot, class UPointLightComponent** Point, class URectLightComponent** Rect, class UPrimitiveComponent** Prop_Mesh_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Podium Bulb 01 Settings");

	Params::BPFL_Lighting_C_Podium_Bulb_01_Settings Parms{};

	Parms.Self_Reference = Self_Reference;
	Parms.Param_Podium_Bulb_01_Settings = std::move(Param_Podium_Bulb_01_Settings);
	Parms.Bulb_Light_01_Settings = std::move(Bulb_Light_01_Settings);
	Parms.Off = Off;
	Parms.LED_Diode_01_Settings = std::move(LED_Diode_01_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Is_Bulb_Light_On_ != nullptr)
		*Is_Bulb_Light_On_ = Parms.Is_Bulb_Light_On_;

	if (Spot != nullptr)
		*Spot = Parms.Spot;

	if (Point != nullptr)
		*Point = Parms.Point;

	if (Rect != nullptr)
		*Rect = Parms.Rect;

	if (Prop_Mesh_Reference != nullptr)
		*Prop_Mesh_Reference = Parms.Prop_Mesh_Reference;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Podium Bulb 02 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_PodiumBulb_02_Settings        Param_Podium_Bulb_02_Settings                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_Light_02_Settings        Bulb_Light_02_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Off                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_LED_Diode_02                  LED_Diode_02_Settings                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Podium_Bulb_02_Settings(class UObject* Self_Reference, const struct FS_PodiumBulb_02_Settings& Param_Podium_Bulb_02_Settings, const struct FS_Bulb_Light_02_Settings& Bulb_Light_02_Settings, bool Off, const struct FS_LED_Diode_02& LED_Diode_02_Settings, class UObject* __WorldContext, bool* Is_Bulb_Light_On_, class USpotLightComponent** Spot, class UPointLightComponent** Point, class URectLightComponent** Rect, class UPrimitiveComponent** Prop_Mesh_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Podium Bulb 02 Settings");

	Params::BPFL_Lighting_C_Podium_Bulb_02_Settings Parms{};

	Parms.Self_Reference = Self_Reference;
	Parms.Param_Podium_Bulb_02_Settings = std::move(Param_Podium_Bulb_02_Settings);
	Parms.Bulb_Light_02_Settings = std::move(Bulb_Light_02_Settings);
	Parms.Off = Off;
	Parms.LED_Diode_02_Settings = std::move(LED_Diode_02_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Is_Bulb_Light_On_ != nullptr)
		*Is_Bulb_Light_On_ = Parms.Is_Bulb_Light_On_;

	if (Spot != nullptr)
		*Spot = Parms.Spot;

	if (Point != nullptr)
		*Point = Parms.Point;

	if (Rect != nullptr)
		*Rect = Parms.Rect;

	if (Prop_Mesh_Reference != nullptr)
		*Prop_Mesh_Reference = Parms.Prop_Mesh_Reference;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Podium Bulb 03 Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_PodiumBulb_03_Settings        Param_Podium_Bulb_03_Settings                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Bulb_Light_03_Settings        Bulb_Light_03_Settings                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Off                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_LED_Diode_03                  LED_Diode_03_Settings                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Bulb_Light_On_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USpotLightComponent*              Spot                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPointLightComponent*             Point                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class URectLightComponent*              Rect                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Prop_Mesh_Reference                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Podium_Bulb_03_Settings(class UObject* Self_Reference, const struct FS_PodiumBulb_03_Settings& Param_Podium_Bulb_03_Settings, const struct FS_Bulb_Light_03_Settings& Bulb_Light_03_Settings, bool Off, const struct FS_LED_Diode_03& LED_Diode_03_Settings, class UObject* __WorldContext, bool* Is_Bulb_Light_On_, class USpotLightComponent** Spot, class UPointLightComponent** Point, class URectLightComponent** Rect, class UPrimitiveComponent** Prop_Mesh_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Podium Bulb 03 Settings");

	Params::BPFL_Lighting_C_Podium_Bulb_03_Settings Parms{};

	Parms.Self_Reference = Self_Reference;
	Parms.Param_Podium_Bulb_03_Settings = std::move(Param_Podium_Bulb_03_Settings);
	Parms.Bulb_Light_03_Settings = std::move(Bulb_Light_03_Settings);
	Parms.Off = Off;
	Parms.LED_Diode_03_Settings = std::move(LED_Diode_03_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Is_Bulb_Light_On_ != nullptr)
		*Is_Bulb_Light_On_ = Parms.Is_Bulb_Light_On_;

	if (Spot != nullptr)
		*Spot = Parms.Spot;

	if (Point != nullptr)
		*Point = Parms.Point;

	if (Rect != nullptr)
		*Rect = Parms.Rect;

	if (Prop_Mesh_Reference != nullptr)
		*Prop_Mesh_Reference = Parms.Prop_Mesh_Reference;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Point Light Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPointLightComponent*             Point_Light                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Override_Preset_Intensity                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Override_Preset_Colour                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Colour                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Override_Attenuation_Radius                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Attenuation_Radius                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Attenuation_Radius                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Shadow_Casting_Start_Distance                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Source_Radius                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Soft_Source_Radius                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Source_Length                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Temperature                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Temperature                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Cast_Shadows                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Indirect_Lighting_Intensity                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Volumetric_Scattering_Intensity                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Inverse_Squared_Falloff                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Light_Falloff_Exponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Inverse_Exposure_Blend                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Specular_Scale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Shadow_Bias                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Shadow_Scale_Bias                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lighting_Channel_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lighting_Channel_1                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lighting_Channel_2                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Cast_Volumetric_Shadows                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max_Draw_Distance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max_Distance_Fade_Range                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Light_Function_Material                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Light_Function_Scale                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Light_Function_Fade_Distance                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Disabled_Brightness                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureLightProfile*             IES_Texture                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_IES_Intensity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  IES_Intensity_Scale                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Intensity_Output                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Final_Colour_Output                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Point_Light_Settings(class UPointLightComponent* Point_Light, bool Override_Preset_Intensity, double Intensity, double Preset_Intensity, bool Override_Preset_Colour, const struct FLinearColor& Colour, const struct FLinearColor& Preset_Colour, bool Override_Attenuation_Radius, double Attenuation_Radius, double Preset_Attenuation_Radius, double Shadow_Casting_Start_Distance, double Source_Radius, double Soft_Source_Radius, double Source_Length, bool Use_Temperature, bool Use_Preset_Kelvin_, double Preset_Kelvin, double Temperature, bool Cast_Shadows, double Indirect_Lighting_Intensity, double Volumetric_Scattering_Intensity, bool Use_Inverse_Squared_Falloff, double Light_Falloff_Exponent, double Inverse_Exposure_Blend, double Specular_Scale, double Shadow_Bias, double Shadow_Scale_Bias, bool Lighting_Channel_0, bool Lighting_Channel_1, bool Lighting_Channel_2, bool Cast_Volumetric_Shadows, double Max_Draw_Distance, double Max_Distance_Fade_Range, class UMaterialInterface* Light_Function_Material, const struct FVector& Light_Function_Scale, double Light_Function_Fade_Distance, double Disabled_Brightness, class UTextureLightProfile* IES_Texture, bool Use_IES_Intensity, double IES_Intensity_Scale, class UObject* __WorldContext, double* Final_Intensity_Output, struct FLinearColor* Final_Colour_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Point Light Settings");

	Params::BPFL_Lighting_C_Point_Light_Settings Parms{};

	Parms.Point_Light = Point_Light;
	Parms.Override_Preset_Intensity = Override_Preset_Intensity;
	Parms.Intensity = Intensity;
	Parms.Preset_Intensity = Preset_Intensity;
	Parms.Override_Preset_Colour = Override_Preset_Colour;
	Parms.Colour = std::move(Colour);
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Override_Attenuation_Radius = Override_Attenuation_Radius;
	Parms.Attenuation_Radius = Attenuation_Radius;
	Parms.Preset_Attenuation_Radius = Preset_Attenuation_Radius;
	Parms.Shadow_Casting_Start_Distance = Shadow_Casting_Start_Distance;
	Parms.Source_Radius = Source_Radius;
	Parms.Soft_Source_Radius = Soft_Source_Radius;
	Parms.Source_Length = Source_Length;
	Parms.Use_Temperature = Use_Temperature;
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Temperature = Temperature;
	Parms.Cast_Shadows = Cast_Shadows;
	Parms.Indirect_Lighting_Intensity = Indirect_Lighting_Intensity;
	Parms.Volumetric_Scattering_Intensity = Volumetric_Scattering_Intensity;
	Parms.Use_Inverse_Squared_Falloff = Use_Inverse_Squared_Falloff;
	Parms.Light_Falloff_Exponent = Light_Falloff_Exponent;
	Parms.Inverse_Exposure_Blend = Inverse_Exposure_Blend;
	Parms.Specular_Scale = Specular_Scale;
	Parms.Shadow_Bias = Shadow_Bias;
	Parms.Shadow_Scale_Bias = Shadow_Scale_Bias;
	Parms.Lighting_Channel_0 = Lighting_Channel_0;
	Parms.Lighting_Channel_1 = Lighting_Channel_1;
	Parms.Lighting_Channel_2 = Lighting_Channel_2;
	Parms.Cast_Volumetric_Shadows = Cast_Volumetric_Shadows;
	Parms.Max_Draw_Distance = Max_Draw_Distance;
	Parms.Max_Distance_Fade_Range = Max_Distance_Fade_Range;
	Parms.Light_Function_Material = Light_Function_Material;
	Parms.Light_Function_Scale = std::move(Light_Function_Scale);
	Parms.Light_Function_Fade_Distance = Light_Function_Fade_Distance;
	Parms.Disabled_Brightness = Disabled_Brightness;
	Parms.IES_Texture = IES_Texture;
	Parms.Use_IES_Intensity = Use_IES_Intensity;
	Parms.IES_Intensity_Scale = IES_Intensity_Scale;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Final_Intensity_Output != nullptr)
		*Final_Intensity_Output = Parms.Final_Intensity_Output;

	if (Final_Colour_Output != nullptr)
		*Final_Colour_Output = std::move(Parms.Final_Colour_Output);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Presets
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Light_Presets                 Light_Presets_Input                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Attenuation_Radius                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Turn_Lights_On_                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Presets(const struct FS_Light_Presets& Light_Presets_Input, class UObject* __WorldContext, double* Preset_Intensity, struct FLinearColor* Preset_Colour, double* Preset_Kelvin, double* Preset_Attenuation_Radius, bool* Turn_Lights_On_, bool* Use_Preset_Kelvin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Presets");

	Params::BPFL_Lighting_C_Presets Parms{};

	Parms.Light_Presets_Input = std::move(Light_Presets_Input);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Preset_Intensity != nullptr)
		*Preset_Intensity = Parms.Preset_Intensity;

	if (Preset_Colour != nullptr)
		*Preset_Colour = std::move(Parms.Preset_Colour);

	if (Preset_Kelvin != nullptr)
		*Preset_Kelvin = Parms.Preset_Kelvin;

	if (Preset_Attenuation_Radius != nullptr)
		*Preset_Attenuation_Radius = Parms.Preset_Attenuation_Radius;

	if (Turn_Lights_On_ != nullptr)
		*Turn_Lights_On_ = Parms.Turn_Lights_On_;

	if (Use_Preset_Kelvin != nullptr)
		*Use_Preset_Kelvin = Parms.Use_Preset_Kelvin;
}


// Function BPFL_Lighting.BPFL_Lighting_C.Procedural Railings
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Self_Reference                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_Procedural_Railings           Param_Procedural_Railings                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Procedural_Railings(class UObject* Self_Reference, const struct FS_Procedural_Railings& Param_Procedural_Railings, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Procedural Railings");

	Params::BPFL_Lighting_C_Procedural_Railings Parms{};

	Parms.Self_Reference = Self_Reference;
	Parms.Param_Procedural_Railings = std::move(Param_Procedural_Railings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Rect Light Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URectLightComponent*              Rect_Light                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Override_Preset_Intensity                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Override_Preset_Colour                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Colour                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Override_Attenuation_Radius                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Attenuation_Radius                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Attenuation_Radius                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Shadow_Casting_Start_Distance                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Source_Width                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Source_Height                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Barn_Door_Angle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Barn_Door_Length                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Source_Texture                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Temperature                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Temperature                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Cast_Shadows                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Indirect_Lighting_Intensity                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Volumetric_Scattering_Intensity                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lighting_Channel_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lighting_Channel_1                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lighting_Channel_2                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Cast_Volumetric_Shadows                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max_Draw_Distance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max_Distance_Fade_Range                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Light_Function_Material                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Light_Function_Scale                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Light_Function_Fade_Distance                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Disabled_Brightness                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureLightProfile*             IES_Texture                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_IES_Intensity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  IES_Intensity_Scale                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Intensity_Output                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Final_Colour_Output                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Rect_Light_Settings(class URectLightComponent* Rect_Light, bool Override_Preset_Intensity, double Intensity, double Preset_Intensity, bool Override_Preset_Colour, const struct FLinearColor& Colour, const struct FLinearColor& Preset_Colour, bool Override_Attenuation_Radius, double Attenuation_Radius, double Preset_Attenuation_Radius, double Shadow_Casting_Start_Distance, double Source_Width, double Source_Height, double Barn_Door_Angle, double Barn_Door_Length, class UTexture* Source_Texture, bool Use_Temperature, bool Use_Preset_Kelvin_, double Preset_Kelvin, double Temperature, bool Cast_Shadows, double Indirect_Lighting_Intensity, double Volumetric_Scattering_Intensity, bool Lighting_Channel_0, bool Lighting_Channel_1, bool Lighting_Channel_2, bool Cast_Volumetric_Shadows, double Max_Draw_Distance, double Max_Distance_Fade_Range, class UMaterialInterface* Light_Function_Material, const struct FVector& Light_Function_Scale, double Light_Function_Fade_Distance, double Disabled_Brightness, class UTextureLightProfile* IES_Texture, bool Use_IES_Intensity, double IES_Intensity_Scale, class UObject* __WorldContext, double* Final_Intensity_Output, struct FLinearColor* Final_Colour_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Rect Light Settings");

	Params::BPFL_Lighting_C_Rect_Light_Settings Parms{};

	Parms.Rect_Light = Rect_Light;
	Parms.Override_Preset_Intensity = Override_Preset_Intensity;
	Parms.Intensity = Intensity;
	Parms.Preset_Intensity = Preset_Intensity;
	Parms.Override_Preset_Colour = Override_Preset_Colour;
	Parms.Colour = std::move(Colour);
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Override_Attenuation_Radius = Override_Attenuation_Radius;
	Parms.Attenuation_Radius = Attenuation_Radius;
	Parms.Preset_Attenuation_Radius = Preset_Attenuation_Radius;
	Parms.Shadow_Casting_Start_Distance = Shadow_Casting_Start_Distance;
	Parms.Source_Width = Source_Width;
	Parms.Source_Height = Source_Height;
	Parms.Barn_Door_Angle = Barn_Door_Angle;
	Parms.Barn_Door_Length = Barn_Door_Length;
	Parms.Source_Texture = Source_Texture;
	Parms.Use_Temperature = Use_Temperature;
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Temperature = Temperature;
	Parms.Cast_Shadows = Cast_Shadows;
	Parms.Indirect_Lighting_Intensity = Indirect_Lighting_Intensity;
	Parms.Volumetric_Scattering_Intensity = Volumetric_Scattering_Intensity;
	Parms.Lighting_Channel_0 = Lighting_Channel_0;
	Parms.Lighting_Channel_1 = Lighting_Channel_1;
	Parms.Lighting_Channel_2 = Lighting_Channel_2;
	Parms.Cast_Volumetric_Shadows = Cast_Volumetric_Shadows;
	Parms.Max_Draw_Distance = Max_Draw_Distance;
	Parms.Max_Distance_Fade_Range = Max_Distance_Fade_Range;
	Parms.Light_Function_Material = Light_Function_Material;
	Parms.Light_Function_Scale = std::move(Light_Function_Scale);
	Parms.Light_Function_Fade_Distance = Light_Function_Fade_Distance;
	Parms.Disabled_Brightness = Disabled_Brightness;
	Parms.IES_Texture = IES_Texture;
	Parms.Use_IES_Intensity = Use_IES_Intensity;
	Parms.IES_Intensity_Scale = IES_Intensity_Scale;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Final_Intensity_Output != nullptr)
		*Final_Intensity_Output = Parms.Final_Intensity_Output;

	if (Final_Colour_Output != nullptr)
		*Final_Colour_Output = std::move(Parms.Final_Colour_Output);
}


// Function BPFL_Lighting.BPFL_Lighting_C.RestVariables
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USplineComponent*>         Splines                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FS_Prop_Mesh_01                  Settings                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// struct FVector                          InLockedProp                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InLockedAnchor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InPreProp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InPreAnchor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  InPrevSplinePoint0                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FVector>                  InPrevSplinePoint1                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FS_Light_Fitting_Mesh_Settings   LightFittingSettings                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutLockedProp                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutLockedAnchor                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  OutPrevSplinePoint0                                    (Parm, OutParm)
// TArray<struct FVector>                  OutPrevSplinePoint1                                    (Parm, OutParm)

void UBPFL_Lighting_C::RestVariables(TArray<class USplineComponent*>& Splines, const struct FS_Prop_Mesh_01& Settings, const struct FVector& InLockedProp, const struct FVector& InLockedAnchor, const struct FVector& InPreProp, const struct FVector& InPreAnchor, TArray<struct FVector>& InPrevSplinePoint0, TArray<struct FVector>& InPrevSplinePoint1, const struct FS_Light_Fitting_Mesh_Settings& LightFittingSettings, class UObject* __WorldContext, struct FVector* OutLockedProp, struct FVector* OutLockedAnchor, TArray<struct FVector>* OutPrevSplinePoint0, TArray<struct FVector>* OutPrevSplinePoint1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "RestVariables");

	Params::BPFL_Lighting_C_RestVariables Parms{};

	Parms.Splines = std::move(Splines);
	Parms.Settings = std::move(Settings);
	Parms.InLockedProp = std::move(InLockedProp);
	Parms.InLockedAnchor = std::move(InLockedAnchor);
	Parms.InPreProp = std::move(InPreProp);
	Parms.InPreAnchor = std::move(InPreAnchor);
	Parms.InPrevSplinePoint0 = std::move(InPrevSplinePoint0);
	Parms.InPrevSplinePoint1 = std::move(InPrevSplinePoint1);
	Parms.LightFittingSettings = std::move(LightFittingSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Splines = std::move(Parms.Splines);
	InPrevSplinePoint0 = std::move(Parms.InPrevSplinePoint0);
	InPrevSplinePoint1 = std::move(Parms.InPrevSplinePoint1);

	if (OutLockedProp != nullptr)
		*OutLockedProp = std::move(Parms.OutLockedProp);

	if (OutLockedAnchor != nullptr)
		*OutLockedAnchor = std::move(Parms.OutLockedAnchor);

	if (OutPrevSplinePoint0 != nullptr)
		*OutPrevSplinePoint0 = std::move(Parms.OutPrevSplinePoint0);

	if (OutPrevSplinePoint1 != nullptr)
		*OutPrevSplinePoint1 = std::move(Parms.OutPrevSplinePoint1);
}


// Function BPFL_Lighting.BPFL_Lighting_C.SetDefaultSuspensionTransform
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_Light_Fitting_Mesh_Settings   LightFittingSettings                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_Prop_Mesh_01                  PropMeshSettings                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class USplineComponent*                 Spline                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_Light_Fitting_Mesh_Settings   LightFittingSettingsOut                                (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// struct FS_Prop_Mesh_01                  PropMeshSettingsOut                                    (Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// struct FVector                          SplineLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::SetDefaultSuspensionTransform(const struct FS_Light_Fitting_Mesh_Settings& LightFittingSettings, const struct FS_Prop_Mesh_01& PropMeshSettings, class USplineComponent* Spline, class UObject* __WorldContext, struct FS_Light_Fitting_Mesh_Settings* LightFittingSettingsOut, struct FS_Prop_Mesh_01* PropMeshSettingsOut, struct FVector* SplineLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "SetDefaultSuspensionTransform");

	Params::BPFL_Lighting_C_SetDefaultSuspensionTransform Parms{};

	Parms.LightFittingSettings = std::move(LightFittingSettings);
	Parms.PropMeshSettings = std::move(PropMeshSettings);
	Parms.Spline = Spline;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LightFittingSettingsOut != nullptr)
		*LightFittingSettingsOut = std::move(Parms.LightFittingSettingsOut);

	if (PropMeshSettingsOut != nullptr)
		*PropMeshSettingsOut = std::move(Parms.PropMeshSettingsOut);

	if (SplineLocation != nullptr)
		*SplineLocation = std::move(Parms.SplineLocation);
}


// Function BPFL_Lighting.BPFL_Lighting_C.Spot Light Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpotLightComponent*              Spot_Light                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Override_Preset_Intensity                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Intensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Override_Preset_Colour                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Colour                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Preset_Colour                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Override_Attenuation_Radius                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Attenuation_Radius                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Attenuation_Radius                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Inner_Cone_Angle                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Outer_Cone_Angle                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Shadow_Casting_Start_Distance                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Source_Radius                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Soft_Source_Radius                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Source_Length                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Temperature                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Preset_Kelvin_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Preset_Kelvin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Temperature                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Cast_Shadows                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Indirect_Lighting_Intensity                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Volumetric_Scattering_Intensity                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Inverse_Squared_Falloff                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Light_Falloff_Exponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Inverse_Exposure_Blend                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Specular_Scale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Shadow_Bias                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Shadow_Slope_Bias                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lighting_Channel_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lighting_Channel_1                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Lighting_Channel_2                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Cast_Volumetric_Shadows                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max_Draw_Distance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max_Distance_Fade_Range                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Light_Function_Material                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Light_Function_Scale                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Light_Function_Fade_Distance                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Disabled_Brightness                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureLightProfile*             IES_Texture                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_IES_Intensity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  IES_Intensity_Scale                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Intensity_Output                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Final_Colour_Output                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Lighting_C::Spot_Light_Settings(class USpotLightComponent* Spot_Light, bool Override_Preset_Intensity, double Intensity, double Preset_Intensity, bool Override_Preset_Colour, const struct FLinearColor& Colour, const struct FLinearColor& Preset_Colour, bool Override_Attenuation_Radius, double Attenuation_Radius, double Preset_Attenuation_Radius, double Inner_Cone_Angle, double Outer_Cone_Angle, double Shadow_Casting_Start_Distance, double Source_Radius, double Soft_Source_Radius, double Source_Length, bool Use_Temperature, bool Use_Preset_Kelvin_, double Preset_Kelvin, double Temperature, bool Cast_Shadows, double Indirect_Lighting_Intensity, double Volumetric_Scattering_Intensity, bool Use_Inverse_Squared_Falloff, double Light_Falloff_Exponent, double Inverse_Exposure_Blend, double Specular_Scale, double Shadow_Bias, double Shadow_Slope_Bias, bool Lighting_Channel_0, bool Lighting_Channel_1, bool Lighting_Channel_2, bool Cast_Volumetric_Shadows, double Max_Draw_Distance, double Max_Distance_Fade_Range, class UMaterialInterface* Light_Function_Material, const struct FVector& Light_Function_Scale, double Light_Function_Fade_Distance, double Disabled_Brightness, class UTextureLightProfile* IES_Texture, bool Use_IES_Intensity, double IES_Intensity_Scale, class UObject* __WorldContext, double* Final_Intensity_Output, struct FLinearColor* Final_Colour_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Lighting_C", "Spot Light Settings");

	Params::BPFL_Lighting_C_Spot_Light_Settings Parms{};

	Parms.Spot_Light = Spot_Light;
	Parms.Override_Preset_Intensity = Override_Preset_Intensity;
	Parms.Intensity = Intensity;
	Parms.Preset_Intensity = Preset_Intensity;
	Parms.Override_Preset_Colour = Override_Preset_Colour;
	Parms.Colour = std::move(Colour);
	Parms.Preset_Colour = std::move(Preset_Colour);
	Parms.Override_Attenuation_Radius = Override_Attenuation_Radius;
	Parms.Attenuation_Radius = Attenuation_Radius;
	Parms.Preset_Attenuation_Radius = Preset_Attenuation_Radius;
	Parms.Inner_Cone_Angle = Inner_Cone_Angle;
	Parms.Outer_Cone_Angle = Outer_Cone_Angle;
	Parms.Shadow_Casting_Start_Distance = Shadow_Casting_Start_Distance;
	Parms.Source_Radius = Source_Radius;
	Parms.Soft_Source_Radius = Soft_Source_Radius;
	Parms.Source_Length = Source_Length;
	Parms.Use_Temperature = Use_Temperature;
	Parms.Use_Preset_Kelvin_ = Use_Preset_Kelvin_;
	Parms.Preset_Kelvin = Preset_Kelvin;
	Parms.Temperature = Temperature;
	Parms.Cast_Shadows = Cast_Shadows;
	Parms.Indirect_Lighting_Intensity = Indirect_Lighting_Intensity;
	Parms.Volumetric_Scattering_Intensity = Volumetric_Scattering_Intensity;
	Parms.Use_Inverse_Squared_Falloff = Use_Inverse_Squared_Falloff;
	Parms.Light_Falloff_Exponent = Light_Falloff_Exponent;
	Parms.Inverse_Exposure_Blend = Inverse_Exposure_Blend;
	Parms.Specular_Scale = Specular_Scale;
	Parms.Shadow_Bias = Shadow_Bias;
	Parms.Shadow_Slope_Bias = Shadow_Slope_Bias;
	Parms.Lighting_Channel_0 = Lighting_Channel_0;
	Parms.Lighting_Channel_1 = Lighting_Channel_1;
	Parms.Lighting_Channel_2 = Lighting_Channel_2;
	Parms.Cast_Volumetric_Shadows = Cast_Volumetric_Shadows;
	Parms.Max_Draw_Distance = Max_Draw_Distance;
	Parms.Max_Distance_Fade_Range = Max_Distance_Fade_Range;
	Parms.Light_Function_Material = Light_Function_Material;
	Parms.Light_Function_Scale = std::move(Light_Function_Scale);
	Parms.Light_Function_Fade_Distance = Light_Function_Fade_Distance;
	Parms.Disabled_Brightness = Disabled_Brightness;
	Parms.IES_Texture = IES_Texture;
	Parms.Use_IES_Intensity = Use_IES_Intensity;
	Parms.IES_Intensity_Scale = IES_Intensity_Scale;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Final_Intensity_Output != nullptr)
		*Final_Intensity_Output = Parms.Final_Intensity_Output;

	if (Final_Colour_Output != nullptr)
		*Final_Colour_Output = std::move(Parms.Final_Colour_Output);
}

}

