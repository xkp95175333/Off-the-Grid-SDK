#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryScreen

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.AddAttachmentToolTipInfo
// 0x0048 (0x0048 - 0x0000)
struct WBP_InventoryScreen_C_AddAttachmentToolTipInfo final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	EGzItemRarity                                 Rarity;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzWeaponAttachmentType                       AttachmentType;                                    // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A0[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Inventory_Attachment_C*            AddedElement;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Inventory_Attachment_C*            CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A1[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_AddAttachmentToolTipInfo");
static_assert(sizeof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo) == 0x000048, "Wrong size on WBP_InventoryScreen_C_AddAttachmentToolTipInfo");
static_assert(offsetof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo, Param_Name) == 0x000000, "Member 'WBP_InventoryScreen_C_AddAttachmentToolTipInfo::Param_Name' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo, Rarity) == 0x000010, "Member 'WBP_InventoryScreen_C_AddAttachmentToolTipInfo::Rarity' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo, AttachmentType) == 0x000011, "Member 'WBP_InventoryScreen_C_AddAttachmentToolTipInfo::AttachmentType' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo, AddedElement) == 0x000018, "Member 'WBP_InventoryScreen_C_AddAttachmentToolTipInfo::AddedElement' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_InventoryScreen_C_AddAttachmentToolTipInfo::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo, CallFunc_GetRarityColor_ReturnValue) == 0x000028, "Member 'WBP_InventoryScreen_C_AddAttachmentToolTipInfo::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x000038, "Member 'WBP_InventoryScreen_C_AddAttachmentToolTipInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddAttachmentToolTipInfo, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'WBP_InventoryScreen_C_AddAttachmentToolTipInfo::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.AddSkinToolTipInfo
// 0x0030 (0x0030 - 0x0000)
struct WBP_InventoryScreen_C_AddSkinToolTipInfo final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWBP_Inventory_SkinShow_C*              AddedElement;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Inventory_SkinShow_C*              CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A2[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_AddSkinToolTipInfo) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_AddSkinToolTipInfo");
static_assert(sizeof(WBP_InventoryScreen_C_AddSkinToolTipInfo) == 0x000030, "Wrong size on WBP_InventoryScreen_C_AddSkinToolTipInfo");
static_assert(offsetof(WBP_InventoryScreen_C_AddSkinToolTipInfo, Param_Name) == 0x000000, "Member 'WBP_InventoryScreen_C_AddSkinToolTipInfo::Param_Name' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddSkinToolTipInfo, AddedElement) == 0x000010, "Member 'WBP_InventoryScreen_C_AddSkinToolTipInfo::AddedElement' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddSkinToolTipInfo, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_InventoryScreen_C_AddSkinToolTipInfo::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddSkinToolTipInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x000020, "Member 'WBP_InventoryScreen_C_AddSkinToolTipInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_AddSkinToolTipInfo, CallFunc_AddChild_ReturnValue) == 0x000028, "Member 'WBP_InventoryScreen_C_AddSkinToolTipInfo::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BindElementsButtonHover
// 0x0050 (0x0050 - 0x0000)
struct WBP_InventoryScreen_C_BindElementsButtonHover final
{
public:
	TDelegate<void(const struct FGzInvItem& NewItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzInvItem& NewItem)>   K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsHover, const struct FGzInvItem& Item)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_BindElementsButtonHover) == 0x000004, "Wrong alignment on WBP_InventoryScreen_C_BindElementsButtonHover");
static_assert(sizeof(WBP_InventoryScreen_C_BindElementsButtonHover) == 0x000050, "Wrong size on WBP_InventoryScreen_C_BindElementsButtonHover");
static_assert(offsetof(WBP_InventoryScreen_C_BindElementsButtonHover, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_InventoryScreen_C_BindElementsButtonHover::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_BindElementsButtonHover, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WBP_InventoryScreen_C_BindElementsButtonHover::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_BindElementsButtonHover, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'WBP_InventoryScreen_C_BindElementsButtonHover::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_BindElementsButtonHover, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'WBP_InventoryScreen_C_BindElementsButtonHover::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_BindElementsButtonHover, K2Node_CreateDelegate_OutputDelegate_4) == 0x000040, "Member 'WBP_InventoryScreen_C_BindElementsButtonHover::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature final
{
public:
	bool                                          ToShow;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature) == 0x000001, "Wrong alignment on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature");
static_assert(sizeof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature) == 0x000001, "Wrong size on WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature");
static_assert(offsetof(WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature, ToShow) == 0x000000, "Member 'WBP_InventoryScreen_C_BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature::ToShow' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.ButtonHover
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryScreen_C_ButtonHover final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzPocketWidget*                        CallFunc_FindParentWidgetOfType_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_ButtonHover) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_ButtonHover");
static_assert(sizeof(WBP_InventoryScreen_C_ButtonHover) == 0x000018, "Wrong size on WBP_InventoryScreen_C_ButtonHover");
static_assert(offsetof(WBP_InventoryScreen_C_ButtonHover, Button) == 0x000000, "Member 'WBP_InventoryScreen_C_ButtonHover::Button' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ButtonHover, CallFunc_FindParentWidgetOfType_ReturnValue) == 0x000008, "Member 'WBP_InventoryScreen_C_ButtonHover::CallFunc_FindParentWidgetOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ButtonHover, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'WBP_InventoryScreen_C_ButtonHover::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.ButtonUnhover
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryScreen_C_ButtonUnhover final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_ButtonUnhover) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_ButtonUnhover");
static_assert(sizeof(WBP_InventoryScreen_C_ButtonUnhover) == 0x000008, "Wrong size on WBP_InventoryScreen_C_ButtonUnhover");
static_assert(offsetof(WBP_InventoryScreen_C_ButtonUnhover, Button) == 0x000000, "Member 'WBP_InventoryScreen_C_ButtonUnhover::Button' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	struct FGzInvItem                             NewItem;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000010, "Wrong size on WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_0, NewItem) == 0x000000, "Member 'WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_0::NewItem' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.CREATEDELEGATE_PROXYFUNCTION_1
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_1 final
{
public:
	bool                                          StateBroken;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000001, "Wrong alignment on WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(sizeof(WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000001, "Wrong size on WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(offsetof(WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_1, StateBroken) == 0x000000, "Member 'WBP_InventoryScreen_C_CREATEDELEGATE_PROXYFUNCTION_1::StateBroken' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.DynamicInventoryButtonHover
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_InventoryScreen_C_DynamicInventoryButtonHover final
{
public:
	bool                                          IsHover;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             Item;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzExecResult                                 CallFunc_GetLimbItem_ExecResult;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A4[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzLimbInvItem                         CallFunc_GetLimbItem_ReturnValue;                  // 0x0020(0x0058)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzExecResult                                 CallFunc_GetWeaponItem_ExecResult;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A5[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzWeaponInvItem                       CallFunc_GetWeaponItem_ReturnValue;                // 0x0080(0x0050)()
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A6[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_2;                              // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_DynamicInventoryButtonHover) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_DynamicInventoryButtonHover");
static_assert(sizeof(WBP_InventoryScreen_C_DynamicInventoryButtonHover) == 0x0000F0, "Wrong size on WBP_InventoryScreen_C_DynamicInventoryButtonHover");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, IsHover) == 0x000000, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::IsHover' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Item) == 0x000008, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Temp_bool_Variable) == 0x000018, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, CallFunc_GetLimbItem_ExecResult) == 0x000019, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::CallFunc_GetLimbItem_ExecResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, CallFunc_GetLimbItem_ReturnValue) == 0x000020, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::CallFunc_GetLimbItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, K2Node_SwitchEnum_CmpSuccess) == 0x000078, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, CallFunc_GetWeaponItem_ExecResult) == 0x000079, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::CallFunc_GetWeaponItem_ExecResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, CallFunc_GetWeaponItem_ReturnValue) == 0x000080, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::CallFunc_GetWeaponItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000D0, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Temp_bool_Variable_1) == 0x0000D1, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x0000D8, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, CallFunc_GetCurrentInputType_ReturnValue) == 0x0000E0, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Temp_bool_Variable_2) == 0x0000E1, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Temp_byte_Variable) == 0x0000E2, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Temp_byte_Variable_1) == 0x0000E3, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Temp_bool_Variable_3) == 0x0000E4, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Temp_bool_Variable_4) == 0x0000E5, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Temp_byte_Variable_2) == 0x0000E6, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, Temp_bool_Variable_5) == 0x0000E7, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, K2Node_Select_Default) == 0x0000E8, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, CallFunc_BooleanAND_ReturnValue) == 0x0000E9, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_DynamicInventoryButtonHover, K2Node_Select_Default_1) == 0x0000EA, "Member 'WBP_InventoryScreen_C_DynamicInventoryButtonHover::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.ExecuteUbergraph_WBP_InventoryScreen
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGzInputActionBindingHandle            CallFunc_RegisterBinding_BindingHandle;            // 0x0014(0x0004)(NoDestructor)
	class UGzWE_PlayerDeathAware*                 CallFunc_AddExtension_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzInvPocket                           CallFunc_GetPocket_ReturnValue;                    // 0x0020(0x0028)(ConstParm)
	struct FGzInvPocket                           CallFunc_GetPocket_ReturnValue_1;                  // 0x0048(0x0028)(ConstParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    K2Node_DynamicCast_AsGz_Player_Controller;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A7[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToShow;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A8[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool StateBroken)>             K2Node_CreateDelegate_OutputDelegate_1;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A9[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzNavigationRoot*                      CallFunc_GetNavigationRoot_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzNavigationWidget*                    CallFunc_AddWidgetCached_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_3;               // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_LoadoutSelectionScreen_QuickOrder_C* CallFunc_Create_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen");
static_assert(sizeof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen) == 0x0000E8, "Wrong size on WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, EntryPoint) == 0x000000, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_RegisterBinding_BindingHandle) == 0x000014, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_RegisterBinding_BindingHandle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_AddExtension_ReturnValue) == 0x000018, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_AddExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_GetPocket_ReturnValue) == 0x000020, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_GetPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_GetPocket_ReturnValue_1) == 0x000048, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_GetPocket_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x000070, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_Event_Pawn) == 0x000078, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_DynamicCast_AsGz_Player_Controller) == 0x000080, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_DynamicCast_AsGz_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000090, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_ComponentBoundEvent_ToShow) == 0x000098, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_ComponentBoundEvent_ToShow' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x00009C, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_GetNavigationRoot_ReturnValue) == 0x0000B0, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_GetNavigationRoot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_AddWidgetCached_ReturnValue) == 0x0000B8, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_AddWidgetCached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_ComponentBoundEvent_Button_3) == 0x0000C0, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_ComponentBoundEvent_Button_2) == 0x0000C8, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, CallFunc_Create_ReturnValue) == 0x0000D0, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_ComponentBoundEvent_Button_1) == 0x0000D8, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen, K2Node_ComponentBoundEvent_Button) == 0x0000E0, "Member 'WBP_InventoryScreen_C_ExecuteUbergraph_WBP_InventoryScreen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.GetPlayerInventoryComponent
// 0x0030 (0x0030 - 0x0000)
struct WBP_InventoryScreen_C_GetPlayerInventoryComponent final
{
public:
	class UGzInvComponent*                        InventoryComponent;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGzPlayerViewTargetInterface> K2Node_DynamicCast_AsGz_Player_View_Target_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64AA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzInvComponent*                        CallFunc_GetViewTargetInventory_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_GetPlayerInventoryComponent) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_GetPlayerInventoryComponent");
static_assert(sizeof(WBP_InventoryScreen_C_GetPlayerInventoryComponent) == 0x000030, "Wrong size on WBP_InventoryScreen_C_GetPlayerInventoryComponent");
static_assert(offsetof(WBP_InventoryScreen_C_GetPlayerInventoryComponent, InventoryComponent) == 0x000000, "Member 'WBP_InventoryScreen_C_GetPlayerInventoryComponent::InventoryComponent' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_GetPlayerInventoryComponent, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_InventoryScreen_C_GetPlayerInventoryComponent::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_GetPlayerInventoryComponent, K2Node_DynamicCast_AsGz_Player_View_Target_Interface) == 0x000010, "Member 'WBP_InventoryScreen_C_GetPlayerInventoryComponent::K2Node_DynamicCast_AsGz_Player_View_Target_Interface' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_GetPlayerInventoryComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_InventoryScreen_C_GetPlayerInventoryComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_GetPlayerInventoryComponent, CallFunc_GetViewTargetInventory_ReturnValue) == 0x000028, "Member 'WBP_InventoryScreen_C_GetPlayerInventoryComponent::CallFunc_GetViewTargetInventory_ReturnValue' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.OnPawnChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryScreen_C_OnPawnChanged final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_OnPawnChanged) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_OnPawnChanged");
static_assert(sizeof(WBP_InventoryScreen_C_OnPawnChanged) == 0x000008, "Wrong size on WBP_InventoryScreen_C_OnPawnChanged");
static_assert(offsetof(WBP_InventoryScreen_C_OnPawnChanged, Pawn) == 0x000000, "Member 'WBP_InventoryScreen_C_OnPawnChanged::Pawn' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.OnSlotDataChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryScreen_C_OnSlotDataChanged final
{
public:
	struct FGzInvItem                             NewItem;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_InventoryScreen_C_OnSlotDataChanged) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_OnSlotDataChanged");
static_assert(sizeof(WBP_InventoryScreen_C_OnSlotDataChanged) == 0x000010, "Wrong size on WBP_InventoryScreen_C_OnSlotDataChanged");
static_assert(offsetof(WBP_InventoryScreen_C_OnSlotDataChanged, NewItem) == 0x000000, "Member 'WBP_InventoryScreen_C_OnSlotDataChanged::NewItem' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.Update Broken State
// 0x0024 (0x0024 - 0x0000)
struct WBP_InventoryScreen_C_Update_Broken_State final
{
public:
	bool                                          Broken;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64AB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64AC[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_Update_Broken_State) == 0x000004, "Wrong alignment on WBP_InventoryScreen_C_Update_Broken_State");
static_assert(sizeof(WBP_InventoryScreen_C_Update_Broken_State) == 0x000024, "Wrong size on WBP_InventoryScreen_C_Update_Broken_State");
static_assert(offsetof(WBP_InventoryScreen_C_Update_Broken_State, Broken) == 0x000000, "Member 'WBP_InventoryScreen_C_Update_Broken_State::Broken' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_Update_Broken_State, Temp_bool_Variable) == 0x000001, "Member 'WBP_InventoryScreen_C_Update_Broken_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_Update_Broken_State, Temp_byte_Variable) == 0x000002, "Member 'WBP_InventoryScreen_C_Update_Broken_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_Update_Broken_State, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_InventoryScreen_C_Update_Broken_State::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_Update_Broken_State, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_InventoryScreen_C_Update_Broken_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_Update_Broken_State, Temp_name_Variable) == 0x000008, "Member 'WBP_InventoryScreen_C_Update_Broken_State::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_Update_Broken_State, Temp_name_Variable_1) == 0x000010, "Member 'WBP_InventoryScreen_C_Update_Broken_State::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_Update_Broken_State, K2Node_Select_Default) == 0x000018, "Member 'WBP_InventoryScreen_C_Update_Broken_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_Update_Broken_State, K2Node_Select_Default_1) == 0x00001C, "Member 'WBP_InventoryScreen_C_Update_Broken_State::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.UpdateInventoryInfo
// 0x0150 (0x0150 - 0x0000)
struct WBP_InventoryScreen_C_UpdateInventoryInfo final
{
public:
	bool                                          IsHover;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64AD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             Item;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzExecResult                                 CallFunc_GetLimbItem_ExecResult;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64AE[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzLimbInvItem                         CallFunc_GetLimbItem_ReturnValue;                  // 0x0020(0x0058)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64AF[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Inventory_SkinShow_C*              CallFunc_AddSkinToolTipInfo_AddedElement;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzExecResult                                 CallFunc_GetWeaponItem_ExecResult;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64B0[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzWeaponInvItem                       CallFunc_GetWeaponItem_ReturnValue;                // 0x0090(0x0050)()
	bool                                          CallFunc_IsValidItem_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64B1[0x2];                                     // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64B2[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Inventory_SkinShow_C*              CallFunc_AddSkinToolTipInfo_AddedElement_1;        // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64B3[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64B4[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64B5[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetRarityName_RarityName;                 // 0x0120(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64B6[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponAttachmentItemData*            CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Inventory_Attachment_C*            CallFunc_AddAttachmentToolTipInfo_AddedElement;    // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_UpdateInventoryInfo) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_UpdateInventoryInfo");
static_assert(sizeof(WBP_InventoryScreen_C_UpdateInventoryInfo) == 0x000150, "Wrong size on WBP_InventoryScreen_C_UpdateInventoryInfo");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, IsHover) == 0x000000, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::IsHover' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, Item) == 0x000008, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_GetLimbItem_ExecResult) == 0x00001C, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_GetLimbItem_ExecResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_GetLimbItem_ReturnValue) == 0x000020, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_GetLimbItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_AddSkinToolTipInfo_AddedElement) == 0x000080, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_AddSkinToolTipInfo_AddedElement' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_GetWeaponItem_ExecResult) == 0x000089, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_GetWeaponItem_ExecResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_GetWeaponItem_ReturnValue) == 0x000090, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_GetWeaponItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_IsValidItem_ReturnValue) == 0x0000E0, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_IsValidItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_BooleanAND_ReturnValue) == 0x0000E1, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_AddSkinToolTipInfo_AddedElement_1) == 0x0000F0, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_AddSkinToolTipInfo_AddedElement_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_IsValid_ReturnValue_1) == 0x0000F8, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000F9, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_GetItemData_ReturnValue) == 0x000100, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_GetRarity_ReturnValue) == 0x000108, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_GetRarityColor_ReturnValue) == 0x00010C, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_GetRarityName_RarityName) == 0x000120, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_GetRarityName_RarityName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, Temp_int_Array_Index_Variable) == 0x000130, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_Array_Get_Item) == 0x000138, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, CallFunc_AddAttachmentToolTipInfo_AddedElement) == 0x000140, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::CallFunc_AddAttachmentToolTipInfo_AddedElement' has a wrong offset!");
static_assert(offsetof(WBP_InventoryScreen_C_UpdateInventoryInfo, Temp_bool_Variable) == 0x000148, "Member 'WBP_InventoryScreen_C_UpdateInventoryInfo::Temp_bool_Variable' has a wrong offset!");

// Function WBP_InventoryScreen.WBP_InventoryScreen_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryScreen_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryScreen_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_InventoryScreen_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_InventoryScreen_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_InventoryScreen_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_InventoryScreen_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_InventoryScreen_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

