#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EmissiveBounceCard

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EmissiveBounceCard.BP_EmissiveBounceCard_C
// 0x0068 (0x0308 - 0x02A0)
class ABP_EmissiveBounceCard_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   EmissiveBounceCard;                                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Activate_CPD;                                      // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A14[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Emissive_Intensity;                                // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Emissive_Colour;                                   // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_temperature_;                                  // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A15[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Kelvin_Value;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Final_Colour;                                      // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out_Color;                                         // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EmissiveBounceCard(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EmissiveBounceCard_C">();
	}
	static class ABP_EmissiveBounceCard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EmissiveBounceCard_C>();
	}
};
static_assert(alignof(ABP_EmissiveBounceCard_C) == 0x000008, "Wrong alignment on ABP_EmissiveBounceCard_C");
static_assert(sizeof(ABP_EmissiveBounceCard_C) == 0x000308, "Wrong size on ABP_EmissiveBounceCard_C");
static_assert(offsetof(ABP_EmissiveBounceCard_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_EmissiveBounceCard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EmissiveBounceCard_C, EmissiveBounceCard) == 0x0002A8, "Member 'ABP_EmissiveBounceCard_C::EmissiveBounceCard' has a wrong offset!");
static_assert(offsetof(ABP_EmissiveBounceCard_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_EmissiveBounceCard_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EmissiveBounceCard_C, Activate_CPD) == 0x0002B8, "Member 'ABP_EmissiveBounceCard_C::Activate_CPD' has a wrong offset!");
static_assert(offsetof(ABP_EmissiveBounceCard_C, Emissive_Intensity) == 0x0002C0, "Member 'ABP_EmissiveBounceCard_C::Emissive_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_EmissiveBounceCard_C, Emissive_Colour) == 0x0002C8, "Member 'ABP_EmissiveBounceCard_C::Emissive_Colour' has a wrong offset!");
static_assert(offsetof(ABP_EmissiveBounceCard_C, Use_temperature_) == 0x0002D8, "Member 'ABP_EmissiveBounceCard_C::Use_temperature_' has a wrong offset!");
static_assert(offsetof(ABP_EmissiveBounceCard_C, Kelvin_Value) == 0x0002E0, "Member 'ABP_EmissiveBounceCard_C::Kelvin_Value' has a wrong offset!");
static_assert(offsetof(ABP_EmissiveBounceCard_C, Final_Colour) == 0x0002E8, "Member 'ABP_EmissiveBounceCard_C::Final_Colour' has a wrong offset!");
static_assert(offsetof(ABP_EmissiveBounceCard_C, Out_Color) == 0x0002F8, "Member 'ABP_EmissiveBounceCard_C::Out_Color' has a wrong offset!");

}

