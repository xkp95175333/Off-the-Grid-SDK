#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GorillaArm_DashIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.AnimateParticles_Charging
// 0x0018 (0x0018 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging final
{
public:
	double                                        ChargeProgress;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging) == 0x000018, "Wrong size on BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging, ChargeProgress) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging::ChargeProgress' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000010, "Member 'BP_GorillaArm_DashIndicator_C_AnimateParticles_Charging::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.ChangeParticleColor
// 0x0010 (0x0010 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_ChangeParticleColor final
{
public:
	struct FLinearColor                           Param;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_ChangeParticleColor) == 0x000004, "Wrong alignment on BP_GorillaArm_DashIndicator_C_ChangeParticleColor");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_ChangeParticleColor) == 0x000010, "Wrong size on BP_GorillaArm_DashIndicator_C_ChangeParticleColor");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ChangeParticleColor, Param) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_ChangeParticleColor::Param' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.ExecuteUbergraph_BP_GorillaArm_DashIndicator
// 0x0068 (0x0068 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659B[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659E[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetChargeProgress_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Timeline_NewTime_ImplicitCast;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Timeline_NewTime_ImplicitCast_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Timeline_NewTime_ImplicitCast_2;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659F[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateIndicatorSize_Current_Charge_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator) == 0x000068, "Wrong size on BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, EntryPoint) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, Temp_bool_Has_Been_Initd_Variable) == 0x000006, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000010, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_GetChargeProgress_ReturnValue) == 0x00003C, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_GetChargeProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000040, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x000048, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, K2Node_Timeline_NewTime_ImplicitCast) == 0x000050, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::K2Node_Timeline_NewTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, K2Node_Timeline_NewTime_ImplicitCast_1) == 0x000054, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::K2Node_Timeline_NewTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, K2Node_Timeline_NewTime_ImplicitCast_2) == 0x000058, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::K2Node_Timeline_NewTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator, CallFunc_UpdateIndicatorSize_Current_Charge_ImplicitCast) == 0x000060, "Member 'BP_GorillaArm_DashIndicator_C_ExecuteUbergraph_BP_GorillaArm_DashIndicator::CallFunc_UpdateIndicatorSize_Current_Charge_ImplicitCast' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.OnRep_BeforeClick
// 0x0010 (0x0010 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick final
{
public:
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick) == 0x000010, "Wrong size on BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick, CallFunc_GetInstigatorController_ReturnValue) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000008, "Member 'BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_GorillaArm_DashIndicator_C_OnRep_BeforeClick::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.PerformIndicatorSingleTrace
// 0x0580 (0x0580 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace final
{
public:
	struct FVector                                Trace_Start;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Trace_End;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bApplyOffset;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DebugType;                                         // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A0[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Out_Hit;                                           // 0x0038(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bBlockingHit;                                      // 0x0130(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A1[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateTraceOffset_Offset;              // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ConstParm, ReferenceParm)
	class UCapsuleComponent*                      Temp_object_Variable;                              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A2[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ILocomotionCharacterInterface> K2Node_DynamicCast_AsLocomotion_Character_Interface; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A3[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CallFunc_GetCapsule_ReturnValue;                   // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateTraceOffset_Offset_1;            // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A4[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0208(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit;       // 0x0218(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue;  // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A5[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0318(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A6[0x2];                                     // 0x032A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A7[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A8[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A9[0x6];                                     // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_1;                           // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0480(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0493(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65AA[0x3];                                     // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0508(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0510(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65AB[0x4];                                     // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65AC[0x6];                                     // 0x056A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace) == 0x000580, "Wrong size on BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, Trace_Start) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::Trace_Start' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, Trace_End) == 0x000018, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::Trace_End' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, bApplyOffset) == 0x000030, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::bApplyOffset' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, DebugType) == 0x000031, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::DebugType' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, Out_Hit) == 0x000038, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::Out_Hit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, bBlockingHit) == 0x000130, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_CalculateTraceOffset_Offset) == 0x000138, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_CalculateTraceOffset_Offset' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, K2Node_MakeArray_Array) == 0x000150, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, Temp_object_Variable) == 0x000160, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000168, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_GetCollisionProfileName_ReturnValue) == 0x00016C, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000174, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, Temp_bool_Variable) == 0x000178, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, K2Node_DynamicCast_AsLocomotion_Character_Interface) == 0x000180, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::K2Node_DynamicCast_AsLocomotion_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, K2Node_Select_Default) == 0x000198, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_GetCapsule_ReturnValue) == 0x0001B0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_GetCapsule_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001D0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_CalculateTraceOffset_Offset_1) == 0x0001E8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_CalculateTraceOffset_Offset_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_IsValid_ReturnValue) == 0x000200, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, K2Node_MakeArray_Array_1) == 0x000208, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_CapsuleTraceSingleByProfile_OutHit) == 0x000218, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_CapsuleTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_CapsuleTraceSingleByProfile_ReturnValue) == 0x000310, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_CapsuleTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, K2Node_MakeArray_Array_2) == 0x000318, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000328, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000329, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_Time) == 0x00032C, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_Distance) == 0x000330, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_Location) == 0x000338, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000350, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_Normal) == 0x000368, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000380, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_PhysMat) == 0x000398, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_HitActor) == 0x0003A0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_HitComponent) == 0x0003A8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_HitBoneName) == 0x0003B0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_BoneName) == 0x0003B8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_HitItem) == 0x0003C0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_ElementIndex) == 0x0003C4, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_FaceIndex) == 0x0003C8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_TraceStart) == 0x0003D0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0003E8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, Temp_bool_Variable_1) == 0x000400, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_Not_PreBool_ReturnValue) == 0x000401, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, K2Node_Select_Default_1) == 0x000408, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000420, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000438, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000450, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_MakeRotFromX_ReturnValue) == 0x000468, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000480, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000490, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_Array_IsEmpty_ReturnValue) == 0x000491, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_Not_PreBool_ReturnValue_1) == 0x000492, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000493, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000494, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_Time_1) == 0x000498, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_Distance_1) == 0x00049C, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_Location_1) == 0x0004A0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0004B8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_Normal_1) == 0x0004D0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0004E8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_PhysMat_1) == 0x000500, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_HitActor_1) == 0x000508, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_HitComponent_1) == 0x000510, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_HitBoneName_1) == 0x000518, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_BoneName_1) == 0x000520, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_HitItem_1) == 0x000528, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_ElementIndex_1) == 0x00052C, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_FaceIndex_1) == 0x000530, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_TraceStart_1) == 0x000538, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BreakHitResult_TraceEnd_1) == 0x000550, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000568, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_BooleanOR_ReturnValue) == 0x000569, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000570, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000578, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorSingleTrace::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.PerformIndicatorTraces
// 0x06E0 (0x06E0 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces final
{
public:
	struct FVector                                TraceStart;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDistance;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DebugType;                                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65AD[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Out_Hit;                                           // 0x0040(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bBlockingHit;                                      // 0x0138(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65AE[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OutTotalDistance;                                  // 0x0140(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bApplyOffsetOnNextTrace;                           // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65AF[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TotalDistance;                                     // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLastHitBlocking;                                  // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B0[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             LastHit;                                           // 0x0160(0x00F8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                End;                                               // 0x0258(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0270(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateTraceOffset_Offset;              // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B1[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B2[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B3[0x7];                                     // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B4[0x7];                                     // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B5[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_PerformIndicatorSingleTrace_Out_Hit;      // 0x0498(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_PerformIndicatorSingleTrace_bBlockingHit; // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B6[0x7];                                     // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B7[0x2];                                     // 0x05B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B8[0x4];                                     // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0630(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65B9[0x4];                                     // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0688(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65BA[0x7];                                     // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x06C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x06C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65BB[0x7];                                     // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces) == 0x0006E0, "Wrong size on BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, TraceStart) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, Direction) == 0x000018, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::Direction' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, MaxDistance) == 0x000030, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::MaxDistance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, DebugType) == 0x000038, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::DebugType' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, Out_Hit) == 0x000040, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::Out_Hit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, bBlockingHit) == 0x000138, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, OutTotalDistance) == 0x000140, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::OutTotalDistance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, bApplyOffsetOnNextTrace) == 0x000148, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::bApplyOffsetOnNextTrace' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, TotalDistance) == 0x000150, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::TotalDistance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, bLastHitBlocking) == 0x000158, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::bLastHitBlocking' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, LastHit) == 0x000160, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::LastHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, End) == 0x000258, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::End' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, Start) == 0x000270, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::Start' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000288, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002A0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, Temp_int_Variable) == 0x0002B8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Add_IntInt_ReturnValue) == 0x0002BC, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0002C0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_CalculateTraceOffset_Offset) == 0x0002D8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_CalculateTraceOffset_Offset' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_VSize_ReturnValue) == 0x0002F0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000300, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000318, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Not_PreBool_ReturnValue) == 0x000330, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000331, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BooleanOR_ReturnValue) == 0x000332, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_bBlockingHit) == 0x000333, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_bInitialOverlap) == 0x000334, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_Time) == 0x000338, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_Distance) == 0x00033C, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_Location) == 0x000340, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_ImpactPoint) == 0x000358, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_Normal) == 0x000370, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_ImpactNormal) == 0x000388, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_PhysMat) == 0x0003A0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_HitActor) == 0x0003A8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_HitComponent) == 0x0003B0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_HitBoneName) == 0x0003B8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_BoneName) == 0x0003C0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_HitItem) == 0x0003C8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_ElementIndex) == 0x0003CC, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_FaceIndex) == 0x0003D0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_TraceStart) == 0x0003D8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_TraceEnd) == 0x0003F0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_GetObjectClass_ReturnValue) == 0x000408, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x000410, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_ClassIsChildOf_ReturnValue) == 0x000428, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Normal_ReturnValue) == 0x000430, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000448, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, Temp_bool_Variable) == 0x000450, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Add_VectorVector_ReturnValue) == 0x000458, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_GetActorUpVector_ReturnValue) == 0x000470, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Dot_VectorVector_ReturnValue) == 0x000488, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000490, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_PerformIndicatorSingleTrace_Out_Hit) == 0x000498, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_PerformIndicatorSingleTrace_Out_Hit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_PerformIndicatorSingleTrace_bBlockingHit) == 0x000590, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_PerformIndicatorSingleTrace_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, K2Node_Select_Default) == 0x000598, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0005B0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0005B1, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_Time_1) == 0x0005B4, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_Distance_1) == 0x0005B8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_Location_1) == 0x0005C0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0005D8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_Normal_1) == 0x0005F0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000608, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_PhysMat_1) == 0x000620, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_HitActor_1) == 0x000628, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_HitComponent_1) == 0x000630, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_HitBoneName_1) == 0x000638, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_BoneName_1) == 0x000640, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_HitItem_1) == 0x000648, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_ElementIndex_1) == 0x00064C, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_FaceIndex_1) == 0x000650, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_TraceStart_1) == 0x000658, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BreakHitResult_TraceEnd_1) == 0x000670, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000688, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0006A0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0006A8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BooleanAND_ReturnValue) == 0x0006C0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BooleanOR_ReturnValue_1) == 0x0006C1, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_BooleanAND_ReturnValue_1) == 0x0006C2, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0006C3, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Subtract_IntInt_ReturnValue) == 0x0006C4, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0006C8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0006D0, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x0006D8, "Member 'BP_GorillaArm_DashIndicator_C_PerformIndicatorTraces::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GorillaArm_DashIndicator_C_ReceiveTick");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_ReceiveTick) == 0x000004, "Wrong size on BP_GorillaArm_DashIndicator_C_ReceiveTick");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.UpdateIndicatorLocation
// 0x0380 (0x0380 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation final
{
public:
	struct FLinearColor                           White;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Red;                                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDashDirection_DashDirection;           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxDashDistance_DashDistance;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_PerformIndicatorTraces_Out_Hit;           // 0x0058(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_PerformIndicatorTraces_bBlockingHit;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65BC[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_PerformIndicatorTraces_OutTotalDistance;  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65BD[0x1];                                     // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65BE[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65BF[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C0[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C1[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0260(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C2[0x1];                                     // 0x035B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x035C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C3[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_PerformIndicatorTraces_MaxDistance_ImplicitCast; // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_DashDistance_ImplicitCast;      // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_DashDistance_ImplicitCast_1;    // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation) == 0x000380, "Wrong size on BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, White) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::White' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, Red) == 0x000010, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::Red' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_GetDashDirection_DashDirection) == 0x000020, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_GetDashDirection_DashDirection' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_GetMaxDashDistance_DashDistance) == 0x000038, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_GetMaxDashDistance_DashDistance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_PerformIndicatorTraces_Out_Hit) == 0x000058, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_PerformIndicatorTraces_Out_Hit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_PerformIndicatorTraces_bBlockingHit) == 0x000150, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_PerformIndicatorTraces_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_PerformIndicatorTraces_OutTotalDistance) == 0x000158, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_PerformIndicatorTraces_OutTotalDistance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000161, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000162, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_BoneName) == 0x0001F0, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, Temp_bool_Variable) == 0x000238, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, K2Node_Select_Default) == 0x000240, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, Temp_bool_Variable_1) == 0x000258, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000260, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000358, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_GetTeamAttitude_ReturnValue) == 0x000359, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00035A, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, K2Node_Select_Default_1) == 0x00035C, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, CallFunc_PerformIndicatorTraces_MaxDistance_ImplicitCast) == 0x000370, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::CallFunc_PerformIndicatorTraces_MaxDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, K2Node_VariableSet_DashDistance_ImplicitCast) == 0x000378, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::K2Node_VariableSet_DashDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation, K2Node_VariableSet_DashDistance_ImplicitCast_1) == 0x00037C, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorLocation::K2Node_VariableSet_DashDistance_ImplicitCast_1' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.UpdateIndicatorSize
// 0x0018 (0x0018 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize final
{
public:
	double                                        Current_Charge;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize) == 0x000018, "Wrong size on BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize, Current_Charge) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize::Current_Charge' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000014, "Member 'BP_GorillaArm_DashIndicator_C_UpdateIndicatorSize::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_UserConstructionScript");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_UserConstructionScript) == 0x000010, "Wrong size on BP_GorillaArm_DashIndicator_C_UserConstructionScript");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BP_GorillaArm_DashIndicator_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.CalculateTraceOffset
// 0x00A8 (0x00A8 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_CalculateTraceOffset final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ILocomotionCharacterInterface> K2Node_DynamicCast_AsLocomotion_Character_Interface; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C4[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetMovement_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_CalculateTraceOffset");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset) == 0x0000A8, "Wrong size on BP_GorillaArm_DashIndicator_C_CalculateTraceOffset");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, Offset) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::Offset' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, Temp_object_Variable) == 0x000018, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, CallFunc_GetActorUpVector_ReturnValue) == 0x000028, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, K2Node_DynamicCast_AsLocomotion_Character_Interface) == 0x000050, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::K2Node_DynamicCast_AsLocomotion_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000068, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, CallFunc_GetMovement_ReturnValue) == 0x000080, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::CallFunc_GetMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_CalculateTraceOffset, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'BP_GorillaArm_DashIndicator_C_CalculateTraceOffset::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.GetDashDirection
// 0x02B0 (0x02B0 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_GetDashDirection final
{
public:
	struct FVector                                DashDirection;                                     // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C5[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C6[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_GetViewHitResult_ReturnValue;             // 0x00B0(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C7[0x2];                                     // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C8[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C9[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_GetDashDirection) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_GetDashDirection");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_GetDashDirection) == 0x0002B0, "Wrong size on BP_GorillaArm_DashIndicator_C_GetDashDirection");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, DashDirection) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::DashDirection' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_GetControlRotation_ReturnValue) == 0x000018, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_GetForwardVector_ReturnValue) == 0x000030, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_GetControlRotation_ReturnValue_1) == 0x000060, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000078, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_GetForwardVector_ReturnValue_1) == 0x000088, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_GetCombatComponent_ReturnValue) == 0x0000A0, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_GetViewHitResult_ReturnValue) == 0x0000B0, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_GetViewHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A8, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001A9, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_Time) == 0x0001AC, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_Distance) == 0x0001B0, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_Location) == 0x0001B8, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D0, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_Normal) == 0x0001E8, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_ImpactNormal) == 0x000200, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_PhysMat) == 0x000218, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_HitActor) == 0x000220, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_HitComponent) == 0x000228, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_HitBoneName) == 0x000230, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_BoneName) == 0x000238, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_HitItem) == 0x000240, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_ElementIndex) == 0x000244, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_FaceIndex) == 0x000248, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_TraceStart) == 0x000250, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_BreakHitResult_TraceEnd) == 0x000268, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000280, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetDashDirection, CallFunc_Normal_ReturnValue) == 0x000298, "Member 'BP_GorillaArm_DashIndicator_C_GetDashDirection::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C.GetMaxDashDistance
// 0x0038 (0x0038 - 0x0000)
struct BP_GorillaArm_DashIndicator_C_GetMaxDashDistance final
{
public:
	double                                        Param_DashDistance;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetChargeProgress_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65CA[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance) == 0x000008, "Wrong alignment on BP_GorillaArm_DashIndicator_C_GetMaxDashDistance");
static_assert(sizeof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance) == 0x000038, "Wrong size on BP_GorillaArm_DashIndicator_C_GetMaxDashDistance");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance, Param_DashDistance) == 0x000000, "Member 'BP_GorillaArm_DashIndicator_C_GetMaxDashDistance::Param_DashDistance' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance, CallFunc_GetChargeProgress_ReturnValue) == 0x000008, "Member 'BP_GorillaArm_DashIndicator_C_GetMaxDashDistance::CallFunc_GetChargeProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_GorillaArm_DashIndicator_C_GetMaxDashDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'BP_GorillaArm_DashIndicator_C_GetMaxDashDistance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_GorillaArm_DashIndicator_C_GetMaxDashDistance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000020, "Member 'BP_GorillaArm_DashIndicator_C_GetMaxDashDistance::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance, CallFunc_Lerp_B_ImplicitCast) == 0x000028, "Member 'BP_GorillaArm_DashIndicator_C_GetMaxDashDistance::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GorillaArm_DashIndicator_C_GetMaxDashDistance, CallFunc_Lerp_A_ImplicitCast) == 0x000030, "Member 'BP_GorillaArm_DashIndicator_C_GetMaxDashDistance::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");

}

