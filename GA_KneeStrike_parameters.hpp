#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_KneeStrike

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayCameras_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "AIModule_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "G01_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_KneeStrike.GA_KneeStrike_C.ApplyHitEffect
// 0x07B0 (0x07B0 - 0x0000)
struct GA_KneeStrike_C_ApplyHitEffect final
{
public:
	struct FHitResult                             Hit_Result;                                        // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DF1[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DF2[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DF3[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x01D8(0x0010)()
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DF4[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x01F8(0x0028)()
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DF5[0x1];                                     // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DF6[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DF7[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculatePunchImpulse_ReturnValue;        // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0310(0x0010)()
	TMap<struct FGameplayTag, float>              K2Node_MakeMap_Map;                                // 0x0320(0x0050)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1; // 0x0370(0x0010)()
	struct FGzDamageHit                           K2Node_MakeStruct_GzDamageHit;                     // 0x0380(0x01B8)(ContainsInstancedReference)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0538(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGzDamageInstigatorData                K2Node_MakeStruct_GzDamageInstigatorData;          // 0x0568(0x0038)(NoDestructor)
	struct FGzTargetAttackParams                  K2Node_MakeStruct_GzTargetAttackParams;            // 0x05A0(0x0200)(ContainsInstancedReference)
	bool                                          CallFunc_MakeTargetAttack_ReturnValue;             // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DF8[0x3];                                     // 0x07A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1; // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_ApplyHitEffect) == 0x000008, "Wrong alignment on GA_KneeStrike_C_ApplyHitEffect");
static_assert(sizeof(GA_KneeStrike_C_ApplyHitEffect) == 0x0007B0, "Wrong size on GA_KneeStrike_C_ApplyHitEffect");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, Hit_Result) == 0x000000, "Member 'GA_KneeStrike_C_ApplyHitEffect::Hit_Result' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x0000F8, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_bBlockingHit) == 0x000100, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_bInitialOverlap) == 0x000101, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_Time) == 0x000104, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_Distance) == 0x000108, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_Location) == 0x000110, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_Normal) == 0x000140, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_BoneName) == 0x000190, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_TraceStart) == 0x0001A8, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_TraceEnd) == 0x0001C0, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x0001D8, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, K2Node_DynamicCast_AsGz_Character) == 0x0001E8, "Member 'GA_KneeStrike_C_ApplyHitEffect::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'GA_KneeStrike_C_ApplyHitEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0001F8, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_IsEnemy_ReturnValue) == 0x000220, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000221, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000222, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_Time_1) == 0x000224, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_Distance_1) == 0x000228, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_Location_1) == 0x000230, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000248, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_Normal_1) == 0x000260, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000278, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_PhysMat_1) == 0x000290, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_HitActor_1) == 0x000298, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_HitComponent_1) == 0x0002A0, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_HitBoneName_1) == 0x0002A8, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_BoneName_1) == 0x0002B0, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_HitItem_1) == 0x0002B8, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_ElementIndex_1) == 0x0002BC, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_FaceIndex_1) == 0x0002C0, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_TraceStart_1) == 0x0002C8, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_BreakHitResult_TraceEnd_1) == 0x0002E0, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_CalculatePunchImpulse_ReturnValue) == 0x0002F8, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_CalculatePunchImpulse_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000310, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, K2Node_MakeMap_Map) == 0x000320, "Member 'GA_KneeStrike_C_ApplyHitEffect::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1) == 0x000370, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, K2Node_MakeStruct_GzDamageHit) == 0x000380, "Member 'GA_KneeStrike_C_ApplyHitEffect::K2Node_MakeStruct_GzDamageHit' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000538, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000548, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000550, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, K2Node_MakeStruct_GzDamageInstigatorData) == 0x000568, "Member 'GA_KneeStrike_C_ApplyHitEffect::K2Node_MakeStruct_GzDamageInstigatorData' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, K2Node_MakeStruct_GzTargetAttackParams) == 0x0005A0, "Member 'GA_KneeStrike_C_ApplyHitEffect::K2Node_MakeStruct_GzTargetAttackParams' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_MakeTargetAttack_ReturnValue) == 0x0007A0, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_MakeTargetAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x0007A4, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ApplyHitEffect, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1) == 0x0007A8, "Member 'GA_KneeStrike_C_ApplyHitEffect::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.CalculatePunchImpulse
// 0x00E0 (0x00E0 - 0x0000)
struct GA_KneeStrike_C_CalculatePunchImpulse final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_CalculatePunchImpulse) == 0x000008, "Wrong alignment on GA_KneeStrike_C_CalculatePunchImpulse");
static_assert(sizeof(GA_KneeStrike_C_CalculatePunchImpulse) == 0x0000E0, "Wrong size on GA_KneeStrike_C_CalculatePunchImpulse");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, ReturnValue) == 0x000000, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_GetForwardVector_ReturnValue) == 0x000048, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_BreakVector_X) == 0x000060, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_BreakVector_Y) == 0x000068, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_BreakVector_Z) == 0x000070, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000090, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_BreakVector_X_1) == 0x0000A8, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_BreakVector_Y_1) == 0x0000B0, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_BreakVector_Z_1) == 0x0000B8, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CalculatePunchImpulse, CallFunc_MakeVector_ReturnValue_1) == 0x0000C8, "Member 'GA_KneeStrike_C_CalculatePunchImpulse::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.CreateDashingFX
// 0x0014 (0x0014 - 0x0000)
struct GA_KneeStrike_C_CreateDashingFX final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_CreateDashingFX) == 0x000004, "Wrong alignment on GA_KneeStrike_C_CreateDashingFX");
static_assert(sizeof(GA_KneeStrike_C_CreateDashingFX) == 0x000014, "Wrong size on GA_KneeStrike_C_CreateDashingFX");
static_assert(offsetof(GA_KneeStrike_C_CreateDashingFX, Temp_delegate_Variable) == 0x000000, "Member 'GA_KneeStrike_C_CreateDashingFX::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateDashingFX, CallFunc_PostEvent_ReturnValue) == 0x000010, "Member 'GA_KneeStrike_C_CreateDashingFX::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.CreateHitFX
// 0x0228 (0x0228 - 0x0000)
struct GA_KneeStrike_C_CreateHitFX final
{
public:
	struct FHitResult                             Hit_Result;                                        // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x00F8(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DF9[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DFA[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DFB[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DFC[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_CreateHitFX) == 0x000008, "Wrong alignment on GA_KneeStrike_C_CreateHitFX");
static_assert(sizeof(GA_KneeStrike_C_CreateHitFX) == 0x000228, "Wrong size on GA_KneeStrike_C_CreateHitFX");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, Hit_Result) == 0x000000, "Member 'GA_KneeStrike_C_CreateHitFX::Hit_Result' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, Temp_delegate_Variable) == 0x0000F8, "Member 'GA_KneeStrike_C_CreateHitFX::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001E0, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001F8, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_GetPlayerController_ReturnValue) == 0x000210, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000218, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_IsLocallyControlled_ReturnValue) == 0x000220, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_CreateHitFX, CallFunc_PostEvent_ReturnValue) == 0x000224, "Member 'GA_KneeStrike_C_CreateHitFX::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.DashWithParams (UNUSABLE IN BP)
// 0x0058 (0x0058 - 0x0000)
struct GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_ final
{
public:
	float                                         Param_Dashing_Max_Distance;                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_Dashing_Max_Speed;                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_Dashing_Stop_Max_Speed;                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DFD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Dashing_Acceleration_Curve;                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> OnDashStopped;                                     // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_) == 0x000008, "Wrong alignment on GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_");
static_assert(sizeof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_) == 0x000058, "Wrong size on GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_");
static_assert(offsetof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_, Param_Dashing_Max_Distance) == 0x000000, "Member 'GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_::Param_Dashing_Max_Distance' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_, Param_Dashing_Max_Speed) == 0x000004, "Member 'GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_::Param_Dashing_Max_Speed' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_, Param_Dashing_Stop_Max_Speed) == 0x000008, "Member 'GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_::Param_Dashing_Stop_Max_Speed' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_, Dashing_Acceleration_Curve) == 0x000010, "Member 'GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_::Dashing_Acceleration_Curve' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_, Direction) == 0x000018, "Member 'GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_::Direction' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_, OnDashStopped) == 0x000030, "Member 'GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_::OnDashStopped' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_, CallFunc_GetOwningCharacter_ReturnValue) == 0x000040, "Member 'GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_, K2Node_DynamicCast_AsGz_Player_Character) == 0x000048, "Member 'GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'GA_KneeStrike_C_DashWithParams__UNUSABLE_IN_BP_::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.DestroyKneeCollisionSphere
// 0x0001 (0x0001 - 0x0000)
struct GA_KneeStrike_C_DestroyKneeCollisionSphere final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_DestroyKneeCollisionSphere) == 0x000001, "Wrong alignment on GA_KneeStrike_C_DestroyKneeCollisionSphere");
static_assert(sizeof(GA_KneeStrike_C_DestroyKneeCollisionSphere) == 0x000001, "Wrong size on GA_KneeStrike_C_DestroyKneeCollisionSphere");
static_assert(offsetof(GA_KneeStrike_C_DestroyKneeCollisionSphere, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GA_KneeStrike_C_DestroyKneeCollisionSphere::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.ExecuteUbergraph_GA_KneeStrike
// 0x0220 (0x0220 - 0x0000)
struct GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DFE[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_NetworkSyncPoint*          CallFunc_WaitNetSync_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DFF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E00[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Zero_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E01[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0068(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_ApplyRootMotionConstantForce* CallFunc_ApplyRootMotionConstantForce_ReturnValue; // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E02[0x5];                                     // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBodyPartAbilityData*                 CallFunc_BP_GetAbilityData_ReturnValue;            // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_KneeStrike_BodyPartAbilityData_C*   K2Node_DynamicCast_AsBP_Knee_Strike_Body_Part_Ability_Data; // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E03[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E04[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationSequence*               CallFunc_GetDashCameraSequence_ReturnValue;        // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationSequence*               CallFunc_GetKneeHitCameraSequence_ReturnValue;     // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E05[0x2];                                     // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_KneeDamage_ImplicitCast;        // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike) == 0x000008, "Wrong alignment on GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike");
static_assert(sizeof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike) == 0x000220, "Wrong size on GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, EntryPoint) == 0x000000, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_K2_HasAuthority_ReturnValue) == 0x000004, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_WaitNetSync_ReturnValue) == 0x000008, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_WaitNetSync_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000024, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_Vector_Zero_ReturnValue) == 0x000030, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_Vector_Zero_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_CustomEvent_OverlappedComponent) == 0x000048, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_CustomEvent_OtherActor) == 0x000050, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_CustomEvent_OtherComp) == 0x000058, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_CustomEvent_OtherBodyIndex) == 0x000060, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_CustomEvent_bFromSweep) == 0x000064, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_CustomEvent_SweepResult) == 0x000068, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_GetControlRotation_ReturnValue) == 0x000160, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_GetForwardVector_ReturnValue) == 0x000178, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_BreakVector_X) == 0x000190, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_BreakVector_Y) == 0x000198, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_BreakVector_Z) == 0x0001A0, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_MakeVector_ReturnValue) == 0x0001A8, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_ApplyRootMotionConstantForce_ReturnValue) == 0x0001C0, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_ApplyRootMotionConstantForce_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001C8, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_IsValid_ReturnValue_1) == 0x0001D8, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_Event_bWasCancelled) == 0x0001D9, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_K2_CommitAbility_ReturnValue) == 0x0001DA, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_BP_GetAbilityData_ReturnValue) == 0x0001E0, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_BP_GetAbilityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_DynamicCast_AsBP_Knee_Strike_Body_Part_Ability_Data) == 0x0001E8, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_DynamicCast_AsBP_Knee_Strike_Body_Part_Ability_Data' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001F4, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_GetDashCameraSequence_ReturnValue) == 0x000208, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_GetDashCameraSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_GetKneeHitCameraSequence_ReturnValue) == 0x000210, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_GetKneeHitCameraSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_IsDedicatedServer_ReturnValue) == 0x000218, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000219, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike, K2Node_VariableSet_KneeDamage_ImplicitCast) == 0x00021C, "Member 'GA_KneeStrike_C_ExecuteUbergraph_GA_KneeStrike::K2Node_VariableSet_KneeDamage_ImplicitCast' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.GetDashCameraSequence
// 0x0038 (0x0038 - 0x0000)
struct GA_KneeStrike_C_GetDashCameraSequence final
{
public:
	class UCameraAnimationSequence*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E06[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E07[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationSequence*               K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_GetDashCameraSequence) == 0x000008, "Wrong alignment on GA_KneeStrike_C_GetDashCameraSequence");
static_assert(sizeof(GA_KneeStrike_C_GetDashCameraSequence) == 0x000038, "Wrong size on GA_KneeStrike_C_GetDashCameraSequence");
static_assert(offsetof(GA_KneeStrike_C_GetDashCameraSequence, ReturnValue) == 0x000000, "Member 'GA_KneeStrike_C_GetDashCameraSequence::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetDashCameraSequence, Temp_bool_Variable) == 0x000008, "Member 'GA_KneeStrike_C_GetDashCameraSequence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetDashCameraSequence, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_KneeStrike_C_GetDashCameraSequence::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetDashCameraSequence, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'GA_KneeStrike_C_GetDashCameraSequence::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetDashCameraSequence, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'GA_KneeStrike_C_GetDashCameraSequence::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetDashCameraSequence, K2Node_Select_Default) == 0x000030, "Member 'GA_KneeStrike_C_GetDashCameraSequence::K2Node_Select_Default' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.GetKneeHitCameraSequence
// 0x0038 (0x0038 - 0x0000)
struct GA_KneeStrike_C_GetKneeHitCameraSequence final
{
public:
	class UCameraAnimationSequence*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E08[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E09[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationSequence*               K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_GetKneeHitCameraSequence) == 0x000008, "Wrong alignment on GA_KneeStrike_C_GetKneeHitCameraSequence");
static_assert(sizeof(GA_KneeStrike_C_GetKneeHitCameraSequence) == 0x000038, "Wrong size on GA_KneeStrike_C_GetKneeHitCameraSequence");
static_assert(offsetof(GA_KneeStrike_C_GetKneeHitCameraSequence, ReturnValue) == 0x000000, "Member 'GA_KneeStrike_C_GetKneeHitCameraSequence::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetKneeHitCameraSequence, Temp_bool_Variable) == 0x000008, "Member 'GA_KneeStrike_C_GetKneeHitCameraSequence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetKneeHitCameraSequence, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_KneeStrike_C_GetKneeHitCameraSequence::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetKneeHitCameraSequence, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'GA_KneeStrike_C_GetKneeHitCameraSequence::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetKneeHitCameraSequence, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'GA_KneeStrike_C_GetKneeHitCameraSequence::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_GetKneeHitCameraSequence, K2Node_Select_Default) == 0x000030, "Member 'GA_KneeStrike_C_GetKneeHitCameraSequence::K2Node_Select_Default' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.IsEnemy
// 0x0010 (0x0010 - 0x0000)
struct GA_KneeStrike_C_IsEnemy final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_IsEnemy) == 0x000008, "Wrong alignment on GA_KneeStrike_C_IsEnemy");
static_assert(sizeof(GA_KneeStrike_C_IsEnemy) == 0x000010, "Wrong size on GA_KneeStrike_C_IsEnemy");
static_assert(offsetof(GA_KneeStrike_C_IsEnemy, HitActor) == 0x000000, "Member 'GA_KneeStrike_C_IsEnemy::HitActor' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_IsEnemy, ReturnValue) == 0x000008, "Member 'GA_KneeStrike_C_IsEnemy::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_IsEnemy, CallFunc_GetTeamAttitude_ReturnValue) == 0x000009, "Member 'GA_KneeStrike_C_IsEnemy::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_IsEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'GA_KneeStrike_C_IsEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_KneeStrike_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_KneeStrike_C_K2_OnEndAbility");
static_assert(sizeof(GA_KneeStrike_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_KneeStrike_C_K2_OnEndAbility");
static_assert(offsetof(GA_KneeStrike_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_KneeStrike_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.OnDashHit
// 0x0118 (0x0118 - 0x0000)
struct GA_KneeStrike_C_OnDashHit final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E0A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_KneeStrike_C_OnDashHit) == 0x000008, "Wrong alignment on GA_KneeStrike_C_OnDashHit");
static_assert(sizeof(GA_KneeStrike_C_OnDashHit) == 0x000118, "Wrong size on GA_KneeStrike_C_OnDashHit");
static_assert(offsetof(GA_KneeStrike_C_OnDashHit, OverlappedComponent) == 0x000000, "Member 'GA_KneeStrike_C_OnDashHit::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_OnDashHit, OtherActor) == 0x000008, "Member 'GA_KneeStrike_C_OnDashHit::OtherActor' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_OnDashHit, OtherComp) == 0x000010, "Member 'GA_KneeStrike_C_OnDashHit::OtherComp' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_OnDashHit, OtherBodyIndex) == 0x000018, "Member 'GA_KneeStrike_C_OnDashHit::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_OnDashHit, bFromSweep) == 0x00001C, "Member 'GA_KneeStrike_C_OnDashHit::bFromSweep' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_OnDashHit, SweepResult) == 0x000020, "Member 'GA_KneeStrike_C_OnDashHit::SweepResult' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.Set Character And Movement Component
// 0x0020 (0x0020 - 0x0000)
struct GA_KneeStrike_C_Set_Character_And_Movement_Component final
{
public:
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzCharacterMovementComponent*          K2Node_DynamicCast_AsGz_Character_Movement_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_Set_Character_And_Movement_Component) == 0x000008, "Wrong alignment on GA_KneeStrike_C_Set_Character_And_Movement_Component");
static_assert(sizeof(GA_KneeStrike_C_Set_Character_And_Movement_Component) == 0x000020, "Wrong size on GA_KneeStrike_C_Set_Character_And_Movement_Component");
static_assert(offsetof(GA_KneeStrike_C_Set_Character_And_Movement_Component, CallFunc_GetOwningCharacter_ReturnValue) == 0x000000, "Member 'GA_KneeStrike_C_Set_Character_And_Movement_Component::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_Set_Character_And_Movement_Component, CallFunc_GetMovementComponent_ReturnValue) == 0x000008, "Member 'GA_KneeStrike_C_Set_Character_And_Movement_Component::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_Set_Character_And_Movement_Component, K2Node_DynamicCast_AsGz_Character_Movement_Component) == 0x000010, "Member 'GA_KneeStrike_C_Set_Character_And_Movement_Component::K2Node_DynamicCast_AsGz_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_Set_Character_And_Movement_Component, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_KneeStrike_C_Set_Character_And_Movement_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.SpawnAndAttachKneeCollisionSphere
// 0x00B0 (0x00B0 - 0x0000)
struct GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere final
{
public:
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> Event;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E0B[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E0C[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KneeStrikeCollisionSphere_C*        CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere) == 0x000010, "Wrong alignment on GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere");
static_assert(sizeof(GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere) == 0x0000B0, "Wrong size on GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere");
static_assert(offsetof(GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere, Event) == 0x000000, "Member 'GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere::Event' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere, CallFunc_K2_AttachToActor_ReturnValue) == 0x000098, "Member 'GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A0, "Member 'GA_KneeStrike_C_SpawnAndAttachKneeCollisionSphere::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function GA_KneeStrike.GA_KneeStrike_C.StartCameraSequence
// 0x0088 (0x0088 - 0x0000)
struct GA_KneeStrike_C_StartCameraSequence final
{
public:
	class UCameraAnimationSequence*               Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      LocalController;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCameraAnimationParams                 K2Node_MakeStruct_CameraAnimationParams;           // 0x0020(0x0048)(NoDestructor)
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCameraAnimationHandle                 CallFunc_PlayCameraAnimation_ReturnValue;          // 0x0070(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E0D[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCameraAnimationActive_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KneeStrike_C_StartCameraSequence) == 0x000008, "Wrong alignment on GA_KneeStrike_C_StartCameraSequence");
static_assert(sizeof(GA_KneeStrike_C_StartCameraSequence) == 0x000088, "Wrong size on GA_KneeStrike_C_StartCameraSequence");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, Sequence) == 0x000000, "Member 'GA_KneeStrike_C_StartCameraSequence::Sequence' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, LocalController) == 0x000008, "Member 'GA_KneeStrike_C_StartCameraSequence::LocalController' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'GA_KneeStrike_C_StartCameraSequence::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, CallFunc_GetOwningCharacter_ReturnValue) == 0x000018, "Member 'GA_KneeStrike_C_StartCameraSequence::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, K2Node_MakeStruct_CameraAnimationParams) == 0x000020, "Member 'GA_KneeStrike_C_StartCameraSequence::K2Node_MakeStruct_CameraAnimationParams' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, CallFunc_GetLocalViewingPlayerController_ReturnValue) == 0x000068, "Member 'GA_KneeStrike_C_StartCameraSequence::CallFunc_GetLocalViewingPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, CallFunc_PlayCameraAnimation_ReturnValue) == 0x000070, "Member 'GA_KneeStrike_C_StartCameraSequence::CallFunc_PlayCameraAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, CallFunc_IsLocallyControlled_ReturnValue) == 0x000074, "Member 'GA_KneeStrike_C_StartCameraSequence::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000078, "Member 'GA_KneeStrike_C_StartCameraSequence::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_KneeStrike_C_StartCameraSequence, CallFunc_IsCameraAnimationActive_ReturnValue) == 0x000080, "Member 'GA_KneeStrike_C_StartCameraSequence::CallFunc_IsCameraAnimationActive_ReturnValue' has a wrong offset!");

}

