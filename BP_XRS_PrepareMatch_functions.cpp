#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_XRS_PrepareMatch

#include "Basic.hpp"

#include "BP_XRS_PrepareMatch_classes.hpp"
#include "BP_XRS_PrepareMatch_parameters.hpp"


namespace SDK
{

// Function BP_XRS_PrepareMatch.BP_XRS_PrepareMatch_C.ExecuteUbergraph_BP_XRS_PrepareMatch
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_XRS_PrepareMatch_C::ExecuteUbergraph_BP_XRS_PrepareMatch(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_XRS_PrepareMatch_C", "ExecuteUbergraph_BP_XRS_PrepareMatch");

	Params::BP_XRS_PrepareMatch_C_ExecuteUbergraph_BP_XRS_PrepareMatch Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_XRS_PrepareMatch.BP_XRS_PrepareMatch_C.SpawnPredefinedSpawners
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_XRS_PrepareMatch_C::SpawnPredefinedSpawners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_XRS_PrepareMatch_C", "SpawnPredefinedSpawners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_XRS_PrepareMatch.BP_XRS_PrepareMatch_C.SpawnPickableSpawner
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_XRS_PrepareMatch_C::SpawnPickableSpawner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_XRS_PrepareMatch_C", "SpawnPickableSpawner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_XRS_PrepareMatch.BP_XRS_PrepareMatch_C.OnStartStage
// (Event, Protected, BlueprintEvent)

void UBP_XRS_PrepareMatch_C::OnStartStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_XRS_PrepareMatch_C", "OnStartStage");

	UObject::ProcessEvent(Func, nullptr);
}

}

