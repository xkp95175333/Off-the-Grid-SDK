#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PathfinderLimbAbilityComponent

#include "Basic.hpp"

#include "BP_PathfinderLimbAbilityComponent_classes.hpp"
#include "BP_PathfinderLimbAbilityComponent_parameters.hpp"


namespace SDK
{

// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.CalculateLaunchAndUpdatePreview
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::CalculateLaunchAndUpdatePreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "CalculateLaunchAndUpdatePreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.CallConsumeCharge
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::CallConsumeCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "CallConsumeCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.ConsumeCharge__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::ConsumeCharge__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "ConsumeCharge__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.DetonationAvailable
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAvailable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::DetonationAvailable(bool IsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "DetonationAvailable");

	Params::BP_PathfinderLimbAbilityComponent_C_DetonationAvailable Parms{};

	Parms.IsAvailable = IsAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.EndCharge__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::EndCharge__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "EndCharge__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.ExecuteUbergraph_BP_PathfinderLimbAbilityComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::ExecuteUbergraph_BP_PathfinderLimbAbilityComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "ExecuteUbergraph_BP_PathfinderLimbAbilityComponent");

	Params::BP_PathfinderLimbAbilityComponent_C_ExecuteUbergraph_BP_PathfinderLimbAbilityComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.GetLaunchDirection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Param_LaunchLocation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBP_PathfinderLimbAbilityComponent_C::GetLaunchDirection(const struct FVector& Param_LaunchLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "GetLaunchDirection");

	Params::BP_PathfinderLimbAbilityComponent_C_GetLaunchDirection Parms{};

	Parms.Param_LaunchLocation = std::move(Param_LaunchLocation);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.GetLaunchLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Param_LaunchLocation                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::GetLaunchLocation(struct FVector* Param_LaunchLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "GetLaunchLocation");

	Params::BP_PathfinderLimbAbilityComponent_C_GetLaunchLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_LaunchLocation != nullptr)
		*Param_LaunchLocation = std::move(Parms.Param_LaunchLocation);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.GetLaunchVelo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          LaunchVelocity                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_LaunchLocation                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LaunchSpeed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::GetLaunchVelo(struct FVector* LaunchVelocity, struct FVector* Param_LaunchLocation, double* LaunchSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "GetLaunchVelo");

	Params::BP_PathfinderLimbAbilityComponent_C_GetLaunchVelo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LaunchVelocity != nullptr)
		*LaunchVelocity = std::move(Parms.LaunchVelocity);

	if (Param_LaunchLocation != nullptr)
		*Param_LaunchLocation = std::move(Parms.Param_LaunchLocation);

	if (LaunchSpeed != nullptr)
		*LaunchSpeed = Parms.LaunchSpeed;
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.GetPathParams
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FPredictProjectilePathParams     PredictProjectilePathParams                            (Parm, OutParm)

void UBP_PathfinderLimbAbilityComponent_C::GetPathParams(struct FPredictProjectilePathParams* PredictProjectilePathParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "GetPathParams");

	Params::BP_PathfinderLimbAbilityComponent_C_GetPathParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PredictProjectilePathParams != nullptr)
		*PredictProjectilePathParams = std::move(Parms.PredictProjectilePathParams);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.IsLocal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsLocallyControlled                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::IsLocal(bool* bIsLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "IsLocal");

	Params::BP_PathfinderLimbAbilityComponent_C_IsLocal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsLocallyControlled != nullptr)
		*bIsLocallyControlled = Parms.bIsLocallyControlled;
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.MaxCharge__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::MaxCharge__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "MaxCharge__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.ProjectileLaunched__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ProjectileId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::ProjectileLaunched__DelegateSignature(class AActor* ProjectileId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "ProjectileLaunched__DelegateSignature");

	Params::BP_PathfinderLimbAbilityComponent_C_ProjectileLaunched__DelegateSignature Parms{};

	Parms.ProjectileId = ProjectileId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.ProjectileLaunched_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ProjectileId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::ProjectileLaunched_Event(class AActor* ProjectileId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "ProjectileLaunched_Event");

	Params::BP_PathfinderLimbAbilityComponent_C_ProjectileLaunched_Event Parms{};

	Parms.ProjectileId = ProjectileId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "ReceiveTick");

	Params::BP_PathfinderLimbAbilityComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.RemoteActivated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::RemoteActivated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "RemoteActivated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.ResetVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::ResetVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "ResetVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.SetChargeTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::SetChargeTime(double A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "SetChargeTime");

	Params::BP_PathfinderLimbAbilityComponent_C_SetChargeTime Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.SpawnPreview
// (BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::SpawnPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "SpawnPreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.SpawnPreviewActorCharHit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::SpawnPreviewActorCharHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "SpawnPreviewActorCharHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.StartAim__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::StartAim__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "StartAim__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.StartAim_Event
// (BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::StartAim_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "StartAim_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.StartCharge__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::StartCharge__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "StartCharge__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.StopAim__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::StopAim__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "StopAim__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.StopAim_Event
// (BlueprintCallable, BlueprintEvent)

void UBP_PathfinderLimbAbilityComponent_C::StopAim_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "StopAim_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.UI_ChargeConsumed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargesLoaded                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_MaxCharges                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::UI_ChargeConsumed__DelegateSignature(int32 ChargesLoaded, int32 Param_MaxCharges)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "UI_ChargeConsumed__DelegateSignature");

	Params::BP_PathfinderLimbAbilityComponent_C_UI_ChargeConsumed__DelegateSignature Parms{};

	Parms.ChargesLoaded = ChargesLoaded;
	Parms.Param_MaxCharges = Param_MaxCharges;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.UI_DetonationAvailable__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDetonationAvailable                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::UI_DetonationAvailable__DelegateSignature(bool IsDetonationAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "UI_DetonationAvailable__DelegateSignature");

	Params::BP_PathfinderLimbAbilityComponent_C_UI_DetonationAvailable__DelegateSignature Parms{};

	Parms.IsDetonationAvailable = IsDetonationAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PathfinderLimbAbilityComponent.BP_PathfinderLimbAbilityComponent_C.UI_OverchargeStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  OverchargeTimer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PathfinderLimbAbilityComponent_C::UI_OverchargeStarted__DelegateSignature(double OverchargeTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PathfinderLimbAbilityComponent_C", "UI_OverchargeStarted__DelegateSignature");

	Params::BP_PathfinderLimbAbilityComponent_C_UI_OverchargeStarted__DelegateSignature Parms{};

	Parms.OverchargeTimer = OverchargeTimer;

	UObject::ProcessEvent(Func, &Parms);
}

}

