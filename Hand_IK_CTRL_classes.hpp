#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hand_IK_CTRL

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_classes.hpp"


namespace SDK
{

// RigVMBlueprintGeneratedClass Hand_IK_CTRL.Hand_IK_CTRL_C
// 0x0058 (0x0B00 - 0x0AA8)
class UHand_IK_CTRL_C final : public UControlRig
{
public:
	bool                                          Left_Hand_IK;                                      // 0x0AA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Right_Hand_IK;                                     // 0x0AA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5914[0x6];                                     // 0x0AAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Weapon_Front_Grip;                                 // 0x0AB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5915[0x8];                                     // 0x0AC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Make_Relative_Local;                               // 0x0AD0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Tension;                                           // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Hand_IK_CTRL_C">();
	}
	static class UHand_IK_CTRL_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHand_IK_CTRL_C>();
	}
};
static_assert(alignof(UHand_IK_CTRL_C) == 0x000010, "Wrong alignment on UHand_IK_CTRL_C");
static_assert(sizeof(UHand_IK_CTRL_C) == 0x000B00, "Wrong size on UHand_IK_CTRL_C");
static_assert(offsetof(UHand_IK_CTRL_C, Left_Hand_IK) == 0x000AA8, "Member 'UHand_IK_CTRL_C::Left_Hand_IK' has a wrong offset!");
static_assert(offsetof(UHand_IK_CTRL_C, Right_Hand_IK) == 0x000AA9, "Member 'UHand_IK_CTRL_C::Right_Hand_IK' has a wrong offset!");
static_assert(offsetof(UHand_IK_CTRL_C, Weapon_Front_Grip) == 0x000AB0, "Member 'UHand_IK_CTRL_C::Weapon_Front_Grip' has a wrong offset!");
static_assert(offsetof(UHand_IK_CTRL_C, Make_Relative_Local) == 0x000AD0, "Member 'UHand_IK_CTRL_C::Make_Relative_Local' has a wrong offset!");
static_assert(offsetof(UHand_IK_CTRL_C, Tension) == 0x000AF0, "Member 'UHand_IK_CTRL_C::Tension' has a wrong offset!");

}

