#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DynamicInventory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DynamicInventory.WBP_DynamicInventory_C
// 0x0098 (0x0480 - 0x03E8)
class UWBP_DynamicInventory_C final : public UGzPocketGroupWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUniformGridPanel*                      DynamicSlots;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlot_C*                     WBP_DynamicSlot;                                   // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlotLocked_C*               WBP_DynamicSlotLocked_1;                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlotLocked_C*               WBP_DynamicSlotLocked_2;                           // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlotLocked_C*               WBP_DynamicSlotLocked_3;                           // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlotLocked_C*               WBP_DynamicSlotLocked_4;                           // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlotLocked_C*               WBP_DynamicSlotLocked_6;                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlotLocked_C*               WBP_DynamicSlotLocked_7;                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlotLocked_C*               WBP_DynamicSlotLocked_8;                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlotLocked_C*               WBP_DynamicSlotLocked_9;                           // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicSlotLocked_C*               WBP_DynamicSlotLocked_10;                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         ItemsPerRow;                                       // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxItems;                                          // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_DynamicSlotLocked_C*>       BlockedSlots;                                      // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             ItemButtonHover;                                   // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ED_Item_New_Data;                                  // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Construct();
	void ED_Item_New_Data__DelegateSignature(const struct FGzInvItem& NewItem);
	void ExecuteUbergraph_WBP_DynamicInventory(int32 EntryPoint);
	void ItemButtonHover__DelegateSignature(bool IsHover, const struct FGzInvItem& Item);
	void OnButtonBaseHovered_Event(class UCommonButtonBase* Button);
	void OnButtonBaseUnhovered_Event(class UCommonButtonBase* Button);
	void OnPocketsUpdated();
	void OnPocketWidgetAdded(class UGzPocketWidget* PocketWidget, int32 Param_Index);
	void OnPocketWidgetDataChanged_Event(const struct FGzInvItem& NewItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DynamicInventory_C">();
	}
	static class UWBP_DynamicInventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DynamicInventory_C>();
	}
};
static_assert(alignof(UWBP_DynamicInventory_C) == 0x000008, "Wrong alignment on UWBP_DynamicInventory_C");
static_assert(sizeof(UWBP_DynamicInventory_C) == 0x000480, "Wrong size on UWBP_DynamicInventory_C");
static_assert(offsetof(UWBP_DynamicInventory_C, UberGraphFrame) == 0x0003E8, "Member 'UWBP_DynamicInventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, DynamicSlots) == 0x0003F0, "Member 'UWBP_DynamicInventory_C::DynamicSlots' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlot) == 0x0003F8, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlot' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlotLocked_1) == 0x000400, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlotLocked_1' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlotLocked_2) == 0x000408, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlotLocked_2' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlotLocked_3) == 0x000410, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlotLocked_3' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlotLocked_4) == 0x000418, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlotLocked_4' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlotLocked_6) == 0x000420, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlotLocked_6' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlotLocked_7) == 0x000428, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlotLocked_7' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlotLocked_8) == 0x000430, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlotLocked_8' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlotLocked_9) == 0x000438, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlotLocked_9' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, WBP_DynamicSlotLocked_10) == 0x000440, "Member 'UWBP_DynamicInventory_C::WBP_DynamicSlotLocked_10' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, ItemsPerRow) == 0x000448, "Member 'UWBP_DynamicInventory_C::ItemsPerRow' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, MaxItems) == 0x00044C, "Member 'UWBP_DynamicInventory_C::MaxItems' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, BlockedSlots) == 0x000450, "Member 'UWBP_DynamicInventory_C::BlockedSlots' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, ItemButtonHover) == 0x000460, "Member 'UWBP_DynamicInventory_C::ItemButtonHover' has a wrong offset!");
static_assert(offsetof(UWBP_DynamicInventory_C, ED_Item_New_Data) == 0x000470, "Member 'UWBP_DynamicInventory_C::ED_Item_New_Data' has a wrong offset!");

}

