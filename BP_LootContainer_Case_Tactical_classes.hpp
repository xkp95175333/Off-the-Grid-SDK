#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootContainer_Case_Tactical

#include "Basic.hpp"

#include "BP_LootContainer_TemplateV2_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootContainer_Case_Tactical.BP_LootContainer_Case_Tactical_C
// 0x0038 (0x0398 - 0x0360)
class ABP_LootContainer_Case_Tactical_C final : public ABP_LootContainer_TemplateV2_C
{
public:
	class UStaticMeshComponent*                   SM_Military_Lootbox_M_lid;                         // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Military_Lootbox_M_clip_L;                      // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Military_Lootbox_M_clip_R;                      // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Military_Lootbox_M;                             // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzTableLootChooserComponent*           GzTableLootChooser;                                // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzGridLootSpawnerComponent*            GzGridLootSpawner;                                 // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void SetActiveMaterials();
	void SetInActiveMaterials();
	void SetOpenedMaterials();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootContainer_Case_Tactical_C">();
	}
	static class ABP_LootContainer_Case_Tactical_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LootContainer_Case_Tactical_C>();
	}
};
static_assert(alignof(ABP_LootContainer_Case_Tactical_C) == 0x000008, "Wrong alignment on ABP_LootContainer_Case_Tactical_C");
static_assert(sizeof(ABP_LootContainer_Case_Tactical_C) == 0x000398, "Wrong size on ABP_LootContainer_Case_Tactical_C");
static_assert(offsetof(ABP_LootContainer_Case_Tactical_C, SM_Military_Lootbox_M_lid) == 0x000360, "Member 'ABP_LootContainer_Case_Tactical_C::SM_Military_Lootbox_M_lid' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Case_Tactical_C, SM_Military_Lootbox_M_clip_L) == 0x000368, "Member 'ABP_LootContainer_Case_Tactical_C::SM_Military_Lootbox_M_clip_L' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Case_Tactical_C, SM_Military_Lootbox_M_clip_R) == 0x000370, "Member 'ABP_LootContainer_Case_Tactical_C::SM_Military_Lootbox_M_clip_R' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Case_Tactical_C, SM_Military_Lootbox_M) == 0x000378, "Member 'ABP_LootContainer_Case_Tactical_C::SM_Military_Lootbox_M' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Case_Tactical_C, TextRender) == 0x000380, "Member 'ABP_LootContainer_Case_Tactical_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Case_Tactical_C, GzTableLootChooser) == 0x000388, "Member 'ABP_LootContainer_Case_Tactical_C::GzTableLootChooser' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Case_Tactical_C, GzGridLootSpawner) == 0x000390, "Member 'ABP_LootContainer_Case_Tactical_C::GzGridLootSpawner' has a wrong offset!");

}

