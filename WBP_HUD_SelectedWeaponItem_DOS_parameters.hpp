#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_SelectedWeaponItem_DOS

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS
// 0x0018 (0x0018 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ViewTarget;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS) == 0x000018, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS, EntryPoint) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS, K2Node_Event_ViewTarget) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS::K2Node_Event_ViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_ExecuteUbergraph_WBP_HUD_SelectedWeaponItem_DOS::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.GetClipAmmoCount
// 0x0018 (0x0018 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmmoCountForWeaponPocket_ReturnValue;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount) == 0x000018, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount, ReturnValue) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount, CallFunc_GetAmmoCountForWeaponPocket_ReturnValue) == 0x000014, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetClipAmmoCount::CallFunc_GetAmmoCountForWeaponPocket_ReturnValue' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.GetCombatComponent
// 0x0020 (0x0020 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent final
{
public:
	class UGzCombatComponent*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent) == 0x000020, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent, Result) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent::Result' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetCombatComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.GetStockAmmoCount
// 0x0018 (0x0018 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmmoCountForWeaponPocket_ReturnValue;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount) == 0x000018, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount, ReturnValue) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount, CallFunc_GetAmmoCountForWeaponPocket_ReturnValue) == 0x000014, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetStockAmmoCount::CallFunc_GetAmmoCountForWeaponPocket_ReturnValue' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.GetWeaponItemData
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData final
{
public:
	class UGzWeaponItemData*                      ItemData;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_Result;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         CallFunc_GetWeaponAtPocket_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9F[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponItemData*                      CallFunc_GetItemData_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData) == 0x000028, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData, ItemData) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData::ItemData' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData, CallFunc_GetCombatComponent_Result) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData::CallFunc_GetCombatComponent_Result' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData, CallFunc_GetWeaponAtPocket_ReturnValue) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData::CallFunc_GetWeaponAtPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData, CallFunc_GetItemData_ReturnValue) == 0x000020, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_GetWeaponItemData::CallFunc_GetItemData_ReturnValue' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.Is Valid Weapon
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon final
{
public:
	struct FGzInvPocketId                         PocketId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bValid;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_Result;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         CallFunc_GetWeaponAtPocket_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon) == 0x000028, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon, PocketId) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon::PocketId' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon, bValid) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon::bValid' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon, CallFunc_GetCombatComponent_Result) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon::CallFunc_GetCombatComponent_Result' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon, CallFunc_GetWeaponAtPocket_ReturnValue) == 0x000018, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon::CallFunc_GetWeaponAtPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Is_Valid_Weapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.OnViewTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_OnViewTargetChanged final
{
public:
	class APawn*                                  ViewTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_OnViewTargetChanged) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_OnViewTargetChanged");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_OnViewTargetChanged) == 0x000008, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_OnViewTargetChanged");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_OnViewTargetChanged, ViewTarget) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_OnViewTargetChanged::ViewTarget' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.Select Ammo Mag Text Style
// 0x0010 (0x0010 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style final
{
public:
	int32                                         BulletCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA1[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStockAmmoCount_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style) == 0x000004, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style) == 0x000010, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style, BulletCount) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style::BulletCount' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style, CallFunc_GetStockAmmoCount_ReturnValue) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style::CallFunc_GetStockAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00000D, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style, CallFunc_Less_IntInt_ReturnValue_1) == 0x00000F, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Select_Ammo_Mag_Text_Style::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.SelectOperableObject
// 0x0060 (0x0060 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject final
{
public:
	class AGzWeaponActor*                         WeaponActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponComponent*                     CallFunc_GetWeaponComponent_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzWeaponItemData*                      CallFunc_GetItemData_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGzWeaponFireMode                      CallFunc_GetCurrentFireMode_ReturnValue;           // 0x0020(0x0020)(ConstParm, NoDestructor)
	class UGzWeaponComponent*                     CallFunc_GetWeaponComponent_ReturnValue_1;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzWeaponItemData*                      CallFunc_GetItemData_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzWeaponFireMode& CurrentFireMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject) == 0x000060, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject, WeaponActor) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject::WeaponActor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject, CallFunc_GetWeaponComponent_ReturnValue) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject::CallFunc_GetWeaponComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject, CallFunc_GetItemData_ReturnValue) == 0x000018, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject, CallFunc_GetCurrentFireMode_ReturnValue) == 0x000020, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject::CallFunc_GetCurrentFireMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject, CallFunc_GetWeaponComponent_ReturnValue_1) == 0x000040, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject::CallFunc_GetWeaponComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject, CallFunc_GetItemData_ReturnValue_1) == 0x000048, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject::CallFunc_GetItemData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectOperableObject::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.SelectWeaponInPocket
// 0x0078 (0x0078 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket final
{
public:
	struct FGzInvPocketId                         PocketId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSlotEmpty;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Valid_Weapon_bValid;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA3[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponItemData*                      CallFunc_GetWeaponItemData_ItemData;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzWeaponItemData*                      CallFunc_GetWeaponItemData_ItemData_1;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzWeaponFireMode& CurrentFireMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_Result;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_Result_1;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzWeaponComponent*                     CallFunc_GetWeaponComponentAtPocket_ReturnValue;   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA4[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzWeaponFireMode                      CallFunc_GetCurrentFireMode_ReturnValue;           // 0x0050(0x0020)(ConstParm, NoDestructor)
	bool                                          CallFunc_IsEquippedWeaponPocket_ReturnValue;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket) == 0x000078, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, PocketId) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::PocketId' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, IsSlotEmpty) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::IsSlotEmpty' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_Is_Valid_Weapon_bValid) == 0x000009, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_Is_Valid_Weapon_bValid' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_GetWeaponItemData_ItemData) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_GetWeaponItemData_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_GetWeaponItemData_ItemData_1) == 0x000018, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_GetWeaponItemData_ItemData_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_GetCombatComponent_Result) == 0x000030, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_GetCombatComponent_Result' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_GetCombatComponent_Result_1) == 0x000038, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_GetCombatComponent_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_GetWeaponComponentAtPocket_ReturnValue) == 0x000040, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_GetWeaponComponentAtPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_GetCurrentFireMode_ReturnValue) == 0x000050, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_GetCurrentFireMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_IsEquippedWeaponPocket_ReturnValue) == 0x000070, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_IsEquippedWeaponPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SelectWeaponInPocket::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.SetAmmoType
// 0x0010 (0x0010 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_SetAmmoType final
{
public:
	class UGzWeaponItemData*                      WeaponData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetAmmoTypeImage_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_SetAmmoType) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_SetAmmoType");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_SetAmmoType) == 0x000010, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_SetAmmoType");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SetAmmoType, WeaponData) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SetAmmoType::WeaponData' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SetAmmoType, CallFunc_GetAmmoTypeImage_ReturnValue) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SetAmmoType::CallFunc_GetAmmoTypeImage_ReturnValue' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.SetWeaponName
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_SetWeaponName final
{
public:
	class UGzItemData*                            ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_SetWeaponName) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_SetWeaponName");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_SetWeaponName) == 0x000008, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_SetWeaponName");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_SetWeaponName, ItemData) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_SetWeaponName::ItemData' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.Switch Active Fire Mode
// 0x0058 (0x0058 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode final
{
public:
	struct FGzWeaponFireMode                      CurrentFireMode;                                   // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FLinearColor                           DisabledColor;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedColor;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnselectedColor;                                   // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetFireModeIcon_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode) == 0x000058, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode, CurrentFireMode) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode::CurrentFireMode' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode, DisabledColor) == 0x000020, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode::DisabledColor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode, SelectedColor) == 0x000030, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode::SelectedColor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode, UnselectedColor) == 0x000040, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode::UnselectedColor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode, CallFunc_GetFireModeIcon_ReturnValue) == 0x000050, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Switch_Active_Fire_Mode::CallFunc_GetFireModeIcon_ReturnValue' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.Toggle Keybind Visibility
// 0x0020 (0x0020 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility final
{
public:
	class UGzWeaponItemData*                      Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA5[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility) == 0x000020, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility, Target) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility::Target' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000018, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_Toggle_Keybind_Visibility::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.UpdateClipAmmoAmount
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount final
{
public:
	int32                                         BulletsCount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            ClipNormalColor;                                   // 0x0004(0x0014)(Edit, BlueprintVisible)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0010)()
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount) == 0x000028, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount, BulletsCount) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount::BulletsCount' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount, ClipNormalColor) == 0x000004, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount::ClipNormalColor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateClipAmmoAmount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.UpdateStockAmmoAmount
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount final
{
public:
	struct FSlateColor                            StockNormalColor;                                  // 0x0000(0x0014)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA6[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStockAmmoCount_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA7[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount) == 0x0000B0, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, StockNormalColor) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::StockNormalColor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, Temp_bool_Variable) == 0x000014, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, Temp_name_Variable) == 0x000018, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, Temp_name_Variable_1) == 0x000020, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, CallFunc_GetStockAmmoCount_ReturnValue) == 0x000028, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::CallFunc_GetStockAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, CallFunc_Min_ReturnValue) == 0x00002C, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, K2Node_Select_Default) == 0x000088, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, K2Node_MakeArray_Array) == 0x000090, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateStockAmmoAmount::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_HUD_SelectedWeaponItem_DOS.WBP_HUD_SelectedWeaponItem_DOS_C.UpdateWeaponInfo
// 0x0018 (0x0018 - 0x0000)
struct WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo final
{
public:
	class UGzWeaponItemData*                      ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClipAmmoCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo) == 0x000008, "Wrong alignment on WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo");
static_assert(sizeof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo) == 0x000018, "Wrong size on WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, ItemData) == 0x000000, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::ItemData' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, Temp_bool_Variable) == 0x000008, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000009, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, Temp_byte_Variable) == 0x00000A, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, K2Node_Select_Default) == 0x00000C, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, Temp_byte_Variable_2) == 0x00000D, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, Temp_byte_Variable_3) == 0x00000E, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, Temp_bool_Variable_1) == 0x00000F, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, CallFunc_GetClipAmmoCount_ReturnValue) == 0x000010, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::CallFunc_GetClipAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo, K2Node_Select_Default_1) == 0x000014, "Member 'WBP_HUD_SelectedWeaponItem_DOS_C_UpdateWeaponInfo::K2Node_Select_Default_1' has a wrong offset!");

}

