#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Drone_RandomLocationComponent

#include "Basic.hpp"

#include "EReconDrone_ScanState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.CalculateMoveLocations
// 0x04F0 (0x04F0 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_CalculateMoveLocations final
{
public:
	struct FVector                                MoveLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00B8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A0[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A1[0x2];                                     // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A2[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A3[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0300(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A4[0x1];                                     // 0x03FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A5[0x4];                                     // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0478(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A6[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceSingleForObjects_Radius_ImplicitCast; // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_CalculateMoveLocations");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations) == 0x0004F0, "Wrong size on BP_Drone_RandomLocationComponent_C_CalculateMoveLocations");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, MoveLocation) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::MoveLocation' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, Temp_object_Variable) == 0x000030, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, Temp_object_Variable_1) == 0x000040, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_Divide_VectorVector_ReturnValue) == 0x000088, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_GetOwner_ReturnValue_1) == 0x0000B0, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000B8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0001B0, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001B8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D0, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D1, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_Time) == 0x0001D4, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_Distance) == 0x0001D8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_Location) == 0x0001E0, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_Normal) == 0x000210, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_ImpactNormal) == 0x000228, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_PhysMat) == 0x000240, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_HitActor) == 0x000248, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_HitComponent) == 0x000250, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_HitBoneName) == 0x000258, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_BoneName) == 0x000260, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_HitItem) == 0x000268, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_ElementIndex) == 0x00026C, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_FaceIndex) == 0x000270, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_TraceStart) == 0x000278, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_TraceEnd) == 0x000290, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002A8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_Vector_Distance_ReturnValue) == 0x0002C0, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_ClampVectorSize_ReturnValue) == 0x0002C8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_SelectFloat_ReturnValue) == 0x0002E0, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0002E8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000300, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0003F8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0003F9, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0003FA, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_Time_1) == 0x0003FC, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_Distance_1) == 0x000400, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_Location_1) == 0x000408, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000420, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_Normal_1) == 0x000438, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000450, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_PhysMat_1) == 0x000468, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_HitActor_1) == 0x000470, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_HitComponent_1) == 0x000478, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_HitBoneName_1) == 0x000480, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_BoneName_1) == 0x000488, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_HitItem_1) == 0x000490, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_ElementIndex_1) == 0x000494, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_FaceIndex_1) == 0x000498, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_TraceStart_1) == 0x0004A0, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004B8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_SelectVector_ReturnValue) == 0x0004D0, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CalculateMoveLocations, CallFunc_SphereTraceSingleForObjects_Radius_ImplicitCast) == 0x0004E8, "Member 'BP_Drone_RandomLocationComponent_C_CalculateMoveLocations::CallFunc_SphereTraceSingleForObjects_Radius_ImplicitCast' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.CircleFMod
// 0x0024 (0x0024 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_CircleFMod final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Circle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_CircleFMod) == 0x000004, "Wrong alignment on BP_Drone_RandomLocationComponent_C_CircleFMod");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_CircleFMod) == 0x000024, "Wrong size on BP_Drone_RandomLocationComponent_C_CircleFMod");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CircleFMod, Value) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_CircleFMod::Value' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CircleFMod, Circle) == 0x000004, "Member 'BP_Drone_RandomLocationComponent_C_CircleFMod::Circle' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CircleFMod, Return) == 0x000008, "Member 'BP_Drone_RandomLocationComponent_C_CircleFMod::Return' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CircleFMod, CallFunc_Abs_Int_ReturnValue) == 0x00000C, "Member 'BP_Drone_RandomLocationComponent_C_CircleFMod::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CircleFMod, CallFunc_Divide_IntInt_ReturnValue) == 0x000010, "Member 'BP_Drone_RandomLocationComponent_C_CircleFMod::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CircleFMod, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_Drone_RandomLocationComponent_C_CircleFMod::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CircleFMod, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'BP_Drone_RandomLocationComponent_C_CircleFMod::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CircleFMod, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_Drone_RandomLocationComponent_C_CircleFMod::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_CircleFMod, CallFunc_Percent_IntInt_ReturnValue) == 0x000020, "Member 'BP_Drone_RandomLocationComponent_C_CircleFMod::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.ExecuteUbergraph_BP_Drone_RandomLocationComponent
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A8[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_StartLocation;                        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_ViewPointTargetLcoation;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationFromPoint_Rotation;            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A9[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AA[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_StartTime_ImplicitCast;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent) == 0x0000A0, "Wrong size on BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, EntryPoint) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000028, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, K2Node_Event_DeltaSeconds) == 0x000034, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, K2Node_Event_StartLocation) == 0x000038, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::K2Node_Event_StartLocation' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, K2Node_CustomEvent_ViewPointTargetLcoation) == 0x000050, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::K2Node_CustomEvent_ViewPointTargetLcoation' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, CallFunc_GetRotationFromPoint_Rotation) == 0x000068, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::CallFunc_GetRotationFromPoint_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000080, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000088, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, CallFunc_HasAuthority_ReturnValue_1) == 0x000090, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent, K2Node_VariableSet_StartTime_ImplicitCast) == 0x000098, "Member 'BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent::K2Node_VariableSet_StartTime_ImplicitCast' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.GetRotationFromPoint
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_GetRotationFromPoint final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_1D_Max_Max;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_1D_Max_Max_1;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_GetRotationFromPoint");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint) == 0x0000E0, "Wrong size on BP_Drone_RandomLocationComponent_C_GetRotationFromPoint");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, Point) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::Point' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, Rotation) == 0x000018, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::Rotation' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_BreakVector_X) == 0x000080, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_BreakVector_Z) == 0x000090, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_Vector_1D_Max_Max) == 0x000098, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_Vector_1D_Max_Max' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_Vector_1D_Max_Max_1) == 0x0000A8, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_Vector_1D_Max_Max_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_MakeVector_ReturnValue_1) == 0x0000B0, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_GetRotationFromPoint, CallFunc_MakeRotFromXZ_ReturnValue) == 0x0000C8, "Member 'BP_Drone_RandomLocationComponent_C_GetRotationFromPoint::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.OnRep_ScanState
// 0x0008 (0x0008 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_OnRep_ScanState final
{
public:
	class ABP_ReconDrone_C*                       ReconDrone;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_OnRep_ScanState) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_OnRep_ScanState");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_OnRep_ScanState) == 0x000008, "Wrong size on BP_Drone_RandomLocationComponent_C_OnRep_ScanState");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnRep_ScanState, ReconDrone) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_OnRep_ScanState::ReconDrone' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.OnStateChanged
// 0x0058 (0x0058 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_OnStateChanged final
{
public:
	class ABP_ReconDrone_C*                       ReconDrone;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AB[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AC[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ReconDrone_C*                       K2Node_DynamicCast_AsBP_Recon_Drone;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AD[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CallDelegate_StartAngle_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_RotationSpeedAnglePerSecond_ImplicitCast; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_StartAngle_ImplicitCast_1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_OnStateChanged) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_OnStateChanged");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_OnStateChanged) == 0x000058, "Wrong size on BP_Drone_RandomLocationComponent_C_OnStateChanged");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, ReconDrone) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::ReconDrone' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, Temp_bool_IsClosed_Variable) == 0x000009, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00000A, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, CallFunc_BreakRotator_Roll) == 0x00000C, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, CallFunc_BreakRotator_Pitch) == 0x000010, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, CallFunc_BreakRotator_Yaw) == 0x000014, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, CallFunc_BreakRotator_Roll_1) == 0x000018, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, CallFunc_BreakRotator_Pitch_1) == 0x00001C, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, CallFunc_BreakRotator_Yaw_1) == 0x000020, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, K2Node_DynamicCast_AsBP_Recon_Drone) == 0x000030, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::K2Node_DynamicCast_AsBP_Recon_Drone' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, K2Node_CallDelegate_StartAngle_ImplicitCast) == 0x000040, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::K2Node_CallDelegate_StartAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, K2Node_CallDelegate_RotationSpeedAnglePerSecond_ImplicitCast) == 0x000048, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::K2Node_CallDelegate_RotationSpeedAnglePerSecond_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_OnStateChanged, K2Node_CallDelegate_StartAngle_ImplicitCast_1) == 0x000050, "Member 'BP_Drone_RandomLocationComponent_C_OnStateChanged::K2Node_CallDelegate_StartAngle_ImplicitCast_1' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Drone_RandomLocationComponent_C_ReceiveTick");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_Drone_RandomLocationComponent_C_ReceiveTick");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.SetOwnerViewRotation
// 0x0050 (0x0050 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation final
{
public:
	bool                                          Done;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_Constant_ReturnValue;           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58AF[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RInterpTo_Constant_DeltaTime_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation) == 0x000050, "Wrong size on BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation, Done) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation::Done' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation, CallFunc_RInterpTo_Constant_ReturnValue) == 0x000030, "Member 'BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation::CallFunc_RInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000048, "Member 'BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000049, "Member 'BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation, CallFunc_RInterpTo_Constant_DeltaTime_ImplicitCast) == 0x00004C, "Member 'BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation::CallFunc_RInterpTo_Constant_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_SetState final
{
public:
	EReconDrone_ScanState                         Param_ScanState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_SetState) == 0x000001, "Wrong alignment on BP_Drone_RandomLocationComponent_C_SetState");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_SetState) == 0x000001, "Wrong size on BP_Drone_RandomLocationComponent_C_SetState");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetState, Param_ScanState) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_SetState::Param_ScanState' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.SetViewTargetLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_SetViewTargetLocation final
{
public:
	struct FVector                                ViewPointTargetLcoation;                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_SetViewTargetLocation) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_SetViewTargetLocation");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_SetViewTargetLocation) == 0x000018, "Wrong size on BP_Drone_RandomLocationComponent_C_SetViewTargetLocation");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_SetViewTargetLocation, ViewPointTargetLcoation) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_SetViewTargetLocation::ViewPointTargetLcoation' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.Start
// 0x0018 (0x0018 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_Start final
{
public:
	struct FVector                                Param_StartLocation;                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_Start) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_Start");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_Start) == 0x000018, "Wrong size on BP_Drone_RandomLocationComponent_C_Start");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Start, Param_StartLocation) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_Start::Param_StartLocation' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.Update
// 0x0090 (0x0090 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_Update final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOwnerViewRotation_Done;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B1[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B2[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_Update) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_Update");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_Update) == 0x000090, "Wrong size on BP_Drone_RandomLocationComponent_C_Update");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_SetOwnerViewRotation_Done) == 0x000040, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_SetOwnerViewRotation_Done' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_BreakRotator_Roll) == 0x000044, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_BreakRotator_Pitch) == 0x000048, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_BreakRotator_Yaw) == 0x00004C, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000070, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'BP_Drone_RandomLocationComponent_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000078, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000088, "Member 'BP_Drone_RandomLocationComponent_C_Update::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.Update Current Time for Client
// 0x0048 (0x0048 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client final
{
public:
	double                                        TimeAfterStart;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client) == 0x000048, "Wrong size on BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client, TimeAfterStart) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client::TimeAfterStart' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client, CallFunc_FMin_ReturnValue) == 0x000040, "Member 'BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.UpdateOwnerLocation
// 0x0220 (0x0220 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation final
{
public:
	float                                         LocationAlpha;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeAfterStart;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B6[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CircleFMod_Return;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B7[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B8[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B9[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0110(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BA[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation) == 0x000220, "Wrong size on BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, LocationAlpha) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::LocationAlpha' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, TimeAfterStart) == 0x000008, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::TimeAfterStart' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_FTrunc_ReturnValue_1) == 0x000018, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Divide_IntInt_ReturnValue) == 0x000028, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000030, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000048, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_CircleFMod_Return) == 0x000050, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_CircleFMod_Return' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_SelectVector_ReturnValue) == 0x000078, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Percent_IntInt_ReturnValue) == 0x000090, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_VLerp_ReturnValue) == 0x0000B8, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000110, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000208, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_GetFloatValue_ReturnValue) == 0x00020C, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000210, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000218, "Member 'BP_Drone_RandomLocationComponent_C_UpdateOwnerLocation::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.Vector 1D Max
// 0x0038 (0x0038 - 0x0000)
struct BP_Drone_RandomLocationComponent_C_Vector_1D_Max final
{
public:
	double                                        Vector;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Drone_RandomLocationComponent_C_Vector_1D_Max) == 0x000008, "Wrong alignment on BP_Drone_RandomLocationComponent_C_Vector_1D_Max");
static_assert(sizeof(BP_Drone_RandomLocationComponent_C_Vector_1D_Max) == 0x000038, "Wrong size on BP_Drone_RandomLocationComponent_C_Vector_1D_Max");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Vector_1D_Max, Vector) == 0x000000, "Member 'BP_Drone_RandomLocationComponent_C_Vector_1D_Max::Vector' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Vector_1D_Max, B) == 0x000008, "Member 'BP_Drone_RandomLocationComponent_C_Vector_1D_Max::B' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Vector_1D_Max, Max) == 0x000010, "Member 'BP_Drone_RandomLocationComponent_C_Vector_1D_Max::Max' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Vector_1D_Max, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'BP_Drone_RandomLocationComponent_C_Vector_1D_Max::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Vector_1D_Max, CallFunc_SignOfFloat_ReturnValue) == 0x000020, "Member 'BP_Drone_RandomLocationComponent_C_Vector_1D_Max::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Vector_1D_Max, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'BP_Drone_RandomLocationComponent_C_Vector_1D_Max::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Drone_RandomLocationComponent_C_Vector_1D_Max, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_Drone_RandomLocationComponent_C_Vector_1D_Max::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

}

