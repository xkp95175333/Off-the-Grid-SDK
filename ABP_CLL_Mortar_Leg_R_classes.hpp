#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CLL_Mortar_Leg_R

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CLL_Mortar_Leg_R.ABP_CLL_Mortar_Leg_R_C
// 0x0650 (0x09C0 - 0x0370)
class UABP_CLL_Mortar_Leg_R_C final : public UAnimInstance
{
public:
	uint8                                         Pad_5E9F[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x03A8(0x0158)(ContainsInstancedReference)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0500(0x00F0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0618(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0640(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0668(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0690(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x06B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x06E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0728(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0748(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0790(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x07B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x07F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0818(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0860(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0880(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x08C8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x08E8(0x00C8)()
	bool                                          IsActivated;                                       // 0x09B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnTagRemoved_2211413D49389D129FEC6C8C0A79E6A5(const struct FGameplayTag& Tag);
	void OnTagAdded_2211413D49389D129FEC6C8C0A79E6A5(const struct FGameplayTag& Tag);
	void ExecuteUbergraph_ABP_CLL_Mortar_Leg_R(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CLL_Mortar_Leg_R_C">();
	}
	static class UABP_CLL_Mortar_Leg_R_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CLL_Mortar_Leg_R_C>();
	}
};
static_assert(alignof(UABP_CLL_Mortar_Leg_R_C) == 0x000010, "Wrong alignment on UABP_CLL_Mortar_Leg_R_C");
static_assert(sizeof(UABP_CLL_Mortar_Leg_R_C) == 0x0009C0, "Wrong size on UABP_CLL_Mortar_Leg_R_C");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, UberGraphFrame) == 0x000370, "Member 'UABP_CLL_Mortar_Leg_R_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_CopyPoseFromMesh) == 0x0003A8, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_LayeredBoneBlend) == 0x000500, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_TransitionResult_5) == 0x0005F0, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_TransitionResult_4) == 0x000618, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_TransitionResult_3) == 0x000640, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_TransitionResult_2) == 0x000668, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_TransitionResult_1) == 0x000690, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_TransitionResult) == 0x0006B8, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_SequencePlayer_4) == 0x0006E0, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_StateResult_4) == 0x000728, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_SequencePlayer_3) == 0x000748, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_StateResult_3) == 0x000790, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_SequencePlayer_2) == 0x0007B0, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_StateResult_2) == 0x0007F8, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_SequencePlayer_1) == 0x000818, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_StateResult_1) == 0x000860, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_SequencePlayer) == 0x000880, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_StateResult) == 0x0008C8, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, AnimGraphNode_StateMachine) == 0x0008E8, "Member 'UABP_CLL_Mortar_Leg_R_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_CLL_Mortar_Leg_R_C, IsActivated) == 0x0009B0, "Member 'UABP_CLL_Mortar_Leg_R_C::IsActivated' has a wrong offset!");

}

