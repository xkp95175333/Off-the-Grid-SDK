#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GorillaArm_DashIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GorillaArm_DashIndicator.BP_GorillaArm_DashIndicator_C
// 0x0120 (0x03C0 - 0x02A0)
class ABP_GorillaArm_DashIndicator_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Niagara_Inner;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_Outer;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Indicator_Parent;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Dashing_InnerSizeAnim_Timeline_Size_3879534849432DC7136F42ADBE6E6894; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Dashing_InnerSizeAnim_Timeline__Direction_3879534849432DC7136F42ADBE6E6894; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6594[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Dashing_InnerSizeAnim_Timeline;                    // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Dashing_OuterSizeAnim_Timeline_Size_3DEAFDBD40D4A08C50B838B1AD836781; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Dashing_OuterSizeAnim_Timeline__Direction_3DEAFDBD40D4A08C50B838B1AD836781; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6595[0x3];                                     // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Dashing_OuterSizeAnim_Timeline;                    // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Dashing_OuterRotationAnim_Timeline_Rotation_5D1DF7ED449C35899E8E4BABFE022BEA; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Dashing_OuterRotationAnim_Timeline__Direction_5D1DF7ED449C35899E8E4BABFE022BEA; // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6596[0x3];                                     // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Dashing_OuterRotationAnim_Timeline;                // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DecalDynMatRef;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        SpawnedDecal;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzGorillaArmComponent*                 GorillaComponent;                                  // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        IndicatorThickness;                                // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IndicatorVerticalOffset;                           // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ImpactFalseMatRef;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ImpactTrueMatRef;                                  // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DashDistance;                                      // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHitting;                                         // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6597[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CharCapsuleThreshold;                              // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6598[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CollisionCheck_Radius;                             // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Final_IndicatorLocation;                           // 0x0348(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dashing;                                           // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6599[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBodyPartAbilityData_GorillaArm*      AbilityData;                                       // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         MaxTracesCount;                                    // 0x0370(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColor;                                      // 0x0374(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HostileColor;                                      // 0x0384(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659A[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            IndicatorChargingSizeCurve;                        // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MinTraceOffset;                                    // 0x03A0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceOffsetTolerance;                              // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimateDash();
	void AnimateParticles_Charging(double ChargeProgress);
	void ChangeParticleColor(const struct FLinearColor& Param);
	void Dashing_InnerSizeAnim_Timeline__FinishedFunc();
	void Dashing_InnerSizeAnim_Timeline__UpdateFunc();
	void Dashing_OuterRotationAnim_Timeline__FinishedFunc();
	void Dashing_OuterRotationAnim_Timeline__UpdateFunc();
	void Dashing_OuterSizeAnim_Timeline__FinishedFunc();
	void Dashing_OuterSizeAnim_Timeline__UpdateFunc();
	void ExecuteUbergraph_BP_GorillaArm_DashIndicator(int32 EntryPoint);
	void OnRep_BeforeClick();
	void PerformIndicatorSingleTrace(const struct FVector& Trace_Start, const struct FVector& Trace_End, bool bApplyOffset, EDrawDebugTrace DebugType, struct FHitResult* Out_Hit, bool* bBlockingHit);
	void PerformIndicatorTraces(const struct FVector& TraceStart, const struct FVector& Direction, double MaxDistance, EDrawDebugTrace DebugType, struct FHitResult* Out_Hit, bool* bBlockingHit, double* OutTotalDistance);
	void ReceiveTick(float DeltaSeconds);
	void UpdateIndicatorLocation();
	void UpdateIndicatorSize(double Current_Charge);
	void UserConstructionScript();

	void CalculateTraceOffset(struct FVector* Offset) const;
	void GetDashDirection(struct FVector* DashDirection) const;
	void GetMaxDashDistance(double* Param_DashDistance) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GorillaArm_DashIndicator_C">();
	}
	static class ABP_GorillaArm_DashIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GorillaArm_DashIndicator_C>();
	}
};
static_assert(alignof(ABP_GorillaArm_DashIndicator_C) == 0x000008, "Wrong alignment on ABP_GorillaArm_DashIndicator_C");
static_assert(sizeof(ABP_GorillaArm_DashIndicator_C) == 0x0003C0, "Wrong size on ABP_GorillaArm_DashIndicator_C");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_GorillaArm_DashIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Niagara_Inner) == 0x0002A8, "Member 'ABP_GorillaArm_DashIndicator_C::Niagara_Inner' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Niagara_Outer) == 0x0002B0, "Member 'ABP_GorillaArm_DashIndicator_C::Niagara_Outer' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Indicator_Parent) == 0x0002B8, "Member 'ABP_GorillaArm_DashIndicator_C::Indicator_Parent' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, DefaultSceneRoot) == 0x0002C0, "Member 'ABP_GorillaArm_DashIndicator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing_InnerSizeAnim_Timeline_Size_3879534849432DC7136F42ADBE6E6894) == 0x0002C8, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing_InnerSizeAnim_Timeline_Size_3879534849432DC7136F42ADBE6E6894' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing_InnerSizeAnim_Timeline__Direction_3879534849432DC7136F42ADBE6E6894) == 0x0002CC, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing_InnerSizeAnim_Timeline__Direction_3879534849432DC7136F42ADBE6E6894' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing_InnerSizeAnim_Timeline) == 0x0002D0, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing_InnerSizeAnim_Timeline' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing_OuterSizeAnim_Timeline_Size_3DEAFDBD40D4A08C50B838B1AD836781) == 0x0002D8, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing_OuterSizeAnim_Timeline_Size_3DEAFDBD40D4A08C50B838B1AD836781' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing_OuterSizeAnim_Timeline__Direction_3DEAFDBD40D4A08C50B838B1AD836781) == 0x0002DC, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing_OuterSizeAnim_Timeline__Direction_3DEAFDBD40D4A08C50B838B1AD836781' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing_OuterSizeAnim_Timeline) == 0x0002E0, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing_OuterSizeAnim_Timeline' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing_OuterRotationAnim_Timeline_Rotation_5D1DF7ED449C35899E8E4BABFE022BEA) == 0x0002E8, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing_OuterRotationAnim_Timeline_Rotation_5D1DF7ED449C35899E8E4BABFE022BEA' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing_OuterRotationAnim_Timeline__Direction_5D1DF7ED449C35899E8E4BABFE022BEA) == 0x0002EC, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing_OuterRotationAnim_Timeline__Direction_5D1DF7ED449C35899E8E4BABFE022BEA' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing_OuterRotationAnim_Timeline) == 0x0002F0, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing_OuterRotationAnim_Timeline' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, DecalDynMatRef) == 0x0002F8, "Member 'ABP_GorillaArm_DashIndicator_C::DecalDynMatRef' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, SpawnedDecal) == 0x000300, "Member 'ABP_GorillaArm_DashIndicator_C::SpawnedDecal' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, GorillaComponent) == 0x000308, "Member 'ABP_GorillaArm_DashIndicator_C::GorillaComponent' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, IndicatorThickness) == 0x000310, "Member 'ABP_GorillaArm_DashIndicator_C::IndicatorThickness' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, IndicatorVerticalOffset) == 0x000318, "Member 'ABP_GorillaArm_DashIndicator_C::IndicatorVerticalOffset' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, ImpactFalseMatRef) == 0x000320, "Member 'ABP_GorillaArm_DashIndicator_C::ImpactFalseMatRef' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, ImpactTrueMatRef) == 0x000328, "Member 'ABP_GorillaArm_DashIndicator_C::ImpactTrueMatRef' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, DashDistance) == 0x000330, "Member 'ABP_GorillaArm_DashIndicator_C::DashDistance' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, IsHitting) == 0x000334, "Member 'ABP_GorillaArm_DashIndicator_C::IsHitting' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, CharCapsuleThreshold) == 0x000338, "Member 'ABP_GorillaArm_DashIndicator_C::CharCapsuleThreshold' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, CollisionCheck_Radius) == 0x000340, "Member 'ABP_GorillaArm_DashIndicator_C::CollisionCheck_Radius' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Final_IndicatorLocation) == 0x000348, "Member 'ABP_GorillaArm_DashIndicator_C::Final_IndicatorLocation' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, Dashing) == 0x000360, "Member 'ABP_GorillaArm_DashIndicator_C::Dashing' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, AbilityData) == 0x000368, "Member 'ABP_GorillaArm_DashIndicator_C::AbilityData' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, MaxTracesCount) == 0x000370, "Member 'ABP_GorillaArm_DashIndicator_C::MaxTracesCount' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, DefaultColor) == 0x000374, "Member 'ABP_GorillaArm_DashIndicator_C::DefaultColor' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, HostileColor) == 0x000384, "Member 'ABP_GorillaArm_DashIndicator_C::HostileColor' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, IndicatorChargingSizeCurve) == 0x000398, "Member 'ABP_GorillaArm_DashIndicator_C::IndicatorChargingSizeCurve' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, MinTraceOffset) == 0x0003A0, "Member 'ABP_GorillaArm_DashIndicator_C::MinTraceOffset' has a wrong offset!");
static_assert(offsetof(ABP_GorillaArm_DashIndicator_C, TraceOffsetTolerance) == 0x0003B8, "Member 'ABP_GorillaArm_DashIndicator_C::TraceOffsetTolerance' has a wrong offset!");

}

