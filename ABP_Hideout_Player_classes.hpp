#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Hideout_Player

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "ABP_Hideout_Player_structs.hpp"
#include "Engine_structs.hpp"
#include "ControlRig_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "EDebug_Lobby_IdlePoses_Types_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Hideout_Player.ABP_Hideout_Player_C
// 0x16E0 (0x2370 - 0x0C90)
class UABP_Hideout_Player_C final : public UGzDefaultCharacterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Hideout_Player::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0C98(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0CA8(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x0CB0(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0D58(0x0008)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_12;                     // 0x0D60(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0DD8(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0E58(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0EA0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0EC0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0EE8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0F10(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0F90(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0FD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x1000(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1028(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1050(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1078(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x10A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x10C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x10F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1118(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1140(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1168(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1190(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x11B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1200(0x0020)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_5;                   // 0x1220(0x0048)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_11;                     // 0x1268(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_10;                     // 0x12E0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1358(0x0020)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x1378(0x0048)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_9;                      // 0x13C0(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_8;                      // 0x1438(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x14B0(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_7;                      // 0x14D0(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_6;                      // 0x1548(0x0078)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x15C0(0x0048)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_5;                      // 0x1608(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1680(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x16A0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x16E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1730(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1778(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x17C0(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_4;                      // 0x17E0(0x0078)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x1858(0x0048)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_3;                      // 0x18A0(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_2;                      // 0x1918(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1990(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_1;                      // 0x19B0(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x1A28(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1AA0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1AE8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1B30(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1B50(0x00C8)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x1C18(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x20E8(0x0040)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x2128(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x21F0(0x00F0)()
	struct FVector                                __CustomProperty_Weapon_Front_Grip_B799E39C4E28322671F9E296867FE65B; // 0x22E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_Right_Hand_IK_B799E39C4E28322671F9E296867FE65B; // 0x22F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_Left_Hand_IK_B799E39C4E28322671F9E296867FE65B; // 0x22F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EE7[0x6];                                     // 0x22FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage_to_Play;                                   // 0x2300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          LayerToIdle;                                       // 0x2308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLayerItemType                              Selection;                                         // 0x2309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MixRandomIdle;                                     // 0x230A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLayerItemType                              CurrentItemLayer;                                  // 0x230B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInLoadoutCustomization;                           // 0x230C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EE8[0x3];                                     // 0x230D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AnimatedHand;                                      // 0x2310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	EGzAnimationActionType                        AnimationAction;                                   // 0x2320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzPartyMemberDisplaySlotType                 CharacterSlot;                                     // 0x2321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDebug_Lobby_IdlePoses_Types                  DebugIdleType;                                     // 0x2322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EE9[0x5];                                     // 0x2323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Debug_Lobby_IdlePoses_C*           DebugWidget;                                       // 0x2328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Debug_Lobby_IdlePoses_C*            DebugActor;                                        // 0x2330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          VerticalGripPose;                                  // 0x2338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          VerticalAngledGripPose;                            // 0x2340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          AngledGripPose;                                    // 0x2348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          HorizontalGripPose;                                // 0x2350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          SideGripPose;                                      // 0x2358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LeftHandGripPosesWeight;                           // 0x2360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Left_Hand_IK;                                      // 0x2368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNotPlayingIdleBreaks;                            // 0x2369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void DisableLeftHandIk(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void EnableLeftHandIk(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_ControlRig_B799E39C4E28322671F9E296867FE65B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_TransitionResult_159564264C5E2CDBA3C8F98DB70F987D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_TransitionResult_1C542198416B68511916D08709D34A4F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_TransitionResult_1D808F154052A4C845F8A78B3326212C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_TransitionResult_6B0C28F64FC700F5135CD1B5F3BDEDE7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_TransitionResult_8762E4E24B6DDABA0F03C8BAE6C3D512();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_TransitionResult_B6A4B3AF49D4A6711907B89E066D2078();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_TransitionResult_D0D2B03740C2AAE0D4628DAD38115D55();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_TransitionResult_E27E42F947A02C5594D9839D908CADE7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Hideout_Player_AnimGraphNode_TransitionResult_EB5D899D498C1250705E1489EAFFED31();
	void ExecuteUbergraph_ABP_Hideout_Player(int32 EntryPoint);
	void OnAnimationRequested(const EGzAnimationActionType Param_AnimationAction);
	void OnLoadoutClosed();
	void OnLoadoutOpened();
	void OnSceneEnterBP_Event(const struct FGameplayTag& SceneTag, const struct FGzSceneChangedEventData& EventData);
	void OnSceneLeaveBP_Event(const struct FGameplayTag& SceneTag, const struct FGzSceneChangedEventData& EventData);
	void OnSceneUpdateBP_Event(const struct FGameplayTag& SceneTag, const struct FGzSceneChangedEventData& EventData);
	void Set_Equipped_Weapons_Visibility(bool New_Visibility);
	void SetLeftPoses_Event();
	void SetMiddlePoses_Event();
	void SetRightPoses_Event();
	void SetToOnePlayer_Event();
	void SetToThreePlayers_Event();
	void SwitchAnimLayer(const EGzLayerItemType LayerIndex);
	void SwitchAnimLayerInstance(TSubclassOf<class UAnimInstance> NewLayer);
	void UpdateCharacterSlot();
	void UpdateLedftArmGripWeight(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateLeftHandGripPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Hideout_Player_C">();
	}
	static class UABP_Hideout_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Hideout_Player_C>();
	}
};
static_assert(alignof(UABP_Hideout_Player_C) == 0x000010, "Wrong alignment on UABP_Hideout_Player_C");
static_assert(sizeof(UABP_Hideout_Player_C) == 0x002370, "Wrong size on UABP_Hideout_Player_C");
static_assert(offsetof(UABP_Hideout_Player_C, UberGraphFrame) == 0x000C90, "Member 'UABP_Hideout_Player_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, __AnimBlueprintMutables) == 0x000C98, "Member 'UABP_Hideout_Player_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimBlueprintExtension_PropertyAccess) == 0x000CA8, "Member 'UABP_Hideout_Player_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimBlueprintExtension_NodeRelevancy) == 0x000CB0, "Member 'UABP_Hideout_Player_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimBlueprintExtension_Base) == 0x000D58, "Member 'UABP_Hideout_Player_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_12) == 0x000D60, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_SaveCachedPose_1) == 0x000DD8, "Member 'UABP_Hideout_Player_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_Slot_1) == 0x000E58, "Member 'UABP_Hideout_Player_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_Root) == 0x000EA0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_UseCachedPose_1) == 0x000EC0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_UseCachedPose) == 0x000EE8, "Member 'UABP_Hideout_Player_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_SaveCachedPose) == 0x000F10, "Member 'UABP_Hideout_Player_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_Slot) == 0x000F90, "Member 'UABP_Hideout_Player_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_11) == 0x000FD8, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_10) == 0x001000, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_9) == 0x001028, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_8) == 0x001050, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_7) == 0x001078, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_6) == 0x0010A0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_5) == 0x0010C8, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_4) == 0x0010F0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_3) == 0x001118, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_2) == 0x001140, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult_1) == 0x001168, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_TransitionResult) == 0x001190, "Member 'UABP_Hideout_Player_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_SequencePlayer_4) == 0x0011B8, "Member 'UABP_Hideout_Player_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_StateResult_6) == 0x001200, "Member 'UABP_Hideout_Player_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_BlendListByEnum_5) == 0x001220, "Member 'UABP_Hideout_Player_C::AnimGraphNode_BlendListByEnum_5' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_11) == 0x001268, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_10) == 0x0012E0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_StateResult_5) == 0x001358, "Member 'UABP_Hideout_Player_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_BlendListByEnum_4) == 0x001378, "Member 'UABP_Hideout_Player_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_9) == 0x0013C0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_8) == 0x001438, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_StateResult_4) == 0x0014B0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_7) == 0x0014D0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_6) == 0x001548, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_BlendListByEnum_3) == 0x0015C0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_5) == 0x001608, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_StateResult_3) == 0x001680, "Member 'UABP_Hideout_Player_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_SequencePlayer_3) == 0x0016A0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_BlendListByEnum_2) == 0x0016E8, "Member 'UABP_Hideout_Player_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_SequencePlayer_2) == 0x001730, "Member 'UABP_Hideout_Player_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_SequencePlayer_1) == 0x001778, "Member 'UABP_Hideout_Player_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_StateResult_2) == 0x0017C0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_4) == 0x0017E0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_BlendListByEnum_1) == 0x001858, "Member 'UABP_Hideout_Player_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_3) == 0x0018A0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_2) == 0x001918, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_StateResult_1) == 0x001990, "Member 'UABP_Hideout_Player_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer_1) == 0x0019B0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_RandomPlayer) == 0x001A28, "Member 'UABP_Hideout_Player_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_SequencePlayer) == 0x001AA0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_BlendListByEnum) == 0x001AE8, "Member 'UABP_Hideout_Player_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_StateResult) == 0x001B30, "Member 'UABP_Hideout_Player_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_StateMachine) == 0x001B50, "Member 'UABP_Hideout_Player_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_ControlRig) == 0x001C18, "Member 'UABP_Hideout_Player_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_SequenceEvaluator) == 0x0020E8, "Member 'UABP_Hideout_Player_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_ApplyAdditive) == 0x002128, "Member 'UABP_Hideout_Player_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimGraphNode_LayeredBoneBlend) == 0x0021F0, "Member 'UABP_Hideout_Player_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, __CustomProperty_Weapon_Front_Grip_B799E39C4E28322671F9E296867FE65B) == 0x0022E0, "Member 'UABP_Hideout_Player_C::__CustomProperty_Weapon_Front_Grip_B799E39C4E28322671F9E296867FE65B' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, __CustomProperty_Right_Hand_IK_B799E39C4E28322671F9E296867FE65B) == 0x0022F8, "Member 'UABP_Hideout_Player_C::__CustomProperty_Right_Hand_IK_B799E39C4E28322671F9E296867FE65B' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, __CustomProperty_Left_Hand_IK_B799E39C4E28322671F9E296867FE65B) == 0x0022F9, "Member 'UABP_Hideout_Player_C::__CustomProperty_Left_Hand_IK_B799E39C4E28322671F9E296867FE65B' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, Montage_to_Play) == 0x002300, "Member 'UABP_Hideout_Player_C::Montage_to_Play' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, LayerToIdle) == 0x002308, "Member 'UABP_Hideout_Player_C::LayerToIdle' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, Selection) == 0x002309, "Member 'UABP_Hideout_Player_C::Selection' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, MixRandomIdle) == 0x00230A, "Member 'UABP_Hideout_Player_C::MixRandomIdle' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, CurrentItemLayer) == 0x00230B, "Member 'UABP_Hideout_Player_C::CurrentItemLayer' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, bInLoadoutCustomization) == 0x00230C, "Member 'UABP_Hideout_Player_C::bInLoadoutCustomization' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimatedHand) == 0x002310, "Member 'UABP_Hideout_Player_C::AnimatedHand' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AnimationAction) == 0x002320, "Member 'UABP_Hideout_Player_C::AnimationAction' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, CharacterSlot) == 0x002321, "Member 'UABP_Hideout_Player_C::CharacterSlot' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, DebugIdleType) == 0x002322, "Member 'UABP_Hideout_Player_C::DebugIdleType' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, DebugWidget) == 0x002328, "Member 'UABP_Hideout_Player_C::DebugWidget' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, DebugActor) == 0x002330, "Member 'UABP_Hideout_Player_C::DebugActor' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, VerticalGripPose) == 0x002338, "Member 'UABP_Hideout_Player_C::VerticalGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, VerticalAngledGripPose) == 0x002340, "Member 'UABP_Hideout_Player_C::VerticalAngledGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, AngledGripPose) == 0x002348, "Member 'UABP_Hideout_Player_C::AngledGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, HorizontalGripPose) == 0x002350, "Member 'UABP_Hideout_Player_C::HorizontalGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, SideGripPose) == 0x002358, "Member 'UABP_Hideout_Player_C::SideGripPose' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, LeftHandGripPosesWeight) == 0x002360, "Member 'UABP_Hideout_Player_C::LeftHandGripPosesWeight' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, Left_Hand_IK) == 0x002368, "Member 'UABP_Hideout_Player_C::Left_Hand_IK' has a wrong offset!");
static_assert(offsetof(UABP_Hideout_Player_C, IsNotPlayingIdleBreaks) == 0x002369, "Member 'UABP_Hideout_Player_C::IsNotPlayingIdleBreaks' has a wrong offset!");

}

