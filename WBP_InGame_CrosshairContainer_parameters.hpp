#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InGame_CrosshairContainer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_InGame_CrosshairContainer.WBP_InGame_CrosshairContainer_C.ExecuteUbergraph_WBP_InGame_CrosshairContainer
// 0x0070 (0x0070 - 0x0000)
struct WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B49[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ViewTarget;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGzInvPocketId& PocketId, class AGzWeaponActor* WeaponActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCrosshair*                           CallFunc_GetCurrentCrosshair_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_NewViewTarget;                        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4A[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvPocketId                         K2Node_CustomEvent_PocketId;                       // 0x003C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzWeaponActor*                         K2Node_CustomEvent_WeaponActor;                    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCrosshair*                           CallFunc_GetCurrentCrosshair_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_OldViewTarget;                        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character_1;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer) == 0x000008, "Wrong alignment on WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer");
static_assert(sizeof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer) == 0x000070, "Wrong size on WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, EntryPoint) == 0x000000, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_Event_ViewTarget) == 0x000008, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_Event_ViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, CallFunc_GetCurrentCrosshair_ReturnValue) == 0x000020, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::CallFunc_GetCurrentCrosshair_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_Event_NewViewTarget) == 0x000028, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_Event_NewViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_DynamicCast_AsGz_Player_Character) == 0x000030, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_CustomEvent_PocketId) == 0x00003C, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_CustomEvent_PocketId' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_CustomEvent_WeaponActor) == 0x000048, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_CustomEvent_WeaponActor' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, CallFunc_GetCurrentCrosshair_ReturnValue_1) == 0x000050, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::CallFunc_GetCurrentCrosshair_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_Event_OldViewTarget) == 0x000058, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_Event_OldViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_DynamicCast_AsGz_Player_Character_1) == 0x000060, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_DynamicCast_AsGz_Player_Character_1' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WBP_InGame_CrosshairContainer_C_ExecuteUbergraph_WBP_InGame_CrosshairContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_InGame_CrosshairContainer.WBP_InGame_CrosshairContainer_C.OnViewTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGame_CrosshairContainer_C_OnViewTargetChanged final
{
public:
	class APawn*                                  ViewTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGame_CrosshairContainer_C_OnViewTargetChanged) == 0x000008, "Wrong alignment on WBP_InGame_CrosshairContainer_C_OnViewTargetChanged");
static_assert(sizeof(WBP_InGame_CrosshairContainer_C_OnViewTargetChanged) == 0x000008, "Wrong size on WBP_InGame_CrosshairContainer_C_OnViewTargetChanged");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnViewTargetChanged, ViewTarget) == 0x000000, "Member 'WBP_InGame_CrosshairContainer_C_OnViewTargetChanged::ViewTarget' has a wrong offset!");

// Function WBP_InGame_CrosshairContainer.WBP_InGame_CrosshairContainer_C.ReceiveBindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGame_CrosshairContainer_C_ReceiveBindEvents final
{
public:
	class APawn*                                  NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGame_CrosshairContainer_C_ReceiveBindEvents) == 0x000008, "Wrong alignment on WBP_InGame_CrosshairContainer_C_ReceiveBindEvents");
static_assert(sizeof(WBP_InGame_CrosshairContainer_C_ReceiveBindEvents) == 0x000008, "Wrong size on WBP_InGame_CrosshairContainer_C_ReceiveBindEvents");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ReceiveBindEvents, NewViewTarget) == 0x000000, "Member 'WBP_InGame_CrosshairContainer_C_ReceiveBindEvents::NewViewTarget' has a wrong offset!");

// Function WBP_InGame_CrosshairContainer.WBP_InGame_CrosshairContainer_C.ReceiveUnbindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGame_CrosshairContainer_C_ReceiveUnbindEvents final
{
public:
	class APawn*                                  OldViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGame_CrosshairContainer_C_ReceiveUnbindEvents) == 0x000008, "Wrong alignment on WBP_InGame_CrosshairContainer_C_ReceiveUnbindEvents");
static_assert(sizeof(WBP_InGame_CrosshairContainer_C_ReceiveUnbindEvents) == 0x000008, "Wrong size on WBP_InGame_CrosshairContainer_C_ReceiveUnbindEvents");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ReceiveUnbindEvents, OldViewTarget) == 0x000000, "Member 'WBP_InGame_CrosshairContainer_C_ReceiveUnbindEvents::OldViewTarget' has a wrong offset!");

// Function WBP_InGame_CrosshairContainer.WBP_InGame_CrosshairContainer_C.ResetCrosshairColor
// 0x0010 (0x0010 - 0x0000)
struct WBP_InGame_CrosshairContainer_C_ResetCrosshairColor final
{
public:
	struct FGzInvPocketId                         PocketId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         WeaponActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGame_CrosshairContainer_C_ResetCrosshairColor) == 0x000008, "Wrong alignment on WBP_InGame_CrosshairContainer_C_ResetCrosshairColor");
static_assert(sizeof(WBP_InGame_CrosshairContainer_C_ResetCrosshairColor) == 0x000010, "Wrong size on WBP_InGame_CrosshairContainer_C_ResetCrosshairColor");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ResetCrosshairColor, PocketId) == 0x000000, "Member 'WBP_InGame_CrosshairContainer_C_ResetCrosshairColor::PocketId' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_ResetCrosshairColor, WeaponActor) == 0x000008, "Member 'WBP_InGame_CrosshairContainer_C_ResetCrosshairColor::WeaponActor' has a wrong offset!");

// Function WBP_InGame_CrosshairContainer.WBP_InGame_CrosshairContainer_C.OnAimUpdatedBP
// 0x0178 (0x0178 - 0x0000)
struct WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP final
{
public:
	struct FVector                                blockedLocation;                                   // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBlocked;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCorrectClass;                                   // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4C[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CrosshairClasses;                                  // 0x0020(0x0010)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  BlockedAimHideTags;                                // 0x0030(0x0020)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4D[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCrosshair*                           CallFunc_GetCurrentCrosshair_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzCrosshair*                           CallFunc_GetCurrentCrosshair_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Crosshair_Unarmed_C*               K2Node_DynamicCast_AsWBP_Crosshair_Unarmed;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4E[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4F[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B50[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B51[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B52[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B53[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B54[0x1];                                     // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class UGzCrosshair*                           CallFunc_GetCurrentCrosshair_ReturnValue_2;        // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B55[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B56[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B57[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B58[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B59[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP) == 0x000008, "Wrong alignment on WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP");
static_assert(sizeof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP) == 0x000178, "Wrong size on WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, blockedLocation) == 0x000000, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::blockedLocation' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, bIsBlocked) == 0x000018, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::bIsBlocked' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, bIsCorrectClass) == 0x000019, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::bIsCorrectClass' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CrosshairClasses) == 0x000020, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CrosshairClasses' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, BlockedAimHideTags) == 0x000030, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::BlockedAimHideTags' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, Temp_bool_True_if_break_was_hit_Variable) == 0x000050, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_GetCurrentCrosshair_ReturnValue) == 0x000058, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_GetCurrentCrosshair_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_GetCurrentCrosshair_ReturnValue_1) == 0x000060, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_GetCurrentCrosshair_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, K2Node_DynamicCast_AsWBP_Crosshair_Unarmed) == 0x000068, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::K2Node_DynamicCast_AsWBP_Crosshair_Unarmed' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000071, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, Temp_int_Array_Index_Variable) == 0x000074, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000078, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0000A8, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_GetFloatValue_ReturnValue) == 0x0000B4, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_BooleanAND_ReturnValue) == 0x0000B8, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_MakeVector2D_ReturnValue) == 0x0000C0, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D0, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_ObjectIsA_ReturnValue) == 0x0000E4, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_ObjectIsA_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_Less_IntInt_ReturnValue) == 0x0000E5, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_BooleanAND_ReturnValue_2) == 0x0000E6, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000E8, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_GetCurrentCrosshair_ReturnValue_2) == 0x000100, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_GetCurrentCrosshair_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_GetOwningPlayer_ReturnValue) == 0x000108, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000118, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x000128, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x000130, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_IsValid_ReturnValue_2) == 0x000138, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000140, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_IsValid_ReturnValue_3) == 0x000148, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000150, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000160, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_Not_PreBool_ReturnValue_2) == 0x000161, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000164, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_MakeVector2D_X_ImplicitCast) == 0x000168, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000170, "Member 'WBP_InGame_CrosshairContainer_C_OnAimUpdatedBP::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

}

