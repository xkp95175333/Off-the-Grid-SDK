#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameNotificationSlot

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_GameNotificationSlot.WBP_GameNotificationSlot_C.ExecuteUbergraph_WBP_GameNotificationSlot
// 0x0058 (0x0058 - 0x0000)
struct WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_AnimationID;                          // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC6[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzNotificationQueue                   K2Node_Event_Notification;                         // 0x0010(0x0028)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0048(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot) == 0x000008, "Wrong alignment on WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot");
static_assert(sizeof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot) == 0x000058, "Wrong size on WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot");
static_assert(offsetof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot, EntryPoint) == 0x000000, "Member 'WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot, K2Node_Event_AnimationID) == 0x000004, "Member 'WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot::K2Node_Event_AnimationID' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot, K2Node_SwitchName_CmpSuccess) == 0x00000C, "Member 'WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot, K2Node_Event_Notification) == 0x000010, "Member 'WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot::K2Node_Event_Notification' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot, CallFunc_PlayAnimation_ReturnValue_1) == 0x000040, "Member 'WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot, K2Node_Event_Animation) == 0x000048, "Member 'WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'WBP_GameNotificationSlot_C_ExecuteUbergraph_WBP_GameNotificationSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_GameNotificationSlot.WBP_GameNotificationSlot_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameNotificationSlot_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameNotificationSlot_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_GameNotificationSlot_C_OnAnimationFinished");
static_assert(sizeof(WBP_GameNotificationSlot_C_OnAnimationFinished) == 0x000008, "Wrong size on WBP_GameNotificationSlot_C_OnAnimationFinished");
static_assert(offsetof(WBP_GameNotificationSlot_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_GameNotificationSlot_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function WBP_GameNotificationSlot.WBP_GameNotificationSlot_C.PlayAnimationById
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameNotificationSlot_C_PlayAnimationById final
{
public:
	class FName                                   AnimationID;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameNotificationSlot_C_PlayAnimationById) == 0x000004, "Wrong alignment on WBP_GameNotificationSlot_C_PlayAnimationById");
static_assert(sizeof(WBP_GameNotificationSlot_C_PlayAnimationById) == 0x000008, "Wrong size on WBP_GameNotificationSlot_C_PlayAnimationById");
static_assert(offsetof(WBP_GameNotificationSlot_C_PlayAnimationById, AnimationID) == 0x000000, "Member 'WBP_GameNotificationSlot_C_PlayAnimationById::AnimationID' has a wrong offset!");

// Function WBP_GameNotificationSlot.WBP_GameNotificationSlot_C.SetHeaderSize
// 0x0088 (0x0088 - 0x0000)
struct WBP_GameNotificationSlot_C_SetHeaderSize final
{
public:
	EGzGameNotificationType                       GameNotificationType;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ImageSize;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzGameNotificationType                       Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC8[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzGameNotificationType                       Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC9[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzGameNotificationType                       Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BCA[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzGameNotificationType                       Temp_byte_Variable_3;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BCB[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_3;                           // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6BCC[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateIconSize_Size_ImplicitCast;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateIconSize_Size_ImplicitCast_1;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameNotificationSlot_C_SetHeaderSize) == 0x000008, "Wrong alignment on WBP_GameNotificationSlot_C_SetHeaderSize");
static_assert(sizeof(WBP_GameNotificationSlot_C_SetHeaderSize) == 0x000088, "Wrong size on WBP_GameNotificationSlot_C_SetHeaderSize");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, GameNotificationType) == 0x000000, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::GameNotificationType' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, ImageSize) == 0x000004, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::ImageSize' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_real_Variable) == 0x000008, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_byte_Variable) == 0x00000C, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_real_Variable_1) == 0x000010, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_real_Variable_2) == 0x000014, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_byte_Variable_1) == 0x000018, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, K2Node_Select_Default) == 0x00001C, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_real_Variable_3) == 0x000020, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_real_Variable_4) == 0x000024, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_byte_Variable_2) == 0x000028, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, K2Node_Select_Default_1) == 0x00002C, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_real_Variable_5) == 0x000030, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, Temp_byte_Variable_3) == 0x000034, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, K2Node_Select_Default_2) == 0x000038, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, K2Node_MakeStruct_Margin) == 0x00003C, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, K2Node_MakeStruct_Margin_1) == 0x00004C, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, K2Node_Select_Default_3) == 0x00005C, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000070, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, CallFunc_UpdateIconSize_Size_ImplicitCast) == 0x000078, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::CallFunc_UpdateIconSize_Size_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetHeaderSize, CallFunc_UpdateIconSize_Size_ImplicitCast_1) == 0x000080, "Member 'WBP_GameNotificationSlot_C_SetHeaderSize::CallFunc_UpdateIconSize_Size_ImplicitCast_1' has a wrong offset!");

// Function WBP_GameNotificationSlot.WBP_GameNotificationSlot_C.SetMessageSideIcon
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameNotificationSlot_C_SetMessageSideIcon final
{
public:
	class UTexture2D*                             Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HideIcon;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameNotificationSlot_C_SetMessageSideIcon) == 0x000008, "Wrong alignment on WBP_GameNotificationSlot_C_SetMessageSideIcon");
static_assert(sizeof(WBP_GameNotificationSlot_C_SetMessageSideIcon) == 0x000010, "Wrong size on WBP_GameNotificationSlot_C_SetMessageSideIcon");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetMessageSideIcon, Icon) == 0x000000, "Member 'WBP_GameNotificationSlot_C_SetMessageSideIcon::Icon' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetMessageSideIcon, HideIcon) == 0x000008, "Member 'WBP_GameNotificationSlot_C_SetMessageSideIcon::HideIcon' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetMessageSideIcon, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_GameNotificationSlot_C_SetMessageSideIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_GameNotificationSlot.WBP_GameNotificationSlot_C.SetTitleText
// 0x0040 (0x0040 - 0x0000)
struct WBP_GameNotificationSlot_C_SetTitleText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          UpdateFont;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BCD[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ColorName;                                         // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableShadow;                                      // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BCE[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BCF[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameNotificationSlot_C_SetTitleText) == 0x000008, "Wrong alignment on WBP_GameNotificationSlot_C_SetTitleText");
static_assert(sizeof(WBP_GameNotificationSlot_C_SetTitleText) == 0x000040, "Wrong size on WBP_GameNotificationSlot_C_SetTitleText");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetTitleText, Text) == 0x000000, "Member 'WBP_GameNotificationSlot_C_SetTitleText::Text' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetTitleText, UpdateFont) == 0x000010, "Member 'WBP_GameNotificationSlot_C_SetTitleText::UpdateFont' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetTitleText, ColorName) == 0x000014, "Member 'WBP_GameNotificationSlot_C_SetTitleText::ColorName' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetTitleText, EnableShadow) == 0x00001C, "Member 'WBP_GameNotificationSlot_C_SetTitleText::EnableShadow' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetTitleText, Temp_struct_Variable) == 0x000020, "Member 'WBP_GameNotificationSlot_C_SetTitleText::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetTitleText, Temp_struct_Variable_1) == 0x000028, "Member 'WBP_GameNotificationSlot_C_SetTitleText::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetTitleText, Temp_bool_Variable) == 0x000030, "Member 'WBP_GameNotificationSlot_C_SetTitleText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_SetTitleText, K2Node_Select_Default) == 0x000034, "Member 'WBP_GameNotificationSlot_C_SetTitleText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameNotificationSlot.WBP_GameNotificationSlot_C.UpdateIconSize
// 0x0100 (0x0100 - 0x0000)
struct WBP_GameNotificationSlot_C_UpdateIconSize final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            OldBrush;                                          // 0x0010(0x00D0)(Edit, BlueprintVisible)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_SetFieldsInStruct_ImageSize_ImplicitCast;   // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameNotificationSlot_C_UpdateIconSize) == 0x000010, "Wrong alignment on WBP_GameNotificationSlot_C_UpdateIconSize");
static_assert(sizeof(WBP_GameNotificationSlot_C_UpdateIconSize) == 0x000100, "Wrong size on WBP_GameNotificationSlot_C_UpdateIconSize");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateIconSize, Image) == 0x000000, "Member 'WBP_GameNotificationSlot_C_UpdateIconSize::Image' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateIconSize, Size) == 0x000008, "Member 'WBP_GameNotificationSlot_C_UpdateIconSize::Size' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateIconSize, OldBrush) == 0x000010, "Member 'WBP_GameNotificationSlot_C_UpdateIconSize::OldBrush' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateIconSize, CallFunc_MakeVector2D_ReturnValue) == 0x0000E0, "Member 'WBP_GameNotificationSlot_C_UpdateIconSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateIconSize, K2Node_SetFieldsInStruct_ImageSize_ImplicitCast) == 0x0000F0, "Member 'WBP_GameNotificationSlot_C_UpdateIconSize::K2Node_SetFieldsInStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function WBP_GameNotificationSlot.WBP_GameNotificationSlot_C.UpdateNotification
// 0x0028 (0x0028 - 0x0000)
struct WBP_GameNotificationSlot_C_UpdateNotification final
{
public:
	struct FGzNotificationQueue                   Notification;                                      // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_GameNotificationSlot_C_UpdateNotification) == 0x000008, "Wrong alignment on WBP_GameNotificationSlot_C_UpdateNotification");
static_assert(sizeof(WBP_GameNotificationSlot_C_UpdateNotification) == 0x000028, "Wrong size on WBP_GameNotificationSlot_C_UpdateNotification");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateNotification, Notification) == 0x000000, "Member 'WBP_GameNotificationSlot_C_UpdateNotification::Notification' has a wrong offset!");

// Function WBP_GameNotificationSlot.WBP_GameNotificationSlot_C.UpdateVisuals
// 0x0240 (0x0240 - 0x0000)
struct WBP_GameNotificationSlot_C_UpdateVisuals final
{
public:
	struct FLinearColor                           BackgroundColor;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGzGameNotificationSpec                NotificationSpec;                                  // 0x0010(0x00A0)(Edit, BlueprintVisible)
	struct FGzNotificationQueue                   NotificationInfo;                                  // 0x00B0(0x0028)(Edit, BlueprintVisible)
	class FName                                   Temp_name_Variable;                                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzNotificationGroupType                      Temp_byte_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD0[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_5;                              // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzGameNotificationType                       Temp_byte_Variable_1;                              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzNotificationGroupType                      Temp_byte_Variable_2;                              // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD1[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_12;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD2[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetNotificationColor_Color;               // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzNotificationGroupType                      Temp_byte_Variable_3;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD3[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_2;                           // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x018C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD4[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzGameNotificationSpec                CallFunc_GetNotificationSpec_ReturnValue;          // 0x01A0(0x00A0)()
};
static_assert(alignof(WBP_GameNotificationSlot_C_UpdateVisuals) == 0x000008, "Wrong alignment on WBP_GameNotificationSlot_C_UpdateVisuals");
static_assert(sizeof(WBP_GameNotificationSlot_C_UpdateVisuals) == 0x000240, "Wrong size on WBP_GameNotificationSlot_C_UpdateVisuals");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, BackgroundColor) == 0x000000, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::BackgroundColor' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, NotificationSpec) == 0x000010, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::NotificationSpec' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, NotificationInfo) == 0x0000B0, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::NotificationInfo' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable) == 0x0000D8, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_1) == 0x0000E0, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_2) == 0x0000E8, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_3) == 0x0000F0, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_4) == 0x0000F8, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_byte_Variable) == 0x000100, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_5) == 0x000104, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_6) == 0x00010C, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_7) == 0x000114, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_8) == 0x00011C, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_9) == 0x000124, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_10) == 0x00012C, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_11) == 0x000134, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_byte_Variable_1) == 0x00013C, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_byte_Variable_2) == 0x00013D, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_bool_Variable) == 0x00013E, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_bool_Variable_1) == 0x00013F, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_bool_Variable_2) == 0x000140, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_bool_Variable_3) == 0x000141, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_bool_Variable_4) == 0x000142, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_bool_Variable_5) == 0x000143, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_bool_Variable_6) == 0x000144, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_12) == 0x000148, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, CallFunc_IsValid_ReturnValue_1) == 0x000151, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000152, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, CallFunc_BooleanOR_ReturnValue) == 0x000153, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, K2Node_Select_Default) == 0x000154, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, K2Node_Select_Default_1) == 0x00015C, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, CallFunc_GetNotificationColor_Color) == 0x000160, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::CallFunc_GetNotificationColor_Color' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_name_Variable_13) == 0x000170, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_byte_Variable_3) == 0x000178, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, Temp_bool_Variable_7) == 0x000179, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, K2Node_Select_Default_2) == 0x00017C, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, K2Node_Select_Default_3) == 0x000184, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, K2Node_Select_Default_4) == 0x00018C, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_GameNotificationSlot_C_UpdateVisuals, CallFunc_GetNotificationSpec_ReturnValue) == 0x0001A0, "Member 'WBP_GameNotificationSlot_C_UpdateVisuals::CallFunc_GetNotificationSpec_ReturnValue' has a wrong offset!");

}

