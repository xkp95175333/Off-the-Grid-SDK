#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemImage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemImage.WBP_ItemImage_C
// 0x0038 (0x0318 - 0x02E0)
class UWBP_ItemImage_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Item_Image;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bEnablePreConstructResize;                         // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AD1[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DefaultSize;                                       // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnablePreConstructIcon;                           // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AD2[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             DefaultIcon;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ItemImage(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetBrushSize(const struct FVector2D& Size, class UImage* Image);
	void SetItemIcon(class UTexture2D* ItemIcon);
	void SetItemIconSize(const struct FVector2D& Size);
	void SetItemIconSoft(TSoftObjectPtr<class UTexture2D> SoftItemIcon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemImage_C">();
	}
	static class UWBP_ItemImage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemImage_C>();
	}
};
static_assert(alignof(UWBP_ItemImage_C) == 0x000008, "Wrong alignment on UWBP_ItemImage_C");
static_assert(sizeof(UWBP_ItemImage_C) == 0x000318, "Wrong size on UWBP_ItemImage_C");
static_assert(offsetof(UWBP_ItemImage_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_ItemImage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ItemImage_C, Item_Image) == 0x0002E8, "Member 'UWBP_ItemImage_C::Item_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ItemImage_C, bEnablePreConstructResize) == 0x0002F0, "Member 'UWBP_ItemImage_C::bEnablePreConstructResize' has a wrong offset!");
static_assert(offsetof(UWBP_ItemImage_C, DefaultSize) == 0x0002F8, "Member 'UWBP_ItemImage_C::DefaultSize' has a wrong offset!");
static_assert(offsetof(UWBP_ItemImage_C, bEnablePreConstructIcon) == 0x000308, "Member 'UWBP_ItemImage_C::bEnablePreConstructIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ItemImage_C, DefaultIcon) == 0x000310, "Member 'UWBP_ItemImage_C::DefaultIcon' has a wrong offset!");

}

