#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CLA_Grapple_L

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_CLA_Grapple_L.ABP_CLA_Grapple_L_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_CLA_Grapple_L_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_CLA_Grapple_L_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_CLA_Grapple_L_C_AnimGraph");
static_assert(sizeof(ABP_CLA_Grapple_L_C_AnimGraph) == 0x000010, "Wrong size on ABP_CLA_Grapple_L_C_AnimGraph");
static_assert(offsetof(ABP_CLA_Grapple_L_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_CLA_Grapple_L_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_CLA_Grapple_L.ABP_CLA_Grapple_L_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_CLA_Grapple_L_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CLA_Grapple_L_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_CLA_Grapple_L_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_CLA_Grapple_L_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_CLA_Grapple_L_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_CLA_Grapple_L_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_CLA_Grapple_L_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_CLA_Grapple_L.ABP_CLA_Grapple_L_C.ExecuteUbergraph_ABP_CLA_Grapple_L
// 0x0040 (0x0040 - 0x0000)
struct ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691D[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_StructMemberSet___FloatProperty_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L) == 0x000008, "Wrong alignment on ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L");
static_assert(sizeof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L) == 0x000040, "Wrong size on ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, EntryPoint) == 0x000000, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000006, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000007, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000010, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000020, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000021, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000022, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_BooleanOR_ReturnValue_1) == 0x000023, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000024, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, K2Node_Event_DeltaTimeX) == 0x000028, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00002C, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00002F, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, CallFunc_BooleanAND_ReturnValue_1) == 0x000030, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, K2Node_StructMemberSet___FloatProperty_ImplicitCast) == 0x000034, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::K2Node_StructMemberSet___FloatProperty_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x000038, "Member 'ABP_CLA_Grapple_L_C_ExecuteUbergraph_ABP_CLA_Grapple_L::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");

// Function ABP_CLA_Grapple_L.ABP_CLA_Grapple_L_C.GetCharacterData
// 0x0020 (0x0020 - 0x0000)
struct ABP_CLA_Grapple_L_C_GetCharacterData final
{
public:
	class AGzPlayerCharacter*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CLA_Grapple_L_C_GetCharacterData) == 0x000008, "Wrong alignment on ABP_CLA_Grapple_L_C_GetCharacterData");
static_assert(sizeof(ABP_CLA_Grapple_L_C_GetCharacterData) == 0x000020, "Wrong size on ABP_CLA_Grapple_L_C_GetCharacterData");
static_assert(offsetof(ABP_CLA_Grapple_L_C_GetCharacterData, ReturnValue) == 0x000000, "Member 'ABP_CLA_Grapple_L_C_GetCharacterData::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_GetCharacterData, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_CLA_Grapple_L_C_GetCharacterData::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_GetCharacterData, K2Node_DynamicCast_AsGz_Player_Character) == 0x000010, "Member 'ABP_CLA_Grapple_L_C_GetCharacterData::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_GetCharacterData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_CLA_Grapple_L_C_GetCharacterData::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_CLA_Grapple_L.ABP_CLA_Grapple_L_C.GetMainThreadSafeAnimation
// 0x0018 (0x0018 - 0x0000)
struct ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation final
{
public:
	class UABP_Human_C*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UABP_Human_C*                           K2Node_DynamicCast_AsABP_Human;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation) == 0x000008, "Wrong alignment on ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation");
static_assert(sizeof(ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation) == 0x000018, "Wrong size on ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation");
static_assert(offsetof(ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation, ReturnValue) == 0x000000, "Member 'ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation, K2Node_DynamicCast_AsABP_Human) == 0x000008, "Member 'ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation::K2Node_DynamicCast_AsABP_Human' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ABP_CLA_Grapple_L_C_GetMainThreadSafeAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_CLA_Grapple_L.ABP_CLA_Grapple_L_C.SetGrappleHookVisible
// 0x0028 (0x0028 - 0x0000)
struct ABP_CLA_Grapple_L_C_SetGrappleHookVisible final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6920[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible) == 0x000008, "Wrong alignment on ABP_CLA_Grapple_L_C_SetGrappleHookVisible");
static_assert(sizeof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible) == 0x000028, "Wrong size on ABP_CLA_Grapple_L_C_SetGrappleHookVisible");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible, IsVisible) == 0x000000, "Member 'ABP_CLA_Grapple_L_C_SetGrappleHookVisible::IsVisible' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ABP_CLA_Grapple_L_C_SetGrappleHookVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ABP_CLA_Grapple_L_C_SetGrappleHookVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ABP_CLA_Grapple_L_C_SetGrappleHookVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible, CallFunc_GetOwningComponent_ReturnValue) == 0x000010, "Member 'ABP_CLA_Grapple_L_C_SetGrappleHookVisible::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible, CallFunc_Array_Get_Item) == 0x000018, "Member 'ABP_CLA_Grapple_L_C_SetGrappleHookVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'ABP_CLA_Grapple_L_C_SetGrappleHookVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SetGrappleHookVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'ABP_CLA_Grapple_L_C_SetGrappleHookVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ABP_CLA_Grapple_L.ABP_CLA_Grapple_L_C.SwapHandWithGrappleHook
// 0x0030 (0x0030 - 0x0000)
struct ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook final
{
public:
	bool                                          Reversed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6921[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6922[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6923[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook) == 0x000008, "Wrong alignment on ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook");
static_assert(sizeof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook) == 0x000030, "Wrong size on ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook, Reversed) == 0x000000, "Member 'ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook::Reversed' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook, CallFunc_GetOwningComponent_ReturnValue) == 0x000018, "Member 'ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook, CallFunc_Array_Get_Item) == 0x000020, "Member 'ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'ABP_CLA_Grapple_L_C_SwapHandWithGrappleHook::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ABP_CLA_Grapple_L.ABP_CLA_Grapple_L_C.UnHideMaterialSlots
// 0x0058 (0x0058 - 0x0000)
struct ABP_CLA_Grapple_L_C_UnHideMaterialSlots final
{
public:
	TArray<int32>                                 LODs;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Materials;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6924[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6925[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots) == 0x000008, "Wrong alignment on ABP_CLA_Grapple_L_C_UnHideMaterialSlots");
static_assert(sizeof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots) == 0x000058, "Wrong size on ABP_CLA_Grapple_L_C_UnHideMaterialSlots");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, LODs) == 0x000000, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::LODs' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, Materials) == 0x000010, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::Materials' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, Temp_int_Array_Index_Variable) == 0x000020, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, CallFunc_Array_Get_Item) == 0x000028, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, CallFunc_GetOwningComponent_ReturnValue) == 0x000048, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CLA_Grapple_L_C_UnHideMaterialSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'ABP_CLA_Grapple_L_C_UnHideMaterialSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

