#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Netrunner_Terminal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Netrunner_Terminal.ABP_Netrunner_Terminal_C
// 0x0340 (0x06B0 - 0x0370)
class UABP_Netrunner_Terminal_C final : public UAnimInstance
{
public:
	uint8                                         Pad_699B[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x03D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x03F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0420(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0448(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0490(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x04B0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x04F0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0510(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0558(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0578(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05B8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x05D8(0x00C8)()
	bool                                          IsActive;                                          // 0x06A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalHasBeenActive;                                // 0x06A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanPlayAnimation;                                  // 0x06A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Netrunner_Terminal_AnimGraphNode_TransitionResult_217ABE7245973ABD0D07DD93DEBD3CC2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Netrunner_Terminal_AnimGraphNode_TransitionResult_E3B1AD6E413DFF168C7920892BF09323();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Netrunner_Terminal_AnimGraphNode_TransitionResult_F2F0F4734E81AD3DE49D46ABB04E834F();
	void ExecuteUbergraph_ABP_Netrunner_Terminal(int32 EntryPoint);
	void OnStateEntry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void OnStateExit(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Netrunner_Terminal_C">();
	}
	static class UABP_Netrunner_Terminal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Netrunner_Terminal_C>();
	}
};
static_assert(alignof(UABP_Netrunner_Terminal_C) == 0x000010, "Wrong alignment on UABP_Netrunner_Terminal_C");
static_assert(sizeof(UABP_Netrunner_Terminal_C) == 0x0006B0, "Wrong size on UABP_Netrunner_Terminal_C");
static_assert(offsetof(UABP_Netrunner_Terminal_C, UberGraphFrame) == 0x000370, "Member 'UABP_Netrunner_Terminal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_Netrunner_Terminal_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_Netrunner_Terminal_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_TransitionResult_3) == 0x0003A8, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_TransitionResult_2) == 0x0003D0, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_TransitionResult_1) == 0x0003F8, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_TransitionResult) == 0x000420, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_SequencePlayer_1) == 0x000448, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_StateResult_3) == 0x000490, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_SequenceEvaluator_1) == 0x0004B0, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_StateResult_2) == 0x0004F0, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_SequencePlayer) == 0x000510, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_StateResult_1) == 0x000558, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_SequenceEvaluator) == 0x000578, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_StateResult) == 0x0005B8, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, AnimGraphNode_StateMachine) == 0x0005D8, "Member 'UABP_Netrunner_Terminal_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, IsActive) == 0x0006A0, "Member 'UABP_Netrunner_Terminal_C::IsActive' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, LocalHasBeenActive) == 0x0006A1, "Member 'UABP_Netrunner_Terminal_C::LocalHasBeenActive' has a wrong offset!");
static_assert(offsetof(UABP_Netrunner_Terminal_C, CanPlayAnimation) == 0x0006A2, "Member 'UABP_Netrunner_Terminal_C::CanPlayAnimation' has a wrong offset!");

}

