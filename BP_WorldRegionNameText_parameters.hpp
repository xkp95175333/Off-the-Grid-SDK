#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WorldRegionNameText

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_WorldRegionNameText.BP_WorldRegionNameText_C.ConvertRegionNameToParam
// 0x0030 (0x0030 - 0x0000)
struct BP_WorldRegionNameText_C_ConvertRegionNameToParam final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0008(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WorldRegionNameText_C_ConvertRegionNameToParam) == 0x000008, "Wrong alignment on BP_WorldRegionNameText_C_ConvertRegionNameToParam");
static_assert(sizeof(BP_WorldRegionNameText_C_ConvertRegionNameToParam) == 0x000030, "Wrong size on BP_WorldRegionNameText_C_ConvertRegionNameToParam");
static_assert(offsetof(BP_WorldRegionNameText_C_ConvertRegionNameToParam, ParamName) == 0x000000, "Member 'BP_WorldRegionNameText_C_ConvertRegionNameToParam::ParamName' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ConvertRegionNameToParam, CallFunc_TextToUpper_ReturnValue) == 0x000008, "Member 'BP_WorldRegionNameText_C_ConvertRegionNameToParam::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ConvertRegionNameToParam, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'BP_WorldRegionNameText_C_ConvertRegionNameToParam::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ConvertRegionNameToParam, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'BP_WorldRegionNameText_C_ConvertRegionNameToParam::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_WorldRegionNameText.BP_WorldRegionNameText_C.ExecuteUbergraph_BP_WorldRegionNameText
// 0x01D0 (0x01D0 - 0x0000)
struct BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A5E[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetActiveStageTags_ReturnValue;           // 0x0018(0x0020)(ConstParm)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A5F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A60[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHideOnEnd_1;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A61[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A62[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindRelativeLookAtRotation_ReturnValue;   // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A63[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate_3;            // 0x0150(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHideOnEnd;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A64[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiStageGameState*                 K2Node_DynamicCast_AsGz_Multi_Stage_Game_State;    // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A65[0x5];                                     // 0x017B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A66[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_WorldRegionName_C*                 K2Node_DynamicCast_AsWBP_World_Region_Name;        // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A67[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ConvertRegionNameToParam_ParamName;       // 0x019C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A68[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText) == 0x000010, "Wrong alignment on BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText");
static_assert(sizeof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText) == 0x0001D0, "Wrong size on BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, EntryPoint) == 0x000000, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_IsDedicatedServer_ReturnValue) == 0x000014, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_GetActiveStageTags_ReturnValue) == 0x000018, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_GetActiveStageTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_HasTag_ReturnValue) == 0x000038, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_CustomEvent_Pawn) == 0x0000E0, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_CustomEvent_bHideOnEnd_1) == 0x0000E8, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_CustomEvent_bHideOnEnd_1' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000F0, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_Vector_Distance2D_ReturnValue) == 0x000108, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000110, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_FindRelativeLookAtRotation_ReturnValue) == 0x000118, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_FindRelativeLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_BreakRotator_Roll) == 0x000130, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_BreakRotator_Pitch) == 0x000134, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_BreakRotator_Yaw) == 0x000138, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_Abs_ReturnValue) == 0x000140, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000148, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_CreateDelegate_OutputDelegate_3) == 0x000150, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_CustomEvent_bHideOnEnd) == 0x000160, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_CustomEvent_bHideOnEnd' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_GetGameState_ReturnValue) == 0x000168, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_DynamicCast_AsGz_Multi_Stage_Game_State) == 0x000170, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_DynamicCast_AsGz_Multi_Stage_Game_State' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000179, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00017A, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_GetWidget_ReturnValue) == 0x000180, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_BooleanOR_ReturnValue) == 0x000188, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_DynamicCast_AsWBP_World_Region_Name) == 0x000190, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_DynamicCast_AsWBP_World_Region_Name' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, K2Node_DynamicCast_bSuccess_1) == 0x000198, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_ConvertRegionNameToParam_ParamName) == 0x00019C, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_ConvertRegionNameToParam_ParamName' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_SafeDivide_ReturnValue) == 0x0001A8, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_Abs_A_ImplicitCast) == 0x0001B0, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_SafeDivide_A_ImplicitCast) == 0x0001B8, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText, CallFunc_Delay_Duration_ImplicitCast) == 0x0001C0, "Member 'BP_WorldRegionNameText_C_ExecuteUbergraph_BP_WorldRegionNameText::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_WorldRegionNameText.BP_WorldRegionNameText_C.FadeIn
// 0x0001 (0x0001 - 0x0000)
struct BP_WorldRegionNameText_C_FadeIn final
{
public:
	bool                                          Param_bHideOnEnd;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WorldRegionNameText_C_FadeIn) == 0x000001, "Wrong alignment on BP_WorldRegionNameText_C_FadeIn");
static_assert(sizeof(BP_WorldRegionNameText_C_FadeIn) == 0x000001, "Wrong size on BP_WorldRegionNameText_C_FadeIn");
static_assert(offsetof(BP_WorldRegionNameText_C_FadeIn, Param_bHideOnEnd) == 0x000000, "Member 'BP_WorldRegionNameText_C_FadeIn::Param_bHideOnEnd' has a wrong offset!");

// Function BP_WorldRegionNameText.BP_WorldRegionNameText_C.FadeOut
// 0x0001 (0x0001 - 0x0000)
struct BP_WorldRegionNameText_C_FadeOut final
{
public:
	bool                                          Param_bHideOnEnd;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WorldRegionNameText_C_FadeOut) == 0x000001, "Wrong alignment on BP_WorldRegionNameText_C_FadeOut");
static_assert(sizeof(BP_WorldRegionNameText_C_FadeOut) == 0x000001, "Wrong size on BP_WorldRegionNameText_C_FadeOut");
static_assert(offsetof(BP_WorldRegionNameText_C_FadeOut, Param_bHideOnEnd) == 0x000000, "Member 'BP_WorldRegionNameText_C_FadeOut::Param_bHideOnEnd' has a wrong offset!");

// Function BP_WorldRegionNameText.BP_WorldRegionNameText_C.OnPawnChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_WorldRegionNameText_C_OnPawnChanged final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WorldRegionNameText_C_OnPawnChanged) == 0x000008, "Wrong alignment on BP_WorldRegionNameText_C_OnPawnChanged");
static_assert(sizeof(BP_WorldRegionNameText_C_OnPawnChanged) == 0x000008, "Wrong size on BP_WorldRegionNameText_C_OnPawnChanged");
static_assert(offsetof(BP_WorldRegionNameText_C_OnPawnChanged, Pawn) == 0x000000, "Member 'BP_WorldRegionNameText_C_OnPawnChanged::Pawn' has a wrong offset!");

// Function BP_WorldRegionNameText.BP_WorldRegionNameText_C.SetText
// 0x0058 (0x0058 - 0x0000)
struct BP_WorldRegionNameText_C_SetText final
{
public:
	class UGzWorldZonesSubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A69[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ConvertRegionNameToParam_ParamName;       // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A6A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetZoneDisplayName_ReturnValue;           // 0x0030(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A6B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0010)()
};
static_assert(alignof(BP_WorldRegionNameText_C_SetText) == 0x000008, "Wrong alignment on BP_WorldRegionNameText_C_SetText");
static_assert(sizeof(BP_WorldRegionNameText_C_SetText) == 0x000058, "Wrong size on BP_WorldRegionNameText_C_SetText");
static_assert(offsetof(BP_WorldRegionNameText_C_SetText, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'BP_WorldRegionNameText_C_SetText::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetText, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_WorldRegionNameText_C_SetText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetText, CallFunc_TextIsEmpty_ReturnValue) == 0x000009, "Member 'BP_WorldRegionNameText_C_SetText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetText, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_WorldRegionNameText_C_SetText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetText, CallFunc_ConvertRegionNameToParam_ParamName) == 0x00000C, "Member 'BP_WorldRegionNameText_C_SetText::CallFunc_ConvertRegionNameToParam_ParamName' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetText, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_WorldRegionNameText_C_SetText::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetText, CallFunc_GetZoneDisplayName_ReturnValue) == 0x000030, "Member 'BP_WorldRegionNameText_C_SetText::CallFunc_GetZoneDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetText, Temp_bool_Variable) == 0x000040, "Member 'BP_WorldRegionNameText_C_SetText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetText, K2Node_Select_Default) == 0x000048, "Member 'BP_WorldRegionNameText_C_SetText::K2Node_Select_Default' has a wrong offset!");

// Function BP_WorldRegionNameText.BP_WorldRegionNameText_C.SetUp
// 0x0108 (0x0108 - 0x0000)
struct BP_WorldRegionNameText_C_SetUp final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A6C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A6D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A6E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A6F[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_XR_DeploymentPlane_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0050(0x0010)(ReferenceParm)
	class ABP_XR_DeploymentPlane_C*               CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A70[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A71[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A72[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WorldRegionNameText_C_SetUp) == 0x000008, "Wrong alignment on BP_WorldRegionNameText_C_SetUp");
static_assert(sizeof(BP_WorldRegionNameText_C_SetUp) == 0x000108, "Wrong size on BP_WorldRegionNameText_C_SetUp");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_WorldRegionNameText_C_SetUp::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_WorldRegionNameText_C_SetUp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_WorldRegionNameText_C_SetUp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_WorldRegionNameText_C_SetUp::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000038, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_WorldRegionNameText_C_SetUp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_GetAllActorsOfClass_OutActors) == 0x000050, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_Less_IntInt_ReturnValue) == 0x00006D, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_BooleanAND_ReturnValue) == 0x00006E, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, K2Node_CreateDelegate_OutputDelegate_2) == 0x00008C, "Member 'BP_WorldRegionNameText_C_SetUp::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000B8, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000C0, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_BreakRotator_Roll) == 0x0000D8, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_BreakRotator_Pitch) == 0x0000DC, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_BreakRotator_Yaw) == 0x0000E0, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_MakeRotator_ReturnValue) == 0x0000E8, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldRegionNameText_C_SetUp, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000100, "Member 'BP_WorldRegionNameText_C_SetUp::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

}

