#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Defiler_VisionArea

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "G01_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Defiler_VisionArea.BP_Defiler_VisionArea_C
// 0x0130 (0x03D0 - 0x02A0)
class ABP_Defiler_VisionArea_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzMarkerComponent*                     GzMarker;                                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class AActor*, class AActor*>            Hacked;                                            // 0x02B8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        ScanPeriod;                                        // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScanOnCharacterTime;                               // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VisionTimeStart;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScanSpeed;                                         // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMIScan;                                           // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ScanSphereRadius;                                  // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Defiler_VisionComponent_C*          VisionComponent;                                   // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        FaidScanCircleDelta;                               // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VisionLocationStart;                               // 0x0348(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            ScanFaidCurve;                                     // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  OwnerCharacter;                                    // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnScanStarted;                                     // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UAkAudioEvent*                          ScanSound;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ColiderRadius;                                     // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedDisable;                                      // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63A2[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           ActorsForScan;                                     // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABP_Defiler_PPFaid_C*>           ResultActorsForScanBlendActors;                    // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         ResultActorsForScanActors;                         // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bVisionAreaEnabled;                                // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Add_PPFaind_Actor(class AActor* ParentActor, class ABP_Defiler_PPFaid_C** FaidActor);
	void BndEvt__BP_Defiler_VisionArea_Capsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Defiler_VisionArea_Capsule_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CalculateDistanceToScaned(const class AActor* In_OtherActor, bool* OutInRange, float* OutDistanceToScaned, double* OutAlpha);
	void DisableVIsion();
	void EnableVision(double InVisionTimeStart, const struct FVector& InVisionLocationStart, double InRadius, double InScanPeriod);
	void ExecuteUbergraph_BP_Defiler_VisionArea(int32 EntryPoint);
	void GetCollisionComponent(class UPrimitiveComponent** Comp);
	void IsScanActive(bool* bActive);
	void OnScanStarted__DelegateSignature();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void SetScanRadius(double InRadius);
	void Update_Scaned_Actor(class AActor* ScanedActor, class AActor* InBlendActor);
	void UpdateActorsForScan();
	void UpdateScanedActors();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Defiler_VisionArea_C">();
	}
	static class ABP_Defiler_VisionArea_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Defiler_VisionArea_C>();
	}
};
static_assert(alignof(ABP_Defiler_VisionArea_C) == 0x000008, "Wrong alignment on ABP_Defiler_VisionArea_C");
static_assert(sizeof(ABP_Defiler_VisionArea_C) == 0x0003D0, "Wrong size on ABP_Defiler_VisionArea_C");
static_assert(offsetof(ABP_Defiler_VisionArea_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_Defiler_VisionArea_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, Capsule) == 0x0002A8, "Member 'ABP_Defiler_VisionArea_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, GzMarker) == 0x0002B0, "Member 'ABP_Defiler_VisionArea_C::GzMarker' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, Hacked) == 0x0002B8, "Member 'ABP_Defiler_VisionArea_C::Hacked' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ScanPeriod) == 0x000308, "Member 'ABP_Defiler_VisionArea_C::ScanPeriod' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ScanOnCharacterTime) == 0x000310, "Member 'ABP_Defiler_VisionArea_C::ScanOnCharacterTime' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, VisionTimeStart) == 0x000318, "Member 'ABP_Defiler_VisionArea_C::VisionTimeStart' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ScanSpeed) == 0x000320, "Member 'ABP_Defiler_VisionArea_C::ScanSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, DMIScan) == 0x000328, "Member 'ABP_Defiler_VisionArea_C::DMIScan' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ScanSphereRadius) == 0x000330, "Member 'ABP_Defiler_VisionArea_C::ScanSphereRadius' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, VisionComponent) == 0x000338, "Member 'ABP_Defiler_VisionArea_C::VisionComponent' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, FaidScanCircleDelta) == 0x000340, "Member 'ABP_Defiler_VisionArea_C::FaidScanCircleDelta' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, VisionLocationStart) == 0x000348, "Member 'ABP_Defiler_VisionArea_C::VisionLocationStart' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ScanFaidCurve) == 0x000360, "Member 'ABP_Defiler_VisionArea_C::ScanFaidCurve' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, OwnerCharacter) == 0x000368, "Member 'ABP_Defiler_VisionArea_C::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, OnScanStarted) == 0x000370, "Member 'ABP_Defiler_VisionArea_C::OnScanStarted' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ScanSound) == 0x000380, "Member 'ABP_Defiler_VisionArea_C::ScanSound' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ColiderRadius) == 0x000388, "Member 'ABP_Defiler_VisionArea_C::ColiderRadius' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, bNeedDisable) == 0x000390, "Member 'ABP_Defiler_VisionArea_C::bNeedDisable' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ActorsForScan) == 0x000398, "Member 'ABP_Defiler_VisionArea_C::ActorsForScan' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ResultActorsForScanBlendActors) == 0x0003A8, "Member 'ABP_Defiler_VisionArea_C::ResultActorsForScanBlendActors' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, ResultActorsForScanActors) == 0x0003B8, "Member 'ABP_Defiler_VisionArea_C::ResultActorsForScanActors' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_VisionArea_C, bVisionAreaEnabled) == 0x0003C8, "Member 'ABP_Defiler_VisionArea_C::bVisionAreaEnabled' has a wrong offset!");

}

