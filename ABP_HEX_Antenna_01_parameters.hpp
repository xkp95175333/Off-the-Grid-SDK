#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_HEX_Antenna_01

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_HEX_Antenna_01.ABP_HEX_Antenna_01_C.OnStateEntry
// 0x0020 (0x0020 - 0x0000)
struct ABP_HEX_Antenna_01_C_OnStateEntry final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_HEX_Antenna_01_C_OnStateEntry) == 0x000008, "Wrong alignment on ABP_HEX_Antenna_01_C_OnStateEntry");
static_assert(sizeof(ABP_HEX_Antenna_01_C_OnStateEntry) == 0x000020, "Wrong size on ABP_HEX_Antenna_01_C_OnStateEntry");
static_assert(offsetof(ABP_HEX_Antenna_01_C_OnStateEntry, Context) == 0x000000, "Member 'ABP_HEX_Antenna_01_C_OnStateEntry::Context' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_OnStateEntry, Node) == 0x000010, "Member 'ABP_HEX_Antenna_01_C_OnStateEntry::Node' has a wrong offset!");

// Function ABP_HEX_Antenna_01.ABP_HEX_Antenna_01_C.ExecuteUbergraph_ABP_HEX_Antenna_01
// 0x00D8 (0x00D8 - 0x0000)
struct ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5990[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAntennaActive_bActive;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5991[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PF_OTP_Antenna_C*                   K2Node_DynamicCast_AsBP_PF_OTP_Antenna;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5992[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5993[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5994[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5995[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_0_ImplicitCast; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5996[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Play_Rate_ImplicitCast;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5997[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Play_Rate_ImplicitCast_1;       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Play_Rate_ImplicitCast_2;       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1;  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_2;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01) == 0x000008, "Wrong alignment on ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01");
static_assert(sizeof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01) == 0x0000D8, "Wrong size on ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, EntryPoint) == 0x000000, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000004, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_IsAntennaActive_bActive) == 0x000018, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_IsAntennaActive_bActive' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, K2Node_Event_DeltaTimeX) == 0x00001C, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_GetOwningActor_ReturnValue) == 0x000020, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, K2Node_DynamicCast_AsBP_PF_OTP_Antenna) == 0x000028, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::K2Node_DynamicCast_AsBP_PF_OTP_Antenna' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000041, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_GetCurveValue_ReturnValue) == 0x00005C, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000060, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000061, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000062, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000063, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x000064, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_BooleanOR_ReturnValue) == 0x000065, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_BooleanOR_ReturnValue_1) == 0x000066, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_BooleanOR_ReturnValue_2) == 0x000067, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000078, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, K2Node_StructMemberSet___FloatProperty_0_ImplicitCast) == 0x000080, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::K2Node_StructMemberSet___FloatProperty_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000088, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, K2Node_VariableSet_Play_Rate_ImplicitCast) == 0x000090, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::K2Node_VariableSet_Play_Rate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x0000A0, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, K2Node_VariableSet_Play_Rate_ImplicitCast_1) == 0x0000B0, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::K2Node_VariableSet_Play_Rate_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, K2Node_VariableSet_Play_Rate_ImplicitCast_2) == 0x0000B4, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::K2Node_VariableSet_Play_Rate_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x0000B8, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1) == 0x0000C0, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_2) == 0x0000C8, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'ABP_HEX_Antenna_01_C_ExecuteUbergraph_ABP_HEX_Antenna_01::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_HEX_Antenna_01.ABP_HEX_Antenna_01_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_HEX_Antenna_01_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_HEX_Antenna_01_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_HEX_Antenna_01_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_HEX_Antenna_01_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_HEX_Antenna_01_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_HEX_Antenna_01_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_HEX_Antenna_01_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_HEX_Antenna_01.ABP_HEX_Antenna_01_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_HEX_Antenna_01_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_HEX_Antenna_01_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_HEX_Antenna_01_C_AnimGraph");
static_assert(sizeof(ABP_HEX_Antenna_01_C_AnimGraph) == 0x000010, "Wrong size on ABP_HEX_Antenna_01_C_AnimGraph");
static_assert(offsetof(ABP_HEX_Antenna_01_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_HEX_Antenna_01_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

