#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Vehicle_Health_0

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.ExecuteUbergraph_WBP_Vehicle_Health
// 0x01D0 (0x01D0 - 0x0000)
struct WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D36[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0010(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x0048(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_1;                            // 0x00A0(0x0038)(HasGetValueTypeHash)
	TDelegate<void(class AGzCharacter* Character, EGzVehicleSeatType NewSeat, EGzVehicleSeatType OldSeat)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_CustomEvent_Character;                      // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            K2Node_CustomEvent_NewSeat;                        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            K2Node_CustomEvent_OldSeat;                        // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D37[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute_1;                    // 0x00F8(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_1;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue_1;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D38[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D39[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_InputObject;                    // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue;     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzVehicle*                             K2Node_DynamicCast_AsGz_Vehicle;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D3A[0x5];                                     // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue_1;   // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D3B[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D3C[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1; // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D3D[0x1];                                     // 0x0193(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D3E[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_OnHealthChanged_Current_ImplicitCast;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnHealthChanged_Current_ImplicitCast_1;   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnHealthChanged_Max_ImplicitCast;         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnHealthChanged_Max_ImplicitCast_1;       // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health");
static_assert(sizeof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health) == 0x0001D0, "Wrong size on WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, EntryPoint) == 0x000000, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, Temp_real_Variable) == 0x000004, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, Temp_real_Variable_1) == 0x000008, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, Temp_struct_Variable) == 0x000010, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_Attribute) == 0x000048, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_NewValue) == 0x000080, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_OldValue) == 0x000084, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, Temp_real_Variable_2) == 0x000098, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, Temp_real_Variable_3) == 0x00009C, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, Temp_struct_Variable_1) == 0x0000A0, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D8, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_Character) == 0x0000E8, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_NewSeat) == 0x0000F0, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_NewSeat' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_OldSeat) == 0x0000F1, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_OldSeat' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_Attribute_1) == 0x0000F8, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_Attribute_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_NewValue_1) == 0x000130, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_OldValue_1) == 0x000134, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000138, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000140, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_InputObject) == 0x000150, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_InputObject' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_ListenForAttributeChange_ReturnValue) == 0x000158, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_ListenForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_DynamicCast_AsGz_Vehicle) == 0x000160, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_DynamicCast_AsGz_Vehicle' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_IsValid_ReturnValue_1) == 0x000169, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_IsValid_ReturnValue_2) == 0x00016A, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_ListenForAttributeChange_ReturnValue_1) == 0x000170, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_ListenForAttributeChange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000178, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x00017C, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_IsValid_ReturnValue_3) == 0x000180, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_DynamicCast_AsGz_Character) == 0x000188, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_IsValid_ReturnValue_4) == 0x000191, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1) == 0x000192, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1) == 0x000194, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CreateDelegate_OutputDelegate_2) == 0x000198, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_Event_IsDesignTime) == 0x0001A8, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_OnHealthChanged_Current_ImplicitCast) == 0x0001B0, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_OnHealthChanged_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_OnHealthChanged_Current_ImplicitCast_1) == 0x0001B8, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_OnHealthChanged_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_OnHealthChanged_Max_ImplicitCast) == 0x0001C0, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_OnHealthChanged_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_OnHealthChanged_Max_ImplicitCast_1) == 0x0001C8, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_OnHealthChanged_Max_ImplicitCast_1' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.InitializeVehicleAttributeListen
// 0x0008 (0x0008 - 0x0000)
struct WBP_Vehicle_Health_C_InitializeVehicleAttributeListen final
{
public:
	class UObject*                                InputObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_InitializeVehicleAttributeListen) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_InitializeVehicleAttributeListen");
static_assert(sizeof(WBP_Vehicle_Health_C_InitializeVehicleAttributeListen) == 0x000008, "Wrong size on WBP_Vehicle_Health_C_InitializeVehicleAttributeListen");
static_assert(offsetof(WBP_Vehicle_Health_C_InitializeVehicleAttributeListen, InputObject) == 0x000000, "Member 'WBP_Vehicle_Health_C_InitializeVehicleAttributeListen::InputObject' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387
// 0x0040 (0x0040 - 0x0000)
struct WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387");
static_assert(sizeof(WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387) == 0x000040, "Wrong size on WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387");
static_assert(offsetof(WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387, Attribute) == 0x000000, "Member 'WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387, NewValue) == 0x000038, "Member 'WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387, OldValue) == 0x00003C, "Member 'WBP_Vehicle_Health_C_OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387::OldValue' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C
// 0x0040 (0x0040 - 0x0000)
struct WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C");
static_assert(sizeof(WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C) == 0x000040, "Wrong size on WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C");
static_assert(offsetof(WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C, Attribute) == 0x000000, "Member 'WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C, NewValue) == 0x000038, "Member 'WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C, OldValue) == 0x00003C, "Member 'WBP_Vehicle_Health_C_OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C::OldValue' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.OnHealthChanged
// 0x03C0 (0x03C0 - 0x0000)
struct WBP_Vehicle_Health_C_OnHealthChanged final
{
public:
	double                                        Current;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D3F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D40[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0014)()
	uint8                                         Pad_6D41[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x00D0)()
	struct FProgressBarStyle                      K2Node_MakeStruct_ProgressBarStyle;                // 0x0120(0x0290)()
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_OnHealthChanged) == 0x000010, "Wrong alignment on WBP_Vehicle_Health_C_OnHealthChanged");
static_assert(sizeof(WBP_Vehicle_Health_C_OnHealthChanged) == 0x0003C0, "Wrong size on WBP_Vehicle_Health_C_OnHealthChanged");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, Current) == 0x000000, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::Current' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, Max) == 0x000008, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::Max' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, Temp_bool_Variable) == 0x000010, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000011, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, Temp_byte_Variable) == 0x000012, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, Temp_byte_Variable_1) == 0x000013, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, K2Node_Select_Default) == 0x000014, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000024, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, CallFunc_SelectColor_ReturnValue) == 0x000028, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, K2Node_MakeStruct_ProgressBarStyle) == 0x000120, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::K2Node_MakeStruct_ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, CallFunc_SafeDivide_ReturnValue_1) == 0x0003B0, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnHealthChanged, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0003B8, "Member 'WBP_Vehicle_Health_C_OnHealthChanged::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.OnSeatChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_Vehicle_Health_C_OnSeatChanged final
{
public:
	class AGzCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            NewSeat;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            OldSeat;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_OnSeatChanged) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_OnSeatChanged");
static_assert(sizeof(WBP_Vehicle_Health_C_OnSeatChanged) == 0x000010, "Wrong size on WBP_Vehicle_Health_C_OnSeatChanged");
static_assert(offsetof(WBP_Vehicle_Health_C_OnSeatChanged, Character) == 0x000000, "Member 'WBP_Vehicle_Health_C_OnSeatChanged::Character' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnSeatChanged, NewSeat) == 0x000008, "Member 'WBP_Vehicle_Health_C_OnSeatChanged::NewSeat' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_OnSeatChanged, OldSeat) == 0x000009, "Member 'WBP_Vehicle_Health_C_OnSeatChanged::OldSeat' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Vehicle_Health_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Vehicle_Health_C_PreConstruct");
static_assert(sizeof(WBP_Vehicle_Health_C_PreConstruct) == 0x000001, "Wrong size on WBP_Vehicle_Health_C_PreConstruct");
static_assert(offsetof(WBP_Vehicle_Health_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Vehicle_Health_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.SetupInitialState
// 0x0020 (0x0020 - 0x0000)
struct WBP_Vehicle_Health_C_SetupInitialState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D42[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D43[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnHealthChanged_Max_ImplicitCast;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnHealthChanged_Current_ImplicitCast;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_SetupInitialState) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_SetupInitialState");
static_assert(sizeof(WBP_Vehicle_Health_C_SetupInitialState) == 0x000020, "Wrong size on WBP_Vehicle_Health_C_SetupInitialState");
static_assert(offsetof(WBP_Vehicle_Health_C_SetupInitialState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Vehicle_Health_C_SetupInitialState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_SetupInitialState, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_Vehicle_Health_C_SetupInitialState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_SetupInitialState, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000002, "Member 'WBP_Vehicle_Health_C_SetupInitialState::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_SetupInitialState, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000004, "Member 'WBP_Vehicle_Health_C_SetupInitialState::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_SetupInitialState, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1) == 0x000008, "Member 'WBP_Vehicle_Health_C_SetupInitialState::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_SetupInitialState, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1) == 0x00000C, "Member 'WBP_Vehicle_Health_C_SetupInitialState::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_SetupInitialState, CallFunc_OnHealthChanged_Max_ImplicitCast) == 0x000010, "Member 'WBP_Vehicle_Health_C_SetupInitialState::CallFunc_OnHealthChanged_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_SetupInitialState, CallFunc_OnHealthChanged_Current_ImplicitCast) == 0x000018, "Member 'WBP_Vehicle_Health_C_SetupInitialState::CallFunc_OnHealthChanged_Current_ImplicitCast' has a wrong offset!");

}

