#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AVCodecsCoreRHI

#include "Basic.hpp"

#include "AVCodecsCoreRHI_classes.hpp"
#include "AVCodecsCoreRHI_parameters.hpp"


namespace SDK
{

// Function AVCodecsCoreRHI.SimpleAudioEncoder.Close
// (Final, Native, Public, BlueprintCallable)

void USimpleAudioEncoder::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AVCodecsCoreRHI.SimpleAudioEncoder.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESimpleAudioCodec                       Codec                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSimpleAudioEncoderConfig        Config                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAsynchronous                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleAudioEncoder::Open(ESimpleAudioCodec Codec, const struct FSimpleAudioEncoderConfig& Config, bool bAsynchronous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "Open");

	Params::SimpleAudioEncoder_Open Parms{};

	Parms.Codec = Codec;
	Parms.Config = std::move(Config);
	Parms.bAsynchronous = bAsynchronous;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleAudioEncoder.ReceivePacket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSimpleAudioPacket               OutPacket                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleAudioEncoder::ReceivePacket(struct FSimpleAudioPacket* OutPacket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "ReceivePacket");

	Params::SimpleAudioEncoder_ReceivePacket Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPacket != nullptr)
		*OutPacket = std::move(Parms.OutPacket);

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleAudioEncoder.ReceivePackets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSimpleAudioPacket>       OutPackets                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void USimpleAudioEncoder::ReceivePackets(TArray<struct FSimpleAudioPacket>* OutPackets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "ReceivePackets");

	Params::SimpleAudioEncoder_ReceivePackets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPackets != nullptr)
		*OutPackets = std::move(Parms.OutPackets);
}


// Function AVCodecsCoreRHI.SimpleAudioEncoder.SendFrameFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<float>                           Resource                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// double                                  Timestamp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumSamples                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SampleDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleAudioEncoder::SendFrameFloat(const TArray<float>& Resource, double Timestamp, int32 NumSamples, float SampleDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "SendFrameFloat");

	Params::SimpleAudioEncoder_SendFrameFloat Parms{};

	Parms.Resource = std::move(Resource);
	Parms.Timestamp = Timestamp;
	Parms.NumSamples = NumSamples;
	Parms.SampleDuration = SampleDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleAudioEncoder.SetConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSimpleAudioEncoderConfig        NewConfig                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void USimpleAudioEncoder::SetConfig(const struct FSimpleAudioEncoderConfig& NewConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "SetConfig");

	Params::SimpleAudioEncoder_SetConfig Parms{};

	Parms.NewConfig = std::move(NewConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AVCodecsCoreRHI.SimpleAudioEncoder.GetCodec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESimpleAudioCodec                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESimpleAudioCodec USimpleAudioEncoder::GetCodec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "GetCodec");

	Params::SimpleAudioEncoder_GetCodec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleAudioEncoder.GetConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSimpleAudioEncoderConfig        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSimpleAudioEncoderConfig USimpleAudioEncoder::GetConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "GetConfig");

	Params::SimpleAudioEncoder_GetConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleAudioEncoder.IsAsync
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleAudioEncoder::IsAsync() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "IsAsync");

	Params::SimpleAudioEncoder_IsAsync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleAudioEncoder.IsOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleAudioEncoder::IsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleAudioEncoder", "IsOpen");

	Params::SimpleAudioEncoder_IsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoHelper.ShareRenderTarget2D
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USimpleVideoHelper::ShareRenderTarget2D(class UTextureRenderTarget2D* RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SimpleVideoHelper", "ShareRenderTarget2D");

	Params::SimpleVideoHelper_ShareRenderTarget2D Parms{};

	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AVCodecsCoreRHI.SimpleVideoDecoder.Close
// (Final, Native, Public, BlueprintCallable)

void USimpleVideoDecoder::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoDecoder", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AVCodecsCoreRHI.SimpleVideoDecoder.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESimpleVideoCodec                       Codec                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAsynchronous                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoDecoder::Open(ESimpleVideoCodec Codec, bool bAsynchronous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoDecoder", "Open");

	Params::SimpleVideoDecoder_Open Parms{};

	Parms.Codec = Codec;
	Parms.bAsynchronous = bAsynchronous;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoDecoder.ReceiveFrame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           Resource                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoDecoder::ReceiveFrame(class UTextureRenderTarget2D* Resource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoDecoder", "ReceiveFrame");

	Params::SimpleVideoDecoder_ReceiveFrame Parms{};

	Parms.Resource = Resource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoDecoder.SendPacket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSimpleVideoPacket               Packet                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoDecoder::SendPacket(const struct FSimpleVideoPacket& Packet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoDecoder", "SendPacket");

	Params::SimpleVideoDecoder_SendPacket Parms{};

	Parms.Packet = std::move(Packet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoDecoder.GetCodec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESimpleVideoCodec                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESimpleVideoCodec USimpleVideoDecoder::GetCodec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoDecoder", "GetCodec");

	Params::SimpleVideoDecoder_GetCodec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoDecoder.IsAsync
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoDecoder::IsAsync() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoDecoder", "IsAsync");

	Params::SimpleVideoDecoder_IsAsync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoDecoder.IsOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoDecoder::IsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoDecoder", "IsOpen");

	Params::SimpleVideoDecoder_IsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.Close
// (Final, Native, Public, BlueprintCallable)

void USimpleVideoEncoder::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESimpleVideoCodec                       Codec                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSimpleVideoEncoderConfig        Config                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAsynchronous                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoEncoder::Open(ESimpleVideoCodec Codec, const struct FSimpleVideoEncoderConfig& Config, bool bAsynchronous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "Open");

	Params::SimpleVideoEncoder_Open Parms{};

	Parms.Codec = Codec;
	Parms.Config = std::move(Config);
	Parms.bAsynchronous = bAsynchronous;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.ReceivePacket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSimpleVideoPacket               OutPacket                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoEncoder::ReceivePacket(struct FSimpleVideoPacket* OutPacket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "ReceivePacket");

	Params::SimpleVideoEncoder_ReceivePacket Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPacket != nullptr)
		*OutPacket = std::move(Parms.OutPacket);

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.ReceivePackets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSimpleVideoPacket>       OutPackets                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void USimpleVideoEncoder::ReceivePackets(TArray<struct FSimpleVideoPacket>* OutPackets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "ReceivePackets");

	Params::SimpleVideoEncoder_ReceivePackets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPackets != nullptr)
		*OutPackets = std::move(Parms.OutPackets);
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.SendFrameRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           Resource                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  Timestamp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceKeyframe                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoEncoder::SendFrameRenderTarget(class UTextureRenderTarget2D* Resource, double Timestamp, bool bForceKeyframe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "SendFrameRenderTarget");

	Params::SimpleVideoEncoder_SendFrameRenderTarget Parms{};

	Parms.Resource = Resource;
	Parms.Timestamp = Timestamp;
	Parms.bForceKeyframe = bForceKeyframe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.SendFrameTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Resource                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  Timestamp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceKeyframe                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoEncoder::SendFrameTexture(class UTexture2D* Resource, double Timestamp, bool bForceKeyframe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "SendFrameTexture");

	Params::SimpleVideoEncoder_SendFrameTexture Parms{};

	Parms.Resource = Resource;
	Parms.Timestamp = Timestamp;
	Parms.bForceKeyframe = bForceKeyframe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.SetConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSimpleVideoEncoderConfig        NewConfig                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void USimpleVideoEncoder::SetConfig(const struct FSimpleVideoEncoderConfig& NewConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "SetConfig");

	Params::SimpleVideoEncoder_SetConfig Parms{};

	Parms.NewConfig = std::move(NewConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.GetCodec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESimpleVideoCodec                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESimpleVideoCodec USimpleVideoEncoder::GetCodec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "GetCodec");

	Params::SimpleVideoEncoder_GetCodec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.GetConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSimpleVideoEncoderConfig        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSimpleVideoEncoderConfig USimpleVideoEncoder::GetConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "GetConfig");

	Params::SimpleVideoEncoder_GetConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.IsAsync
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoEncoder::IsAsync() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "IsAsync");

	Params::SimpleVideoEncoder_IsAsync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AVCodecsCoreRHI.SimpleVideoEncoder.IsOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USimpleVideoEncoder::IsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleVideoEncoder", "IsOpen");

	Params::SimpleVideoEncoder_IsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

