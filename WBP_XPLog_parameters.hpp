#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_XPLog

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_XPLog.WBP_XPLog_C.ExecuteUbergraph_WBP_XPLog
// 0x0060 (0x0060 - 0x0000)
struct WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BBA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BBB[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBaseLogEntryWidget*                  K2Node_Event_Entry;                                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BBC[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BBD[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BBE[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ViewTarget;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog) == 0x000008, "Wrong alignment on WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog");
static_assert(sizeof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog) == 0x000060, "Wrong size on WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, EntryPoint) == 0x000000, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000004, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, Temp_bool_IsClosed_Variable) == 0x000019, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, K2Node_Event_Entry) == 0x000020, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::K2Node_Event_Entry' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, CallFunc_GetChildrenCount_ReturnValue) == 0x000028, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000039, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000040, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000048, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog, K2Node_Event_ViewTarget) == 0x000058, "Member 'WBP_XPLog_C_ExecuteUbergraph_WBP_XPLog::K2Node_Event_ViewTarget' has a wrong offset!");

// Function WBP_XPLog.WBP_XPLog_C.OnNewEntryShowed
// 0x0008 (0x0008 - 0x0000)
struct WBP_XPLog_C_OnNewEntryShowed final
{
public:
	class UGzBaseLogEntryWidget*                  Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_XPLog_C_OnNewEntryShowed) == 0x000008, "Wrong alignment on WBP_XPLog_C_OnNewEntryShowed");
static_assert(sizeof(WBP_XPLog_C_OnNewEntryShowed) == 0x000008, "Wrong size on WBP_XPLog_C_OnNewEntryShowed");
static_assert(offsetof(WBP_XPLog_C_OnNewEntryShowed, Entry) == 0x000000, "Member 'WBP_XPLog_C_OnNewEntryShowed::Entry' has a wrong offset!");

// Function WBP_XPLog.WBP_XPLog_C.OnViewTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_XPLog_C_OnViewTargetChanged final
{
public:
	class APawn*                                  ViewTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_XPLog_C_OnViewTargetChanged) == 0x000008, "Wrong alignment on WBP_XPLog_C_OnViewTargetChanged");
static_assert(sizeof(WBP_XPLog_C_OnViewTargetChanged) == 0x000008, "Wrong size on WBP_XPLog_C_OnViewTargetChanged");
static_assert(offsetof(WBP_XPLog_C_OnViewTargetChanged, ViewTarget) == 0x000000, "Member 'WBP_XPLog_C_OnViewTargetChanged::ViewTarget' has a wrong offset!");

}

