#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CloakAbilityComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"


namespace SDK::Params
{

// Function BP_CloakAbilityComponent.BP_CloakAbilityComponent_C.ExecuteUbergraph_BP_CloakAbilityComponent
// 0x0048 (0x0048 - 0x0000)
struct BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B8B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bActivve;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B8C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EGzLimbType LimbType)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B8D[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzLimbComponent*                       CallFunc_GetLimbComponent_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B8E[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  CallFunc_GetOwnerCharacter_ReturnValue_1;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   K2Node_CustomEvent_LimbType;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   CallFunc_GetLimbType_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent) == 0x000008, "Wrong alignment on BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent");
static_assert(sizeof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent) == 0x000048, "Wrong size on BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, EntryPoint) == 0x000000, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000008, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, K2Node_CustomEvent_bActivve) == 0x000010, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::K2Node_CustomEvent_bActivve' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_GetLimbComponent_ReturnValue) == 0x000028, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_GetLimbComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, K2Node_Event_EndPlayReason) == 0x000031, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_IsValid_ReturnValue_2) == 0x000033, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_IsValid_ReturnValue_3) == 0x000034, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_GetOwnerCharacter_ReturnValue_1) == 0x000038, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_GetOwnerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, K2Node_CustomEvent_LimbType) == 0x000040, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::K2Node_CustomEvent_LimbType' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_IsValid_ReturnValue_4) == 0x000041, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_GetLimbType_ReturnValue) == 0x000042, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_GetLimbType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000043, "Member 'BP_CloakAbilityComponent_C_ExecuteUbergraph_BP_CloakAbilityComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CloakAbilityComponent.BP_CloakAbilityComponent_C.OnLimbLoaded_Event
// 0x0001 (0x0001 - 0x0000)
struct BP_CloakAbilityComponent_C_OnLimbLoaded_Event final
{
public:
	EGzLimbType                                   Param_LimbType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CloakAbilityComponent_C_OnLimbLoaded_Event) == 0x000001, "Wrong alignment on BP_CloakAbilityComponent_C_OnLimbLoaded_Event");
static_assert(sizeof(BP_CloakAbilityComponent_C_OnLimbLoaded_Event) == 0x000001, "Wrong size on BP_CloakAbilityComponent_C_OnLimbLoaded_Event");
static_assert(offsetof(BP_CloakAbilityComponent_C_OnLimbLoaded_Event, Param_LimbType) == 0x000000, "Member 'BP_CloakAbilityComponent_C_OnLimbLoaded_Event::Param_LimbType' has a wrong offset!");

// Function BP_CloakAbilityComponent.BP_CloakAbilityComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_CloakAbilityComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CloakAbilityComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_CloakAbilityComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_CloakAbilityComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_CloakAbilityComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_CloakAbilityComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_CloakAbilityComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_CloakAbilityComponent.BP_CloakAbilityComponent_C.Update Hand
// 0x0001 (0x0001 - 0x0000)
struct BP_CloakAbilityComponent_C_Update_Hand final
{
public:
	bool                                          bActivve;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CloakAbilityComponent_C_Update_Hand) == 0x000001, "Wrong alignment on BP_CloakAbilityComponent_C_Update_Hand");
static_assert(sizeof(BP_CloakAbilityComponent_C_Update_Hand) == 0x000001, "Wrong size on BP_CloakAbilityComponent_C_Update_Hand");
static_assert(offsetof(BP_CloakAbilityComponent_C_Update_Hand, bActivve) == 0x000000, "Member 'BP_CloakAbilityComponent_C_Update_Hand::bActivve' has a wrong offset!");

}

