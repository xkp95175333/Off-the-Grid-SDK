#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Minigame_Arrows

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.CreateNextKeypresses
// 0x0014 (0x0014 - 0x0000)
struct BP_Minigame_Arrows_C_CreateNextKeypresses final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66BE[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minigame_Arrows_C_CreateNextKeypresses) == 0x000004, "Wrong alignment on BP_Minigame_Arrows_C_CreateNextKeypresses");
static_assert(sizeof(BP_Minigame_Arrows_C_CreateNextKeypresses) == 0x000014, "Wrong size on BP_Minigame_Arrows_C_CreateNextKeypresses");
static_assert(offsetof(BP_Minigame_Arrows_C_CreateNextKeypresses, Temp_int_Variable) == 0x000000, "Member 'BP_Minigame_Arrows_C_CreateNextKeypresses::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_CreateNextKeypresses, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000004, "Member 'BP_Minigame_Arrows_C_CreateNextKeypresses::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_CreateNextKeypresses, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_Minigame_Arrows_C_CreateNextKeypresses::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_CreateNextKeypresses, CallFunc_Conv_IntToByte_ReturnValue) == 0x000009, "Member 'BP_Minigame_Arrows_C_CreateNextKeypresses::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_CreateNextKeypresses, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_Minigame_Arrows_C_CreateNextKeypresses::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_CreateNextKeypresses, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_Minigame_Arrows_C_CreateNextKeypresses::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.ExecuteUbergraph_BP_Minigame_Arrows
// 0x01D8 (0x01D8 - 0x0000)
struct BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66BF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C0[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PressedKey;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C1[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue_1;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C2[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Temp_object_Variable_1;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Temp_object_Variable_2;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C3[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Temp_object_Variable_3;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C4[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Temp_object_Variable_4;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C5[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C6[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C7[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C8[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C9[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_Progress;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66CA[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66CB[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66CC[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66CD[0x1];                                     // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66CE[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66CF[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character_1;        // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66D0[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66D1[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_SetScreenMatState_MID_Ref;                // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_SetScreenMatState_MID_Ref_1;              // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_SetScreenMatState_MID_Ref_2;              // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_SetScreenMatState_MID_Ref_3;              // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_SetScreenMatState_MID_Ref_4;              // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows) == 0x000008, "Wrong alignment on BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows");
static_assert(sizeof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows) == 0x0001D8, "Wrong size on BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, EntryPoint) == 0x000000, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, Temp_object_Variable) == 0x000008, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, Temp_delegate_Variable) == 0x000010, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000028, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_CustomEvent_PressedKey) == 0x00002C, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_CustomEvent_PressedKey' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_GetServerWorldTimeSeconds_ReturnValue_1) == 0x000030, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_GetServerWorldTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, Temp_object_Variable_1) == 0x000048, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, Temp_object_Variable_2) == 0x000050, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Add_ByteByte_ReturnValue) == 0x000058, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00005C, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, Temp_object_Variable_3) == 0x000060, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, Temp_object_Variable_4) == 0x000070, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_HasAuthority_ReturnValue) == 0x000078, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_CreateDelegate_OutputDelegate) == 0x00007C, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_SwitchEnum_CmpSuccess) == 0x00008C, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, Temp_int_Variable) == 0x000090, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_GetGameState_ReturnValue) == 0x000098, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B8, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000C0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000C8, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_CustomEvent_Progress) == 0x0000D0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_CustomEvent_Progress' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D1, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0000D4, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_Select_Default) == 0x0000D8, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_PostEvent_ReturnValue) == 0x0000F0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000F8, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000100, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_IsValid_ReturnValue_3) == 0x000101, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_CreateDelegate_OutputDelegate_3) == 0x000104, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_SwitchEnum_CmpSuccess_1) == 0x000114, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000115, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_IsValid_ReturnValue_4) == 0x000116, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000118, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_IsValid_ReturnValue_5) == 0x000120, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Greater_IntInt_ReturnValue) == 0x000121, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_K2_GetPawn_ReturnValue) == 0x000128, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000130, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_DynamicCast_AsGz_Player_Character) == 0x000138, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_DynamicCast_AsGz_Player_Character_1) == 0x000148, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_DynamicCast_AsGz_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000158, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Greater_ByteByte_ReturnValue) == 0x000168, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Concat_StrStr_ReturnValue) == 0x000170, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_SetScreenMatState_MID_Ref) == 0x000180, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_SetScreenMatState_MID_Ref' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000188, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_SetScreenMatState_MID_Ref_1) == 0x000190, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_SetScreenMatState_MID_Ref_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_SetScreenMatState_MID_Ref_2) == 0x000198, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_SetScreenMatState_MID_Ref_2' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_SetScreenMatState_MID_Ref_3) == 0x0001A0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_SetScreenMatState_MID_Ref_3' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x0001A8, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x0001AC, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_SetScreenMatState_MID_Ref_4) == 0x0001B0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_SetScreenMatState_MID_Ref_4' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0001B8, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001C0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0001C8, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0001CC, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0001D0, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0001D4, "Member 'BP_Minigame_Arrows_C_ExecuteUbergraph_BP_Minigame_Arrows::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.InputKeySound
// 0x0001 (0x0001 - 0x0000)
struct BP_Minigame_Arrows_C_InputKeySound final
{
public:
	uint8                                         Progress;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minigame_Arrows_C_InputKeySound) == 0x000001, "Wrong alignment on BP_Minigame_Arrows_C_InputKeySound");
static_assert(sizeof(BP_Minigame_Arrows_C_InputKeySound) == 0x000001, "Wrong size on BP_Minigame_Arrows_C_InputKeySound");
static_assert(offsetof(BP_Minigame_Arrows_C_InputKeySound, Progress) == 0x000000, "Member 'BP_Minigame_Arrows_C_InputKeySound::Progress' has a wrong offset!");

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.OnKeyReceived
// 0x0001 (0x0001 - 0x0000)
struct BP_Minigame_Arrows_C_OnKeyReceived final
{
public:
	uint8                                         PressedKey;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minigame_Arrows_C_OnKeyReceived) == 0x000001, "Wrong alignment on BP_Minigame_Arrows_C_OnKeyReceived");
static_assert(sizeof(BP_Minigame_Arrows_C_OnKeyReceived) == 0x000001, "Wrong size on BP_Minigame_Arrows_C_OnKeyReceived");
static_assert(offsetof(BP_Minigame_Arrows_C_OnKeyReceived, PressedKey) == 0x000000, "Member 'BP_Minigame_Arrows_C_OnKeyReceived::PressedKey' has a wrong offset!");

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.OnRep_NextKeyPresses
// 0x0060 (0x0060 - 0x0000)
struct BP_Minigame_Arrows_C_OnRep_NextKeyPresses final
{
public:
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue_1;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue_2;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue_3;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses) == 0x000008, "Wrong alignment on BP_Minigame_Arrows_C_OnRep_NextKeyPresses");
static_assert(sizeof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses) == 0x000060, "Wrong size on BP_Minigame_Arrows_C_OnRep_NextKeyPresses");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, CallFunc_Conv_ByteToDouble_ReturnValue) == 0x000000, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::CallFunc_Conv_ByteToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, CallFunc_Conv_ByteToDouble_ReturnValue_1) == 0x000008, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::CallFunc_Conv_ByteToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, CallFunc_Conv_ByteToDouble_ReturnValue_2) == 0x000020, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::CallFunc_Conv_ByteToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, CallFunc_Conv_ByteToDouble_ReturnValue_3) == 0x000028, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::CallFunc_Conv_ByteToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000038, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, K2Node_MakeStruct_LinearColor) == 0x000040, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, K2Node_MakeStruct_A_ImplicitCast) == 0x000050, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, K2Node_MakeStruct_B_ImplicitCast) == 0x000054, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, K2Node_MakeStruct_G_ImplicitCast) == 0x000058, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_NextKeyPresses, K2Node_MakeStruct_R_ImplicitCast) == 0x00005C, "Member 'BP_Minigame_Arrows_C_OnRep_NextKeyPresses::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.OnRep_ProgressCount
// 0x0028 (0x0028 - 0x0000)
struct BP_Minigame_Arrows_C_OnRep_ProgressCount final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66D2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minigame_Arrows_C_OnRep_ProgressCount) == 0x000008, "Wrong alignment on BP_Minigame_Arrows_C_OnRep_ProgressCount");
static_assert(sizeof(BP_Minigame_Arrows_C_OnRep_ProgressCount) == 0x000028, "Wrong size on BP_Minigame_Arrows_C_OnRep_ProgressCount");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_ProgressCount, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Minigame_Arrows_C_OnRep_ProgressCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_ProgressCount, CallFunc_Conv_ByteToDouble_ReturnValue) == 0x000008, "Member 'BP_Minigame_Arrows_C_OnRep_ProgressCount::CallFunc_Conv_ByteToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_ProgressCount, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000010, "Member 'BP_Minigame_Arrows_C_OnRep_ProgressCount::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_OnRep_ProgressCount, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'BP_Minigame_Arrows_C_OnRep_ProgressCount::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Minigame_Arrows_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minigame_Arrows_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Minigame_Arrows_C_ReceiveTick");
static_assert(sizeof(BP_Minigame_Arrows_C_ReceiveTick) == 0x000004, "Wrong size on BP_Minigame_Arrows_C_ReceiveTick");
static_assert(offsetof(BP_Minigame_Arrows_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Minigame_Arrows_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.SetScreenMatState
// 0x0020 (0x0020 - 0x0000)
struct BP_Minigame_Arrows_C_SetScreenMatState final
{
public:
	bool                                          IsMinigame;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66D3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MID_Ref;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66D4[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minigame_Arrows_C_SetScreenMatState) == 0x000008, "Wrong alignment on BP_Minigame_Arrows_C_SetScreenMatState");
static_assert(sizeof(BP_Minigame_Arrows_C_SetScreenMatState) == 0x000020, "Wrong size on BP_Minigame_Arrows_C_SetScreenMatState");
static_assert(offsetof(BP_Minigame_Arrows_C_SetScreenMatState, IsMinigame) == 0x000000, "Member 'BP_Minigame_Arrows_C_SetScreenMatState::IsMinigame' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_SetScreenMatState, MID_Ref) == 0x000008, "Member 'BP_Minigame_Arrows_C_SetScreenMatState::MID_Ref' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_SetScreenMatState, Temp_bool_Variable) == 0x000010, "Member 'BP_Minigame_Arrows_C_SetScreenMatState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_SetScreenMatState, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_Minigame_Arrows_C_SetScreenMatState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_SetScreenMatState, K2Node_Select_Default) == 0x000018, "Member 'BP_Minigame_Arrows_C_SetScreenMatState::K2Node_Select_Default' has a wrong offset!");

// Function BP_Minigame_Arrows.BP_Minigame_Arrows_C.UpdateRoundsRemainingText
// 0x0018 (0x0018 - 0x0000)
struct BP_Minigame_Arrows_C_UpdateRoundsRemainingText final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66D5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Minigame_Arrows_C_UpdateRoundsRemainingText) == 0x000008, "Wrong alignment on BP_Minigame_Arrows_C_UpdateRoundsRemainingText");
static_assert(sizeof(BP_Minigame_Arrows_C_UpdateRoundsRemainingText) == 0x000018, "Wrong size on BP_Minigame_Arrows_C_UpdateRoundsRemainingText");
static_assert(offsetof(BP_Minigame_Arrows_C_UpdateRoundsRemainingText, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Minigame_Arrows_C_UpdateRoundsRemainingText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_UpdateRoundsRemainingText, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'BP_Minigame_Arrows_C_UpdateRoundsRemainingText::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Minigame_Arrows_C_UpdateRoundsRemainingText, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'BP_Minigame_Arrows_C_UpdateRoundsRemainingText::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

}

