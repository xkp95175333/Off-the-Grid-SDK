#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MortarProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MortarProjectile.BP_MortarProjectile_C
// 0x0018 (0x04F0 - 0x04D8)
class ABP_MortarProjectile_C final : public AGzMortarProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AkComp;                                            // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail;                                             // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_MortarProjectileActor_ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
	void ExecuteUbergraph_BP_MortarProjectile(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MortarProjectile_C">();
	}
	static class ABP_MortarProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MortarProjectile_C>();
	}
};
static_assert(alignof(ABP_MortarProjectile_C) == 0x000008, "Wrong alignment on ABP_MortarProjectile_C");
static_assert(sizeof(ABP_MortarProjectile_C) == 0x0004F0, "Wrong size on ABP_MortarProjectile_C");
static_assert(offsetof(ABP_MortarProjectile_C, UberGraphFrame) == 0x0004D8, "Member 'ABP_MortarProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MortarProjectile_C, AkComp) == 0x0004E0, "Member 'ABP_MortarProjectile_C::AkComp' has a wrong offset!");
static_assert(offsetof(ABP_MortarProjectile_C, Trail) == 0x0004E8, "Member 'ABP_MortarProjectile_C::Trail' has a wrong offset!");

}

