#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InteractionInput

#include "Basic.hpp"

#include "WBP_InteractionInput_classes.hpp"
#include "WBP_InteractionInput_parameters.hpp"


namespace SDK
{

// Function WBP_InteractionInput.WBP_InteractionInput_C.ExecuteUbergraph_WBP_InteractionInput
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InteractionInput_C::ExecuteUbergraph_WBP_InteractionInput(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "ExecuteUbergraph_WBP_InteractionInput");

	Params::WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.GetDisplayTextFromInteractData
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGzInteractableComponent*         Interact                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm)

const class FText UWBP_InteractionInput_C::GetDisplayTextFromInteractData(class UGzInteractableComponent* Interact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "GetDisplayTextFromInteractData");

	Params::WBP_InteractionInput_C_GetDisplayTextFromInteractData Parms{};

	Parms.Interact = Interact;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.OnInteractionSuccess
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InteractionInput_C::OnInteractionSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "OnInteractionSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.ResetInteractionAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InteractionInput_C::ResetInteractionAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "ResetInteractionAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.Set Interaction Duration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InteractionDuration                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InteractionInput_C::Set_Interaction_Duration(double InteractionDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "Set Interaction Duration");

	Params::WBP_InteractionInput_C_Set_Interaction_Duration Parms{};

	Parms.InteractionDuration = InteractionDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.SetActionInput
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzInteractableComponent*         FocusCache                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    PickableItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InteractionInput_C::SetActionInput(class UGzInteractableComponent* FocusCache, bool PickableItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "SetActionInput");

	Params::WBP_InteractionInput_C_SetActionInput Parms{};

	Parms.FocusCache = FocusCache;
	Parms.PickableItem = PickableItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.SetBlockInteractState
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InteractionInput_C::SetBlockInteractState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "SetBlockInteractState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.SetFailedInteractionText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_InteractionInput_C::SetFailedInteractionText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "SetFailedInteractionText");

	Params::WBP_InteractionInput_C_SetFailedInteractionText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.SetInitialInteractionProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InitialInteractionProgress                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InteractionInput_C::SetInitialInteractionProgress(double InitialInteractionProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "SetInitialInteractionProgress");

	Params::WBP_InteractionInput_C_SetInitialInteractionProgress Parms{};

	Parms.InitialInteractionProgress = InitialInteractionProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.SetInputState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BlockInputeState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             BlockTime                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_InteractionInput_C::SetInputState(bool BlockInputeState, const class FText& BlockTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "SetInputState");

	Params::WBP_InteractionInput_C_SetInputState Parms{};

	Parms.BlockInputeState = BlockInputeState;
	Parms.BlockTime = std::move(BlockTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.SetIsLeftShoulder
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InteractionInput_C::SetIsLeftShoulder(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "SetIsLeftShoulder");

	Params::WBP_InteractionInput_C_SetIsLeftShoulder Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.SetResetProgressOnRelease
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResetProgressBarOnRelease                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InteractionInput_C::SetResetProgressOnRelease(bool bResetProgressBarOnRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "SetResetProgressOnRelease");

	Params::WBP_InteractionInput_C_SetResetProgressOnRelease Parms{};

	Parms.bResetProgressBarOnRelease = bResetProgressBarOnRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.SetTooltipStyle
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InteractionInput_C::SetTooltipStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "SetTooltipStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InteractionInput.WBP_InteractionInput_C.UpdateHolding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InitialInteractionProgress                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InteractionInput_C::UpdateHolding(double InitialInteractionProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InteractionInput_C", "UpdateHolding");

	Params::WBP_InteractionInput_C_UpdateHolding Parms{};

	Parms.InitialInteractionProgress = InitialInteractionProgress;

	UObject::ProcessEvent(Func, &Parms);
}

}

