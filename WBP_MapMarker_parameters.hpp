#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapMarker

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "E_MarkerPingPadding_structs.hpp"


namespace SDK::Params
{

// Function WBP_MapMarker.WBP_MapMarker_C.AdjustMissionMarker
// 0x0058 (0x0058 - 0x0000)
struct WBP_MapMarker_C_AdjustMissionMarker final
{
public:
	bool                                          IsSpecial;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4E[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorById_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_AdjustMissionMarker) == 0x000008, "Wrong alignment on WBP_MapMarker_C_AdjustMissionMarker");
static_assert(sizeof(WBP_MapMarker_C_AdjustMissionMarker) == 0x000058, "Wrong size on WBP_MapMarker_C_AdjustMissionMarker");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, IsSpecial) == 0x000000, "Member 'WBP_MapMarker_C_AdjustMissionMarker::IsSpecial' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, Temp_bool_Variable) == 0x000001, "Member 'WBP_MapMarker_C_AdjustMissionMarker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, Temp_object_Variable) == 0x000008, "Member 'WBP_MapMarker_C_AdjustMissionMarker::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, Temp_object_Variable_1) == 0x000010, "Member 'WBP_MapMarker_C_AdjustMissionMarker::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, Temp_bool_Variable_1) == 0x000018, "Member 'WBP_MapMarker_C_AdjustMissionMarker::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, Temp_byte_Variable) == 0x000019, "Member 'WBP_MapMarker_C_AdjustMissionMarker::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_MapMarker_C_AdjustMissionMarker::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, Temp_bool_Variable_2) == 0x00001B, "Member 'WBP_MapMarker_C_AdjustMissionMarker::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, Temp_object_Variable_2) == 0x000020, "Member 'WBP_MapMarker_C_AdjustMissionMarker::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, Temp_object_Variable_3) == 0x000028, "Member 'WBP_MapMarker_C_AdjustMissionMarker::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, K2Node_Select_Default) == 0x000030, "Member 'WBP_MapMarker_C_AdjustMissionMarker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, CallFunc_GetColorById_ReturnValue) == 0x000038, "Member 'WBP_MapMarker_C_AdjustMissionMarker::CallFunc_GetColorById_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, K2Node_Select_Default_1) == 0x000048, "Member 'WBP_MapMarker_C_AdjustMissionMarker::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_AdjustMissionMarker, K2Node_Select_Default_2) == 0x000050, "Member 'WBP_MapMarker_C_AdjustMissionMarker::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.CheckOffScreenTags
// 0x0028 (0x0028 - 0x0000)
struct WBP_MapMarker_C_CheckOffScreenTags final
{
public:
	struct FGameplayTagContainer                  TagContainer;                                      // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_CheckOffScreenTags) == 0x000008, "Wrong alignment on WBP_MapMarker_C_CheckOffScreenTags");
static_assert(sizeof(WBP_MapMarker_C_CheckOffScreenTags) == 0x000028, "Wrong size on WBP_MapMarker_C_CheckOffScreenTags");
static_assert(offsetof(WBP_MapMarker_C_CheckOffScreenTags, TagContainer) == 0x000000, "Member 'WBP_MapMarker_C_CheckOffScreenTags::TagContainer' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_CheckOffScreenTags, CallFunc_HasAnyTags_ReturnValue) == 0x000020, "Member 'WBP_MapMarker_C_CheckOffScreenTags::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.ExecuteUbergraph_WBP_MapMarker
// 0x01C0 (0x01C0 - 0x0000)
struct WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A50[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidgetExtension*                   CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A51[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidgetExtension*                   CallFunc_AddExtension_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float NewZoom)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A52[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UGzMarkerComponent* MarkerComponent, struct FGameplayTagContainer& States)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A53[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetMarkerStates_ReturnValue;              // 0x0048(0x0020)(ConstParm)
	TDelegate<void(class UGzMarkerComponent* MarkerComponent, struct FGameplayTagContainer& States)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A54[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMapZoom_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A55[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0084(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A56[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00C0(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0138(0x0078)(ConstParm)
	float                                         CallFunc_GetMapZoom_ReturnValue_1;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A57[0x2];                                     // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_NewZoom;                        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker) == 0x000008, "Wrong alignment on WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker");
static_assert(sizeof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker) == 0x0001C0, "Wrong size on WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, EntryPoint) == 0x000000, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_AddExtension_ReturnValue) == 0x000018, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_AddExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_GetMarkerStates_ReturnValue) == 0x000048, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_GetMarkerStates_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, K2Node_CreateDelegate_OutputDelegate_2) == 0x000068, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, K2Node_Event_IsDesignTime) == 0x000078, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_GetMapZoom_ReturnValue) == 0x00007C, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_GetMapZoom_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_IsValid_ReturnValue_3) == 0x000080, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, K2Node_Event_MyGeometry) == 0x000084, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, K2Node_Event_MouseEvent_1) == 0x0000C0, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, K2Node_Event_MouseEvent) == 0x000138, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_GetMapZoom_ReturnValue_1) == 0x0001B0, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_GetMapZoom_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_TextIsEmpty_ReturnValue) == 0x0001B4, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, CallFunc_TextIsEmpty_ReturnValue_1) == 0x0001B5, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker, K2Node_CustomEvent_NewZoom) == 0x0001B8, "Member 'WBP_MapMarker_C_ExecuteUbergraph_WBP_MapMarker::K2Node_CustomEvent_NewZoom' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.On Marker States Changed
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_MapMarker_C_On_Marker_States_Changed final
{
public:
	class UGzMarkerComponent*                     Param_MarkerComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  States;                                            // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A58[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MarkerPingPadding                           Temp_byte_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A59[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A5A[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0098(0x0038)(NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A5B[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMapZoom_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_On_Marker_States_Changed) == 0x000008, "Wrong alignment on WBP_MapMarker_C_On_Marker_States_Changed");
static_assert(sizeof(WBP_MapMarker_C_On_Marker_States_Changed) == 0x0000E8, "Wrong size on WBP_MapMarker_C_On_Marker_States_Changed");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, Param_MarkerComponent) == 0x000000, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::Param_MarkerComponent' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, States) == 0x000008, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::States' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, Temp_struct_Variable) == 0x000028, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, Temp_struct_Variable_1) == 0x000038, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, Temp_struct_Variable_2) == 0x000048, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, Temp_bool_Variable) == 0x000058, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, CallFunc_HasTag_ReturnValue) == 0x000059, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, CallFunc_SelectColor_ReturnValue) == 0x00005C, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, Temp_byte_Variable) == 0x00006C, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, K2Node_Select_Default) == 0x000070, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, CallFunc_HasTag_ReturnValue_1) == 0x000080, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, K2Node_Select_Default_1) == 0x000088, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, K2Node_MakeStruct_WidgetTransform) == 0x000098, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, CallFunc_HasTag_ReturnValue_2) == 0x0000D0, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::CallFunc_HasTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, CallFunc_SelectColor_ReturnValue_1) == 0x0000D4, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_On_Marker_States_Changed, CallFunc_GetMapZoom_ReturnValue) == 0x0000E4, "Member 'WBP_MapMarker_C_On_Marker_States_Changed::CallFunc_GetMapZoom_ReturnValue' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.OnMapZoomChanged
// 0x0030 (0x0030 - 0x0000)
struct WBP_MapMarker_C_OnMapZoomChanged final
{
public:
	float                                         NewZoom;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A5C[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMinimap_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A5D[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A5E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A5F[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_OnMapZoomChanged) == 0x000008, "Wrong alignment on WBP_MapMarker_C_OnMapZoomChanged");
static_assert(sizeof(WBP_MapMarker_C_OnMapZoomChanged) == 0x000030, "Wrong size on WBP_MapMarker_C_OnMapZoomChanged");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, NewZoom) == 0x000000, "Member 'WBP_MapMarker_C_OnMapZoomChanged::NewZoom' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_IsHovered_ReturnValue) == 0x000004, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, Temp_byte_Variable) == 0x000005, "Member 'WBP_MapMarker_C_OnMapZoomChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, Temp_byte_Variable_1) == 0x00000C, "Member 'WBP_MapMarker_C_OnMapZoomChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_IsMinimap_ReturnValue) == 0x00000D, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_IsMinimap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, Temp_int_Variable) == 0x000010, "Member 'WBP_MapMarker_C_OnMapZoomChanged::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000014, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_BooleanOR_ReturnValue_1) == 0x000016, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_BooleanOR_ReturnValue_2) == 0x000017, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_BooleanOR_ReturnValue_3) == 0x000018, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_SelectInt_ReturnValue) == 0x00001C, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, K2Node_Select_Default) == 0x000021, "Member 'WBP_MapMarker_C_OnMapZoomChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomChanged, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'WBP_MapMarker_C_OnMapZoomChanged::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.OnMapZoomed
// 0x0004 (0x0004 - 0x0000)
struct WBP_MapMarker_C_OnMapZoomed final
{
public:
	float                                         NewZoom;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_OnMapZoomed) == 0x000004, "Wrong alignment on WBP_MapMarker_C_OnMapZoomed");
static_assert(sizeof(WBP_MapMarker_C_OnMapZoomed) == 0x000004, "Wrong size on WBP_MapMarker_C_OnMapZoomed");
static_assert(offsetof(WBP_MapMarker_C_OnMapZoomed, NewZoom) == 0x000000, "Member 'WBP_MapMarker_C_OnMapZoomed::NewZoom' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_MapMarker_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_MapMarker_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_MapMarker_C_OnMouseEnter");
static_assert(sizeof(WBP_MapMarker_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_MapMarker_C_OnMouseEnter");
static_assert(offsetof(WBP_MapMarker_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_MapMarker_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_MapMarker_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_MapMarker_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_MapMarker_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_MapMarker_C_OnMouseLeave");
static_assert(sizeof(WBP_MapMarker_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_MapMarker_C_OnMouseLeave");
static_assert(offsetof(WBP_MapMarker_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_MapMarker_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapMarker_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MapMarker_C_PreConstruct");
static_assert(sizeof(WBP_MapMarker_C_PreConstruct) == 0x000001, "Wrong size on WBP_MapMarker_C_PreConstruct");
static_assert(offsetof(WBP_MapMarker_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MapMarker_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.SetProgress
// 0x0020 (0x0020 - 0x0000)
struct WBP_MapMarker_C_SetProgress final
{
public:
	float                                         Percent__0Minus1_;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A60[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_SetProgress) == 0x000008, "Wrong alignment on WBP_MapMarker_C_SetProgress");
static_assert(sizeof(WBP_MapMarker_C_SetProgress) == 0x000020, "Wrong size on WBP_MapMarker_C_SetProgress");
static_assert(offsetof(WBP_MapMarker_C_SetProgress, Percent__0Minus1_) == 0x000000, "Member 'WBP_MapMarker_C_SetProgress::Percent__0Minus1_' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_SetProgress, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_C_SetProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_SetProgress, CallFunc_FClamp_Value_ImplicitCast) == 0x000010, "Member 'WBP_MapMarker_C_SetProgress::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_SetProgress, CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast) == 0x000018, "Member 'WBP_MapMarker_C_SetProgress::CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.ShowProgress
// 0x0020 (0x0020 - 0x0000)
struct WBP_MapMarker_C_ShowProgress final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dashed;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A61[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A62[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMapZoom_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_ShowProgress) == 0x000008, "Wrong alignment on WBP_MapMarker_C_ShowProgress");
static_assert(sizeof(WBP_MapMarker_C_ShowProgress) == 0x000020, "Wrong size on WBP_MapMarker_C_ShowProgress");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, Show) == 0x000000, "Member 'WBP_MapMarker_C_ShowProgress::Show' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, Dashed) == 0x000001, "Member 'WBP_MapMarker_C_ShowProgress::Dashed' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, Temp_bool_Variable) == 0x000002, "Member 'WBP_MapMarker_C_ShowProgress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'WBP_MapMarker_C_ShowProgress::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, Temp_byte_Variable) == 0x000008, "Member 'WBP_MapMarker_C_ShowProgress::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_MapMarker_C_ShowProgress::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, K2Node_Select_Default) == 0x00000A, "Member 'WBP_MapMarker_C_ShowProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00000B, "Member 'WBP_MapMarker_C_ShowProgress::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_C_ShowProgress::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_ShowProgress, CallFunc_GetMapZoom_ReturnValue) == 0x000018, "Member 'WBP_MapMarker_C_ShowProgress::CallFunc_GetMapZoom_ReturnValue' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.UpdateMarkerName
// 0x0010 (0x0010 - 0x0000)
struct WBP_MapMarker_C_UpdateMarkerName final
{
public:
	class FText                                   Param_MarkerName;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_MapMarker_C_UpdateMarkerName) == 0x000008, "Wrong alignment on WBP_MapMarker_C_UpdateMarkerName");
static_assert(sizeof(WBP_MapMarker_C_UpdateMarkerName) == 0x000010, "Wrong size on WBP_MapMarker_C_UpdateMarkerName");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerName, Param_MarkerName) == 0x000000, "Member 'WBP_MapMarker_C_UpdateMarkerName::Param_MarkerName' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.UpdateMarkerScale
// 0x0080 (0x0080 - 0x0000)
struct WBP_MapMarker_C_UpdateMarkerScale final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A63[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMinimap_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaleByZoomCurve_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A64[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A65[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue_1;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_UpdateMarkerScale) == 0x000008, "Wrong alignment on WBP_MapMarker_C_UpdateMarkerScale");
static_assert(sizeof(WBP_MapMarker_C_UpdateMarkerScale) == 0x000080, "Wrong size on WBP_MapMarker_C_UpdateMarkerScale");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, Temp_bool_Variable) == 0x000000, "Member 'WBP_MapMarker_C_UpdateMarkerScale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_MapMarker_C_UpdateMarkerScale::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, Temp_struct_Variable) == 0x000008, "Member 'WBP_MapMarker_C_UpdateMarkerScale::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_IsMinimap_ReturnValue) == 0x000019, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_IsMinimap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_BooleanOR_ReturnValue_1) == 0x00001B, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_GetScaleByZoomCurve_ReturnValue) == 0x00001C, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_GetScaleByZoomCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000028, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, K2Node_Select_Default) == 0x000038, "Member 'WBP_MapMarker_C_UpdateMarkerScale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_IsHovered_ReturnValue) == 0x000048, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_Conv_DoubleToVector2D_ReturnValue_1) == 0x000050, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_Conv_DoubleToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, K2Node_Select_Default_1) == 0x000060, "Member 'WBP_MapMarker_C_UpdateMarkerScale::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast) == 0x000070, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_UpdateMarkerScale, CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast_1) == 0x000078, "Member 'WBP_MapMarker_C_UpdateMarkerScale::CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast_1' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.VisualizeDesigner
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_C_VisualizeDesigner final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_VisualizeDesigner) == 0x000001, "Wrong alignment on WBP_MapMarker_C_VisualizeDesigner");
static_assert(sizeof(WBP_MapMarker_C_VisualizeDesigner) == 0x000008, "Wrong size on WBP_MapMarker_C_VisualizeDesigner");
static_assert(offsetof(WBP_MapMarker_C_VisualizeDesigner, Temp_bool_Variable) == 0x000000, "Member 'WBP_MapMarker_C_VisualizeDesigner::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_VisualizeDesigner, Temp_byte_Variable) == 0x000001, "Member 'WBP_MapMarker_C_VisualizeDesigner::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_VisualizeDesigner, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_MapMarker_C_VisualizeDesigner::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_VisualizeDesigner, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_MapMarker_C_VisualizeDesigner::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_VisualizeDesigner, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_MapMarker_C_VisualizeDesigner::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_VisualizeDesigner, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_MapMarker_C_VisualizeDesigner::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_VisualizeDesigner, K2Node_Select_Default) == 0x000006, "Member 'WBP_MapMarker_C_VisualizeDesigner::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_VisualizeDesigner, K2Node_Select_Default_1) == 0x000007, "Member 'WBP_MapMarker_C_VisualizeDesigner::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.GetShowVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapMarker_C_GetShowVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_GetShowVisibility) == 0x000001, "Wrong alignment on WBP_MapMarker_C_GetShowVisibility");
static_assert(sizeof(WBP_MapMarker_C_GetShowVisibility) == 0x000001, "Wrong size on WBP_MapMarker_C_GetShowVisibility");
static_assert(offsetof(WBP_MapMarker_C_GetShowVisibility, ReturnValue) == 0x000000, "Member 'WBP_MapMarker_C_GetShowVisibility::ReturnValue' has a wrong offset!");

// Function WBP_MapMarker.WBP_MapMarker_C.K2_ShouldShow
// 0x0003 (0x0003 - 0x0000)
struct WBP_MapMarker_C_K2_ShouldShow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ShouldShow_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_C_K2_ShouldShow) == 0x000001, "Wrong alignment on WBP_MapMarker_C_K2_ShouldShow");
static_assert(sizeof(WBP_MapMarker_C_K2_ShouldShow) == 0x000003, "Wrong size on WBP_MapMarker_C_K2_ShouldShow");
static_assert(offsetof(WBP_MapMarker_C_K2_ShouldShow, ReturnValue) == 0x000000, "Member 'WBP_MapMarker_C_K2_ShouldShow::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_K2_ShouldShow, CallFunc_K2_ShouldShow_ReturnValue) == 0x000001, "Member 'WBP_MapMarker_C_K2_ShouldShow::CallFunc_K2_ShouldShow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_C_K2_ShouldShow, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_MapMarker_C_K2_ShouldShow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

