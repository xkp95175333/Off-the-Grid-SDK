#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OSC

#include "Basic.hpp"

#include "OSC_classes.hpp"
#include "OSC_parameters.hpp"


namespace SDK
{

// Function OSC.OSCClient.GetSendIPAddress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           IPAddress                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOSCClient::GetSendIPAddress(class FString& IPAddress, int32& Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCClient", "GetSendIPAddress");

	Params::OSCClient_GetSendIPAddress Parms{};

	Parms.IPAddress = std::move(IPAddress);
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	IPAddress = std::move(Parms.IPAddress);
	Port = Parms.Port;
}


// Function OSC.OSCClient.SendOSCBundle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCBundle                       Bundle                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOSCClient::SendOSCBundle(struct FOSCBundle& Bundle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCClient", "SendOSCBundle");

	Params::OSCClient_SendOSCBundle Parms{};

	Parms.Bundle = std::move(Bundle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Bundle = std::move(Parms.Bundle);
}


// Function OSC.OSCClient.SendOSCMessage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOSCClient::SendOSCMessage(struct FOSCMessage& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCClient", "SendOSCMessage");

	Params::OSCClient_SendOSCMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);
}


// Function OSC.OSCClient.SetSendIPAddress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           IPAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCClient::SetSendIPAddress(const class FString& IPAddress, const int32 Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCClient", "SetSendIPAddress");

	Params::OSCClient_SetSendIPAddress Parms{};

	Parms.IPAddress = std::move(IPAddress);
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.AddAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCAddress                      Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::AddAddress(struct FOSCMessage& Message, const struct FOSCAddress& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "AddAddress");

	Params::OSCManager_AddAddress Parms{};

	Parms.Message = std::move(Message);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.AddBlob
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::AddBlob(struct FOSCMessage& Message, const TArray<uint8>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "AddBlob");

	Params::OSCManager_AddBlob Parms{};

	Parms.Message = std::move(Message);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.AddBool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::AddBool(struct FOSCMessage& Message, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "AddBool");

	Params::OSCManager_AddBool Parms{};

	Parms.Message = std::move(Message);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.AddBundleToBundle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCBundle                       InBundle                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCBundle                       OutBundle                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCBundle                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCBundle UOSCManager::AddBundleToBundle(const struct FOSCBundle& InBundle, struct FOSCBundle& OutBundle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "AddBundleToBundle");

	Params::OSCManager_AddBundleToBundle Parms{};

	Parms.InBundle = std::move(InBundle);
	Parms.OutBundle = std::move(OutBundle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutBundle = std::move(Parms.OutBundle);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.AddFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::AddFloat(struct FOSCMessage& Message, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "AddFloat");

	Params::OSCManager_AddFloat Parms{};

	Parms.Message = std::move(Message);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.AddInt32
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::AddInt32(struct FOSCMessage& Message, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "AddInt32");

	Params::OSCManager_AddInt32 Parms{};

	Parms.Message = std::move(Message);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.AddInt64
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::AddInt64(struct FOSCMessage& Message, int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "AddInt64");

	Params::OSCManager_AddInt64 Parms{};

	Parms.Message = std::move(Message);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.AddMessageToBundle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCBundle                       Bundle                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCBundle                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCBundle UOSCManager::AddMessageToBundle(const struct FOSCMessage& Message, struct FOSCBundle& Bundle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "AddMessageToBundle");

	Params::OSCManager_AddMessageToBundle Parms{};

	Parms.Message = std::move(Message);
	Parms.Bundle = std::move(Bundle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Bundle = std::move(Parms.Bundle);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.AddString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::AddString(struct FOSCMessage& Message, class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "AddString");

	Params::OSCManager_AddString Parms{};

	Parms.Message = std::move(Message);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);
	Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.ClearBundle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCBundle                       Bundle                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCBundle                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCBundle UOSCManager::ClearBundle(struct FOSCBundle& Bundle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "ClearBundle");

	Params::OSCManager_ClearBundle Parms{};

	Parms.Bundle = std::move(Bundle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Bundle = std::move(Parms.Bundle);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.ClearMessage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::ClearMessage(struct FOSCMessage& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "ClearMessage");

	Params::OSCManager_ClearMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.ClearOSCAddressContainers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCAddress                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FOSCAddress UOSCManager::ClearOSCAddressContainers(struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "ClearOSCAddressContainers");

	Params::OSCManager_ClearOSCAddressContainers Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Address = std::move(Parms.Address);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.ConvertStringToOSCAddress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCAddress                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FOSCAddress UOSCManager::ConvertStringToOSCAddress(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "ConvertStringToOSCAddress");

	Params::OSCManager_ConvertStringToOSCAddress Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.CreateOSCClient
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           SendIPAddress                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ClientName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Param_Outer                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOSCClient*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOSCClient* UOSCManager::CreateOSCClient(const class FString& SendIPAddress, int32 Port, const class FString& ClientName, class UObject* Param_Outer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "CreateOSCClient");

	Params::OSCManager_CreateOSCClient Parms{};

	Parms.SendIPAddress = std::move(SendIPAddress);
	Parms.Port = Port;
	Parms.ClientName = std::move(ClientName);
	Parms.Param_Outer = Param_Outer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.CreateOSCServer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReceiveIPAddress                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMulticastLoopback                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStartListening                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Param_Outer                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOSCServer*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOSCServer* UOSCManager::CreateOSCServer(const class FString& ReceiveIPAddress, int32 Port, bool bMulticastLoopback, bool bStartListening, const class FString& ServerName, class UObject* Param_Outer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "CreateOSCServer");

	Params::OSCManager_CreateOSCServer Parms{};

	Parms.ReceiveIPAddress = std::move(ReceiveIPAddress);
	Parms.Port = Port;
	Parms.bMulticastLoopback = bMulticastLoopback;
	Parms.bStartListening = bStartListening;
	Parms.ServerName = std::move(ServerName);
	Parms.Param_Outer = Param_Outer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.FindObjectAtOSCAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UOSCManager::FindObjectAtOSCAddress(const struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "FindObjectAtOSCAddress");

	Params::OSCManager_FindObjectAtOSCAddress Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCAddress                      Value                                                  (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::GetAddress(const struct FOSCMessage& Message, const int32 Param_Index, struct FOSCAddress* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetAddress");

	Params::OSCManager_GetAddress Parms{};

	Parms.Message = std::move(Message);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetAllAddresses
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FOSCAddress>              Values                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOSCManager::GetAllAddresses(const struct FOSCMessage& Message, TArray<struct FOSCAddress>* Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetAllAddresses");

	Params::OSCManager_GetAllAddresses Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Values != nullptr)
		*Values = std::move(Parms.Values);
}


// Function OSC.OSCManager.GetAllBools
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<bool>                            Values                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOSCManager::GetAllBools(const struct FOSCMessage& Message, TArray<bool>* Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetAllBools");

	Params::OSCManager_GetAllBools Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Values != nullptr)
		*Values = std::move(Parms.Values);
}


// Function OSC.OSCManager.GetAllFloats
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                           Values                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOSCManager::GetAllFloats(const struct FOSCMessage& Message, TArray<float>* Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetAllFloats");

	Params::OSCManager_GetAllFloats Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Values != nullptr)
		*Values = std::move(Parms.Values);
}


// Function OSC.OSCManager.GetAllInt32s
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           Values                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOSCManager::GetAllInt32s(const struct FOSCMessage& Message, TArray<int32>* Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetAllInt32s");

	Params::OSCManager_GetAllInt32s Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Values != nullptr)
		*Values = std::move(Parms.Values);
}


// Function OSC.OSCManager.GetAllInt64s
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int64>                           Values                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOSCManager::GetAllInt64s(const struct FOSCMessage& Message, TArray<int64>* Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetAllInt64s");

	Params::OSCManager_GetAllInt64s Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Values != nullptr)
		*Values = std::move(Parms.Values);
}


// Function OSC.OSCManager.GetAllStrings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   Values                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOSCManager::GetAllStrings(const struct FOSCMessage& Message, TArray<class FString>* Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetAllStrings");

	Params::OSCManager_GetAllStrings Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Values != nullptr)
		*Values = std::move(Parms.Values);
}


// Function OSC.OSCManager.GetBlob
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Value                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::GetBlob(const struct FOSCMessage& Message, const int32 Param_Index, TArray<uint8>* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetBlob");

	Params::OSCManager_GetBlob Parms{};

	Parms.Message = std::move(Message);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetBool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::GetBool(const struct FOSCMessage& Message, const int32 Param_Index, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetBool");

	Params::OSCManager_GetBool Parms{};

	Parms.Message = std::move(Message);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetBundlesFromBundle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCBundle                       Bundle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FOSCBundle>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FOSCBundle> UOSCManager::GetBundlesFromBundle(const struct FOSCBundle& Bundle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetBundlesFromBundle");

	Params::OSCManager_GetBundlesFromBundle Parms{};

	Parms.Bundle = std::move(Bundle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::GetFloat(const struct FOSCMessage& Message, const int32 Param_Index, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetFloat");

	Params::OSCManager_GetFloat Parms{};

	Parms.Message = std::move(Message);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetInt32
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::GetInt32(const struct FOSCMessage& Message, const int32 Param_Index, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetInt32");

	Params::OSCManager_GetInt32 Parms{};

	Parms.Message = std::move(Message);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetInt64
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::GetInt64(const struct FOSCMessage& Message, const int32 Param_Index, int64* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetInt64");

	Params::OSCManager_GetInt64 Parms{};

	Parms.Message = std::move(Message);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetMessageFromBundle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCBundle                       Bundle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::GetMessageFromBundle(const struct FOSCBundle& Bundle, int32 Param_Index, bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetMessageFromBundle");

	Params::OSCManager_GetMessageFromBundle Parms{};

	Parms.Bundle = std::move(Bundle);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetMessagesFromBundle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCBundle                       Bundle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FOSCMessage>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FOSCMessage> UOSCManager::GetMessagesFromBundle(const struct FOSCBundle& Bundle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetMessagesFromBundle");

	Params::OSCManager_GetMessagesFromBundle Parms{};

	Parms.Bundle = std::move(Bundle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetOSCAddressContainer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOSCManager::GetOSCAddressContainer(const struct FOSCAddress& Address, const int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetOSCAddressContainer");

	Params::OSCManager_GetOSCAddressContainer Parms{};

	Parms.Address = std::move(Address);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetOSCAddressContainerPath
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOSCManager::GetOSCAddressContainerPath(const struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetOSCAddressContainerPath");

	Params::OSCManager_GetOSCAddressContainerPath Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetOSCAddressContainers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UOSCManager::GetOSCAddressContainers(const struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetOSCAddressContainers");

	Params::OSCManager_GetOSCAddressContainers Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetOSCAddressFullPath
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOSCManager::GetOSCAddressFullPath(const struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetOSCAddressFullPath");

	Params::OSCManager_GetOSCAddressFullPath Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetOSCAddressMethod
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOSCManager::GetOSCAddressMethod(const struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetOSCAddressMethod");

	Params::OSCManager_GetOSCAddressMethod Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetOSCMessageAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCAddress                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FOSCAddress UOSCManager::GetOSCMessageAddress(const struct FOSCMessage& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetOSCMessageAddress");

	Params::OSCManager_GetOSCMessageAddress Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.GetString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::GetString(const struct FOSCMessage& Message, const int32 Param_Index, class FString* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "GetString");

	Params::OSCManager_GetString Parms{};

	Parms.Message = std::move(Message);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.ObjectPathFromOSCAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOSCManager::ObjectPathFromOSCAddress(const struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "ObjectPathFromOSCAddress");

	Params::OSCManager_ObjectPathFromOSCAddress Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressFromObjectPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCAddress                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FOSCAddress UOSCManager::OSCAddressFromObjectPath(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressFromObjectPath");

	Params::OSCManager_OSCAddressFromObjectPath Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressFromObjectPathString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PathName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCAddress                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FOSCAddress UOSCManager::OSCAddressFromObjectPathString(const class FString& PathName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressFromObjectPathString");

	Params::OSCManager_OSCAddressFromObjectPathString Parms{};

	Parms.PathName = std::move(PathName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressIsValidPath
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::OSCAddressIsValidPath(const struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressIsValidPath");

	Params::OSCManager_OSCAddressIsValidPath Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressIsValidPattern
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::OSCAddressIsValidPattern(const struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressIsValidPattern");

	Params::OSCManager_OSCAddressIsValidPattern Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressPathMatchesPattern
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Pattern                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCAddress                      Path                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCManager::OSCAddressPathMatchesPattern(const struct FOSCAddress& Pattern, const struct FOSCAddress& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressPathMatchesPattern");

	Params::OSCManager_OSCAddressPathMatchesPattern Parms{};

	Parms.Pattern = std::move(Pattern);
	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressPopContainer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOSCManager::OSCAddressPopContainer(struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressPopContainer");

	Params::OSCManager_OSCAddressPopContainer Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Address = std::move(Parms.Address);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressPopContainers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumContainers                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UOSCManager::OSCAddressPopContainers(struct FOSCAddress& Address, int32 NumContainers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressPopContainers");

	Params::OSCManager_OSCAddressPopContainers Parms{};

	Parms.Address = std::move(Address);
	Parms.NumContainers = NumContainers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Address = std::move(Parms.Address);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressPushContainer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Container                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCAddress                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FOSCAddress UOSCManager::OSCAddressPushContainer(struct FOSCAddress& Address, const class FString& Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressPushContainer");

	Params::OSCManager_OSCAddressPushContainer Parms{};

	Parms.Address = std::move(Address);
	Parms.Container = std::move(Container);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Address = std::move(Parms.Address);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressPushContainers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Containers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCAddress                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FOSCAddress UOSCManager::OSCAddressPushContainers(struct FOSCAddress& Address, const TArray<class FString>& Containers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressPushContainers");

	Params::OSCManager_OSCAddressPushContainers Parms{};

	Parms.Address = std::move(Address);
	Parms.Containers = std::move(Containers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Address = std::move(Parms.Address);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.OSCAddressRemoveContainers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCAddress                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FOSCAddress UOSCManager::OSCAddressRemoveContainers(struct FOSCAddress& Address, int32 Param_Index, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "OSCAddressRemoveContainers");

	Params::OSCManager_OSCAddressRemoveContainers Parms{};

	Parms.Address = std::move(Address);
	Parms.Param_Index = Param_Index;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Address = std::move(Parms.Address);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.SetOSCAddressMethod
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      Address                                                (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Method                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCAddress                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FOSCAddress UOSCManager::SetOSCAddressMethod(struct FOSCAddress& Address, const class FString& Method)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "SetOSCAddressMethod");

	Params::OSCManager_SetOSCAddressMethod Parms{};

	Parms.Address = std::move(Address);
	Parms.Method = std::move(Method);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Address = std::move(Parms.Address);

	return Parms.ReturnValue;
}


// Function OSC.OSCManager.SetOSCMessageAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCMessage                      Message                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOSCAddress                      Address                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOSCMessage                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOSCMessage UOSCManager::SetOSCMessageAddress(struct FOSCMessage& Message, const struct FOSCAddress& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OSCManager", "SetOSCMessageAddress");

	Params::OSCManager_SetOSCMessageAddress Parms{};

	Parms.Message = std::move(Message);
	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function OSC.OSCServer.AddAllowlistedClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           IPAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOSCServer::AddAllowlistedClient(const class FString& IPAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "AddAllowlistedClient");

	Params::OSCServer_AddAllowlistedClient Parms{};

	Parms.IPAddress = std::move(IPAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.BindEventToOnOSCAddressPatternMatchesPath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      OSCAddressPattern                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FOSCAddress& AddressPattern, struct FOSCMessage& Message, const class FString& IPAddress, int32 Port)>Event                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOSCServer::BindEventToOnOSCAddressPatternMatchesPath(const struct FOSCAddress& OSCAddressPattern, const TDelegate<void(struct FOSCAddress& AddressPattern, struct FOSCMessage& Message, const class FString& IPAddress, int32 Port)>& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "BindEventToOnOSCAddressPatternMatchesPath");

	Params::OSCServer_BindEventToOnOSCAddressPatternMatchesPath Parms{};

	Parms.OSCAddressPattern = std::move(OSCAddressPattern);
	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.ClearAllowlistedClients
// (Final, Native, Public, BlueprintCallable)

void UOSCServer::ClearAllowlistedClients()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "ClearAllowlistedClients");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.Listen
// (Final, Native, Public, BlueprintCallable)

void UOSCServer::Listen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "Listen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.RemoveAllowlistedClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           IPAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOSCServer::RemoveAllowlistedClient(const class FString& IPAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "RemoveAllowlistedClient");

	Params::OSCServer_RemoveAllowlistedClient Parms{};

	Parms.IPAddress = std::move(IPAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.SetAddress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReceiveIPAddress                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCServer::SetAddress(const class FString& ReceiveIPAddress, int32 Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "SetAddress");

	Params::OSCServer_SetAddress Parms{};

	Parms.ReceiveIPAddress = std::move(ReceiveIPAddress);
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCServer.SetAllowlistClientsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOSCServer::SetAllowlistClientsEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "SetAllowlistClientsEnabled");

	Params::OSCServer_SetAllowlistClientsEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.SetMulticastLoopback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bMulticastLoopback                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOSCServer::SetMulticastLoopback(bool bMulticastLoopback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "SetMulticastLoopback");

	Params::OSCServer_SetMulticastLoopback Parms{};

	Parms.bMulticastLoopback = bMulticastLoopback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.Stop
// (Final, Native, Public, BlueprintCallable)

void UOSCServer::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.UnbindAllEventsFromOnOSCAddressPatternMatchesPath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      OSCAddressPattern                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOSCServer::UnbindAllEventsFromOnOSCAddressPatternMatchesPath(const struct FOSCAddress& OSCAddressPattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "UnbindAllEventsFromOnOSCAddressPatternMatchesPath");

	Params::OSCServer_UnbindAllEventsFromOnOSCAddressPatternMatchesPath Parms{};

	Parms.OSCAddressPattern = std::move(OSCAddressPattern);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.UnbindAllEventsFromOnOSCAddressPatternMatching
// (Final, Native, Public, BlueprintCallable)

void UOSCServer::UnbindAllEventsFromOnOSCAddressPatternMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "UnbindAllEventsFromOnOSCAddressPatternMatching");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.UnbindEventFromOnOSCAddressPatternMatchesPath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOSCAddress                      OSCAddressPattern                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FOSCAddress& AddressPattern, struct FOSCMessage& Message, const class FString& IPAddress, int32 Port)>Event                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOSCServer::UnbindEventFromOnOSCAddressPatternMatchesPath(const struct FOSCAddress& OSCAddressPattern, const TDelegate<void(struct FOSCAddress& AddressPattern, struct FOSCMessage& Message, const class FString& IPAddress, int32 Port)>& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "UnbindEventFromOnOSCAddressPatternMatchesPath");

	Params::OSCServer_UnbindEventFromOnOSCAddressPatternMatchesPath Parms{};

	Parms.OSCAddressPattern = std::move(OSCAddressPattern);
	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OSC.OSCServer.GetAllowlistedClients
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSet<class FString>                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<class FString> UOSCServer::GetAllowlistedClients() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "GetAllowlistedClients");

	Params::OSCServer_GetAllowlistedClients Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCServer.GetBoundOSCAddressPatterns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FOSCAddress>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FOSCAddress> UOSCServer::GetBoundOSCAddressPatterns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "GetBoundOSCAddressPatterns");

	Params::OSCServer_GetBoundOSCAddressPatterns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCServer.GetIpAddress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bIncludePort                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOSCServer::GetIpAddress(bool bIncludePort) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "GetIpAddress");

	Params::OSCServer_GetIpAddress Parms{};

	Parms.bIncludePort = bIncludePort;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCServer.GetMulticastLoopback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCServer::GetMulticastLoopback() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "GetMulticastLoopback");

	Params::OSCServer_GetMulticastLoopback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCServer.GetPort
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOSCServer::GetPort() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "GetPort");

	Params::OSCServer_GetPort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OSC.OSCServer.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOSCServer::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OSCServer", "IsActive");

	Params::OSCServer_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

