#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MortarGroundTargetPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_MortarWarningFlareData_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MortarGroundTargetPreview.BP_MortarGroundTargetPreview_C
// 0x0090 (0x0338 - 0x02A8)
class ABP_MortarGroundTargetPreview_C final : public AGzMortarGroundTargetPreviewActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      WarningCapsule;                                    // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FlareUpdate_Progress_1977A5FE4AA194CC4084708B870C2284; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FlareUpdate__Direction_1977A5FE4AA194CC4084708B870C2284; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69D4[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FlareUpdate;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Lifetime_FlareGround;                              // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69D5[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FlareStartingHeightOffset;                         // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FlareTraceDistance;                                // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FlareFallingDuration;                              // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugSpawnFlaresOnBeginPlay;                       // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69D6[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DebugSpawnDelay;                                   // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FlareFallingProgress;                              // 0x0308(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          AreFlaresFalling;                                  // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69D7[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_MortarWarningFlareData>      FlareData;                                         // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        DebugFlareProgress;                                // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      WarningDecalNiagaraComponent;                      // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AddWarningFlare(const struct FVector& Offset);
	void BndEvt__BP_MortarGroundTargetPreview_WarningCapsule_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_MortarGroundTargetPreview_WarningCapsule_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void EnableWarningVisualsAndOverlap(double Progress);
	void ExecuteUbergraph_BP_MortarGroundTargetPreview(int32 EntryPoint);
	void FlareUpdate__FinishedFunc();
	void FlareUpdate__UpdateFunc();
	void OnRep_FlareFallingProgress();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ShowProjectileWarnings();
	void SpawnFlaresWithProgress(double FallingProgress);
	void SpawnWarningFlareTrail(const struct FVector& SpawnLocation, class UNiagaraComponent** NiagaraComponent);
	void SpawnWarningGroundFlare(class UNiagaraComponent* TrailParticleSystem);
	void TraceFlareTargetGroundLocation(const struct FVector& StartingLocation, bool* HasHit, double* DropDistance, struct FVector* SpawnLocation);
	void UpdateWarningFlareTrailLocation(class UNiagaraComponent* ParticleSystem, const struct FVector& SpawnLocation, double Progress, double DropDistance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MortarGroundTargetPreview_C">();
	}
	static class ABP_MortarGroundTargetPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MortarGroundTargetPreview_C>();
	}
};
static_assert(alignof(ABP_MortarGroundTargetPreview_C) == 0x000008, "Wrong alignment on ABP_MortarGroundTargetPreview_C");
static_assert(sizeof(ABP_MortarGroundTargetPreview_C) == 0x000338, "Wrong size on ABP_MortarGroundTargetPreview_C");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_MortarGroundTargetPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, Sphere) == 0x0002B0, "Member 'ABP_MortarGroundTargetPreview_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, WarningCapsule) == 0x0002B8, "Member 'ABP_MortarGroundTargetPreview_C::WarningCapsule' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, Scene) == 0x0002C0, "Member 'ABP_MortarGroundTargetPreview_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, FlareUpdate_Progress_1977A5FE4AA194CC4084708B870C2284) == 0x0002C8, "Member 'ABP_MortarGroundTargetPreview_C::FlareUpdate_Progress_1977A5FE4AA194CC4084708B870C2284' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, FlareUpdate__Direction_1977A5FE4AA194CC4084708B870C2284) == 0x0002CC, "Member 'ABP_MortarGroundTargetPreview_C::FlareUpdate__Direction_1977A5FE4AA194CC4084708B870C2284' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, FlareUpdate) == 0x0002D0, "Member 'ABP_MortarGroundTargetPreview_C::FlareUpdate' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, Lifetime_FlareGround) == 0x0002D8, "Member 'ABP_MortarGroundTargetPreview_C::Lifetime_FlareGround' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, FlareStartingHeightOffset) == 0x0002E0, "Member 'ABP_MortarGroundTargetPreview_C::FlareStartingHeightOffset' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, FlareTraceDistance) == 0x0002E8, "Member 'ABP_MortarGroundTargetPreview_C::FlareTraceDistance' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, FlareFallingDuration) == 0x0002F0, "Member 'ABP_MortarGroundTargetPreview_C::FlareFallingDuration' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, DebugSpawnFlaresOnBeginPlay) == 0x0002F8, "Member 'ABP_MortarGroundTargetPreview_C::DebugSpawnFlaresOnBeginPlay' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, DebugSpawnDelay) == 0x000300, "Member 'ABP_MortarGroundTargetPreview_C::DebugSpawnDelay' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, FlareFallingProgress) == 0x000308, "Member 'ABP_MortarGroundTargetPreview_C::FlareFallingProgress' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, AreFlaresFalling) == 0x000310, "Member 'ABP_MortarGroundTargetPreview_C::AreFlaresFalling' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, FlareData) == 0x000318, "Member 'ABP_MortarGroundTargetPreview_C::FlareData' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, DebugFlareProgress) == 0x000328, "Member 'ABP_MortarGroundTargetPreview_C::DebugFlareProgress' has a wrong offset!");
static_assert(offsetof(ABP_MortarGroundTargetPreview_C, WarningDecalNiagaraComponent) == 0x000330, "Member 'ABP_MortarGroundTargetPreview_C::WarningDecalNiagaraComponent' has a wrong offset!");

}

