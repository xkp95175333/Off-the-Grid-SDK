#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Defiler_VisionComponent

#include "Basic.hpp"

#include "BP_Defiler_VisionComponent_classes.hpp"
#include "BP_Defiler_VisionComponent_parameters.hpp"


namespace SDK
{

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.AddMarker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EGzDefilerTargetType                    Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Defiler_MarkActor_C*          Marker                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::AddMarker(class AActor* Target, EGzDefilerTargetType Type, class ABP_Defiler_MarkActor_C** Marker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "AddMarker");

	Params::BP_Defiler_VisionComponent_C_AddMarker Parms{};

	Parms.Target = Target;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Marker != nullptr)
		*Marker = Parms.Marker;
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.AddSourceDefilerLimb
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// float                                   InSphereRadius                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::AddSourceDefilerLimb(const class UActorComponent*& NewItem, float InSphereRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "AddSourceDefilerLimb");

	Params::BP_Defiler_VisionComponent_C_AddSourceDefilerLimb Parms{};

	Parms.NewItem = NewItem;
	Parms.InSphereRadius = InSphereRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.AddTape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::AddTape(const class AActor*& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "AddTape");

	Params::BP_Defiler_VisionComponent_C_AddTape Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.Check Haked Actor Type
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EGzDefilerTargetType                    DefilerType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AnyDistance                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::Check_Haked_Actor_Type(class AActor* Actor, EGzDefilerTargetType* DefilerType, bool* AnyDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "Check Haked Actor Type");

	Params::BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (DefilerType != nullptr)
		*DefilerType = Parms.DefilerType;

	if (AnyDistance != nullptr)
		*AnyDistance = Parms.AnyDistance;
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.CheckNeedDisable
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNeed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::CheckNeedDisable(bool* bNeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "CheckNeedDisable");

	Params::BP_Defiler_VisionComponent_C_CheckNeedDisable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNeed != nullptr)
		*bNeed = Parms.bNeed;
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.Destroy Vision Area
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Defiler_VisionComponent_C::Destroy_Vision_Area()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "Destroy Vision Area");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.DestroyAllMarkActors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Defiler_VisionComponent_C::DestroyAllMarkActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "DestroyAllMarkActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.ExecuteUbergraph_BP_Defiler_VisionComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::ExecuteUbergraph_BP_Defiler_VisionComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "ExecuteUbergraph_BP_Defiler_VisionComponent");

	Params::BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.Get Distance Scale Per Type
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGzDefilerTargetType                    DefilerType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::Get_Distance_Scale_Per_Type(EGzDefilerTargetType DefilerType, double* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "Get Distance Scale Per Type");

	Params::BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type Parms{};

	Parms.DefilerType = DefilerType;

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.GetOwnerLocation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBP_Defiler_VisionComponent_C::GetOwnerLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "GetOwnerLocation");

	Params::BP_Defiler_VisionComponent_C_GetOwnerLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.NewHackedTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DistanceToScaned                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Defiler_MarkActor_C*          MarkActor                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    NotInRange                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::NewHackedTarget(class AActor* Target, class AActor* Source, double DistanceToScaned, class ABP_Defiler_MarkActor_C** MarkActor, bool* NotInRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "NewHackedTarget");

	Params::BP_Defiler_VisionComponent_C_NewHackedTarget Parms{};

	Parms.Target = Target;
	Parms.Source = Source;
	Parms.DistanceToScaned = DistanceToScaned;

	UObject::ProcessEvent(Func, &Parms);

	if (MarkActor != nullptr)
		*MarkActor = Parms.MarkActor;

	if (NotInRange != nullptr)
		*NotInRange = Parms.NotInRange;
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.OnNewHackedTarget__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// uint8                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HackSource                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::OnNewHackedTarget__DelegateSignature(class AActor* Actor, uint8 Type, class AActor* HackSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "OnNewHackedTarget__DelegateSignature");

	Params::BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature Parms{};

	Parms.Actor = Actor;
	Parms.Type = Type;
	Parms.HackSource = HackSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.OnPawnChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::OnPawnChanged_Event(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "OnPawnChanged_Event");

	Params::BP_Defiler_VisionComponent_C_OnPawnChanged_Event Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.OnRep_ReplicatedData
// (BlueprintCallable, BlueprintEvent)

void UBP_Defiler_VisionComponent_C::OnRep_ReplicatedData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "OnRep_ReplicatedData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_Defiler_VisionComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "ReceiveEndPlay");

	Params::BP_Defiler_VisionComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "ReceiveTick");

	Params::BP_Defiler_VisionComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.RemoveHackedActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::RemoveHackedActor(class AActor* Target, class AActor* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "RemoveHackedActor");

	Params::BP_Defiler_VisionComponent_C_RemoveHackedActor Parms{};

	Parms.Target = Target;
	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.RemoveSourceDefilerLimb
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::RemoveSourceDefilerLimb(const class UActorComponent*& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "RemoveSourceDefilerLimb");

	Params::BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.RemoveTape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::RemoveTape(const class AActor*& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "RemoveTape");

	Params::BP_Defiler_VisionComponent_C_RemoveTape Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.Send Start Scan Wave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InRadius                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::Send_Start_Scan_Wave(double InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "Send Start Scan Wave");

	Params::BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave Parms{};

	Parms.InRadius = InRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.SendDisableVision
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_Defiler_VisionComponent_C::SendDisableVision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "SendDisableVision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.SetTagCountZero
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGameplayTag>             Gameplay_Tags_Gameplay_Tags                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_Defiler_VisionComponent_C::SetTagCountZero(TArray<struct FGameplayTag>& Gameplay_Tags_Gameplay_Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "SetTagCountZero");

	Params::BP_Defiler_VisionComponent_C_SetTagCountZero Parms{};

	Parms.Gameplay_Tags_Gameplay_Tags = std::move(Gameplay_Tags_Gameplay_Tags);

	UObject::ProcessEvent(Func, &Parms);

	Gameplay_Tags_Gameplay_Tags = std::move(Parms.Gameplay_Tags_Gameplay_Tags);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.SetVisionStateWithTag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     _0_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_Defiler_VisionComponent_C::SetVisionStateWithTag(const struct FGameplayTag& _0_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "SetVisionStateWithTag");

	Params::BP_Defiler_VisionComponent_C_SetVisionStateWithTag Parms{};

	Parms._0_ = std::move(_0_);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.SpawnVisionArea
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Defiler_VisionComponent_C::SpawnVisionArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "SpawnVisionArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.UpdateState
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_Defiler_VisionComponent_C::UpdateState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Defiler_VisionComponent_C", "UpdateState");

	UObject::ProcessEvent(Func, nullptr);
}

}

