#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RangeIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_RangeIndicator.WBP_RangeIndicator_C
// 0x0060 (0x0340 - 0x02E0)
class UWBP_RangeIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGzTextBlock*                           Range_Text;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         TraceDistance;                                     // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FontStyle;                                         // 0x02F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24AD[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Steps;                                             // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   FillText;                                          // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         FillNumber;                                        // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24AE[0x4];                                     // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CombatComponent;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BaseColorNameOverride;                             // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bOverrideBaseColor;                                // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_24AF[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NoViewTargetRangeColorOverride;                    // 0x0334(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ETextJustify                                  TextAlignment;                                     // 0x033C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_RangeIndicator(int32 EntryPoint);
	void OverrideTextColor();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_RangeIndicator_C">();
	}
	static class UWBP_RangeIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_RangeIndicator_C>();
	}
};
static_assert(alignof(UWBP_RangeIndicator_C) == 0x000008, "Wrong alignment on UWBP_RangeIndicator_C");
static_assert(sizeof(UWBP_RangeIndicator_C) == 0x000340, "Wrong size on UWBP_RangeIndicator_C");
static_assert(offsetof(UWBP_RangeIndicator_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_RangeIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, Range_Text) == 0x0002E8, "Member 'UWBP_RangeIndicator_C::Range_Text' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, TraceDistance) == 0x0002F0, "Member 'UWBP_RangeIndicator_C::TraceDistance' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, FontStyle) == 0x0002F4, "Member 'UWBP_RangeIndicator_C::FontStyle' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, Steps) == 0x000300, "Member 'UWBP_RangeIndicator_C::Steps' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, FillText) == 0x000308, "Member 'UWBP_RangeIndicator_C::FillText' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, FillNumber) == 0x000318, "Member 'UWBP_RangeIndicator_C::FillNumber' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, CombatComponent) == 0x000320, "Member 'UWBP_RangeIndicator_C::CombatComponent' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, BaseColorNameOverride) == 0x000328, "Member 'UWBP_RangeIndicator_C::BaseColorNameOverride' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, bOverrideBaseColor) == 0x000330, "Member 'UWBP_RangeIndicator_C::bOverrideBaseColor' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, NoViewTargetRangeColorOverride) == 0x000334, "Member 'UWBP_RangeIndicator_C::NoViewTargetRangeColorOverride' has a wrong offset!");
static_assert(offsetof(UWBP_RangeIndicator_C, TextAlignment) == 0x00033C, "Member 'UWBP_RangeIndicator_C::TextAlignment' has a wrong offset!");

}

