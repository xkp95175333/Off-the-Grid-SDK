#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaUIBuilder

#include "Basic.hpp"

#include "XsollaUIBuilder_classes.hpp"
#include "XsollaUIBuilder_parameters.hpp"


namespace SDK
{

// Function XsollaUIBuilder.XsollaGenericWrapper.ThemeUpdated
// (Final, Native, Protected)
// Parameters:
// TSubclassOf<class UXsollaUIBuilderTheme>NewTheme                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaGenericWrapper::ThemeUpdated(TSubclassOf<class UXsollaUIBuilderTheme> NewTheme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaGenericWrapper", "ThemeUpdated");

	Params::XsollaGenericWrapper_ThemeUpdated Parms{};

	Parms.NewTheme = NewTheme;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaUIBuilder.XsollaGenericWrapper.UpdateThemeParameters
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FThemeParameters                 InParameters                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UXsollaGenericWrapper::UpdateThemeParameters(const struct FThemeParameters& InParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaGenericWrapper", "UpdateThemeParameters");

	Params::XsollaGenericWrapper_UpdateThemeParameters Parms{};

	Parms.InParameters = std::move(InParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaUIBuilder.XsollaGenericWrapper.UpdateWrapperTheme
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UXsollaGenericWrapper::UpdateWrapperTheme()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaGenericWrapper", "UpdateWrapperTheme");

	UObject::ProcessEvent(Func, nullptr);
}


// Function XsollaUIBuilder.XsollaGenericWrapper.GetWidgetClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UXsollaGenericPrimitive>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UXsollaGenericPrimitive> UXsollaGenericWrapper::GetWidgetClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaGenericWrapper", "GetWidgetClass");

	Params::XsollaGenericWrapper_GetWidgetClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderLibrary.Clear
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FThemeParameters                 Parameters                                             (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UXsollaUIBuilderLibrary::Clear(struct FThemeParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaUIBuilderLibrary", "Clear");

	Params::XsollaUIBuilderLibrary_Clear Parms{};

	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Parameters = std::move(Parms.Parameters);
}


// Function XsollaUIBuilder.XsollaUIBuilderLibrary.GetCurrentTheme
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UXsollaUIBuilderTheme*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UXsollaUIBuilderTheme* UXsollaUIBuilderLibrary::GetCurrentTheme()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaUIBuilderLibrary", "GetCurrentTheme");

	Params::XsollaUIBuilderLibrary_GetCurrentTheme Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderLibrary.GetCurrentWidgetsLibrary
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UXsollaUIBuilderWidgetsLibrary*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UXsollaUIBuilderWidgetsLibrary* UXsollaUIBuilderLibrary::GetCurrentWidgetsLibrary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaUIBuilderLibrary", "GetCurrentWidgetsLibrary");

	Params::XsollaUIBuilderLibrary_GetCurrentWidgetsLibrary Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderLibrary.GetTheme
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UXsollaUIBuilderTheme>ThemeClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UXsollaUIBuilderTheme*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UXsollaUIBuilderTheme* UXsollaUIBuilderLibrary::GetTheme(TSubclassOf<class UXsollaUIBuilderTheme> ThemeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaUIBuilderLibrary", "GetTheme");

	Params::XsollaUIBuilderLibrary_GetTheme Parms{};

	Parms.ThemeClass = ThemeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderLibrary.GetUIBuilderSettings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UXsollaUIBuilderSettings*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UXsollaUIBuilderSettings* UXsollaUIBuilderLibrary::GetUIBuilderSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaUIBuilderLibrary", "GetUIBuilderSettings");

	Params::XsollaUIBuilderLibrary_GetUIBuilderSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderLibrary.GetWidgetsLibrary
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UXsollaUIBuilderWidgetsLibrary>WidgetLibraryClass                                     (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UXsollaUIBuilderWidgetsLibrary*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UXsollaUIBuilderWidgetsLibrary* UXsollaUIBuilderLibrary::GetWidgetsLibrary(TSubclassOf<class UXsollaUIBuilderWidgetsLibrary> WidgetLibraryClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaUIBuilderLibrary", "GetWidgetsLibrary");

	Params::XsollaUIBuilderLibrary_GetWidgetsLibrary Parms{};

	Parms.WidgetLibraryClass = WidgetLibraryClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderLibrary.IsEmpty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FThemeParameters                 Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UXsollaUIBuilderLibrary::IsEmpty(const struct FThemeParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaUIBuilderLibrary", "IsEmpty");

	Params::XsollaUIBuilderLibrary_IsEmpty Parms{};

	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderSettings.UpdateTheme
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UXsollaUIBuilderTheme>NewTheme                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaUIBuilderSettings::UpdateTheme(TSubclassOf<class UXsollaUIBuilderTheme> NewTheme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaUIBuilderSettings", "UpdateTheme");

	Params::XsollaUIBuilderSettings_UpdateTheme Parms{};

	Parms.NewTheme = NewTheme;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaUIBuilder.XsollaUIBuilderTheme.GetBrushByType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBrushThemeType                         BrushType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UXsollaUIBuilderTheme::GetBrushByType(const EBrushThemeType BrushType, bool* bIsFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaUIBuilderTheme", "GetBrushByType");

	Params::XsollaUIBuilderTheme_GetBrushByType Parms{};

	Parms.BrushType = BrushType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsFound != nullptr)
		*bIsFound = Parms.bIsFound;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderTheme.GetColorByType
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EColorType                              ColorType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FColor UXsollaUIBuilderTheme::GetColorByType(const EColorType ColorType, bool* bIsFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaUIBuilderTheme", "GetColorByType");

	Params::XsollaUIBuilderTheme_GetColorByType Parms{};

	Parms.ColorType = ColorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsFound != nullptr)
		*bIsFound = Parms.bIsFound;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderTheme.GetFontByType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFontType                               FontType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateFontInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSlateFontInfo UXsollaUIBuilderTheme::GetFontByType(const EFontType FontType, bool* bIsFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaUIBuilderTheme", "GetFontByType");

	Params::XsollaUIBuilderTheme_GetFontByType Parms{};

	Parms.FontType = FontType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsFound != nullptr)
		*bIsFound = Parms.bIsFound;

	return Parms.ReturnValue;
}


// Function XsollaUIBuilder.XsollaUIBuilderWidgetsLibrary.GetWidgetByType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWidgetType                             WidgetType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UXsollaGenericPrimitive>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UXsollaGenericPrimitive> UXsollaUIBuilderWidgetsLibrary::GetWidgetByType(const EWidgetType WidgetType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaUIBuilderWidgetsLibrary", "GetWidgetByType");

	Params::XsollaUIBuilderWidgetsLibrary_GetWidgetByType Parms{};

	Parms.WidgetType = WidgetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

