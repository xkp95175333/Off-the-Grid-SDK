#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootSpawner_OpenLootV2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootSpawner_OpenLootV2.BP_LootSpawner_OpenLootV2_C
// 0x0020 (0x02F8 - 0x02D8)
class ABP_LootSpawner_OpenLootV2_C final : public AGzOpenLootSpawner
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGzGridLootSpawnerComponent*            GzGridLootSpawner;                                 // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzTableLootChooserComponent*           GzTableLootChooser;                                // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot1;                                 // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LootSpawner_OpenLootV2(int32 EntryPoint);
	void ReceiveBeginPlay();

	TArray<struct FTransform> GetLocalSocketTransforms() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootSpawner_OpenLootV2_C">();
	}
	static class ABP_LootSpawner_OpenLootV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LootSpawner_OpenLootV2_C>();
	}
};
static_assert(alignof(ABP_LootSpawner_OpenLootV2_C) == 0x000008, "Wrong alignment on ABP_LootSpawner_OpenLootV2_C");
static_assert(sizeof(ABP_LootSpawner_OpenLootV2_C) == 0x0002F8, "Wrong size on ABP_LootSpawner_OpenLootV2_C");
static_assert(offsetof(ABP_LootSpawner_OpenLootV2_C, UberGraphFrame) == 0x0002D8, "Member 'ABP_LootSpawner_OpenLootV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LootSpawner_OpenLootV2_C, GzGridLootSpawner) == 0x0002E0, "Member 'ABP_LootSpawner_OpenLootV2_C::GzGridLootSpawner' has a wrong offset!");
static_assert(offsetof(ABP_LootSpawner_OpenLootV2_C, GzTableLootChooser) == 0x0002E8, "Member 'ABP_LootSpawner_OpenLootV2_C::GzTableLootChooser' has a wrong offset!");
static_assert(offsetof(ABP_LootSpawner_OpenLootV2_C, DefaultSceneRoot1) == 0x0002F0, "Member 'ABP_LootSpawner_OpenLootV2_C::DefaultSceneRoot1' has a wrong offset!");

}

