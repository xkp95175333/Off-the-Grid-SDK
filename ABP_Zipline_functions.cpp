#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Zipline

#include "Basic.hpp"

#include "ABP_Zipline_classes.hpp"
#include "ABP_Zipline_parameters.hpp"


namespace SDK
{

// Function ABP_Zipline.ABP_Zipline_C.UpdateZiplineStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Zipline_C::UpdateZiplineStart(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "UpdateZiplineStart");

	Params::ABP_Zipline_C_UpdateZiplineStart Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Zipline.ABP_Zipline_C.SetupZiplineLoop
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Zipline_C::SetupZiplineLoop(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "SetupZiplineLoop");

	Params::ABP_Zipline_C_SetupZiplineLoop Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Zipline.ABP_Zipline_C.NPC_CoverState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_NPC_CoverState                                   (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::NPC_CoverState(struct FPoseLink* Param_NPC_CoverState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "NPC_CoverState");

	Params::ABP_Zipline_C_NPC_CoverState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_NPC_CoverState != nullptr)
		*Param_NPC_CoverState = std::move(Parms.Param_NPC_CoverState);
}


// Function ABP_Zipline.ABP_Zipline_C.Limbless_State
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_Limbless_State                                   (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::Limbless_State(struct FPoseLink* Param_Limbless_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "Limbless_State");

	Params::ABP_Zipline_C_Limbless_State Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Limbless_State != nullptr)
		*Param_Limbless_State = std::move(Parms.Param_Limbless_State);
}


// Function ABP_Zipline.ABP_Zipline_C.KneeSlide_State
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_KneeSlide_State                                  (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::KneeSlide_State(struct FPoseLink* Param_KneeSlide_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "KneeSlide_State");

	Params::ABP_Zipline_C_KneeSlide_State Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_KneeSlide_State != nullptr)
		*Param_KneeSlide_State = std::move(Parms.Param_KneeSlide_State);
}


// Function ABP_Zipline.ABP_Zipline_C.IsVerticalZipline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UABP_Zipline_C::IsVerticalZipline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "IsVerticalZipline");

	Params::ABP_Zipline_C_IsVerticalZipline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetZiplineDataAndLogic
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Zipline_C::GetZiplineDataAndLogic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetZiplineDataAndLogic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Zipline.ABP_Zipline_C.GetZiplineData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGzZiplineMovementRuntimeData    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FGzZiplineMovementRuntimeData UABP_Zipline_C::GetZiplineData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetZiplineData");

	Params::ABP_Zipline_C_GetZiplineData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetVerticalDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Zipline_C::GetVerticalDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetVerticalDirection");

	Params::ABP_Zipline_C_GetVerticalDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetSpine05Data
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform UABP_Zipline_C::GetSpine05Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetSpine05Data");

	Params::ABP_Zipline_C_GetSpine05Data Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetPoleVectorForHandIK_R
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Zipline_C::GetPoleVectorForHandIK_R()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetPoleVectorForHandIK_R");

	Params::ABP_Zipline_C_GetPoleVectorForHandIK_R Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetPoleVectorForHandIK_L
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Zipline_C::GetPoleVectorForHandIK_L()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetPoleVectorForHandIK_L");

	Params::ABP_Zipline_C_GetPoleVectorForHandIK_L Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetPlayerFacingVerticalZiplineDirection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Zipline_C::GetPlayerFacingVerticalZiplineDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetPlayerFacingVerticalZiplineDirection");

	Params::ABP_Zipline_C_GetPlayerFacingVerticalZiplineDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetOwnerMovements
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGzCharacterMovementComponent*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UGzCharacterMovementComponent* UABP_Zipline_C::GetOwnerMovements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetOwnerMovements");

	Params::ABP_Zipline_C_GetOwnerMovements Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetLowerarmData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform UABP_Zipline_C::GetLowerarmData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetLowerarmData");

	Params::ABP_Zipline_C_GetLowerarmData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetLocationOnZipline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Zipline_C::GetLocationOnZipline(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetLocationOnZipline");

	Params::ABP_Zipline_C_GetLocationOnZipline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function ABP_Zipline.ABP_Zipline_C.GetHorizontalDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Zipline_C::GetHorizontalDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetHorizontalDirection");

	Params::ABP_Zipline_C_GetHorizontalDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetHandRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  HandRotation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Zipline_C::GetHandRotation(double* HandRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetHandRotation");

	Params::ABP_Zipline_C_GetHandRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HandRotation != nullptr)
		*HandRotation = Parms.HandRotation;
}


// Function ABP_Zipline.ABP_Zipline_C.GetGzCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AGzPlayerCharacter*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AGzPlayerCharacter* UABP_Zipline_C::GetGzCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetGzCharacter");

	Params::ABP_Zipline_C_GetGzCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetCurrentZipline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AGzZipline*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AGzZipline* UABP_Zipline_C::GetCurrentZipline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetCurrentZipline");

	Params::ABP_Zipline_C_GetCurrentZipline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.GetAnimBPHuman
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UABP_Human_C*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UABP_Human_C* UABP_Zipline_C::GetAnimBPHuman()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "GetAnimBPHuman");

	Params::ABP_Zipline_C_GetAnimBPHuman Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Zipline.ABP_Zipline_C.FullBodyAdditives
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBodyAdditives                                (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBodyAdditives(struct FPoseLink* Param_FullBodyAdditives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBodyAdditives");

	Params::ABP_Zipline_C_FullBodyAdditives Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBodyAdditives != nullptr)
		*Param_FullBodyAdditives = std::move(Parms.Param_FullBodyAdditives);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_StopState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_StopState                               (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_StopState(struct FPoseLink* Param_FullBody_StopState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_StopState");

	Params::ABP_Zipline_C_FullBody_StopState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_StopState != nullptr)
		*Param_FullBody_StopState = std::move(Parms.Param_FullBody_StopState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_StartState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_StartState                              (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_StartState(struct FPoseLink* Param_FullBody_StartState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_StartState");

	Params::ABP_Zipline_C_FullBody_StartState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_StartState != nullptr)
		*Param_FullBody_StartState = std::move(Parms.Param_FullBody_StartState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_PivotState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_PivotState                              (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_PivotState(struct FPoseLink* Param_FullBody_PivotState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_PivotState");

	Params::ABP_Zipline_C_FullBody_PivotState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_PivotState != nullptr)
		*Param_FullBody_PivotState = std::move(Parms.Param_FullBody_PivotState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_JumpStartState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_JumpStartState                          (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_JumpStartState(struct FPoseLink* Param_FullBody_JumpStartState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_JumpStartState");

	Params::ABP_Zipline_C_FullBody_JumpStartState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_JumpStartState != nullptr)
		*Param_FullBody_JumpStartState = std::move(Parms.Param_FullBody_JumpStartState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_JumpStartLoopState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_JumpStartLoopState                      (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_JumpStartLoopState(struct FPoseLink* Param_FullBody_JumpStartLoopState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_JumpStartLoopState");

	Params::ABP_Zipline_C_FullBody_JumpStartLoopState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_JumpStartLoopState != nullptr)
		*Param_FullBody_JumpStartLoopState = std::move(Parms.Param_FullBody_JumpStartLoopState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_JumpApexState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_JumpApexState                           (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_JumpApexState(struct FPoseLink* Param_FullBody_JumpApexState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_JumpApexState");

	Params::ABP_Zipline_C_FullBody_JumpApexState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_JumpApexState != nullptr)
		*Param_FullBody_JumpApexState = std::move(Parms.Param_FullBody_JumpApexState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_IdleState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_IdleState                               (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_IdleState(struct FPoseLink* Param_FullBody_IdleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_IdleState");

	Params::ABP_Zipline_C_FullBody_IdleState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_IdleState != nullptr)
		*Param_FullBody_IdleState = std::move(Parms.Param_FullBody_IdleState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_FallLoopState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_FallLoopState                           (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_FallLoopState(struct FPoseLink* Param_FullBody_FallLoopState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_FallLoopState");

	Params::ABP_Zipline_C_FullBody_FallLoopState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_FallLoopState != nullptr)
		*Param_FullBody_FallLoopState = std::move(Parms.Param_FullBody_FallLoopState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_FallLandState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_FallLandState                           (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_FallLandState(struct FPoseLink* Param_FullBody_FallLandState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_FallLandState");

	Params::ABP_Zipline_C_FullBody_FallLandState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_FallLandState != nullptr)
		*Param_FullBody_FallLandState = std::move(Parms.Param_FullBody_FallLandState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_CycleState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_CycleState                              (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_CycleState(struct FPoseLink* Param_FullBody_CycleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_CycleState");

	Params::ABP_Zipline_C_FullBody_CycleState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_CycleState != nullptr)
		*Param_FullBody_CycleState = std::move(Parms.Param_FullBody_CycleState);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_AnimAbility
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_AnimAbility                             (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_AnimAbility(struct FPoseLink* Param_FullBody_AnimAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_AnimAbility");

	Params::ABP_Zipline_C_FullBody_AnimAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_AnimAbility != nullptr)
		*Param_FullBody_AnimAbility = std::move(Parms.Param_FullBody_AnimAbility);
}


// Function ABP_Zipline.ABP_Zipline_C.FullBody_Aiming
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        PreAimPose                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  Param_AimYaw                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_AimPitch                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink                        Param_FullBody_Aiming                                  (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::FullBody_Aiming(const struct FPoseLink& PreAimPose, double Param_AimYaw, double Param_AimPitch, struct FPoseLink* Param_FullBody_Aiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "FullBody_Aiming");

	Params::ABP_Zipline_C_FullBody_Aiming Parms{};

	Parms.PreAimPose = std::move(PreAimPose);
	Parms.Param_AimYaw = Param_AimYaw;
	Parms.Param_AimPitch = Param_AimPitch;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_Aiming != nullptr)
		*Param_FullBody_Aiming = std::move(Parms.Param_FullBody_Aiming);
}


// Function ABP_Zipline.ABP_Zipline_C.ExecuteUbergraph_ABP_Zipline
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Zipline_C::ExecuteUbergraph_ABP_Zipline(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "ExecuteUbergraph_ABP_Zipline");

	Params::ABP_Zipline_C_ExecuteUbergraph_ABP_Zipline Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Zipline.ABP_Zipline_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_RotateRootBone_85928F1A415B74D7A2458EA3C0F2B781
// (BlueprintEvent)

void UABP_Zipline_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_RotateRootBone_85928F1A415B74D7A2458EA3C0F2B781()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_RotateRootBone_85928F1A415B74D7A2458EA3C0F2B781");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Zipline.ABP_Zipline_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_ControlRig_1AA7C92E4BD6ADDF9D649C8C6C94CD49
// (BlueprintEvent)

void UABP_Zipline_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_ControlRig_1AA7C92E4BD6ADDF9D649C8C6C94CD49()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_ControlRig_1AA7C92E4BD6ADDF9D649C8C6C94CD49");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Zipline.ABP_Zipline_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_BlendSpacePlayer_4F1D2B4D463A3B060FFC10A3D1F168B8
// (BlueprintEvent)

void UABP_Zipline_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_BlendSpacePlayer_4F1D2B4D463A3B060FFC10A3D1F168B8()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_BlendSpacePlayer_4F1D2B4D463A3B060FFC10A3D1F168B8");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Zipline.ABP_Zipline_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_BlendSpacePlayer_45B6A2BA4E334BCB304AB9BD353D2DBE
// (BlueprintEvent)

void UABP_Zipline_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_BlendSpacePlayer_45B6A2BA4E334BCB304AB9BD353D2DBE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_BlendSpacePlayer_45B6A2BA4E334BCB304AB9BD353D2DBE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Zipline.ABP_Zipline_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_ApplyAdditive_66C3B7A94BB0EA202C6DF59062B6A4FC
// (BlueprintEvent)

void UABP_Zipline_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_ApplyAdditive_66C3B7A94BB0EA202C6DF59062B6A4FC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_ApplyAdditive_66C3B7A94BB0EA202C6DF59062B6A4FC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Zipline.ABP_Zipline_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_ApplyAdditive_4418A28F4504E69D172A2EBE0FF071CF
// (BlueprintEvent)

void UABP_Zipline_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_ApplyAdditive_4418A28F4504E69D172A2EBE0FF071CF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Zipline_AnimGraphNode_ApplyAdditive_4418A28F4504E69D172A2EBE0FF071CF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Zipline.ABP_Zipline_C.DebugData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Zipline_C::DebugData(bool Enable_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "DebugData");

	Params::ABP_Zipline_C_DebugData Parms{};

	Parms.Enable_ = Enable_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Zipline.ABP_Zipline_C.DamagedBody_IdleState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_DamagedBody_IdleState                            (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::DamagedBody_IdleState(struct FPoseLink* Param_DamagedBody_IdleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "DamagedBody_IdleState");

	Params::ABP_Zipline_C_DamagedBody_IdleState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_DamagedBody_IdleState != nullptr)
		*Param_DamagedBody_IdleState = std::move(Parms.Param_DamagedBody_IdleState);
}


// Function ABP_Zipline.ABP_Zipline_C.DamagedBody_ExitState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_DamagedBody_ExitState                            (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::DamagedBody_ExitState(struct FPoseLink* Param_DamagedBody_ExitState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "DamagedBody_ExitState");

	Params::ABP_Zipline_C_DamagedBody_ExitState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_DamagedBody_ExitState != nullptr)
		*Param_DamagedBody_ExitState = std::move(Parms.Param_DamagedBody_ExitState);
}


// Function ABP_Zipline.ABP_Zipline_C.DamagedBody_EnterState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_DamagedBody_EnterState                           (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::DamagedBody_EnterState(struct FPoseLink* Param_DamagedBody_EnterState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "DamagedBody_EnterState");

	Params::ABP_Zipline_C_DamagedBody_EnterState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_DamagedBody_EnterState != nullptr)
		*Param_DamagedBody_EnterState = std::move(Parms.Param_DamagedBody_EnterState);
}


// Function ABP_Zipline.ABP_Zipline_C.DamagedBody_CycleState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_DamagedBody_CycleState                           (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::DamagedBody_CycleState(struct FPoseLink* Param_DamagedBody_CycleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "DamagedBody_CycleState");

	Params::ABP_Zipline_C_DamagedBody_CycleState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_DamagedBody_CycleState != nullptr)
		*Param_DamagedBody_CycleState = std::move(Parms.Param_DamagedBody_CycleState);
}


// Function ABP_Zipline.ABP_Zipline_C.BlueprintThreadSafeUpdateAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Zipline_C::BlueprintThreadSafeUpdateAnimation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "BlueprintThreadSafeUpdateAnimation");

	Params::ABP_Zipline_C_BlueprintThreadSafeUpdateAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Zipline.ABP_Zipline_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "AnimGraph");

	Params::ABP_Zipline_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function ABP_Zipline.ABP_Zipline_C.Aiming_Correction
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Aim_pose                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_Aiming_Correction                                (Parm, OutParm, NoDestructor)

void UABP_Zipline_C::Aiming_Correction(const struct FPoseLink& Aim_pose, struct FPoseLink* Param_Aiming_Correction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Zipline_C", "Aiming_Correction");

	Params::ABP_Zipline_C_Aiming_Correction Parms{};

	Parms.Aim_pose = std::move(Aim_pose);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Aiming_Correction != nullptr)
		*Param_Aiming_Correction = std::move(Parms.Param_Aiming_Correction);
}

}

