#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaLogin

#include "Basic.hpp"

#include "XsollaLogin_structs.hpp"


namespace SDK::Params
{

// Function XsollaLogin.XsollaLoginBrowserWrapper.ExecuteBrowserClosed
// 0x0001 (0x0001 - 0x0000)
struct XsollaLoginBrowserWrapper_ExecuteBrowserClosed final
{
public:
	bool                                          bAuthenticationCompleted;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginBrowserWrapper_ExecuteBrowserClosed) == 0x000001, "Wrong alignment on XsollaLoginBrowserWrapper_ExecuteBrowserClosed");
static_assert(sizeof(XsollaLoginBrowserWrapper_ExecuteBrowserClosed) == 0x000001, "Wrong size on XsollaLoginBrowserWrapper_ExecuteBrowserClosed");
static_assert(offsetof(XsollaLoginBrowserWrapper_ExecuteBrowserClosed, bAuthenticationCompleted) == 0x000000, "Member 'XsollaLoginBrowserWrapper_ExecuteBrowserClosed::bAuthenticationCompleted' has a wrong offset!");

// Function XsollaLogin.XsollaLoginBrowserWrapper.LoadUrl
// 0x0010 (0x0010 - 0x0000)
struct XsollaLoginBrowserWrapper_LoadUrl final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginBrowserWrapper_LoadUrl) == 0x000008, "Wrong alignment on XsollaLoginBrowserWrapper_LoadUrl");
static_assert(sizeof(XsollaLoginBrowserWrapper_LoadUrl) == 0x000010, "Wrong size on XsollaLoginBrowserWrapper_LoadUrl");
static_assert(offsetof(XsollaLoginBrowserWrapper_LoadUrl, URL) == 0x000000, "Member 'XsollaLoginBrowserWrapper_LoadUrl::URL' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.ConvertTextureToByteArray
// 0x0018 (0x0018 - 0x0000)
struct XsollaLoginLibrary_ConvertTextureToByteArray final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginLibrary_ConvertTextureToByteArray) == 0x000008, "Wrong alignment on XsollaLoginLibrary_ConvertTextureToByteArray");
static_assert(sizeof(XsollaLoginLibrary_ConvertTextureToByteArray) == 0x000018, "Wrong size on XsollaLoginLibrary_ConvertTextureToByteArray");
static_assert(offsetof(XsollaLoginLibrary_ConvertTextureToByteArray, Texture) == 0x000000, "Member 'XsollaLoginLibrary_ConvertTextureToByteArray::Texture' has a wrong offset!");
static_assert(offsetof(XsollaLoginLibrary_ConvertTextureToByteArray, ReturnValue) == 0x000008, "Member 'XsollaLoginLibrary_ConvertTextureToByteArray::ReturnValue' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.GetAppId
// 0x0010 (0x0010 - 0x0000)
struct XsollaLoginLibrary_GetAppId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginLibrary_GetAppId) == 0x000008, "Wrong alignment on XsollaLoginLibrary_GetAppId");
static_assert(sizeof(XsollaLoginLibrary_GetAppId) == 0x000010, "Wrong size on XsollaLoginLibrary_GetAppId");
static_assert(offsetof(XsollaLoginLibrary_GetAppId, ReturnValue) == 0x000000, "Member 'XsollaLoginLibrary_GetAppId::ReturnValue' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.GetDeviceId
// 0x0010 (0x0010 - 0x0000)
struct XsollaLoginLibrary_GetDeviceId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginLibrary_GetDeviceId) == 0x000008, "Wrong alignment on XsollaLoginLibrary_GetDeviceId");
static_assert(sizeof(XsollaLoginLibrary_GetDeviceId) == 0x000010, "Wrong size on XsollaLoginLibrary_GetDeviceId");
static_assert(offsetof(XsollaLoginLibrary_GetDeviceId, ReturnValue) == 0x000000, "Member 'XsollaLoginLibrary_GetDeviceId::ReturnValue' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.GetDeviceName
// 0x0010 (0x0010 - 0x0000)
struct XsollaLoginLibrary_GetDeviceName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginLibrary_GetDeviceName) == 0x000008, "Wrong alignment on XsollaLoginLibrary_GetDeviceName");
static_assert(sizeof(XsollaLoginLibrary_GetDeviceName) == 0x000010, "Wrong size on XsollaLoginLibrary_GetDeviceName");
static_assert(offsetof(XsollaLoginLibrary_GetDeviceName, ReturnValue) == 0x000000, "Member 'XsollaLoginLibrary_GetDeviceName::ReturnValue' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.GetSessionTicket
// 0x0010 (0x0010 - 0x0000)
struct XsollaLoginLibrary_GetSessionTicket final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginLibrary_GetSessionTicket) == 0x000008, "Wrong alignment on XsollaLoginLibrary_GetSessionTicket");
static_assert(sizeof(XsollaLoginLibrary_GetSessionTicket) == 0x000010, "Wrong size on XsollaLoginLibrary_GetSessionTicket");
static_assert(offsetof(XsollaLoginLibrary_GetSessionTicket, ReturnValue) == 0x000000, "Member 'XsollaLoginLibrary_GetSessionTicket::ReturnValue' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.GetStringCommandLineParam
// 0x0020 (0x0020 - 0x0000)
struct XsollaLoginLibrary_GetStringCommandLineParam final
{
public:
	class FString                                 ParamName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginLibrary_GetStringCommandLineParam) == 0x000008, "Wrong alignment on XsollaLoginLibrary_GetStringCommandLineParam");
static_assert(sizeof(XsollaLoginLibrary_GetStringCommandLineParam) == 0x000020, "Wrong size on XsollaLoginLibrary_GetStringCommandLineParam");
static_assert(offsetof(XsollaLoginLibrary_GetStringCommandLineParam, ParamName) == 0x000000, "Member 'XsollaLoginLibrary_GetStringCommandLineParam::ParamName' has a wrong offset!");
static_assert(offsetof(XsollaLoginLibrary_GetStringCommandLineParam, ReturnValue) == 0x000010, "Member 'XsollaLoginLibrary_GetStringCommandLineParam::ReturnValue' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.GetUrlParameter
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginLibrary_GetUrlParameter final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Parameter;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginLibrary_GetUrlParameter) == 0x000008, "Wrong alignment on XsollaLoginLibrary_GetUrlParameter");
static_assert(sizeof(XsollaLoginLibrary_GetUrlParameter) == 0x000030, "Wrong size on XsollaLoginLibrary_GetUrlParameter");
static_assert(offsetof(XsollaLoginLibrary_GetUrlParameter, URL) == 0x000000, "Member 'XsollaLoginLibrary_GetUrlParameter::URL' has a wrong offset!");
static_assert(offsetof(XsollaLoginLibrary_GetUrlParameter, Parameter) == 0x000010, "Member 'XsollaLoginLibrary_GetUrlParameter::Parameter' has a wrong offset!");
static_assert(offsetof(XsollaLoginLibrary_GetUrlParameter, ReturnValue) == 0x000020, "Member 'XsollaLoginLibrary_GetUrlParameter::ReturnValue' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.IsEmailValid
// 0x0018 (0x0018 - 0x0000)
struct XsollaLoginLibrary_IsEmailValid final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282F[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginLibrary_IsEmailValid) == 0x000008, "Wrong alignment on XsollaLoginLibrary_IsEmailValid");
static_assert(sizeof(XsollaLoginLibrary_IsEmailValid) == 0x000018, "Wrong size on XsollaLoginLibrary_IsEmailValid");
static_assert(offsetof(XsollaLoginLibrary_IsEmailValid, Email) == 0x000000, "Member 'XsollaLoginLibrary_IsEmailValid::Email' has a wrong offset!");
static_assert(offsetof(XsollaLoginLibrary_IsEmailValid, ReturnValue) == 0x000010, "Member 'XsollaLoginLibrary_IsEmailValid::ReturnValue' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.IsSteamBuildValid
// 0x0018 (0x0018 - 0x0000)
struct XsollaLoginLibrary_IsSteamBuildValid final
{
public:
	class FString                                 OutError;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2830[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginLibrary_IsSteamBuildValid) == 0x000008, "Wrong alignment on XsollaLoginLibrary_IsSteamBuildValid");
static_assert(sizeof(XsollaLoginLibrary_IsSteamBuildValid) == 0x000018, "Wrong size on XsollaLoginLibrary_IsSteamBuildValid");
static_assert(offsetof(XsollaLoginLibrary_IsSteamBuildValid, OutError) == 0x000000, "Member 'XsollaLoginLibrary_IsSteamBuildValid::OutError' has a wrong offset!");
static_assert(offsetof(XsollaLoginLibrary_IsSteamBuildValid, ReturnValue) == 0x000010, "Member 'XsollaLoginLibrary_IsSteamBuildValid::ReturnValue' has a wrong offset!");

// Function XsollaLogin.XsollaLoginLibrary.LaunchPlatfromBrowser
// 0x0010 (0x0010 - 0x0000)
struct XsollaLoginLibrary_LaunchPlatfromBrowser final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginLibrary_LaunchPlatfromBrowser) == 0x000008, "Wrong alignment on XsollaLoginLibrary_LaunchPlatfromBrowser");
static_assert(sizeof(XsollaLoginLibrary_LaunchPlatfromBrowser) == 0x000010, "Wrong size on XsollaLoginLibrary_LaunchPlatfromBrowser");
static_assert(offsetof(XsollaLoginLibrary_LaunchPlatfromBrowser, URL) == 0x000000, "Member 'XsollaLoginLibrary_LaunchPlatfromBrowser::URL' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.AuthenticateUser
// 0x0048 (0x0048 - 0x0000)
struct XsollaLoginSubsystem_AuthenticateUser final
{
public:
	class FString                                 Username;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRememberMe;                                       // 0x0040(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2832[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginSubsystem_AuthenticateUser) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_AuthenticateUser");
static_assert(sizeof(XsollaLoginSubsystem_AuthenticateUser) == 0x000048, "Wrong size on XsollaLoginSubsystem_AuthenticateUser");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateUser, Username) == 0x000000, "Member 'XsollaLoginSubsystem_AuthenticateUser::Username' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateUser, Password) == 0x000010, "Member 'XsollaLoginSubsystem_AuthenticateUser::Password' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateUser, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_AuthenticateUser::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateUser, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_AuthenticateUser::ErrorCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateUser, bRememberMe) == 0x000040, "Member 'XsollaLoginSubsystem_AuthenticateUser::bRememberMe' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.AuthenticateViaDeviceId
// 0x0050 (0x0050 - 0x0000)
struct XsollaLoginSubsystem_AuthenticateViaDeviceId final
{
public:
	class FString                                 DeviceName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeviceID;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_AuthenticateViaDeviceId) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_AuthenticateViaDeviceId");
static_assert(sizeof(XsollaLoginSubsystem_AuthenticateViaDeviceId) == 0x000050, "Wrong size on XsollaLoginSubsystem_AuthenticateViaDeviceId");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaDeviceId, DeviceName) == 0x000000, "Member 'XsollaLoginSubsystem_AuthenticateViaDeviceId::DeviceName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaDeviceId, DeviceID) == 0x000010, "Member 'XsollaLoginSubsystem_AuthenticateViaDeviceId::DeviceID' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaDeviceId, State) == 0x000020, "Member 'XsollaLoginSubsystem_AuthenticateViaDeviceId::State' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaDeviceId, SuccessCallback) == 0x000030, "Member 'XsollaLoginSubsystem_AuthenticateViaDeviceId::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaDeviceId, ErrorCallback) == 0x000040, "Member 'XsollaLoginSubsystem_AuthenticateViaDeviceId::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.AuthenticateViaSocialNetwork
// 0x0058 (0x0058 - 0x0000)
struct XsollaLoginSubsystem_AuthenticateViaSocialNetwork final
{
public:
	class FString                                 ProviderName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             CancelCallback;                                    // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRememberMe;                                       // 0x0040(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2833[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 State;                                             // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_AuthenticateViaSocialNetwork) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_AuthenticateViaSocialNetwork");
static_assert(sizeof(XsollaLoginSubsystem_AuthenticateViaSocialNetwork) == 0x000058, "Wrong size on XsollaLoginSubsystem_AuthenticateViaSocialNetwork");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaSocialNetwork, ProviderName) == 0x000000, "Member 'XsollaLoginSubsystem_AuthenticateViaSocialNetwork::ProviderName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaSocialNetwork, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_AuthenticateViaSocialNetwork::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaSocialNetwork, CancelCallback) == 0x000020, "Member 'XsollaLoginSubsystem_AuthenticateViaSocialNetwork::CancelCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaSocialNetwork, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_AuthenticateViaSocialNetwork::ErrorCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaSocialNetwork, bRememberMe) == 0x000040, "Member 'XsollaLoginSubsystem_AuthenticateViaSocialNetwork::bRememberMe' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateViaSocialNetwork, State) == 0x000048, "Member 'XsollaLoginSubsystem_AuthenticateViaSocialNetwork::State' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.AuthenticateWithSessionTicket
// 0x0070 (0x0070 - 0x0000)
struct XsollaLoginSubsystem_AuthenticateWithSessionTicket final
{
public:
	class FString                                 ProviderName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SessionTicket;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Code;                                              // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppId;                                             // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_AuthenticateWithSessionTicket) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_AuthenticateWithSessionTicket");
static_assert(sizeof(XsollaLoginSubsystem_AuthenticateWithSessionTicket) == 0x000070, "Wrong size on XsollaLoginSubsystem_AuthenticateWithSessionTicket");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateWithSessionTicket, ProviderName) == 0x000000, "Member 'XsollaLoginSubsystem_AuthenticateWithSessionTicket::ProviderName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateWithSessionTicket, SessionTicket) == 0x000010, "Member 'XsollaLoginSubsystem_AuthenticateWithSessionTicket::SessionTicket' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateWithSessionTicket, Code) == 0x000020, "Member 'XsollaLoginSubsystem_AuthenticateWithSessionTicket::Code' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateWithSessionTicket, AppId) == 0x000030, "Member 'XsollaLoginSubsystem_AuthenticateWithSessionTicket::AppId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateWithSessionTicket, State) == 0x000040, "Member 'XsollaLoginSubsystem_AuthenticateWithSessionTicket::State' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateWithSessionTicket, SuccessCallback) == 0x000050, "Member 'XsollaLoginSubsystem_AuthenticateWithSessionTicket::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthenticateWithSessionTicket, ErrorCallback) == 0x000060, "Member 'XsollaLoginSubsystem_AuthenticateWithSessionTicket::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.AuthViaAccessTokenOfSocialNetwork
// 0x0070 (0x0070 - 0x0000)
struct XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AuthTokenSecret;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OpenId;                                            // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProviderName;                                      // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork");
static_assert(sizeof(XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork) == 0x000070, "Wrong size on XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork");
static_assert(offsetof(XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork, AuthTokenSecret) == 0x000010, "Member 'XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork::AuthTokenSecret' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork, OpenId) == 0x000020, "Member 'XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork::OpenId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork, ProviderName) == 0x000030, "Member 'XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork::ProviderName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork, State) == 0x000040, "Member 'XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork::State' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork, SuccessCallback) == 0x000050, "Member 'XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork, ErrorCallback) == 0x000060, "Member 'XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.AuthWithXsollaWidget
// 0x0038 (0x0038 - 0x0000)
struct XsollaLoginSubsystem_AuthWithXsollaWidget final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UXsollaLoginBrowserWrapper*             BrowserWidget;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             CancelCallback;                                    // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRememberMe;                                       // 0x0030(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2834[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginSubsystem_AuthWithXsollaWidget) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_AuthWithXsollaWidget");
static_assert(sizeof(XsollaLoginSubsystem_AuthWithXsollaWidget) == 0x000038, "Wrong size on XsollaLoginSubsystem_AuthWithXsollaWidget");
static_assert(offsetof(XsollaLoginSubsystem_AuthWithXsollaWidget, WorldContextObject) == 0x000000, "Member 'XsollaLoginSubsystem_AuthWithXsollaWidget::WorldContextObject' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthWithXsollaWidget, BrowserWidget) == 0x000008, "Member 'XsollaLoginSubsystem_AuthWithXsollaWidget::BrowserWidget' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthWithXsollaWidget, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_AuthWithXsollaWidget::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthWithXsollaWidget, CancelCallback) == 0x000020, "Member 'XsollaLoginSubsystem_AuthWithXsollaWidget::CancelCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_AuthWithXsollaWidget, bRememberMe) == 0x000030, "Member 'XsollaLoginSubsystem_AuthWithXsollaWidget::bRememberMe' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.CheckUserAge
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_CheckUserAge final
{
public:
	class FString                                 DateOfBirth;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaCheckUserAgeResult& CheckUserAgeResult)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_CheckUserAge) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_CheckUserAge");
static_assert(sizeof(XsollaLoginSubsystem_CheckUserAge) == 0x000030, "Wrong size on XsollaLoginSubsystem_CheckUserAge");
static_assert(offsetof(XsollaLoginSubsystem_CheckUserAge, DateOfBirth) == 0x000000, "Member 'XsollaLoginSubsystem_CheckUserAge::DateOfBirth' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CheckUserAge, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_CheckUserAge::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CheckUserAge, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_CheckUserAge::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.CompleteAuthByEmail
// 0x0050 (0x0050 - 0x0000)
struct XsollaLoginSubsystem_CompleteAuthByEmail final
{
public:
	class FString                                 Code;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OperationId;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_CompleteAuthByEmail) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_CompleteAuthByEmail");
static_assert(sizeof(XsollaLoginSubsystem_CompleteAuthByEmail) == 0x000050, "Wrong size on XsollaLoginSubsystem_CompleteAuthByEmail");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByEmail, Code) == 0x000000, "Member 'XsollaLoginSubsystem_CompleteAuthByEmail::Code' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByEmail, OperationId) == 0x000010, "Member 'XsollaLoginSubsystem_CompleteAuthByEmail::OperationId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByEmail, Email) == 0x000020, "Member 'XsollaLoginSubsystem_CompleteAuthByEmail::Email' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByEmail, SuccessCallback) == 0x000030, "Member 'XsollaLoginSubsystem_CompleteAuthByEmail::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByEmail, ErrorCallback) == 0x000040, "Member 'XsollaLoginSubsystem_CompleteAuthByEmail::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.CompleteAuthByPhoneNumber
// 0x0050 (0x0050 - 0x0000)
struct XsollaLoginSubsystem_CompleteAuthByPhoneNumber final
{
public:
	class FString                                 Code;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OperationId;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneNumber;                                       // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_CompleteAuthByPhoneNumber) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_CompleteAuthByPhoneNumber");
static_assert(sizeof(XsollaLoginSubsystem_CompleteAuthByPhoneNumber) == 0x000050, "Wrong size on XsollaLoginSubsystem_CompleteAuthByPhoneNumber");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByPhoneNumber, Code) == 0x000000, "Member 'XsollaLoginSubsystem_CompleteAuthByPhoneNumber::Code' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByPhoneNumber, OperationId) == 0x000010, "Member 'XsollaLoginSubsystem_CompleteAuthByPhoneNumber::OperationId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByPhoneNumber, PhoneNumber) == 0x000020, "Member 'XsollaLoginSubsystem_CompleteAuthByPhoneNumber::PhoneNumber' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByPhoneNumber, SuccessCallback) == 0x000030, "Member 'XsollaLoginSubsystem_CompleteAuthByPhoneNumber::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CompleteAuthByPhoneNumber, ErrorCallback) == 0x000040, "Member 'XsollaLoginSubsystem_CompleteAuthByPhoneNumber::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.CreateAccountLinkingCode
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_CreateAccountLinkingCode final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code)>    SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_CreateAccountLinkingCode) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_CreateAccountLinkingCode");
static_assert(sizeof(XsollaLoginSubsystem_CreateAccountLinkingCode) == 0x000030, "Wrong size on XsollaLoginSubsystem_CreateAccountLinkingCode");
static_assert(offsetof(XsollaLoginSubsystem_CreateAccountLinkingCode, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_CreateAccountLinkingCode::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CreateAccountLinkingCode, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_CreateAccountLinkingCode::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_CreateAccountLinkingCode, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_CreateAccountLinkingCode::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.DropLoginData
// 0x0001 (0x0001 - 0x0000)
struct XsollaLoginSubsystem_DropLoginData final
{
public:
	bool                                          ClearCache;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_DropLoginData) == 0x000001, "Wrong alignment on XsollaLoginSubsystem_DropLoginData");
static_assert(sizeof(XsollaLoginSubsystem_DropLoginData) == 0x000001, "Wrong size on XsollaLoginSubsystem_DropLoginData");
static_assert(offsetof(XsollaLoginSubsystem_DropLoginData, ClearCache) == 0x000000, "Member 'XsollaLoginSubsystem_DropLoginData::ClearCache' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.ExchangeAuthenticationCodeToToken
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken final
{
public:
	class FString                                 AuthenticationCode;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken");
static_assert(sizeof(XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken) == 0x000030, "Wrong size on XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken");
static_assert(offsetof(XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken, AuthenticationCode) == 0x000000, "Member 'XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken::AuthenticationCode' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetAuthConfirmationCode
// 0x0050 (0x0050 - 0x0000)
struct XsollaLoginSubsystem_GetAuthConfirmationCode final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OperationId;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& OperationId)> SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& OperationId)> TimeoutCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetAuthConfirmationCode) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetAuthConfirmationCode");
static_assert(sizeof(XsollaLoginSubsystem_GetAuthConfirmationCode) == 0x000050, "Wrong size on XsollaLoginSubsystem_GetAuthConfirmationCode");
static_assert(offsetof(XsollaLoginSubsystem_GetAuthConfirmationCode, UserId) == 0x000000, "Member 'XsollaLoginSubsystem_GetAuthConfirmationCode::UserId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetAuthConfirmationCode, OperationId) == 0x000010, "Member 'XsollaLoginSubsystem_GetAuthConfirmationCode::OperationId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetAuthConfirmationCode, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetAuthConfirmationCode::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetAuthConfirmationCode, TimeoutCallback) == 0x000030, "Member 'XsollaLoginSubsystem_GetAuthConfirmationCode::TimeoutCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetAuthConfirmationCode, ErrorCallback) == 0x000040, "Member 'XsollaLoginSubsystem_GetAuthConfirmationCode::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetFriends
// 0x0050 (0x0050 - 0x0000)
struct XsollaLoginSubsystem_GetFriends final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXsollaFriendsType                            Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXsollaUsersSortCriteria                      SortBy;                                            // 0x0011(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXsollaUsersSortOrder                         SortOrder;                                         // 0x0012(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2835[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FXsollaFriendsData& FriendsData, EXsollaFriendsType Type)> SuccessCallback;                                   // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2836[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 After;                                             // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Limit;                                             // 0x0048(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2837[0x4];                                     // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginSubsystem_GetFriends) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetFriends");
static_assert(sizeof(XsollaLoginSubsystem_GetFriends) == 0x000050, "Wrong size on XsollaLoginSubsystem_GetFriends");
static_assert(offsetof(XsollaLoginSubsystem_GetFriends, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetFriends::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetFriends, Type) == 0x000010, "Member 'XsollaLoginSubsystem_GetFriends::Type' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetFriends, SortBy) == 0x000011, "Member 'XsollaLoginSubsystem_GetFriends::SortBy' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetFriends, SortOrder) == 0x000012, "Member 'XsollaLoginSubsystem_GetFriends::SortOrder' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetFriends, SuccessCallback) == 0x000014, "Member 'XsollaLoginSubsystem_GetFriends::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetFriends, ErrorCallback) == 0x000024, "Member 'XsollaLoginSubsystem_GetFriends::ErrorCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetFriends, After) == 0x000038, "Member 'XsollaLoginSubsystem_GetFriends::After' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetFriends, Limit) == 0x000048, "Member 'XsollaLoginSubsystem_GetFriends::Limit' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetLinkedSocialNetworks
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_GetLinkedSocialNetworks final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FXsollaLinkedSocialNetworkData>& LinkedSocialNetworks)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetLinkedSocialNetworks) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetLinkedSocialNetworks");
static_assert(sizeof(XsollaLoginSubsystem_GetLinkedSocialNetworks) == 0x000030, "Wrong size on XsollaLoginSubsystem_GetLinkedSocialNetworks");
static_assert(offsetof(XsollaLoginSubsystem_GetLinkedSocialNetworks, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetLinkedSocialNetworks::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetLinkedSocialNetworks, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_GetLinkedSocialNetworks::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetLinkedSocialNetworks, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetLinkedSocialNetworks::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetSocialAuthenticationUrl
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_GetSocialAuthenticationUrl final
{
public:
	class FString                                 ProviderName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& URL)>     SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetSocialAuthenticationUrl) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetSocialAuthenticationUrl");
static_assert(sizeof(XsollaLoginSubsystem_GetSocialAuthenticationUrl) == 0x000040, "Wrong size on XsollaLoginSubsystem_GetSocialAuthenticationUrl");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialAuthenticationUrl, ProviderName) == 0x000000, "Member 'XsollaLoginSubsystem_GetSocialAuthenticationUrl::ProviderName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialAuthenticationUrl, State) == 0x000010, "Member 'XsollaLoginSubsystem_GetSocialAuthenticationUrl::State' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialAuthenticationUrl, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetSocialAuthenticationUrl::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialAuthenticationUrl, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_GetSocialAuthenticationUrl::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetSocialAuthLinks
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_GetSocialAuthLinks final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Locale;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FXsollaSocialAuthLink>& Links)> SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetSocialAuthLinks) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetSocialAuthLinks");
static_assert(sizeof(XsollaLoginSubsystem_GetSocialAuthLinks) == 0x000040, "Wrong size on XsollaLoginSubsystem_GetSocialAuthLinks");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialAuthLinks, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetSocialAuthLinks::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialAuthLinks, Locale) == 0x000010, "Member 'XsollaLoginSubsystem_GetSocialAuthLinks::Locale' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialAuthLinks, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetSocialAuthLinks::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialAuthLinks, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_GetSocialAuthLinks::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetSocialFriends
// 0x0050 (0x0050 - 0x0000)
struct XsollaLoginSubsystem_GetSocialFriends final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaSocialFriendsData& SocialFriendsData)> SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Offset;                                            // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Limit;                                             // 0x0044(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          FromThisGame;                                      // 0x0048(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2838[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginSubsystem_GetSocialFriends) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetSocialFriends");
static_assert(sizeof(XsollaLoginSubsystem_GetSocialFriends) == 0x000050, "Wrong size on XsollaLoginSubsystem_GetSocialFriends");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialFriends, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetSocialFriends::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialFriends, Platform) == 0x000010, "Member 'XsollaLoginSubsystem_GetSocialFriends::Platform' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialFriends, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetSocialFriends::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialFriends, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_GetSocialFriends::ErrorCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialFriends, Offset) == 0x000040, "Member 'XsollaLoginSubsystem_GetSocialFriends::Offset' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialFriends, Limit) == 0x000044, "Member 'XsollaLoginSubsystem_GetSocialFriends::Limit' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetSocialFriends, FromThisGame) == 0x000048, "Member 'XsollaLoginSubsystem_GetSocialFriends::FromThisGame' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetUserAttributes
// 0x0050 (0x0050 - 0x0000)
struct XsollaLoginSubsystem_GetUserAttributes final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AttributeKeys;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FXsollaUserAttribute>& UserAttributes)> SuccessCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetUserAttributes) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetUserAttributes");
static_assert(sizeof(XsollaLoginSubsystem_GetUserAttributes) == 0x000050, "Wrong size on XsollaLoginSubsystem_GetUserAttributes");
static_assert(offsetof(XsollaLoginSubsystem_GetUserAttributes, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetUserAttributes::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserAttributes, UserId) == 0x000010, "Member 'XsollaLoginSubsystem_GetUserAttributes::UserId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserAttributes, AttributeKeys) == 0x000020, "Member 'XsollaLoginSubsystem_GetUserAttributes::AttributeKeys' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserAttributes, SuccessCallback) == 0x000030, "Member 'XsollaLoginSubsystem_GetUserAttributes::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserAttributes, ErrorCallback) == 0x000040, "Member 'XsollaLoginSubsystem_GetUserAttributes::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetUserDetails
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_GetUserDetails final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaUserDetails& UserDetails)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetUserDetails) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetUserDetails");
static_assert(sizeof(XsollaLoginSubsystem_GetUserDetails) == 0x000030, "Wrong size on XsollaLoginSubsystem_GetUserDetails");
static_assert(offsetof(XsollaLoginSubsystem_GetUserDetails, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetUserDetails::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserDetails, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_GetUserDetails::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserDetails, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetUserDetails::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetUserEmail
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_GetUserEmail final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Param)>   SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetUserEmail) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetUserEmail");
static_assert(sizeof(XsollaLoginSubsystem_GetUserEmail) == 0x000030, "Wrong size on XsollaLoginSubsystem_GetUserEmail");
static_assert(offsetof(XsollaLoginSubsystem_GetUserEmail, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetUserEmail::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserEmail, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_GetUserEmail::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserEmail, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetUserEmail::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetUserPhoneNumber
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_GetUserPhoneNumber final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Param)>   SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetUserPhoneNumber) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetUserPhoneNumber");
static_assert(sizeof(XsollaLoginSubsystem_GetUserPhoneNumber) == 0x000030, "Wrong size on XsollaLoginSubsystem_GetUserPhoneNumber");
static_assert(offsetof(XsollaLoginSubsystem_GetUserPhoneNumber, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetUserPhoneNumber::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserPhoneNumber, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_GetUserPhoneNumber::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserPhoneNumber, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetUserPhoneNumber::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetUserProfile
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_GetUserProfile final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaPublicProfile& UserProfile)> SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetUserProfile) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetUserProfile");
static_assert(sizeof(XsollaLoginSubsystem_GetUserProfile) == 0x000040, "Wrong size on XsollaLoginSubsystem_GetUserProfile");
static_assert(offsetof(XsollaLoginSubsystem_GetUserProfile, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetUserProfile::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserProfile, UserId) == 0x000010, "Member 'XsollaLoginSubsystem_GetUserProfile::UserId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserProfile, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetUserProfile::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserProfile, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_GetUserProfile::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetUserReadOnlyAttributes
// 0x0050 (0x0050 - 0x0000)
struct XsollaLoginSubsystem_GetUserReadOnlyAttributes final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AttributeKeys;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FXsollaUserAttribute>& UserAttributes)> SuccessCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetUserReadOnlyAttributes) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetUserReadOnlyAttributes");
static_assert(sizeof(XsollaLoginSubsystem_GetUserReadOnlyAttributes) == 0x000050, "Wrong size on XsollaLoginSubsystem_GetUserReadOnlyAttributes");
static_assert(offsetof(XsollaLoginSubsystem_GetUserReadOnlyAttributes, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetUserReadOnlyAttributes::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserReadOnlyAttributes, UserId) == 0x000010, "Member 'XsollaLoginSubsystem_GetUserReadOnlyAttributes::UserId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserReadOnlyAttributes, AttributeKeys) == 0x000020, "Member 'XsollaLoginSubsystem_GetUserReadOnlyAttributes::AttributeKeys' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserReadOnlyAttributes, SuccessCallback) == 0x000030, "Member 'XsollaLoginSubsystem_GetUserReadOnlyAttributes::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUserReadOnlyAttributes, ErrorCallback) == 0x000040, "Member 'XsollaLoginSubsystem_GetUserReadOnlyAttributes::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetUsersDevices
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_GetUsersDevices final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FXsollaUserDevice>& UserDevices)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetUsersDevices) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetUsersDevices");
static_assert(sizeof(XsollaLoginSubsystem_GetUsersDevices) == 0x000030, "Wrong size on XsollaLoginSubsystem_GetUsersDevices");
static_assert(offsetof(XsollaLoginSubsystem_GetUsersDevices, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetUsersDevices::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUsersDevices, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_GetUsersDevices::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUsersDevices, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetUsersDevices::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetUsersFriends
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_GetUsersFriends final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code)>    SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetUsersFriends) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetUsersFriends");
static_assert(sizeof(XsollaLoginSubsystem_GetUsersFriends) == 0x000040, "Wrong size on XsollaLoginSubsystem_GetUsersFriends");
static_assert(offsetof(XsollaLoginSubsystem_GetUsersFriends, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_GetUsersFriends::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUsersFriends, Platform) == 0x000010, "Member 'XsollaLoginSubsystem_GetUsersFriends::Platform' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUsersFriends, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_GetUsersFriends::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_GetUsersFriends, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_GetUsersFriends::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.Initialize
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_Initialize final
{
public:
	class FString                                 InProjectId;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InLoginId;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InClientId;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_Initialize) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_Initialize");
static_assert(sizeof(XsollaLoginSubsystem_Initialize) == 0x000030, "Wrong size on XsollaLoginSubsystem_Initialize");
static_assert(offsetof(XsollaLoginSubsystem_Initialize, InProjectId) == 0x000000, "Member 'XsollaLoginSubsystem_Initialize::InProjectId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_Initialize, InLoginId) == 0x000010, "Member 'XsollaLoginSubsystem_Initialize::InLoginId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_Initialize, InClientId) == 0x000020, "Member 'XsollaLoginSubsystem_Initialize::InClientId' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.LaunchNativeSocialAuthentication
// 0x0058 (0x0058 - 0x0000)
struct XsollaLoginSubsystem_LaunchNativeSocialAuthentication final
{
public:
	class FString                                 ProviderName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             CancelCallback;                                    // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRememberMe;                                       // 0x0040(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2839[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 State;                                             // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_LaunchNativeSocialAuthentication) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_LaunchNativeSocialAuthentication");
static_assert(sizeof(XsollaLoginSubsystem_LaunchNativeSocialAuthentication) == 0x000058, "Wrong size on XsollaLoginSubsystem_LaunchNativeSocialAuthentication");
static_assert(offsetof(XsollaLoginSubsystem_LaunchNativeSocialAuthentication, ProviderName) == 0x000000, "Member 'XsollaLoginSubsystem_LaunchNativeSocialAuthentication::ProviderName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LaunchNativeSocialAuthentication, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_LaunchNativeSocialAuthentication::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LaunchNativeSocialAuthentication, CancelCallback) == 0x000020, "Member 'XsollaLoginSubsystem_LaunchNativeSocialAuthentication::CancelCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LaunchNativeSocialAuthentication, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_LaunchNativeSocialAuthentication::ErrorCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LaunchNativeSocialAuthentication, bRememberMe) == 0x000040, "Member 'XsollaLoginSubsystem_LaunchNativeSocialAuthentication::bRememberMe' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LaunchNativeSocialAuthentication, State) == 0x000048, "Member 'XsollaLoginSubsystem_LaunchNativeSocialAuthentication::State' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.LaunchSocialAuthentication
// 0x0018 (0x0018 - 0x0000)
struct XsollaLoginSubsystem_LaunchSocialAuthentication final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            BrowserWidget;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRememberMe;                                       // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_283A[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginSubsystem_LaunchSocialAuthentication) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_LaunchSocialAuthentication");
static_assert(sizeof(XsollaLoginSubsystem_LaunchSocialAuthentication) == 0x000018, "Wrong size on XsollaLoginSubsystem_LaunchSocialAuthentication");
static_assert(offsetof(XsollaLoginSubsystem_LaunchSocialAuthentication, WorldContextObject) == 0x000000, "Member 'XsollaLoginSubsystem_LaunchSocialAuthentication::WorldContextObject' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LaunchSocialAuthentication, BrowserWidget) == 0x000008, "Member 'XsollaLoginSubsystem_LaunchSocialAuthentication::BrowserWidget' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LaunchSocialAuthentication, bRememberMe) == 0x000010, "Member 'XsollaLoginSubsystem_LaunchSocialAuthentication::bRememberMe' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.LinkDeviceToAccount
// 0x0060 (0x0060 - 0x0000)
struct XsollaLoginSubsystem_LinkDeviceToAccount final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlatformName;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeviceName;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeviceID;                                          // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SuccessCallback;                                   // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_LinkDeviceToAccount) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_LinkDeviceToAccount");
static_assert(sizeof(XsollaLoginSubsystem_LinkDeviceToAccount) == 0x000060, "Wrong size on XsollaLoginSubsystem_LinkDeviceToAccount");
static_assert(offsetof(XsollaLoginSubsystem_LinkDeviceToAccount, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_LinkDeviceToAccount::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkDeviceToAccount, PlatformName) == 0x000010, "Member 'XsollaLoginSubsystem_LinkDeviceToAccount::PlatformName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkDeviceToAccount, DeviceName) == 0x000020, "Member 'XsollaLoginSubsystem_LinkDeviceToAccount::DeviceName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkDeviceToAccount, DeviceID) == 0x000030, "Member 'XsollaLoginSubsystem_LinkDeviceToAccount::DeviceID' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkDeviceToAccount, SuccessCallback) == 0x000040, "Member 'XsollaLoginSubsystem_LinkDeviceToAccount::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkDeviceToAccount, ErrorCallback) == 0x000050, "Member 'XsollaLoginSubsystem_LinkDeviceToAccount::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.LinkEmailAndPassword
// 0x0068 (0x0068 - 0x0000)
struct XsollaLoginSubsystem_LinkEmailAndPassword final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReceiveNewsConsent;                                // 0x0030(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_283B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Username;                                          // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bNeedToConfirmEmail)>     SuccessCallback;                                   // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_LinkEmailAndPassword) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_LinkEmailAndPassword");
static_assert(sizeof(XsollaLoginSubsystem_LinkEmailAndPassword) == 0x000068, "Wrong size on XsollaLoginSubsystem_LinkEmailAndPassword");
static_assert(offsetof(XsollaLoginSubsystem_LinkEmailAndPassword, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_LinkEmailAndPassword::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkEmailAndPassword, Email) == 0x000010, "Member 'XsollaLoginSubsystem_LinkEmailAndPassword::Email' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkEmailAndPassword, Password) == 0x000020, "Member 'XsollaLoginSubsystem_LinkEmailAndPassword::Password' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkEmailAndPassword, ReceiveNewsConsent) == 0x000030, "Member 'XsollaLoginSubsystem_LinkEmailAndPassword::ReceiveNewsConsent' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkEmailAndPassword, Username) == 0x000038, "Member 'XsollaLoginSubsystem_LinkEmailAndPassword::Username' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkEmailAndPassword, SuccessCallback) == 0x000048, "Member 'XsollaLoginSubsystem_LinkEmailAndPassword::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkEmailAndPassword, ErrorCallback) == 0x000058, "Member 'XsollaLoginSubsystem_LinkEmailAndPassword::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.LinkSocialNetworkToUserAccount
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_LinkSocialNetworkToUserAccount final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProviderName;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Content)> SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_LinkSocialNetworkToUserAccount) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_LinkSocialNetworkToUserAccount");
static_assert(sizeof(XsollaLoginSubsystem_LinkSocialNetworkToUserAccount) == 0x000040, "Wrong size on XsollaLoginSubsystem_LinkSocialNetworkToUserAccount");
static_assert(offsetof(XsollaLoginSubsystem_LinkSocialNetworkToUserAccount, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_LinkSocialNetworkToUserAccount::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkSocialNetworkToUserAccount, ProviderName) == 0x000010, "Member 'XsollaLoginSubsystem_LinkSocialNetworkToUserAccount::ProviderName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkSocialNetworkToUserAccount, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_LinkSocialNetworkToUserAccount::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LinkSocialNetworkToUserAccount, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_LinkSocialNetworkToUserAccount::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.LogoutUser
// 0x0038 (0x0038 - 0x0000)
struct XsollaLoginSubsystem_LogoutUser final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXsollaSessionType                            Sessions;                                          // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_283C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             SuccessCallback;                                   // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_283D[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginSubsystem_LogoutUser) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_LogoutUser");
static_assert(sizeof(XsollaLoginSubsystem_LogoutUser) == 0x000038, "Wrong size on XsollaLoginSubsystem_LogoutUser");
static_assert(offsetof(XsollaLoginSubsystem_LogoutUser, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_LogoutUser::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LogoutUser, Sessions) == 0x000010, "Member 'XsollaLoginSubsystem_LogoutUser::Sessions' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LogoutUser, SuccessCallback) == 0x000014, "Member 'XsollaLoginSubsystem_LogoutUser::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_LogoutUser, ErrorCallback) == 0x000024, "Member 'XsollaLoginSubsystem_LogoutUser::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.ModifyFriends
// 0x0048 (0x0048 - 0x0000)
struct XsollaLoginSubsystem_ModifyFriends final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXsollaFriendAction                           Action;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_283E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserId;                                            // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SuccessCallback;                                   // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_ModifyFriends) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_ModifyFriends");
static_assert(sizeof(XsollaLoginSubsystem_ModifyFriends) == 0x000048, "Wrong size on XsollaLoginSubsystem_ModifyFriends");
static_assert(offsetof(XsollaLoginSubsystem_ModifyFriends, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_ModifyFriends::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyFriends, Action) == 0x000010, "Member 'XsollaLoginSubsystem_ModifyFriends::Action' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyFriends, UserId) == 0x000018, "Member 'XsollaLoginSubsystem_ModifyFriends::UserId' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyFriends, SuccessCallback) == 0x000028, "Member 'XsollaLoginSubsystem_ModifyFriends::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyFriends, ErrorCallback) == 0x000038, "Member 'XsollaLoginSubsystem_ModifyFriends::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.ModifyUserAttributes
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_ModifyUserAttributes final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FXsollaUserAttribute>           AttributesToModify;                                // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_ModifyUserAttributes) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_ModifyUserAttributes");
static_assert(sizeof(XsollaLoginSubsystem_ModifyUserAttributes) == 0x000040, "Wrong size on XsollaLoginSubsystem_ModifyUserAttributes");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserAttributes, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_ModifyUserAttributes::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserAttributes, AttributesToModify) == 0x000010, "Member 'XsollaLoginSubsystem_ModifyUserAttributes::AttributesToModify' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserAttributes, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_ModifyUserAttributes::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserAttributes, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_ModifyUserAttributes::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.ModifyUserDetails
// 0x0080 (0x0080 - 0x0000)
struct XsollaLoginSubsystem_ModifyUserDetails final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 birthday;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FirstName;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LastName;                                          // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Gender;                                            // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nickname;                                          // 0x0050(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaUserDetails& UserDetails)> SuccessCallback;                                   // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0070(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_ModifyUserDetails) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_ModifyUserDetails");
static_assert(sizeof(XsollaLoginSubsystem_ModifyUserDetails) == 0x000080, "Wrong size on XsollaLoginSubsystem_ModifyUserDetails");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserDetails, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_ModifyUserDetails::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserDetails, birthday) == 0x000010, "Member 'XsollaLoginSubsystem_ModifyUserDetails::birthday' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserDetails, FirstName) == 0x000020, "Member 'XsollaLoginSubsystem_ModifyUserDetails::FirstName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserDetails, LastName) == 0x000030, "Member 'XsollaLoginSubsystem_ModifyUserDetails::LastName' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserDetails, Gender) == 0x000040, "Member 'XsollaLoginSubsystem_ModifyUserDetails::Gender' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserDetails, Nickname) == 0x000050, "Member 'XsollaLoginSubsystem_ModifyUserDetails::Nickname' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserDetails, SuccessCallback) == 0x000060, "Member 'XsollaLoginSubsystem_ModifyUserDetails::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserDetails, ErrorCallback) == 0x000070, "Member 'XsollaLoginSubsystem_ModifyUserDetails::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.ModifyUserPhoneNumber
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_ModifyUserPhoneNumber final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneNumber;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Param)>   SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_ModifyUserPhoneNumber) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_ModifyUserPhoneNumber");
static_assert(sizeof(XsollaLoginSubsystem_ModifyUserPhoneNumber) == 0x000040, "Wrong size on XsollaLoginSubsystem_ModifyUserPhoneNumber");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserPhoneNumber, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_ModifyUserPhoneNumber::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserPhoneNumber, PhoneNumber) == 0x000010, "Member 'XsollaLoginSubsystem_ModifyUserPhoneNumber::PhoneNumber' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserPhoneNumber, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_ModifyUserPhoneNumber::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserPhoneNumber, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_ModifyUserPhoneNumber::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.ModifyUserProfilePicture
// 0x0038 (0x0038 - 0x0000)
struct XsollaLoginSubsystem_ModifyUserProfilePicture final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UTexture2D*                       Picture;                                           // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Param)>   SuccessCallback;                                   // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_ModifyUserProfilePicture) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_ModifyUserProfilePicture");
static_assert(sizeof(XsollaLoginSubsystem_ModifyUserProfilePicture) == 0x000038, "Wrong size on XsollaLoginSubsystem_ModifyUserProfilePicture");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserProfilePicture, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_ModifyUserProfilePicture::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserProfilePicture, Picture) == 0x000010, "Member 'XsollaLoginSubsystem_ModifyUserProfilePicture::Picture' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserProfilePicture, SuccessCallback) == 0x000018, "Member 'XsollaLoginSubsystem_ModifyUserProfilePicture::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ModifyUserProfilePicture, ErrorCallback) == 0x000028, "Member 'XsollaLoginSubsystem_ModifyUserProfilePicture::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.RefreshToken
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_RefreshToken final
{
public:
	class FString                                 Param_RefreshToken;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_RefreshToken) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_RefreshToken");
static_assert(sizeof(XsollaLoginSubsystem_RefreshToken) == 0x000030, "Wrong size on XsollaLoginSubsystem_RefreshToken");
static_assert(offsetof(XsollaLoginSubsystem_RefreshToken, Param_RefreshToken) == 0x000000, "Member 'XsollaLoginSubsystem_RefreshToken::Param_RefreshToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RefreshToken, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_RefreshToken::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RefreshToken, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_RefreshToken::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.RegisterUser
// 0x00C8 (0x00C8 - 0x0000)
struct XsollaLoginSubsystem_RegisterUser final
{
public:
	class FString                                 Username;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Locale;                                            // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PersonalDataProcessingConsent;                     // 0x0050(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReceiveNewsConsent;                                // 0x0051(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_283F[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            AdditionalFields;                                  // 0x0058(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x00B8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_RegisterUser) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_RegisterUser");
static_assert(sizeof(XsollaLoginSubsystem_RegisterUser) == 0x0000C8, "Wrong size on XsollaLoginSubsystem_RegisterUser");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, Username) == 0x000000, "Member 'XsollaLoginSubsystem_RegisterUser::Username' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, Password) == 0x000010, "Member 'XsollaLoginSubsystem_RegisterUser::Password' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, Email) == 0x000020, "Member 'XsollaLoginSubsystem_RegisterUser::Email' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, State) == 0x000030, "Member 'XsollaLoginSubsystem_RegisterUser::State' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, Locale) == 0x000040, "Member 'XsollaLoginSubsystem_RegisterUser::Locale' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, PersonalDataProcessingConsent) == 0x000050, "Member 'XsollaLoginSubsystem_RegisterUser::PersonalDataProcessingConsent' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, ReceiveNewsConsent) == 0x000051, "Member 'XsollaLoginSubsystem_RegisterUser::ReceiveNewsConsent' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, AdditionalFields) == 0x000058, "Member 'XsollaLoginSubsystem_RegisterUser::AdditionalFields' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, SuccessCallback) == 0x0000A8, "Member 'XsollaLoginSubsystem_RegisterUser::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RegisterUser, ErrorCallback) == 0x0000B8, "Member 'XsollaLoginSubsystem_RegisterUser::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.RemoveProfilePicture
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_RemoveProfilePicture final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SuccessCallback;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_RemoveProfilePicture) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_RemoveProfilePicture");
static_assert(sizeof(XsollaLoginSubsystem_RemoveProfilePicture) == 0x000030, "Wrong size on XsollaLoginSubsystem_RemoveProfilePicture");
static_assert(offsetof(XsollaLoginSubsystem_RemoveProfilePicture, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_RemoveProfilePicture::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RemoveProfilePicture, SuccessCallback) == 0x000010, "Member 'XsollaLoginSubsystem_RemoveProfilePicture::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RemoveProfilePicture, ErrorCallback) == 0x000020, "Member 'XsollaLoginSubsystem_RemoveProfilePicture::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.RemoveUserAttributes
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_RemoveUserAttributes final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AttributesToRemove;                                // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_RemoveUserAttributes) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_RemoveUserAttributes");
static_assert(sizeof(XsollaLoginSubsystem_RemoveUserAttributes) == 0x000040, "Wrong size on XsollaLoginSubsystem_RemoveUserAttributes");
static_assert(offsetof(XsollaLoginSubsystem_RemoveUserAttributes, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_RemoveUserAttributes::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RemoveUserAttributes, AttributesToRemove) == 0x000010, "Member 'XsollaLoginSubsystem_RemoveUserAttributes::AttributesToRemove' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RemoveUserAttributes, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_RemoveUserAttributes::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RemoveUserAttributes, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_RemoveUserAttributes::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.RemoveUserPhoneNumber
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_RemoveUserPhoneNumber final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhoneNumber;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_RemoveUserPhoneNumber) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_RemoveUserPhoneNumber");
static_assert(sizeof(XsollaLoginSubsystem_RemoveUserPhoneNumber) == 0x000040, "Wrong size on XsollaLoginSubsystem_RemoveUserPhoneNumber");
static_assert(offsetof(XsollaLoginSubsystem_RemoveUserPhoneNumber, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_RemoveUserPhoneNumber::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RemoveUserPhoneNumber, PhoneNumber) == 0x000010, "Member 'XsollaLoginSubsystem_RemoveUserPhoneNumber::PhoneNumber' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RemoveUserPhoneNumber, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_RemoveUserPhoneNumber::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_RemoveUserPhoneNumber, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_RemoveUserPhoneNumber::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.ResendAccountConfirmationEmail
// 0x0050 (0x0050 - 0x0000)
struct XsollaLoginSubsystem_ResendAccountConfirmationEmail final
{
public:
	class FString                                 Username;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Locale;                                            // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SuccessCallback;                                   // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_ResendAccountConfirmationEmail) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_ResendAccountConfirmationEmail");
static_assert(sizeof(XsollaLoginSubsystem_ResendAccountConfirmationEmail) == 0x000050, "Wrong size on XsollaLoginSubsystem_ResendAccountConfirmationEmail");
static_assert(offsetof(XsollaLoginSubsystem_ResendAccountConfirmationEmail, Username) == 0x000000, "Member 'XsollaLoginSubsystem_ResendAccountConfirmationEmail::Username' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ResendAccountConfirmationEmail, State) == 0x000010, "Member 'XsollaLoginSubsystem_ResendAccountConfirmationEmail::State' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ResendAccountConfirmationEmail, Locale) == 0x000020, "Member 'XsollaLoginSubsystem_ResendAccountConfirmationEmail::Locale' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ResendAccountConfirmationEmail, SuccessCallback) == 0x000030, "Member 'XsollaLoginSubsystem_ResendAccountConfirmationEmail::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ResendAccountConfirmationEmail, ErrorCallback) == 0x000040, "Member 'XsollaLoginSubsystem_ResendAccountConfirmationEmail::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.ResetUserPassword
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_ResetUserPassword final
{
public:
	class FString                                 User;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Locale;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_ResetUserPassword) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_ResetUserPassword");
static_assert(sizeof(XsollaLoginSubsystem_ResetUserPassword) == 0x000040, "Wrong size on XsollaLoginSubsystem_ResetUserPassword");
static_assert(offsetof(XsollaLoginSubsystem_ResetUserPassword, User) == 0x000000, "Member 'XsollaLoginSubsystem_ResetUserPassword::User' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ResetUserPassword, Locale) == 0x000010, "Member 'XsollaLoginSubsystem_ResetUserPassword::Locale' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ResetUserPassword, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_ResetUserPassword::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ResetUserPassword, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_ResetUserPassword::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.SearchUsersByNickname
// 0x0048 (0x0048 - 0x0000)
struct XsollaLoginSubsystem_SearchUsersByNickname final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nickname;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FXsollaUserSearchResult& SearchResult)> SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Offset;                                            // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Limit;                                             // 0x0044(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_SearchUsersByNickname) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_SearchUsersByNickname");
static_assert(sizeof(XsollaLoginSubsystem_SearchUsersByNickname) == 0x000048, "Wrong size on XsollaLoginSubsystem_SearchUsersByNickname");
static_assert(offsetof(XsollaLoginSubsystem_SearchUsersByNickname, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_SearchUsersByNickname::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_SearchUsersByNickname, Nickname) == 0x000010, "Member 'XsollaLoginSubsystem_SearchUsersByNickname::Nickname' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_SearchUsersByNickname, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_SearchUsersByNickname::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_SearchUsersByNickname, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_SearchUsersByNickname::ErrorCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_SearchUsersByNickname, Offset) == 0x000040, "Member 'XsollaLoginSubsystem_SearchUsersByNickname::Offset' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_SearchUsersByNickname, Limit) == 0x000044, "Member 'XsollaLoginSubsystem_SearchUsersByNickname::Limit' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.SetLoginData
// 0x0060 (0x0060 - 0x0000)
struct XsollaLoginSubsystem_SetLoginData final
{
public:
	struct FXsollaLoginData                       Data;                                              // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ClearCache;                                        // 0x0058(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2840[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginSubsystem_SetLoginData) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_SetLoginData");
static_assert(sizeof(XsollaLoginSubsystem_SetLoginData) == 0x000060, "Wrong size on XsollaLoginSubsystem_SetLoginData");
static_assert(offsetof(XsollaLoginSubsystem_SetLoginData, Data) == 0x000000, "Member 'XsollaLoginSubsystem_SetLoginData::Data' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_SetLoginData, ClearCache) == 0x000058, "Member 'XsollaLoginSubsystem_SetLoginData::ClearCache' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.SetToken
// 0x0010 (0x0010 - 0x0000)
struct XsollaLoginSubsystem_SetToken final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_SetToken) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_SetToken");
static_assert(sizeof(XsollaLoginSubsystem_SetToken) == 0x000010, "Wrong size on XsollaLoginSubsystem_SetToken");
static_assert(offsetof(XsollaLoginSubsystem_SetToken, Token) == 0x000000, "Member 'XsollaLoginSubsystem_SetToken::Token' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.SocialAuthUrlReceivedCallback
// 0x0010 (0x0010 - 0x0000)
struct XsollaLoginSubsystem_SocialAuthUrlReceivedCallback final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_SocialAuthUrlReceivedCallback) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_SocialAuthUrlReceivedCallback");
static_assert(sizeof(XsollaLoginSubsystem_SocialAuthUrlReceivedCallback) == 0x000010, "Wrong size on XsollaLoginSubsystem_SocialAuthUrlReceivedCallback");
static_assert(offsetof(XsollaLoginSubsystem_SocialAuthUrlReceivedCallback, URL) == 0x000000, "Member 'XsollaLoginSubsystem_SocialAuthUrlReceivedCallback::URL' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.StartAuthByEmail
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_StartAuthByEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& OperationId)> SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_StartAuthByEmail) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_StartAuthByEmail");
static_assert(sizeof(XsollaLoginSubsystem_StartAuthByEmail) == 0x000040, "Wrong size on XsollaLoginSubsystem_StartAuthByEmail");
static_assert(offsetof(XsollaLoginSubsystem_StartAuthByEmail, Email) == 0x000000, "Member 'XsollaLoginSubsystem_StartAuthByEmail::Email' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_StartAuthByEmail, State) == 0x000010, "Member 'XsollaLoginSubsystem_StartAuthByEmail::State' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_StartAuthByEmail, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_StartAuthByEmail::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_StartAuthByEmail, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_StartAuthByEmail::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.StartAuthByPhoneNumber
// 0x0040 (0x0040 - 0x0000)
struct XsollaLoginSubsystem_StartAuthByPhoneNumber final
{
public:
	class FString                                 PhoneNumber;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& OperationId)> SuccessCallback;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_StartAuthByPhoneNumber) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_StartAuthByPhoneNumber");
static_assert(sizeof(XsollaLoginSubsystem_StartAuthByPhoneNumber) == 0x000040, "Wrong size on XsollaLoginSubsystem_StartAuthByPhoneNumber");
static_assert(offsetof(XsollaLoginSubsystem_StartAuthByPhoneNumber, PhoneNumber) == 0x000000, "Member 'XsollaLoginSubsystem_StartAuthByPhoneNumber::PhoneNumber' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_StartAuthByPhoneNumber, State) == 0x000010, "Member 'XsollaLoginSubsystem_StartAuthByPhoneNumber::State' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_StartAuthByPhoneNumber, SuccessCallback) == 0x000020, "Member 'XsollaLoginSubsystem_StartAuthByPhoneNumber::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_StartAuthByPhoneNumber, ErrorCallback) == 0x000030, "Member 'XsollaLoginSubsystem_StartAuthByPhoneNumber::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.UnlinkDeviceFromAccount
// 0x0038 (0x0038 - 0x0000)
struct XsollaLoginSubsystem_UnlinkDeviceFromAccount final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         DeviceID;                                          // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SuccessCallback;                                   // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)> ErrorCallback;                                     // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_UnlinkDeviceFromAccount) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_UnlinkDeviceFromAccount");
static_assert(sizeof(XsollaLoginSubsystem_UnlinkDeviceFromAccount) == 0x000038, "Wrong size on XsollaLoginSubsystem_UnlinkDeviceFromAccount");
static_assert(offsetof(XsollaLoginSubsystem_UnlinkDeviceFromAccount, AuthToken) == 0x000000, "Member 'XsollaLoginSubsystem_UnlinkDeviceFromAccount::AuthToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_UnlinkDeviceFromAccount, DeviceID) == 0x000010, "Member 'XsollaLoginSubsystem_UnlinkDeviceFromAccount::DeviceID' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_UnlinkDeviceFromAccount, SuccessCallback) == 0x000018, "Member 'XsollaLoginSubsystem_UnlinkDeviceFromAccount::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_UnlinkDeviceFromAccount, ErrorCallback) == 0x000028, "Member 'XsollaLoginSubsystem_UnlinkDeviceFromAccount::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.UpdateAuthTokenData
// 0x0030 (0x0030 - 0x0000)
struct XsollaLoginSubsystem_UpdateAuthTokenData final
{
public:
	class FString                                 AccessToken;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExpiresIn;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2841[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RefreshToken;                                      // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRememberMe;                                       // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2842[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XsollaLoginSubsystem_UpdateAuthTokenData) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_UpdateAuthTokenData");
static_assert(sizeof(XsollaLoginSubsystem_UpdateAuthTokenData) == 0x000030, "Wrong size on XsollaLoginSubsystem_UpdateAuthTokenData");
static_assert(offsetof(XsollaLoginSubsystem_UpdateAuthTokenData, AccessToken) == 0x000000, "Member 'XsollaLoginSubsystem_UpdateAuthTokenData::AccessToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_UpdateAuthTokenData, ExpiresIn) == 0x000010, "Member 'XsollaLoginSubsystem_UpdateAuthTokenData::ExpiresIn' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_UpdateAuthTokenData, RefreshToken) == 0x000018, "Member 'XsollaLoginSubsystem_UpdateAuthTokenData::RefreshToken' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_UpdateAuthTokenData, bRememberMe) == 0x000028, "Member 'XsollaLoginSubsystem_UpdateAuthTokenData::bRememberMe' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.ValidateToken
// 0x0020 (0x0020 - 0x0000)
struct XsollaLoginSubsystem_ValidateToken final
{
public:
	TDelegate<void(struct FXsollaLoginData& LoginData)> SuccessCallback;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Code, const class FString& Description)> ErrorCallback;                                     // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_ValidateToken) == 0x000004, "Wrong alignment on XsollaLoginSubsystem_ValidateToken");
static_assert(sizeof(XsollaLoginSubsystem_ValidateToken) == 0x000020, "Wrong size on XsollaLoginSubsystem_ValidateToken");
static_assert(offsetof(XsollaLoginSubsystem_ValidateToken, SuccessCallback) == 0x000000, "Member 'XsollaLoginSubsystem_ValidateToken::SuccessCallback' has a wrong offset!");
static_assert(offsetof(XsollaLoginSubsystem_ValidateToken, ErrorCallback) == 0x000010, "Member 'XsollaLoginSubsystem_ValidateToken::ErrorCallback' has a wrong offset!");

// Function XsollaLogin.XsollaLoginSubsystem.GetLoginData
// 0x0058 (0x0058 - 0x0000)
struct XsollaLoginSubsystem_GetLoginData final
{
public:
	struct FXsollaLoginData                       ReturnValue;                                       // 0x0000(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaLoginSubsystem_GetLoginData) == 0x000008, "Wrong alignment on XsollaLoginSubsystem_GetLoginData");
static_assert(sizeof(XsollaLoginSubsystem_GetLoginData) == 0x000058, "Wrong size on XsollaLoginSubsystem_GetLoginData");
static_assert(offsetof(XsollaLoginSubsystem_GetLoginData, ReturnValue) == 0x000000, "Member 'XsollaLoginSubsystem_GetLoginData::ReturnValue' has a wrong offset!");

}

