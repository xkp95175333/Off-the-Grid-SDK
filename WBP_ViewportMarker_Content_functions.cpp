#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ViewportMarker_Content

#include "Basic.hpp"

#include "WBP_ViewportMarker_Content_classes.hpp"
#include "WBP_ViewportMarker_Content_parameters.hpp"


namespace SDK
{

// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.AdjustMissionMarker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSpecial                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::AdjustMissionMarker(bool IsSpecial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "AdjustMissionMarker");

	Params::WBP_ViewportMarker_Content_C_AdjustMissionMarker Parms{};

	Parms.IsSpecial = IsSpecial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.ChangePingSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MarkerPingPadding                     Param_PingSize                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::ChangePingSize(E_MarkerPingPadding Param_PingSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "ChangePingSize");

	Params::WBP_ViewportMarker_Content_C_ChangePingSize Parms{};

	Parms.Param_PingSize = Param_PingSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.CheckDisagree
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGzPlayerState*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Agree                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::CheckDisagree(class AGzPlayerState* PlayerState, bool Agree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "CheckDisagree");

	Params::WBP_ViewportMarker_Content_C_CheckDisagree Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Agree = Agree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.CheckOffScreen
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_ViewportMarker_Content_C::CheckOffScreen(const struct FGameplayTagContainer& TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "CheckOffScreen");

	Params::WBP_ViewportMarker_Content_C_CheckOffScreen Parms{};

	Parms.TagContainer = std::move(TagContainer);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ViewportMarker_Content_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.ExecuteUbergraph_WBP_ViewportMarker_Content
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::ExecuteUbergraph_WBP_ViewportMarker_Content(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "ExecuteUbergraph_WBP_ViewportMarker_Content");

	Params::WBP_ViewportMarker_Content_C_ExecuteUbergraph_WBP_ViewportMarker_Content Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.GetIndexInTeam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AGzTeam*                          Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::GetIndexInTeam(class AGzTeam* Team, class UObject* PlayerState, int32* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "GetIndexInTeam");

	Params::WBP_ViewportMarker_Content_C_GetIndexInTeam Parms{};

	Parms.Team = Team;
	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.GetPositiveNegativePrompt
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGzPingData                      GzPingData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FText                             Ping_Prompts_Cancel                                    (Parm, OutParm)
// class FText                             Positive                                               (Parm, OutParm)
// class FText                             Negative                                               (Parm, OutParm)

void UWBP_ViewportMarker_Content_C::GetPositiveNegativePrompt(const struct FGzPingData& GzPingData, class FText* Ping_Prompts_Cancel, class FText* Positive, class FText* Negative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "GetPositiveNegativePrompt");

	Params::WBP_ViewportMarker_Content_C_GetPositiveNegativePrompt Parms{};

	Parms.GzPingData = std::move(GzPingData);

	UObject::ProcessEvent(Func, &Parms);

	if (Ping_Prompts_Cancel != nullptr)
		*Ping_Prompts_Cancel = std::move(Parms.Ping_Prompts_Cancel);

	if (Positive != nullptr)
		*Positive = std::move(Parms.Positive);

	if (Negative != nullptr)
		*Negative = std::move(Parms.Negative);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.HighlightState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ViewportMarker_Content_C::HighlightState(const struct FGameplayTagContainer& TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "HighlightState");

	Params::WBP_ViewportMarker_Content_C_HighlightState Parms{};

	Parms.TagContainer = std::move(TagContainer);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.InitViewportMarker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzMarkerComponent*               Param_MarkerComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UGzViewportMarkerWidget*          Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::InitViewportMarker(class UGzMarkerComponent* Param_MarkerComponent, class UGzViewportMarkerWidget* Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "InitViewportMarker");

	Params::WBP_ViewportMarker_Content_C_InitViewportMarker Parms{};

	Parms.Param_MarkerComponent = Param_MarkerComponent;
	Parms.Parent = Parent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.OnMarkerStatesChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzMarkerComponent*               Param_MarkerComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            States                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_ViewportMarker_Content_C::OnMarkerStatesChanged(class UGzMarkerComponent* Param_MarkerComponent, const struct FGameplayTagContainer& States)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "OnMarkerStatesChanged");

	Params::WBP_ViewportMarker_Content_C_OnMarkerStatesChanged Parms{};

	Parms.Param_MarkerComponent = Param_MarkerComponent;
	Parms.States = std::move(States);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.OnOffScreen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsOffScreen                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::OnOffScreen(bool bIsOffScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "OnOffScreen");

	Params::WBP_ViewportMarker_Content_C_OnOffScreen Parms{};

	Parms.bIsOffScreen = bIsOffScreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.OnPingAgreementChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGzPlayerState*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGzPingData                      PingData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    bAgree                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::OnPingAgreementChanged(class AGzPlayerState* PlayerState, const struct FGzPingData& PingData, bool bAgree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "OnPingAgreementChanged");

	Params::WBP_ViewportMarker_Content_C_OnPingAgreementChanged Parms{};

	Parms.PlayerState = PlayerState;
	Parms.PingData = std::move(PingData);
	Parms.bAgree = bAgree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.OnPlayerMarkerFocusChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsFocused                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::OnPlayerMarkerFocusChanged_Event(bool bIsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "OnPlayerMarkerFocusChanged_Event");

	Params::WBP_ViewportMarker_Content_C_OnPlayerMarkerFocusChanged_Event Parms{};

	Parms.bIsFocused = bIsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "PreConstruct");

	Params::WBP_ViewportMarker_Content_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.RunConstruct
// (BlueprintCallable, BlueprintEvent)

void UWBP_ViewportMarker_Content_C::RunConstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "RunConstruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.SetArrowRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::SetArrowRotation(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "SetArrowRotation");

	Params::WBP_ViewportMarker_Content_C_SetArrowRotation Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.SetArrowVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::SetArrowVisibility(bool Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "SetArrowVisibility");

	Params::WBP_ViewportMarker_Content_C_SetArrowVisibility Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.SetDefaultVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ViewportMarker_Content_C::SetDefaultVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "SetDefaultVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.SetPingIcon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_PingContent                   PingContentRef                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::SetPingIcon(const struct FS_PingContent& PingContentRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "SetPingIcon");

	Params::WBP_ViewportMarker_Content_C_SetPingIcon Parms{};

	Parms.PingContentRef = std::move(PingContentRef);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.SetProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent__0Minus1_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::SetProgress(float Percent__0Minus1_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "SetProgress");

	Params::WBP_ViewportMarker_Content_C_SetProgress Parms{};

	Parms.Percent__0Minus1_ = Percent__0Minus1_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.SetPromptVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInFocus                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGzMarkerComponent*               Param_MarkerComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::SetPromptVisibility(bool IsInFocus, class UGzMarkerComponent* Param_MarkerComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "SetPromptVisibility");

	Params::WBP_ViewportMarker_Content_C_SetPromptVisibility Parms{};

	Parms.IsInFocus = IsInFocus;
	Parms.Param_MarkerComponent = Param_MarkerComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.ShowProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dashed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::ShowProgress(bool Show, bool Dashed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "ShowProgress");

	Params::WBP_ViewportMarker_Content_C_ShowProgress Parms{};

	Parms.Show = Show;
	Parms.Dashed = Dashed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "Tick");

	Params::WBP_ViewportMarker_Content_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.Toggle Distance View
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::Toggle_Distance_View(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "Toggle Distance View");

	Params::WBP_ViewportMarker_Content_C_Toggle_Distance_View Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.UpdateDistance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::UpdateDistance(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "UpdateDistance");

	Params::WBP_ViewportMarker_Content_C_UpdateDistance Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.UpdatePingState
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzMarkerComponent*               Param_MarkerComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FGzPingData                      PingData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::UpdatePingState(class UGzMarkerComponent* Param_MarkerComponent, const struct FGzPingData& PingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "UpdatePingState");

	Params::WBP_ViewportMarker_Content_C_UpdatePingState Parms{};

	Parms.Param_MarkerComponent = Param_MarkerComponent;
	Parms.PingData = std::move(PingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.UpdatePromptText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzMarkerComponent*               Param_MarkerComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Content_C::UpdatePromptText(class UGzMarkerComponent* Param_MarkerComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "UpdatePromptText");

	Params::WBP_ViewportMarker_Content_C_UpdatePromptText Parms{};

	Parms.Param_MarkerComponent = Param_MarkerComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.VisualizeDesigner
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ViewportMarker_Content_C::VisualizeDesigner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "VisualizeDesigner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C.WarningState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ViewportMarker_Content_C::WarningState(const struct FGameplayTagContainer& TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Content_C", "WarningState");

	Params::WBP_ViewportMarker_Content_C_WarningState Parms{};

	Parms.TagContainer = std::move(TagContainer);

	UObject::ProcessEvent(Func, &Parms);
}

}

