#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_UIHelper

#include "Basic.hpp"

#include "E_TooltipItemType_structs.hpp"
#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BPFL_UIHelper.BPFL_UIHelper_C.CurrencyTextFormat
// 0x0058 (0x0058 - 0x0000)
struct BPFL_UIHelper_C_CurrencyTextFormat final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5932[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0010(0x0010)(Parm, OutParm)
	class FString                                 ResultString;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ConfugureString;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         TestAmount;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5933[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0010)()
};
static_assert(alignof(BPFL_UIHelper_C_CurrencyTextFormat) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_CurrencyTextFormat");
static_assert(sizeof(BPFL_UIHelper_C_CurrencyTextFormat) == 0x000058, "Wrong size on BPFL_UIHelper_C_CurrencyTextFormat");
static_assert(offsetof(BPFL_UIHelper_C_CurrencyTextFormat, Amount) == 0x000000, "Member 'BPFL_UIHelper_C_CurrencyTextFormat::Amount' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CurrencyTextFormat, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_CurrencyTextFormat::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CurrencyTextFormat, Result) == 0x000010, "Member 'BPFL_UIHelper_C_CurrencyTextFormat::Result' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CurrencyTextFormat, ResultString) == 0x000020, "Member 'BPFL_UIHelper_C_CurrencyTextFormat::ResultString' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CurrencyTextFormat, ConfugureString) == 0x000030, "Member 'BPFL_UIHelper_C_CurrencyTextFormat::ConfugureString' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CurrencyTextFormat, TestAmount) == 0x000040, "Member 'BPFL_UIHelper_C_CurrencyTextFormat::TestAmount' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CurrencyTextFormat, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'BPFL_UIHelper_C_CurrencyTextFormat::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.CutEnumToEnumValue
// 0x0048 (0x0048 - 0x0000)
struct BPFL_UIHelper_C_CutEnumToEnumValue final
{
public:
	class FString                                 EnumValue;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EnumName;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Return;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_CutEnumToEnumValue) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_CutEnumToEnumValue");
static_assert(sizeof(BPFL_UIHelper_C_CutEnumToEnumValue) == 0x000048, "Wrong size on BPFL_UIHelper_C_CutEnumToEnumValue");
static_assert(offsetof(BPFL_UIHelper_C_CutEnumToEnumValue, EnumValue) == 0x000000, "Member 'BPFL_UIHelper_C_CutEnumToEnumValue::EnumValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutEnumToEnumValue, EnumName) == 0x000010, "Member 'BPFL_UIHelper_C_CutEnumToEnumValue::EnumName' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutEnumToEnumValue, __WorldContext) == 0x000020, "Member 'BPFL_UIHelper_C_CutEnumToEnumValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutEnumToEnumValue, Return) == 0x000028, "Member 'BPFL_UIHelper_C_CutEnumToEnumValue::Return' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutEnumToEnumValue, CallFunc_Replace_ReturnValue) == 0x000030, "Member 'BPFL_UIHelper_C_CutEnumToEnumValue::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutEnumToEnumValue, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BPFL_UIHelper_C_CutEnumToEnumValue::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.CutText
// 0x00B0 (0x00B0 - 0x0000)
struct BPFL_UIHelper_C_CutText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         LenMax;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5934[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EndPrefix;                                         // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0030(0x0010)(Parm, OutParm)
	class FString                                 LongDisplay;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5935[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5936[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x00A0(0x0010)()
};
static_assert(alignof(BPFL_UIHelper_C_CutText) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_CutText");
static_assert(sizeof(BPFL_UIHelper_C_CutText) == 0x0000B0, "Wrong size on BPFL_UIHelper_C_CutText");
static_assert(offsetof(BPFL_UIHelper_C_CutText, InText) == 0x000000, "Member 'BPFL_UIHelper_C_CutText::InText' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, LenMax) == 0x000010, "Member 'BPFL_UIHelper_C_CutText::LenMax' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, EndPrefix) == 0x000018, "Member 'BPFL_UIHelper_C_CutText::EndPrefix' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, __WorldContext) == 0x000028, "Member 'BPFL_UIHelper_C_CutText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, Result) == 0x000030, "Member 'BPFL_UIHelper_C_CutText::Result' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, LongDisplay) == 0x000040, "Member 'BPFL_UIHelper_C_CutText::LongDisplay' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, CallFunc_Len_ReturnValue) == 0x000050, "Member 'BPFL_UIHelper_C_CutText::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, CallFunc_Conv_TextToString_ReturnValue) == 0x000058, "Member 'BPFL_UIHelper_C_CutText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BPFL_UIHelper_C_CutText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000069, "Member 'BPFL_UIHelper_C_CutText::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, Temp_bool_Variable) == 0x00006A, "Member 'BPFL_UIHelper_C_CutText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, CallFunc_Left_ReturnValue) == 0x000070, "Member 'BPFL_UIHelper_C_CutText::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BPFL_UIHelper_C_CutText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BPFL_UIHelper_C_CutText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_CutText, K2Node_Select_Default) == 0x0000A0, "Member 'BPFL_UIHelper_C_CutText::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetAmmoTypeImage
// 0x0058 (0x0058 - 0x0000)
struct BPFL_UIHelper_C_GetAmmoTypeImage final
{
public:
	EGzWeaponResourceType                         Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5937[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EGzWeaponResourceType                         Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5938[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetAmmoTypeImage) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetAmmoTypeImage");
static_assert(sizeof(BPFL_UIHelper_C_GetAmmoTypeImage) == 0x000058, "Wrong size on BPFL_UIHelper_C_GetAmmoTypeImage");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, Param_Index) == 0x000000, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::Param_Index' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, ReturnValue) == 0x000010, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, Temp_byte_Variable) == 0x000018, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, Temp_object_Variable) == 0x000020, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, Temp_object_Variable_1) == 0x000028, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, Temp_object_Variable_2) == 0x000030, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, Temp_object_Variable_3) == 0x000038, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, Temp_object_Variable_4) == 0x000040, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, Temp_object_Variable_5) == 0x000048, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetAmmoTypeImage, K2Node_Select_Default) == 0x000050, "Member 'BPFL_UIHelper_C_GetAmmoTypeImage::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetCurrencyIcon
// 0x0030 (0x0030 - 0x0000)
struct BPFL_UIHelper_C_GetCurrencyIcon final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             AsTexture_2D;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzItemData*                            CurrencyItem;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetCurrencyIcon) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetCurrencyIcon");
static_assert(sizeof(BPFL_UIHelper_C_GetCurrencyIcon) == 0x000030, "Wrong size on BPFL_UIHelper_C_GetCurrencyIcon");
static_assert(offsetof(BPFL_UIHelper_C_GetCurrencyIcon, __WorldContext) == 0x000000, "Member 'BPFL_UIHelper_C_GetCurrencyIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetCurrencyIcon, AsTexture_2D) == 0x000008, "Member 'BPFL_UIHelper_C_GetCurrencyIcon::AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetCurrencyIcon, CurrencyItem) == 0x000010, "Member 'BPFL_UIHelper_C_GetCurrencyIcon::CurrencyItem' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetCurrencyIcon, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000018, "Member 'BPFL_UIHelper_C_GetCurrencyIcon::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetCurrencyIcon, K2Node_DynamicCast_AsTexture_2D) == 0x000020, "Member 'BPFL_UIHelper_C_GetCurrencyIcon::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetCurrencyIcon, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPFL_UIHelper_C_GetCurrencyIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetFireModeIcon
// 0x0050 (0x0050 - 0x0000)
struct BPFL_UIHelper_C_GetFireModeIcon final
{
public:
	EGzWeaponMode                                 Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5939[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EGzWeaponMode                                 Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetFireModeIcon) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetFireModeIcon");
static_assert(sizeof(BPFL_UIHelper_C_GetFireModeIcon) == 0x000050, "Wrong size on BPFL_UIHelper_C_GetFireModeIcon");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, Param_Index) == 0x000000, "Member 'BPFL_UIHelper_C_GetFireModeIcon::Param_Index' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetFireModeIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, ReturnValue) == 0x000010, "Member 'BPFL_UIHelper_C_GetFireModeIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, Temp_byte_Variable) == 0x000018, "Member 'BPFL_UIHelper_C_GetFireModeIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, Temp_object_Variable) == 0x000020, "Member 'BPFL_UIHelper_C_GetFireModeIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, Temp_object_Variable_1) == 0x000028, "Member 'BPFL_UIHelper_C_GetFireModeIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, Temp_object_Variable_2) == 0x000030, "Member 'BPFL_UIHelper_C_GetFireModeIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, Temp_object_Variable_3) == 0x000038, "Member 'BPFL_UIHelper_C_GetFireModeIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, Temp_object_Variable_4) == 0x000040, "Member 'BPFL_UIHelper_C_GetFireModeIcon::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetFireModeIcon, K2Node_Select_Default) == 0x000048, "Member 'BPFL_UIHelper_C_GetFireModeIcon::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetItemType
// 0x0128 (0x0128 - 0x0000)
struct BPFL_UIHelper_C_GetItemType final
{
public:
	class UGzItemData*                            ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_TooltipItemType                             Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Container;                                         // 0x0018(0x0020)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, E_TooltipItemType>  ItemTypesTags;                                     // 0x0038(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593C[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0090(0x0020)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, E_TooltipItemType>  K2Node_MakeVariable_MakeVariableOutput;            // 0x00B8(0x0050)()
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x011C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TooltipItemType                             CallFunc_Map_Find_Value;                           // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetItemType) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetItemType");
static_assert(sizeof(BPFL_UIHelper_C_GetItemType) == 0x000128, "Wrong size on BPFL_UIHelper_C_GetItemType");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, ItemData) == 0x000000, "Member 'BPFL_UIHelper_C_GetItemType::ItemData' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetItemType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, Result) == 0x000010, "Member 'BPFL_UIHelper_C_GetItemType::Result' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, Container) == 0x000018, "Member 'BPFL_UIHelper_C_GetItemType::Container' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, ItemTypesTags) == 0x000038, "Member 'BPFL_UIHelper_C_GetItemType::ItemTypesTags' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BPFL_UIHelper_C_GetItemType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000090, "Member 'BPFL_UIHelper_C_GetItemType::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BPFL_UIHelper_C_GetItemType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BPFL_UIHelper_C_GetItemType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, K2Node_MakeVariable_MakeVariableOutput) == 0x0000B8, "Member 'BPFL_UIHelper_C_GetItemType::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, CallFunc_Map_Keys_Keys) == 0x000108, "Member 'BPFL_UIHelper_C_GetItemType::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BPFL_UIHelper_C_GetItemType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, CallFunc_Array_Get_Item) == 0x00011C, "Member 'BPFL_UIHelper_C_GetItemType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BPFL_UIHelper_C_GetItemType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, CallFunc_Map_Find_Value) == 0x000125, "Member 'BPFL_UIHelper_C_GetItemType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, CallFunc_Map_Find_ReturnValue) == 0x000126, "Member 'BPFL_UIHelper_C_GetItemType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetItemType, CallFunc_HasTag_ReturnValue) == 0x000127, "Member 'BPFL_UIHelper_C_GetItemType::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetLimbHealthAttribute
// 0x0250 (0x0250 - 0x0000)
struct BPFL_UIHelper_C_GetLimbHealthAttribute final
{
public:
	EGzLimbType                                   LimbType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaxAttribute;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593D[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Attribute;                                         // 0x0010(0x0038)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593E[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0050(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_1;                            // 0x0088(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_2;                            // 0x00C0(0x0038)(HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable_1;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593F[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_Select_Default;                             // 0x0100(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_3;                            // 0x0138(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_4;                            // 0x0170(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_5;                            // 0x01A8(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_Select_Default_1;                           // 0x01E0(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_Select_Default_2;                           // 0x0218(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetLimbHealthAttribute) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetLimbHealthAttribute");
static_assert(sizeof(BPFL_UIHelper_C_GetLimbHealthAttribute) == 0x000250, "Wrong size on BPFL_UIHelper_C_GetLimbHealthAttribute");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, LimbType) == 0x000000, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::LimbType' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, MaxAttribute) == 0x000001, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::MaxAttribute' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Attribute) == 0x000010, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Attribute' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Temp_bool_Variable) == 0x000048, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Temp_byte_Variable) == 0x000049, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Temp_struct_Variable) == 0x000050, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Temp_struct_Variable_1) == 0x000088, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Temp_struct_Variable_2) == 0x0000C0, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Temp_byte_Variable_1) == 0x0000F8, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, K2Node_Select_Default) == 0x000100, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Temp_struct_Variable_3) == 0x000138, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Temp_struct_Variable_4) == 0x000170, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, Temp_struct_Variable_5) == 0x0001A8, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, K2Node_Select_Default_1) == 0x0001E0, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbHealthAttribute, K2Node_Select_Default_2) == 0x000218, "Member 'BPFL_UIHelper_C_GetLimbHealthAttribute::K2Node_Select_Default_2' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetLimbIdentifier
// 0x00E0 (0x00E0 - 0x0000)
struct BPFL_UIHelper_C_GetLimbIdentifier final
{
public:
	EGzLimbType                                   Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5940[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              ReturnValue;                                       // 0x0010(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5941[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0040(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0068(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x0090(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x00B8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetLimbIdentifier) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetLimbIdentifier");
static_assert(sizeof(BPFL_UIHelper_C_GetLimbIdentifier) == 0x0000E0, "Wrong size on BPFL_UIHelper_C_GetLimbIdentifier");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbIdentifier, Param_Index) == 0x000000, "Member 'BPFL_UIHelper_C_GetLimbIdentifier::Param_Index' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbIdentifier, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetLimbIdentifier::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbIdentifier, ReturnValue) == 0x000010, "Member 'BPFL_UIHelper_C_GetLimbIdentifier::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbIdentifier, Temp_byte_Variable) == 0x000038, "Member 'BPFL_UIHelper_C_GetLimbIdentifier::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbIdentifier, Temp_softobject_Variable) == 0x000040, "Member 'BPFL_UIHelper_C_GetLimbIdentifier::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbIdentifier, Temp_softobject_Variable_1) == 0x000068, "Member 'BPFL_UIHelper_C_GetLimbIdentifier::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbIdentifier, Temp_softobject_Variable_2) == 0x000090, "Member 'BPFL_UIHelper_C_GetLimbIdentifier::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetLimbIdentifier, K2Node_Select_Default) == 0x0000B8, "Member 'BPFL_UIHelper_C_GetLimbIdentifier::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetNotificationColor
// 0x0078 (0x0078 - 0x0000)
struct BPFL_UIHelper_C_GetNotificationColor final
{
public:
	EGzNotificationGroupType                      NotifictionGroupType;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5942[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzNotificationGroupType                      Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5943[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0024(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x002C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0034(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x003C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0044(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x004C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0054(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x005C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorById_ReturnValue;                 // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetNotificationColor) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetNotificationColor");
static_assert(sizeof(BPFL_UIHelper_C_GetNotificationColor) == 0x000078, "Wrong size on BPFL_UIHelper_C_GetNotificationColor");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, NotifictionGroupType) == 0x000000, "Member 'BPFL_UIHelper_C_GetNotificationColor::NotifictionGroupType' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetNotificationColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, Color) == 0x000010, "Member 'BPFL_UIHelper_C_GetNotificationColor::Color' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, Temp_byte_Variable) == 0x000020, "Member 'BPFL_UIHelper_C_GetNotificationColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, Temp_name_Variable) == 0x000024, "Member 'BPFL_UIHelper_C_GetNotificationColor::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, Temp_name_Variable_1) == 0x00002C, "Member 'BPFL_UIHelper_C_GetNotificationColor::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, Temp_name_Variable_2) == 0x000034, "Member 'BPFL_UIHelper_C_GetNotificationColor::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, Temp_name_Variable_3) == 0x00003C, "Member 'BPFL_UIHelper_C_GetNotificationColor::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, Temp_name_Variable_4) == 0x000044, "Member 'BPFL_UIHelper_C_GetNotificationColor::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, Temp_name_Variable_5) == 0x00004C, "Member 'BPFL_UIHelper_C_GetNotificationColor::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, Temp_name_Variable_6) == 0x000054, "Member 'BPFL_UIHelper_C_GetNotificationColor::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, K2Node_Select_Default) == 0x00005C, "Member 'BPFL_UIHelper_C_GetNotificationColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetNotificationColor, CallFunc_GetColorById_ReturnValue) == 0x000064, "Member 'BPFL_UIHelper_C_GetNotificationColor::CallFunc_GetColorById_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetRarityColor
// 0x0048 (0x0048 - 0x0000)
struct BPFL_UIHelper_C_GetRarityColor final
{
public:
	EGzItemRarity                                 Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5944[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CutEnumToEnumValue_Return;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorById_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetRarityColor) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetRarityColor");
static_assert(sizeof(BPFL_UIHelper_C_GetRarityColor) == 0x000048, "Wrong size on BPFL_UIHelper_C_GetRarityColor");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityColor, Param_Index) == 0x000000, "Member 'BPFL_UIHelper_C_GetRarityColor::Param_Index' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityColor, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetRarityColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityColor, ReturnValue) == 0x000010, "Member 'BPFL_UIHelper_C_GetRarityColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityColor, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'BPFL_UIHelper_C_GetRarityColor::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityColor, CallFunc_CutEnumToEnumValue_Return) == 0x000030, "Member 'BPFL_UIHelper_C_GetRarityColor::CallFunc_CutEnumToEnumValue_Return' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityColor, CallFunc_GetColorById_ReturnValue) == 0x000038, "Member 'BPFL_UIHelper_C_GetRarityColor::CallFunc_GetColorById_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetRarityIcon
// 0x0050 (0x0050 - 0x0000)
struct BPFL_UIHelper_C_GetRarityIcon final
{
public:
	EGzItemRarity                                 Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5945[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5946[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetRarityIcon) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetRarityIcon");
static_assert(sizeof(BPFL_UIHelper_C_GetRarityIcon) == 0x000050, "Wrong size on BPFL_UIHelper_C_GetRarityIcon");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, Param_Index) == 0x000000, "Member 'BPFL_UIHelper_C_GetRarityIcon::Param_Index' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetRarityIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, ReturnValue) == 0x000010, "Member 'BPFL_UIHelper_C_GetRarityIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, Temp_byte_Variable) == 0x000018, "Member 'BPFL_UIHelper_C_GetRarityIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, Temp_object_Variable) == 0x000020, "Member 'BPFL_UIHelper_C_GetRarityIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, Temp_object_Variable_1) == 0x000028, "Member 'BPFL_UIHelper_C_GetRarityIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, Temp_object_Variable_2) == 0x000030, "Member 'BPFL_UIHelper_C_GetRarityIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, Temp_object_Variable_3) == 0x000038, "Member 'BPFL_UIHelper_C_GetRarityIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, Temp_object_Variable_4) == 0x000040, "Member 'BPFL_UIHelper_C_GetRarityIcon::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityIcon, K2Node_Select_Default) == 0x000048, "Member 'BPFL_UIHelper_C_GetRarityIcon::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetRarityName
// 0x0088 (0x0088 - 0x0000)
struct BPFL_UIHelper_C_GetRarityName final
{
public:
	EGzItemRarity                                 Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5947[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   RarityName;                                        // 0x0010(0x0010)(Parm, OutParm)
	EGzItemRarity                                 Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5948[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0010)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0010)()
};
static_assert(alignof(BPFL_UIHelper_C_GetRarityName) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetRarityName");
static_assert(sizeof(BPFL_UIHelper_C_GetRarityName) == 0x000088, "Wrong size on BPFL_UIHelper_C_GetRarityName");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, Param_Index) == 0x000000, "Member 'BPFL_UIHelper_C_GetRarityName::Param_Index' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetRarityName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, RarityName) == 0x000010, "Member 'BPFL_UIHelper_C_GetRarityName::RarityName' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, Temp_byte_Variable) == 0x000020, "Member 'BPFL_UIHelper_C_GetRarityName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, Temp_text_Variable) == 0x000028, "Member 'BPFL_UIHelper_C_GetRarityName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, Temp_text_Variable_1) == 0x000038, "Member 'BPFL_UIHelper_C_GetRarityName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, Temp_text_Variable_2) == 0x000048, "Member 'BPFL_UIHelper_C_GetRarityName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, Temp_text_Variable_3) == 0x000058, "Member 'BPFL_UIHelper_C_GetRarityName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, Temp_text_Variable_4) == 0x000068, "Member 'BPFL_UIHelper_C_GetRarityName::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetRarityName, K2Node_Select_Default) == 0x000078, "Member 'BPFL_UIHelper_C_GetRarityName::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeamAttitudeColor
// 0x0048 (0x0048 - 0x0000)
struct BPFL_UIHelper_C_GetTeamAttitudeColor final
{
public:
	ETeamAttitude                                 TeamAttitude;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5949[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CutEnumToEnumValue_Return;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorById_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetTeamAttitudeColor) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetTeamAttitudeColor");
static_assert(sizeof(BPFL_UIHelper_C_GetTeamAttitudeColor) == 0x000048, "Wrong size on BPFL_UIHelper_C_GetTeamAttitudeColor");
static_assert(offsetof(BPFL_UIHelper_C_GetTeamAttitudeColor, TeamAttitude) == 0x000000, "Member 'BPFL_UIHelper_C_GetTeamAttitudeColor::TeamAttitude' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeamAttitudeColor, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetTeamAttitudeColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeamAttitudeColor, Color) == 0x000010, "Member 'BPFL_UIHelper_C_GetTeamAttitudeColor::Color' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeamAttitudeColor, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'BPFL_UIHelper_C_GetTeamAttitudeColor::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeamAttitudeColor, CallFunc_CutEnumToEnumValue_Return) == 0x000030, "Member 'BPFL_UIHelper_C_GetTeamAttitudeColor::CallFunc_CutEnumToEnumValue_Return' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeamAttitudeColor, CallFunc_GetColorById_ReturnValue) == 0x000038, "Member 'BPFL_UIHelper_C_GetTeamAttitudeColor::CallFunc_GetColorById_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeammateASCIIColorFromIndex
// 0x0098 (0x0098 - 0x0000)
struct BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ASCIIColor;                                        // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594C[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0010)()
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594D[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0088(0x0010)()
};
static_assert(alignof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex");
static_assert(sizeof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex) == 0x000098, "Wrong size on BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, PlayerIndex) == 0x000000, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, ASCIIColor) == 0x000010, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::ASCIIColor' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, Temp_int_Variable) == 0x000020, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, Temp_text_Variable) == 0x000028, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, Temp_text_Variable_1) == 0x000038, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, Temp_text_Variable_2) == 0x000048, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, Temp_bool_Variable) == 0x000058, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, Temp_text_Variable_3) == 0x000060, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, K2Node_Select_Default) == 0x000070, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, CallFunc_InRange_IntInt_ReturnValue) == 0x000080, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex, K2Node_Select_Default_1) == 0x000088, "Member 'BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex::K2Node_Select_Default_1' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeammateASCIIShapeFromIndex
// 0x0098 (0x0098 - 0x0000)
struct BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ShapeAsASCII;                                      // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5950[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0010)()
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5951[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0088(0x0010)()
};
static_assert(alignof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex");
static_assert(sizeof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex) == 0x000098, "Wrong size on BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, PlayerIndex) == 0x000000, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, ShapeAsASCII) == 0x000010, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::ShapeAsASCII' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, Temp_int_Variable) == 0x000020, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, Temp_text_Variable) == 0x000028, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, Temp_text_Variable_1) == 0x000038, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, Temp_text_Variable_2) == 0x000048, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, Temp_bool_Variable) == 0x000058, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, Temp_text_Variable_3) == 0x000060, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, K2Node_Select_Default) == 0x000070, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, CallFunc_InRange_IntInt_ReturnValue) == 0x000080, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex, K2Node_Select_Default_1) == 0x000088, "Member 'BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex::K2Node_Select_Default_1' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeammateColorFromIndex
// 0x0030 (0x0030 - 0x0000)
struct BPFL_UIHelper_C_GetTeammateColorFromIndex final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5952[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutPlayerColor;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeammateColorFromIndex_ReturnValue;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetTeammateColorFromIndex) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetTeammateColorFromIndex");
static_assert(sizeof(BPFL_UIHelper_C_GetTeammateColorFromIndex) == 0x000030, "Wrong size on BPFL_UIHelper_C_GetTeammateColorFromIndex");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateColorFromIndex, InPlayerIndex) == 0x000000, "Member 'BPFL_UIHelper_C_GetTeammateColorFromIndex::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateColorFromIndex, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetTeammateColorFromIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateColorFromIndex, OutPlayerColor) == 0x000010, "Member 'BPFL_UIHelper_C_GetTeammateColorFromIndex::OutPlayerColor' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateColorFromIndex, CallFunc_GetTeammateColorFromIndex_ReturnValue) == 0x000020, "Member 'BPFL_UIHelper_C_GetTeammateColorFromIndex::CallFunc_GetTeammateColorFromIndex_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeammateShapeFromIndex
// 0x0060 (0x0060 - 0x0000)
struct BPFL_UIHelper_C_GetTeammateShapeFromIndex final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5953[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             NewParam;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5954[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5955[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetTeammateShapeFromIndex) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetTeammateShapeFromIndex");
static_assert(sizeof(BPFL_UIHelper_C_GetTeammateShapeFromIndex) == 0x000060, "Wrong size on BPFL_UIHelper_C_GetTeammateShapeFromIndex");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, PlayerIndex) == 0x000000, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, NewParam) == 0x000010, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::NewParam' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, Temp_object_Variable) == 0x000018, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, CallFunc_InRange_IntInt_ReturnValue) == 0x000020, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, Temp_int_Variable) == 0x000024, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, Temp_object_Variable_1) == 0x000028, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, Temp_object_Variable_2) == 0x000030, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, Temp_object_Variable_3) == 0x000038, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, Temp_object_Variable_4) == 0x000040, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, Temp_bool_Variable) == 0x000048, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, K2Node_Select_Default) == 0x000050, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTeammateShapeFromIndex, K2Node_Select_Default_1) == 0x000058, "Member 'BPFL_UIHelper_C_GetTeammateShapeFromIndex::K2Node_Select_Default_1' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTimeInMinutesSecondFormatText
// 0x0110 (0x0110 - 0x0000)
struct BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5956[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0010(0x0010)(Parm, OutParm)
	class FString                                 CallFunc_GetTimeInMinutesSecondToString_Minutes;   // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTimeInMinutesSecondToString_Seconds;   // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
};
static_assert(alignof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText");
static_assert(sizeof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText) == 0x000110, "Wrong size on BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, InSeconds) == 0x000000, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::InSeconds' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, Result) == 0x000010, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::Result' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, CallFunc_GetTimeInMinutesSecondToString_Minutes) == 0x000020, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::CallFunc_GetTimeInMinutesSecondToString_Minutes' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, CallFunc_GetTimeInMinutesSecondToString_Seconds) == 0x000030, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::CallFunc_GetTimeInMinutesSecondToString_Seconds' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000050, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTimeInMinutesSecondToString
// 0x00E8 (0x00E8 - 0x0000)
struct BPFL_UIHelper_C_GetTimeInMinutesSecondToString final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5957[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Minutes;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Seconds;                                           // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeMinutesSeconds_OutMinutes;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeMinutesSeconds_OutSeconds;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_2;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5958[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_3;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5959[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast_1;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast_2;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast_3;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetTimeInMinutesSecondToString");
static_assert(sizeof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString) == 0x0000E8, "Wrong size on BPFL_UIHelper_C_GetTimeInMinutesSecondToString");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, InSeconds) == 0x000000, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::InSeconds' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, Minutes) == 0x000010, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::Minutes' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, Seconds) == 0x000020, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::Seconds' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_GetTimeMinutesSeconds_OutMinutes) == 0x000030, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_GetTimeMinutesSeconds_OutMinutes' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_GetTimeMinutesSeconds_OutSeconds) == 0x000034, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_GetTimeMinutesSeconds_OutSeconds' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_FTrunc_ReturnValue_1) == 0x00003C, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Percent_IntInt_ReturnValue) == 0x000040, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Divide_IntInt_ReturnValue) == 0x000044, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000058, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_FTrunc_ReturnValue_2) == 0x00005C, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000060, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Percent_IntInt_ReturnValue_2) == 0x000070, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Percent_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_FTrunc_ReturnValue_3) == 0x000074, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000078, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000088, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Percent_IntInt_ReturnValue_3) == 0x0000A0, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Percent_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0000A8, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_FTrunc_A_ImplicitCast) == 0x0000C8, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_FTrunc_A_ImplicitCast_1) == 0x0000D0, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_FTrunc_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_FTrunc_A_ImplicitCast_2) == 0x0000D8, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_FTrunc_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetTimeInMinutesSecondToString, CallFunc_FTrunc_A_ImplicitCast_3) == 0x0000E0, "Member 'BPFL_UIHelper_C_GetTimeInMinutesSecondToString::CallFunc_FTrunc_A_ImplicitCast_3' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetWeaponDataInHand
// 0x0058 (0x0058 - 0x0000)
struct BPFL_UIHelper_C_GetWeaponDataInHand final
{
public:
	class AGzCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzWeaponItemData*                      CurrentWeaponData;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         WeaponActor;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CombatComponent;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEquippedWeapon_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595A[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvPocketId                         CallFunc_GetEquippedPocketID_ReturnValue;          // 0x0034(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponItemData*                      CallFunc_GetItemData_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         CallFunc_GetWeaponAtPocket_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetWeaponDataInHand) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetWeaponDataInHand");
static_assert(sizeof(BPFL_UIHelper_C_GetWeaponDataInHand) == 0x000058, "Wrong size on BPFL_UIHelper_C_GetWeaponDataInHand");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, Character) == 0x000000, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::Character' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, CurrentWeaponData) == 0x000010, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::CurrentWeaponData' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, WeaponActor) == 0x000018, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::WeaponActor' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, CombatComponent) == 0x000020, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::CombatComponent' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, CallFunc_HasEquippedWeapon_ReturnValue) == 0x000030, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::CallFunc_HasEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, CallFunc_GetEquippedPocketID_ReturnValue) == 0x000034, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::CallFunc_GetEquippedPocketID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, CallFunc_GetItemData_ReturnValue) == 0x000040, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, CallFunc_GetWeaponAtPocket_ReturnValue) == 0x000048, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::CallFunc_GetWeaponAtPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponDataInHand, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BPFL_UIHelper_C_GetWeaponDataInHand::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetWeaponTypeName
// 0x0168 (0x0168 - 0x0000)
struct BPFL_UIHelper_C_GetWeaponTypeName final
{
public:
	EGzWeaponType                                 WeaponType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Short;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595C[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   WeaponName;                                        // 0x0010(0x0010)(Parm, OutParm)
	EGzWeaponType                                 Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0010)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0010)()
	class FText                                   Temp_text_Variable_5;                              // 0x0078(0x0010)()
	class FText                                   Temp_text_Variable_6;                              // 0x0088(0x0010)()
	class FText                                   Temp_text_Variable_7;                              // 0x0098(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595E[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00B0(0x0010)()
	EGzWeaponType                                 Temp_byte_Variable_1;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595F[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x00C8(0x0010)()
	class FText                                   Temp_text_Variable_9;                              // 0x00D8(0x0010)()
	class FText                                   Temp_text_Variable_10;                             // 0x00E8(0x0010)()
	class FText                                   Temp_text_Variable_11;                             // 0x00F8(0x0010)()
	class FText                                   Temp_text_Variable_12;                             // 0x0108(0x0010)()
	class FText                                   Temp_text_Variable_13;                             // 0x0118(0x0010)()
	class FText                                   Temp_text_Variable_14;                             // 0x0128(0x0010)()
	class FText                                   Temp_text_Variable_15;                             // 0x0138(0x0010)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0148(0x0010)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0158(0x0010)()
};
static_assert(alignof(BPFL_UIHelper_C_GetWeaponTypeName) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetWeaponTypeName");
static_assert(sizeof(BPFL_UIHelper_C_GetWeaponTypeName) == 0x000168, "Wrong size on BPFL_UIHelper_C_GetWeaponTypeName");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, WeaponType) == 0x000000, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::WeaponType' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Short) == 0x000001, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Short' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, WeaponName) == 0x000010, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::WeaponName' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_byte_Variable) == 0x000020, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable) == 0x000028, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_1) == 0x000038, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_2) == 0x000048, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_3) == 0x000058, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_4) == 0x000068, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_5) == 0x000078, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_6) == 0x000088, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_7) == 0x000098, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_bool_Variable) == 0x0000A8, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, K2Node_Select_Default) == 0x0000B0, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_byte_Variable_1) == 0x0000C0, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_8) == 0x0000C8, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_9) == 0x0000D8, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_10) == 0x0000E8, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_11) == 0x0000F8, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_12) == 0x000108, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_13) == 0x000118, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_14) == 0x000128, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, Temp_text_Variable_15) == 0x000138, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, K2Node_Select_Default_1) == 0x000148, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetWeaponTypeName, K2Node_Select_Default_2) == 0x000158, "Member 'BPFL_UIHelper_C_GetWeaponTypeName::K2Node_Select_Default_2' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.IsSoloGamemode
// 0x0038 (0x0038 - 0x0000)
struct BPFL_UIHelper_C_IsSoloGamemode final
{
public:
	const class APlayerController*                PlayerController;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSolos;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5960[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         K2Node_DynamicCast_AsGz_Player_State;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5961[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzTeam*                                CallFunc_GetTeam_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCapacity_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_IsSoloGamemode) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_IsSoloGamemode");
static_assert(sizeof(BPFL_UIHelper_C_IsSoloGamemode) == 0x000038, "Wrong size on BPFL_UIHelper_C_IsSoloGamemode");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, PlayerController) == 0x000000, "Member 'BPFL_UIHelper_C_IsSoloGamemode::PlayerController' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_IsSoloGamemode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, bIsSolos) == 0x000010, "Member 'BPFL_UIHelper_C_IsSoloGamemode::bIsSolos' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BPFL_UIHelper_C_IsSoloGamemode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, K2Node_DynamicCast_AsGz_Player_State) == 0x000018, "Member 'BPFL_UIHelper_C_IsSoloGamemode::K2Node_DynamicCast_AsGz_Player_State' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPFL_UIHelper_C_IsSoloGamemode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, CallFunc_GetTeam_ReturnValue) == 0x000028, "Member 'BPFL_UIHelper_C_IsSoloGamemode::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, CallFunc_GetCapacity_ReturnValue) == 0x000030, "Member 'BPFL_UIHelper_C_IsSoloGamemode::CallFunc_GetCapacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BPFL_UIHelper_C_IsSoloGamemode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsSoloGamemode, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000035, "Member 'BPFL_UIHelper_C_IsSoloGamemode::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.ScopeValuePerFOV
// 0x0048 (0x0048 - 0x0000)
struct BPFL_UIHelper_C_ScopeValuePerFOV final
{
public:
	double                                        FieldOfView;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5962[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BiggestValueRange;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LowestValueRange;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LowestFoV;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BiggestFoV;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_ScopeValuePerFOV) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_ScopeValuePerFOV");
static_assert(sizeof(BPFL_UIHelper_C_ScopeValuePerFOV) == 0x000048, "Wrong size on BPFL_UIHelper_C_ScopeValuePerFOV");
static_assert(offsetof(BPFL_UIHelper_C_ScopeValuePerFOV, FieldOfView) == 0x000000, "Member 'BPFL_UIHelper_C_ScopeValuePerFOV::FieldOfView' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_ScopeValuePerFOV, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_ScopeValuePerFOV::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_ScopeValuePerFOV, Value) == 0x000010, "Member 'BPFL_UIHelper_C_ScopeValuePerFOV::Value' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_ScopeValuePerFOV, BiggestValueRange) == 0x000018, "Member 'BPFL_UIHelper_C_ScopeValuePerFOV::BiggestValueRange' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_ScopeValuePerFOV, LowestValueRange) == 0x000020, "Member 'BPFL_UIHelper_C_ScopeValuePerFOV::LowestValueRange' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_ScopeValuePerFOV, LowestFoV) == 0x000028, "Member 'BPFL_UIHelper_C_ScopeValuePerFOV::LowestFoV' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_ScopeValuePerFOV, BiggestFoV) == 0x000030, "Member 'BPFL_UIHelper_C_ScopeValuePerFOV::BiggestFoV' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_ScopeValuePerFOV, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000038, "Member 'BPFL_UIHelper_C_ScopeValuePerFOV::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_ScopeValuePerFOV, CallFunc_FTrunc_ReturnValue) == 0x000040, "Member 'BPFL_UIHelper_C_ScopeValuePerFOV::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.Set Rarity Icon & Color
// 0x0030 (0x0030 - 0x0000)
struct BPFL_UIHelper_C_Set_Rarity_Icon___Color final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 Quality;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5963[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetRarityIcon_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_Set_Rarity_Icon___Color) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_Set_Rarity_Icon___Color");
static_assert(sizeof(BPFL_UIHelper_C_Set_Rarity_Icon___Color) == 0x000030, "Wrong size on BPFL_UIHelper_C_Set_Rarity_Icon___Color");
static_assert(offsetof(BPFL_UIHelper_C_Set_Rarity_Icon___Color, Image) == 0x000000, "Member 'BPFL_UIHelper_C_Set_Rarity_Icon___Color::Image' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_Set_Rarity_Icon___Color, Quality) == 0x000008, "Member 'BPFL_UIHelper_C_Set_Rarity_Icon___Color::Quality' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_Set_Rarity_Icon___Color, __WorldContext) == 0x000010, "Member 'BPFL_UIHelper_C_Set_Rarity_Icon___Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_Set_Rarity_Icon___Color, CallFunc_GetRarityColor_ReturnValue) == 0x000018, "Member 'BPFL_UIHelper_C_Set_Rarity_Icon___Color::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_Set_Rarity_Icon___Color, CallFunc_GetRarityIcon_ReturnValue) == 0x000028, "Member 'BPFL_UIHelper_C_Set_Rarity_Icon___Color::CallFunc_GetRarityIcon_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.SetHexIconColored
// 0x0028 (0x0028 - 0x0000)
struct BPFL_UIHelper_C_SetHexIconColored final
{
public:
	EGzItemRarity                                 Quality;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5964[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_SetHexIconColored) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_SetHexIconColored");
static_assert(sizeof(BPFL_UIHelper_C_SetHexIconColored) == 0x000028, "Wrong size on BPFL_UIHelper_C_SetHexIconColored");
static_assert(offsetof(BPFL_UIHelper_C_SetHexIconColored, Quality) == 0x000000, "Member 'BPFL_UIHelper_C_SetHexIconColored::Quality' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_SetHexIconColored, Image) == 0x000008, "Member 'BPFL_UIHelper_C_SetHexIconColored::Image' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_SetHexIconColored, __WorldContext) == 0x000010, "Member 'BPFL_UIHelper_C_SetHexIconColored::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_SetHexIconColored, CallFunc_GetRarityColor_ReturnValue) == 0x000018, "Member 'BPFL_UIHelper_C_SetHexIconColored::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.GetIndexInTeam
// 0x0060 (0x0060 - 0x0000)
struct BPFL_UIHelper_C_GetIndexInTeam final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         OutputPin;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIndexInTeamFound;                                 // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5965[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5966[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzTeam*                                CallFunc_GetTeam_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5967[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGzTeamMember>                  CallFunc_GetTeamMembers_ReturnValue;               // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FGzTeamMember                          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_GetIndexInTeam) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_GetIndexInTeam");
static_assert(sizeof(BPFL_UIHelper_C_GetIndexInTeam) == 0x000060, "Wrong size on BPFL_UIHelper_C_GetIndexInTeam");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, PlayerState) == 0x000000, "Member 'BPFL_UIHelper_C_GetIndexInTeam::PlayerState' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, __WorldContext) == 0x000008, "Member 'BPFL_UIHelper_C_GetIndexInTeam::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, OutputPin) == 0x000010, "Member 'BPFL_UIHelper_C_GetIndexInTeam::OutputPin' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, bIndexInTeamFound) == 0x000014, "Member 'BPFL_UIHelper_C_GetIndexInTeam::bIndexInTeamFound' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BPFL_UIHelper_C_GetIndexInTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BPFL_UIHelper_C_GetIndexInTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_GetTeam_ReturnValue) == 0x000028, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_GetTeamMembers_ReturnValue) == 0x000038, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_GetTeamMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_Array_Get_Item) == 0x000048, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_IsValid_ReturnValue_2) == 0x000055, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_Array_IsEmpty_ReturnValue) == 0x000056, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_Not_PreBool_ReturnValue) == 0x000057, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_GetIndexInTeam, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'BPFL_UIHelper_C_GetIndexInTeam::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BPFL_UIHelper.BPFL_UIHelper_C.IsEventActive
// 0x0098 (0x0098 - 0x0000)
struct BPFL_UIHelper_C_IsEventActive final
{
public:
	struct FGameplayTag                           Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ObjectReference;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5968[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ExpireTime;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5969[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzExtractionRoyaleGameState*           K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_596A[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGzEventNotificationData>       CallFunc_GetActivePersistantNotifications_ReturnValue; // 0x0048(0x0010)(ConstParm, ReferenceParm)
	struct FGzEventNotificationData               CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_596B[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_596C[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ExpireTime_ImplicitCast;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UIHelper_C_IsEventActive) == 0x000008, "Wrong alignment on BPFL_UIHelper_C_IsEventActive");
static_assert(sizeof(BPFL_UIHelper_C_IsEventActive) == 0x000098, "Wrong size on BPFL_UIHelper_C_IsEventActive");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, Event) == 0x000000, "Member 'BPFL_UIHelper_C_IsEventActive::Event' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, ObjectReference) == 0x000008, "Member 'BPFL_UIHelper_C_IsEventActive::ObjectReference' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, __WorldContext) == 0x000010, "Member 'BPFL_UIHelper_C_IsEventActive::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, IsActive) == 0x000018, "Member 'BPFL_UIHelper_C_IsEventActive::IsActive' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, ExpireTime) == 0x000020, "Member 'BPFL_UIHelper_C_IsEventActive::ExpireTime' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000030, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State) == 0x000038, "Member 'BPFL_UIHelper_C_IsEventActive::K2Node_DynamicCast_AsGz_Extraction_Royale_Game_State' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BPFL_UIHelper_C_IsEventActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BPFL_UIHelper_C_IsEventActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_GetActivePersistantNotifications_ReturnValue) == 0x000048, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_GetActivePersistantNotifications_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_Array_Get_Item) == 0x000058, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BPFL_UIHelper_C_IsEventActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_MatchesTag_ReturnValue) == 0x000078, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, K2Node_FunctionResult_ExpireTime_ImplicitCast) == 0x000080, "Member 'BPFL_UIHelper_C_IsEventActive::K2Node_FunctionResult_ExpireTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000088, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_UIHelper_C_IsEventActive, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'BPFL_UIHelper_C_IsEventActive::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

