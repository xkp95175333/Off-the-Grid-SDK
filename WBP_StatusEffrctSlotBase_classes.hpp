#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StatusEffrctSlotBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_StatusEffrctSlotBase.WBP_StatusEffrctSlotBase_C
// 0x0088 (0x03C8 - 0x0340)
class UWBP_StatusEffrctSlotBase_C : public UGzHUDComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Blinking;                                          // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ProgressBottom;                                    // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ProgressTop;                                       // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnFinishedHideAnim;                                // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          CanBlink;                                          // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C54[0x3];                                     // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShowAndHideAnimSpeed;                              // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SlotID;                                            // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlinkingAnimSpeed;                                 // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C55[0x4];                                     // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnStartedBlinking;                                 // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnFinishedBlinking;                                // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowPercent;                                       // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BlinkingAnimation(class UWidgetAnimation* InAnimation);
	void Construct();
	void DebugPrint(const class FString& InString);
	void ExecuteUbergraph_WBP_StatusEffrctSlotBase(int32 EntryPoint);
	void FinishedBlinkingAnim();
	void HideEffect();
	void HideWidget();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnFinishedBlinking__DelegateSignature(class UWBP_StatusEffrctSlotBase_C* Param_Slot);
	void OnFinishedHideAnim__DelegateSignature(class UWBP_StatusEffrctSlotBase_C* Param_Slot);
	void OnFinishShow();
	void OnStartedBlinking__DelegateSignature(class UWBP_StatusEffrctSlotBase_C* Param_Slot);
	void RefreshAllAnimationsTime();
	void SetIconTexture(TSoftObjectPtr<class UTexture2D> SoftTexture);
	void SetPercent(float InPercent);
	void SetSlotID(class FName Param_SlotID);
	void ShowEffect();
	void StartBlinkingAnim();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_StatusEffrctSlotBase_C">();
	}
	static class UWBP_StatusEffrctSlotBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_StatusEffrctSlotBase_C>();
	}
};
static_assert(alignof(UWBP_StatusEffrctSlotBase_C) == 0x000008, "Wrong alignment on UWBP_StatusEffrctSlotBase_C");
static_assert(sizeof(UWBP_StatusEffrctSlotBase_C) == 0x0003C8, "Wrong size on UWBP_StatusEffrctSlotBase_C");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, UberGraphFrame) == 0x000340, "Member 'UWBP_StatusEffrctSlotBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, Blinking) == 0x000348, "Member 'UWBP_StatusEffrctSlotBase_C::Blinking' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, ProgressBottom) == 0x000350, "Member 'UWBP_StatusEffrctSlotBase_C::ProgressBottom' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, ProgressTop) == 0x000358, "Member 'UWBP_StatusEffrctSlotBase_C::ProgressTop' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, Background) == 0x000360, "Member 'UWBP_StatusEffrctSlotBase_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, Icon) == 0x000368, "Member 'UWBP_StatusEffrctSlotBase_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, ProgressBar) == 0x000370, "Member 'UWBP_StatusEffrctSlotBase_C::ProgressBar' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, OnFinishedHideAnim) == 0x000378, "Member 'UWBP_StatusEffrctSlotBase_C::OnFinishedHideAnim' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, CanBlink) == 0x000388, "Member 'UWBP_StatusEffrctSlotBase_C::CanBlink' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, ShowAndHideAnimSpeed) == 0x00038C, "Member 'UWBP_StatusEffrctSlotBase_C::ShowAndHideAnimSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, SlotID) == 0x000390, "Member 'UWBP_StatusEffrctSlotBase_C::SlotID' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, BlinkingAnimSpeed) == 0x000398, "Member 'UWBP_StatusEffrctSlotBase_C::BlinkingAnimSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, OnStartedBlinking) == 0x0003A0, "Member 'UWBP_StatusEffrctSlotBase_C::OnStartedBlinking' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, OnFinishedBlinking) == 0x0003B0, "Member 'UWBP_StatusEffrctSlotBase_C::OnFinishedBlinking' has a wrong offset!");
static_assert(offsetof(UWBP_StatusEffrctSlotBase_C, ShowPercent) == 0x0003C0, "Member 'UWBP_StatusEffrctSlotBase_C::ShowPercent' has a wrong offset!");

}

