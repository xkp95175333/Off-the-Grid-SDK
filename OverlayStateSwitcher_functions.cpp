#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OverlayStateSwitcher

#include "Basic.hpp"

#include "OverlayStateSwitcher_classes.hpp"
#include "OverlayStateSwitcher_parameters.hpp"


namespace SDK
{

// Function OverlayStateSwitcher.OverlayStateSwitcher_C.UpdateButtonFocus
// (Public, BlueprintCallable, BlueprintEvent)

void UOverlayStateSwitcher_C::UpdateButtonFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OverlayStateSwitcher_C", "UpdateButtonFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OverlayStateSwitcher.OverlayStateSwitcher_C.SelectOverlayState
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UOverlayStateSwitcher_C::SelectOverlayState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OverlayStateSwitcher_C", "SelectOverlayState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OverlayStateSwitcher.OverlayStateSwitcher_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UOverlayStateSwitcher_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OverlayStateSwitcher_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OverlayStateSwitcher.OverlayStateSwitcher_C.ExecuteUbergraph_OverlayStateSwitcher
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOverlayStateSwitcher_C::ExecuteUbergraph_OverlayStateSwitcher(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OverlayStateSwitcher_C", "ExecuteUbergraph_OverlayStateSwitcher");

	Params::OverlayStateSwitcher_C_ExecuteUbergraph_OverlayStateSwitcher Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OverlayStateSwitcher.OverlayStateSwitcher_C.CycleStateImpl
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Up                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOverlayStateSwitcher_C::CycleStateImpl(bool Up)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OverlayStateSwitcher_C", "CycleStateImpl");

	Params::OverlayStateSwitcher_C_CycleStateImpl Parms{};

	Parms.Up = Up;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OverlayStateSwitcher.OverlayStateSwitcher_C.CycleState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Up                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOverlayStateSwitcher_C::CycleState(bool Up)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OverlayStateSwitcher_C", "CycleState");

	Params::OverlayStateSwitcher_C_CycleState Parms{};

	Parms.Up = Up;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OverlayStateSwitcher.OverlayStateSwitcher_C.CreateButtons
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOverlayStateSwitcher_C::CreateButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OverlayStateSwitcher_C", "CreateButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OverlayStateSwitcher.OverlayStateSwitcher_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UOverlayStateSwitcher_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OverlayStateSwitcher_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}

}

