#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_Cyberlimbs_KineticShieldArm

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.ChangeProgressBarBackgroundColor
// 0x0610 (0x0610 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor final
{
public:
	class UProgressBar*                           Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Background_Image_Tint;                             // 0x0008(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         Pad_5A87[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressBarStyle                      ProgressBarStyle;                                  // 0x0020(0x0290)(Parm, OutParm)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x02B0(0x00D0)()
	struct FProgressBarStyle                      K2Node_MakeStruct_ProgressBarStyle;                // 0x0380(0x0290)()
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor) == 0x000010, "Wrong alignment on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor) == 0x000610, "Wrong size on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor, Target) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor::Target' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor, Background_Image_Tint) == 0x000008, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor::Background_Image_Tint' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor, ProgressBarStyle) == 0x000020, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor::ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor, K2Node_MakeStruct_SlateBrush) == 0x0002B0, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor, K2Node_MakeStruct_ProgressBarStyle) == 0x000380, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ChangeProgressBarBackgroundColor::K2Node_MakeStruct_ProgressBarStyle' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm
// 0x0100 (0x0100 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   K2Node_Event_LimbType_1;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A88[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzLimbGaugeData                       K2Node_Event_GaugeData;                            // 0x0008(0x0028)(ConstParm, NoDestructor)
	class UGA_KineticShield_C*                    K2Node_DynamicCast_AsGA_Kinetic_Shield;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A89[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Damage;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxDamage;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Health;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxHealth;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KineticShield_C*                    K2Node_CustomEvent_KineticShieldReference;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A8A[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(double BlastDamage, double BlastMaxDamage, double CurrentHealth, double MaxHealth)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_KineticShield_C* KineticShieldReference)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   K2Node_Event_LimbType;                             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A8B[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_BP_GetAbilityComponent_ReturnValue;       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_KineticShieldComponent_C*           K2Node_DynamicCast_AsBP_Kinetic_Shield_Component;  // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A8C[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_BP_GetAbilityComponent_ReturnValue_1;     // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_KineticShieldComponent_C*           K2Node_DynamicCast_AsBP_Kinetic_Shield_Component_1; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A8D[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(double BlastDamage, double BlastMaxDamage, double CurrentHealth, double MaxHealth)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_KineticShield_C* KineticShieldReference)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm) == 0x000008, "Wrong alignment on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm) == 0x000100, "Wrong size on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, EntryPoint) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_Event_LimbType_1) == 0x000004, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_Event_LimbType_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_Event_GaugeData) == 0x000008, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_Event_GaugeData' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_DynamicCast_AsGA_Kinetic_Shield) == 0x000030, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_DynamicCast_AsGA_Kinetic_Shield' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CustomEvent_Damage) == 0x000040, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CustomEvent_MaxDamage) == 0x000048, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CustomEvent_MaxDamage' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CustomEvent_Health) == 0x000050, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CustomEvent_Health' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CustomEvent_MaxHealth) == 0x000058, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CustomEvent_MaxHealth' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CustomEvent_KineticShieldReference) == 0x000070, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CustomEvent_KineticShieldReference' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CreateDelegate_OutputDelegate_1) == 0x00007C, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CreateDelegate_OutputDelegate_2) == 0x00008C, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_Event_LimbType) == 0x00009C, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_Event_LimbType' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, CallFunc_IsValid_ReturnValue_1) == 0x00009D, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, CallFunc_BP_GetAbilityComponent_ReturnValue) == 0x0000A0, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::CallFunc_BP_GetAbilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_DynamicCast_AsBP_Kinetic_Shield_Component) == 0x0000A8, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_DynamicCast_AsBP_Kinetic_Shield_Component' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, CallFunc_BP_GetAbilityComponent_ReturnValue_1) == 0x0000B8, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::CallFunc_BP_GetAbilityComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_DynamicCast_AsBP_Kinetic_Shield_Component_1) == 0x0000C0, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_DynamicCast_AsBP_Kinetic_Shield_Component_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000CC, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000DC, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000EC, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_KineticShieldArm::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.HandleDMG
// 0x0570 (0x0570 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamage;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A8E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0010)()
	struct FProgressBarStyle                      CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle; // 0x0030(0x0290)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A8F[0x8];                                     // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressBarStyle                      CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle_1; // 0x02D0(0x0290)()
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A90[0x3];                                     // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG) == 0x000010, "Wrong alignment on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG) == 0x000570, "Wrong size on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, Damage) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::Damage' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, MaxDamage) == 0x000008, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::MaxDamage' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, CallFunc_FFloor_ReturnValue) == 0x00001C, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle) == 0x000030, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, CallFunc_PlayAnimation_ReturnValue) == 0x0002C0, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle_1) == 0x0002D0, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000560, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000564, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleDMG::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.HandleHP
// 0x02E0 (0x02E0 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP final
{
public:
	double                                        Health_Value;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealthValue;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A91[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0010)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A92[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressBarStyle                      CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle; // 0x0040(0x0290)()
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A93[0x1];                                     // 0x02D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP) == 0x000010, "Wrong alignment on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP) == 0x0002E0, "Wrong size on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, Health_Value) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::Health_Value' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, MaxHealthValue) == 0x000008, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::MaxHealthValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, CallFunc_FFloor_ReturnValue) == 0x000018, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle) == 0x000040, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0002D0, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0002D1, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, CallFunc_BooleanAND_ReturnValue) == 0x0002D2, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0002D4, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_HandleHP::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.OnLimbActivated
// 0x0030 (0x0030 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated final
{
public:
	EGzLimbType                                   LimbType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A94[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzLimbGaugeData                       GaugeData;                                         // 0x0008(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated) == 0x000008, "Wrong alignment on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated) == 0x000030, "Wrong size on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated, LimbType) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated::LimbType' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated, GaugeData) == 0x000008, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivated::GaugeData' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.OnLimbActivationEnded
// 0x0001 (0x0001 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivationEnded final
{
public:
	EGzLimbType                                   LimbType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivationEnded) == 0x000001, "Wrong alignment on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivationEnded");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivationEnded) == 0x000001, "Wrong size on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivationEnded");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivationEnded, LimbType) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_OnLimbActivationEnded::LimbType' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.ResetWidget
// 0x0520 (0x0520 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ResetWidget final
{
public:
	struct FProgressBarStyle                      CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle; // 0x0000(0x0290)()
	struct FProgressBarStyle                      CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle_1; // 0x0290(0x0290)()
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ResetWidget) == 0x000010, "Wrong alignment on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ResetWidget");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ResetWidget) == 0x000520, "Wrong size on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ResetWidget");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ResetWidget, CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ResetWidget::CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ResetWidget, CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle_1) == 0x000290, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ResetWidget::CallFunc_ChangeProgressBarBackgroundColor_ProgressBarStyle_1' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.Set UI Health and Damage
// 0x0020 (0x0020 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamage;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Health;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage) == 0x000008, "Wrong alignment on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage) == 0x000020, "Wrong size on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage, Damage) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage::Damage' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage, MaxDamage) == 0x000008, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage::MaxDamage' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage, Health) == 0x000010, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage::Health' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage, MaxHealth) == 0x000018, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_Set_UI_Health_and_Damage::MaxHealth' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_KineticShieldArm.WBP_Crosshair_Cyberlimbs_KineticShieldArm_C.ShieldSpawned
// 0x0008 (0x0008 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ShieldSpawned final
{
public:
	class ABP_KineticShield_C*                    KineticShieldReference;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ShieldSpawned) == 0x000008, "Wrong alignment on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ShieldSpawned");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ShieldSpawned) == 0x000008, "Wrong size on WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ShieldSpawned");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ShieldSpawned, KineticShieldReference) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_KineticShieldArm_C_ShieldSpawned::KineticShieldReference' has a wrong offset!");

}

