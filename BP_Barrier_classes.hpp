#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Barrier

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_Barrier_ReplicatedData_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Barrier.BP_Barrier_C
// 0x0110 (0x03B0 - 0x02A0)
class ABP_Barrier_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   BackInteractiveBox;                                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ForwardInteractiveBox;                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CubeRoot;                                          // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzInteractableComponent*               GzInteractable;                                    // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RootSceneComponent;                                // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Scale_FB7CC57047AD982DDD459FA34E7EE01C;   // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Location_FB7CC57047AD982DDD459FA34E7EE01C; // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_FB7CC57047AD982DDD459FA34E7EE01C; // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1256[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Barrier_Part_C*                     BarrierActorPartLeft;                              // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_Barrier_Part_C*                     BarrierActorPartRight;                             // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TSet<class AActor*>                           Parts;                                             // 0x0300(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                StartActorLocation;                                // 0x0350(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0368(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UBP_BarrierComponent_C*                 BarrierComponent;                                  // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_Barrier_ReplicatedData              BarrierReplicatedValues;                           // 0x0388(0x0020)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	double                                        HeightCoefFromPreviewComponent;                    // 0x03A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void AssignOnPartDestroy();
	void BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable);
	void Cache_Barrier_Component();
	void Close_Barrier();
	void EndLaunchSequention();
	void ExecuteUbergraph_BP_Barrier(int32 EntryPoint);
	void LaunchToTarget_Event(bool bReverse);
	void OnDestroyed_Event(class AActor* DestroyedActor);
	void OnRep_BarrierReplicatedValues();
	void ReceiveBeginPlay();
	void RestoreCharge();
	void Set_Parts(bool bRight, class ABP_Barrier_Part_C* Part);
	void Setup_Interactable_Objects();
	void SetupInteractableObjectsWithDelay_Event();
	class ABP_Barrier_Part_C* SpawnPart(bool bRight);
	void SpawnParts();
	void StartLaunch(const struct FVector& Barrier_Replicated_Values_Target_Position);
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void UpdateLaunchSequence(float Location, bool Reverce, double Scale);

	bool GetCurrentInteractionInfo(const class AGzCharacter* InteractedBy, const TArray<struct FGzInteractionInfo>& InteractionInfoArray, struct FGameplayTag* OutInteractionTag, struct FGzInteractionData* OutInteractionData) const;
	void IsPickeable(bool* Pick) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Barrier_C">();
	}
	static class ABP_Barrier_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Barrier_C>();
	}
};
static_assert(alignof(ABP_Barrier_C) == 0x000008, "Wrong alignment on ABP_Barrier_C");
static_assert(sizeof(ABP_Barrier_C) == 0x0003B0, "Wrong size on ABP_Barrier_C");
static_assert(offsetof(ABP_Barrier_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_Barrier_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, BackInteractiveBox) == 0x0002A8, "Member 'ABP_Barrier_C::BackInteractiveBox' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, ForwardInteractiveBox) == 0x0002B0, "Member 'ABP_Barrier_C::ForwardInteractiveBox' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, Cube) == 0x0002B8, "Member 'ABP_Barrier_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, CubeRoot) == 0x0002C0, "Member 'ABP_Barrier_C::CubeRoot' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, GzInteractable) == 0x0002C8, "Member 'ABP_Barrier_C::GzInteractable' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, RootSceneComponent) == 0x0002D0, "Member 'ABP_Barrier_C::RootSceneComponent' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, Timeline_Scale_FB7CC57047AD982DDD459FA34E7EE01C) == 0x0002D8, "Member 'ABP_Barrier_C::Timeline_Scale_FB7CC57047AD982DDD459FA34E7EE01C' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, Timeline_Location_FB7CC57047AD982DDD459FA34E7EE01C) == 0x0002DC, "Member 'ABP_Barrier_C::Timeline_Location_FB7CC57047AD982DDD459FA34E7EE01C' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, Timeline__Direction_FB7CC57047AD982DDD459FA34E7EE01C) == 0x0002E0, "Member 'ABP_Barrier_C::Timeline__Direction_FB7CC57047AD982DDD459FA34E7EE01C' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, Timeline) == 0x0002E8, "Member 'ABP_Barrier_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, BarrierActorPartLeft) == 0x0002F0, "Member 'ABP_Barrier_C::BarrierActorPartLeft' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, BarrierActorPartRight) == 0x0002F8, "Member 'ABP_Barrier_C::BarrierActorPartRight' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, Parts) == 0x000300, "Member 'ABP_Barrier_C::Parts' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, StartActorLocation) == 0x000350, "Member 'ABP_Barrier_C::StartActorLocation' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, TargetLocation) == 0x000368, "Member 'ABP_Barrier_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, BarrierComponent) == 0x000380, "Member 'ABP_Barrier_C::BarrierComponent' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, BarrierReplicatedValues) == 0x000388, "Member 'ABP_Barrier_C::BarrierReplicatedValues' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_C, HeightCoefFromPreviewComponent) == 0x0003A8, "Member 'ABP_Barrier_C::HeightCoefFromPreviewComponent' has a wrong offset!");

}

