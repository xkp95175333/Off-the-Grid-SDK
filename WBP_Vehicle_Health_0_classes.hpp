#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Vehicle_Health_0

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "G01_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Vehicle_Health.WBP_Vehicle_Health_C
// 0x0068 (0x0348 - 0x02E0)
class WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 VehicleBase_Dmg_Image;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VehicleBase_Image;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              VehicleBase_Switcher;                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           VehicleHealth_ProgressBar;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGzCharacter*                           As_Gz_Character;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGzVehicle*                             As_Gz_Vehicle;                                     // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           AttributeListenTask;                               // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DamagedThreshold;                                  // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorHealthDanger;                                 // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorHealthStandard;                               // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Vehicle_Health(int32 EntryPoint);
	void InitializeVehicleAttributeListen(class UObject* InputObject);
	void OnAttributeChanged_6A3DC511400C1471E70B3ABD9573B387(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnAttributeChanged_C00E66A149C7DECAA93B1195402E5E1C(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnHealthChanged(double Current, double Max);
	void OnSeatChanged(class AGzCharacter* Character, EGzVehicleSeatType NewSeat, EGzVehicleSeatType OldSeat);
	void PreConstruct(bool IsDesignTime);
	void SetupInitialState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WidgetBlueprintGeneratedClass WBP_Vehicle_Health.WBP_Vehicle_Health_C", true, "WBP_Vehicle_Health_C">();
	}
	static class WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C>();
	}
};
static_assert(alignof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C");
static_assert(sizeof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C) == 0x000348, "Wrong size on WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, UberGraphFrame) == 0x0002E0, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, VehicleBase_Dmg_Image) == 0x0002E8, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::VehicleBase_Dmg_Image' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, VehicleBase_Image) == 0x0002F0, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::VehicleBase_Image' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, VehicleBase_Switcher) == 0x0002F8, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::VehicleBase_Switcher' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, VehicleHealth_ProgressBar) == 0x000300, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::VehicleHealth_ProgressBar' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, As_Gz_Character) == 0x000308, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::As_Gz_Character' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, As_Gz_Vehicle) == 0x000310, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::As_Gz_Vehicle' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, AttributeListenTask) == 0x000318, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::AttributeListenTask' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, DamagedThreshold) == 0x000320, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::DamagedThreshold' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, ColorHealthDanger) == 0x000328, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::ColorHealthDanger' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C, ColorHealthStandard) == 0x000338, "Member 'WBP_Vehicle_Health_0::UWBP_Vehicle_Health_C::ColorHealthStandard' has a wrong offset!");

}

