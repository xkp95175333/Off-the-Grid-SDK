#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConcertClient

#include "Basic.hpp"

#include "ConcertClient_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ConcertTransport_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class ConcertClient.ConcertClientConfig
// 0x0138 (0x0160 - 0x0028)
class UConcertClientConfig final : public UObject
{
public:
	bool                                          bIsHeadless;                                       // 0x0028(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInstallEditorToolbarButton;                       // 0x0029(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoConnect;                                      // 0x002A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRetryAutoConnectOnError;                          // 0x002B(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EConcertServerType                            ServerType;                                        // 0x002C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultServerURL;                                  // 0x0030(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultSessionName;                                // 0x0040(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultSessionToRestore;                           // 0x0050(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultSaveSessionAs;                              // 0x0060(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ReadOnlyAssignment;                                // 0x0070(0x0020)(Edit, Config, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  SendOnlyAssignment;                                // 0x0090(0x0020)(Edit, Config, NativeAccessSpecifierPublic)
	bool                                          bShouldPromptForHotReloadOnLevel;                  // 0x00B0(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4700[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConcertClientSettings                 ClientSettings;                                    // 0x00B8(0x0098)(Edit, Config, NativeAccessSpecifierPublic)
	struct FConcertSourceControlSettings          SourceControlSettings;                             // 0x0150(0x0001)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4701[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConcertEndpointSettings               EndpointSettings;                                  // 0x0154(0x000C)(Edit, Config, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConcertClientConfig">();
	}
	static class UConcertClientConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConcertClientConfig>();
	}
};
static_assert(alignof(UConcertClientConfig) == 0x000008, "Wrong alignment on UConcertClientConfig");
static_assert(sizeof(UConcertClientConfig) == 0x000160, "Wrong size on UConcertClientConfig");
static_assert(offsetof(UConcertClientConfig, bIsHeadless) == 0x000028, "Member 'UConcertClientConfig::bIsHeadless' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, bInstallEditorToolbarButton) == 0x000029, "Member 'UConcertClientConfig::bInstallEditorToolbarButton' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, bAutoConnect) == 0x00002A, "Member 'UConcertClientConfig::bAutoConnect' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, bRetryAutoConnectOnError) == 0x00002B, "Member 'UConcertClientConfig::bRetryAutoConnectOnError' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, ServerType) == 0x00002C, "Member 'UConcertClientConfig::ServerType' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, DefaultServerURL) == 0x000030, "Member 'UConcertClientConfig::DefaultServerURL' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, DefaultSessionName) == 0x000040, "Member 'UConcertClientConfig::DefaultSessionName' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, DefaultSessionToRestore) == 0x000050, "Member 'UConcertClientConfig::DefaultSessionToRestore' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, DefaultSaveSessionAs) == 0x000060, "Member 'UConcertClientConfig::DefaultSaveSessionAs' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, ReadOnlyAssignment) == 0x000070, "Member 'UConcertClientConfig::ReadOnlyAssignment' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, SendOnlyAssignment) == 0x000090, "Member 'UConcertClientConfig::SendOnlyAssignment' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, bShouldPromptForHotReloadOnLevel) == 0x0000B0, "Member 'UConcertClientConfig::bShouldPromptForHotReloadOnLevel' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, ClientSettings) == 0x0000B8, "Member 'UConcertClientConfig::ClientSettings' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, SourceControlSettings) == 0x000150, "Member 'UConcertClientConfig::SourceControlSettings' has a wrong offset!");
static_assert(offsetof(UConcertClientConfig, EndpointSettings) == 0x000154, "Member 'UConcertClientConfig::EndpointSettings' has a wrong offset!");

}

