#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineMesh

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineMesh.BP_SplineMesh_C.AddInstance
// 0x05B0 (0x05B0 - 0x0000)
struct BP_SplineMesh_C_AddInstance final
{
public:
	double                                        DistanceAlongSpline;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       SplineComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCap;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInstancedStaticMeshComponent*>  Param_ISMs;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	double                                        InEndDistance;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          ISM;                                               // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AA[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AB[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AC[0x1];                                     // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue_1;           // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue_2;           // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AD[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SnapToLandscapePos_Location;              // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SnapToLandscapePos_Normal;                // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0130(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SnapToLandscapePos_Location_1;            // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SnapToLandscapePos_Normal_1;              // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_SelectObject_ReturnValue;                 // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          K2Node_DynamicCast_AsInstanced_Static_Mesh_Component; // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AE[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AF[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2; // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue; // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Acos_ReturnValue;                         // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransformFromAxes_ReturnValue;        // 0x0450(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B0[0x8];                                     // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransformFromAxes_ReturnValue_1;      // 0x04D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0530(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast; // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_2; // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2;  // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_AddInstance) == 0x000010, "Wrong alignment on BP_SplineMesh_C_AddInstance");
static_assert(sizeof(BP_SplineMesh_C_AddInstance) == 0x0005B0, "Wrong size on BP_SplineMesh_C_AddInstance");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, DistanceAlongSpline) == 0x000000, "Member 'BP_SplineMesh_C_AddInstance::DistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, SplineComponent) == 0x000008, "Member 'BP_SplineMesh_C_AddInstance::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, Mesh) == 0x000010, "Member 'BP_SplineMesh_C_AddInstance::Mesh' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, IsCap) == 0x000018, "Member 'BP_SplineMesh_C_AddInstance::IsCap' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, Param_ISMs) == 0x000020, "Member 'BP_SplineMesh_C_AddInstance::Param_ISMs' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, InEndDistance) == 0x000030, "Member 'BP_SplineMesh_C_AddInstance::InEndDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, ISM) == 0x000038, "Member 'BP_SplineMesh_C_AddInstance::ISM' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000050, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000070, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000078, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_SplineMesh_C_AddInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_SplineMesh_C_AddInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, Temp_bool_True_if_break_was_hit_Variable) == 0x0000AC, "Member 'BP_SplineMesh_C_AddInstance::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Not_PreBool_ReturnValue) == 0x0000AD, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BooleanAND_ReturnValue) == 0x0000AE, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Conv_IntToVector_ReturnValue) == 0x0000B0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Conv_IntToVector_ReturnValue_1) == 0x0000C8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Conv_IntToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Conv_IntToVector_ReturnValue_2) == 0x0000E0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Conv_IntToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F9, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SnapToLandscapePos_Location) == 0x000100, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SnapToLandscapePos_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SnapToLandscapePos_Normal) == 0x000118, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SnapToLandscapePos_Normal' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_GetTransform_ReturnValue) == 0x000130, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_X) == 0x000190, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_Y) == 0x000198, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_Z) == 0x0001A0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_AddComponent_ReturnValue) == 0x0001A8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SnapToLandscapePos_Location_1) == 0x0001B0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SnapToLandscapePos_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SnapToLandscapePos_Normal_1) == 0x0001C8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SnapToLandscapePos_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SelectObject_ReturnValue) == 0x0001E0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SelectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SelectVector_ReturnValue) == 0x0001E8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, K2Node_DynamicCast_AsInstanced_Static_Mesh_Component) == 0x000200, "Member 'BP_SplineMesh_C_AddInstance::K2Node_DynamicCast_AsInstanced_Static_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'BP_SplineMesh_C_AddInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000210, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_X_1) == 0x000228, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_Y_1) == 0x000230, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_Z_1) == 0x000238, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_VSize_ReturnValue) == 0x000240, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_MakeVector_ReturnValue) == 0x000248, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SetStaticMesh_ReturnValue) == 0x000260, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SelectVector_ReturnValue_1) == 0x000268, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000280, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000298, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_X_2) == 0x0002B0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_Y_2) == 0x0002B8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_Z_2) == 0x0002C0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Normal_ReturnValue) == 0x0002C8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2) == 0x0002E0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Cross_VectorVector_ReturnValue) == 0x0002F8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_X_3) == 0x000310, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_Y_3) == 0x000318, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_BreakVector_Z_3) == 0x000320, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000328, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_MakeVector_ReturnValue_1) == 0x000340, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Dot_VectorVector_ReturnValue) == 0x000358, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SelectVector_ReturnValue_2) == 0x000360, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_VSize_ReturnValue_1) == 0x000378, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000380, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000398, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Normal_ReturnValue_1) == 0x0003A0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0003B8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue) == 0x0003C0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Acos_ReturnValue) == 0x0003D8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0003E0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_RadiansToDegrees_ReturnValue) == 0x0003F8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000400, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000418, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_RotateAngleAxis_ReturnValue) == 0x000420, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000438, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_MakeTransformFromAxes_ReturnValue) == 0x000450, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_MakeTransformFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x0004B0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_MakeTransformFromAxes_ReturnValue_1) == 0x0004D0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_MakeTransformFromAxes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_SelectTransform_ReturnValue) == 0x000530, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_AddInstance_ReturnValue) == 0x000590, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000594, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000598, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast) == 0x00059C, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_2) == 0x0005A0, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x0005A4, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x0005A8, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddInstance, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2) == 0x0005AC, "Member 'BP_SplineMesh_C_AddInstance::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.AddISM
// 0x00A0 (0x00A0 - 0x0000)
struct BP_SplineMesh_C_AddISM final
{
public:
	TArray<class UStaticMesh*>                    Meshes;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B2[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_AddISM) == 0x000010, "Wrong alignment on BP_SplineMesh_C_AddISM");
static_assert(sizeof(BP_SplineMesh_C_AddISM) == 0x0000A0, "Wrong size on BP_SplineMesh_C_AddISM");
static_assert(offsetof(BP_SplineMesh_C_AddISM, Meshes) == 0x000000, "Member 'BP_SplineMesh_C_AddISM::Meshes' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_SplineMesh_C_AddISM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_SplineMesh_C_AddISM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_SplineMesh_C_AddISM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SplineMesh_C_AddISM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_SplineMesh_C_AddISM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SplineMesh_C_AddISM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_SplineMesh_C_AddISM::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, CallFunc_AddComponent_ReturnValue) == 0x000090, "Member 'BP_SplineMesh_C_AddISM::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, CallFunc_Array_AddUnique_ReturnValue) == 0x000098, "Member 'BP_SplineMesh_C_AddISM::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddISM, CallFunc_SetStaticMesh_ReturnValue) == 0x00009C, "Member 'BP_SplineMesh_C_AddISM::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.AddSplineMeshComponent
// 0x06F0 (0x06F0 - 0x0000)
struct BP_SplineMesh_C_AddSplineMeshComponent final
{
public:
	class UStaticMesh*                            Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Collision;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B3[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Start_Location_Distance;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Start_Tangent__Distance;                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        End_Location_Distance;                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        End_Tangent_Distance;                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline_Component;                                  // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ClampTangent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   Component;                                         // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMeshComponent;                               // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue; // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B4[0x8];                                     // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0080(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2; // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B5[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SnapToLandscapePos_Location;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SnapToLandscapePos_Normal;                // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B6[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_1; // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable_2;                              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable_3;                              // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B7[0x5];                                     // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_2; // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01D0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B8[0x8];                                     // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0270(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x02D0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               K2Node_Select_Default;                             // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B9[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SnapToLandscapePos_Location_1;            // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SnapToLandscapePos_Normal_1;              // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SnapToLandscapePos_Location_2;            // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SnapToLandscapePos_Normal_2;              // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_2;   // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x05B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_5;               // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_6;               // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue_1;            // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_7;               // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BA[0x7];                                     // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_8;               // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default_1;                           // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BB[0x3];                                     // 0x06C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast; // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_2; // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x06DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_2; // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_AddSplineMeshComponent) == 0x000010, "Wrong alignment on BP_SplineMesh_C_AddSplineMeshComponent");
static_assert(sizeof(BP_SplineMesh_C_AddSplineMeshComponent) == 0x0006F0, "Wrong size on BP_SplineMesh_C_AddSplineMeshComponent");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Mesh) == 0x000000, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Mesh' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Has_Collision) == 0x000008, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Has_Collision' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Start_Location_Distance) == 0x000010, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Start_Location_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Start_Tangent__Distance) == 0x000018, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Start_Tangent__Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, End_Location_Distance) == 0x000020, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::End_Location_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, End_Tangent_Distance) == 0x000028, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::End_Tangent_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Spline_Component) == 0x000030, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Spline_Component' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, ClampTangent) == 0x000038, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::ClampTangent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Component) == 0x000040, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Component' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, SplineMeshComponent) == 0x000048, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::SplineMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue) == 0x000058, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Temp_struct_Variable) == 0x000080, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0000E0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_X) == 0x0000F8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Y) == 0x000100, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Z) == 0x000108, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_AddComponent_ReturnValue) == 0x000110, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000118, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2) == 0x000130, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Temp_byte_Variable) == 0x000148, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SnapToLandscapePos_Location) == 0x000160, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SnapToLandscapePos_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SnapToLandscapePos_Normal) == 0x000178, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SnapToLandscapePos_Normal' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Temp_byte_Variable_1) == 0x000190, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Temp_bool_Variable) == 0x000191, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_1) == 0x000198, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Temp_byte_Variable_2) == 0x0001B0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Temp_byte_Variable_3) == 0x0001B1, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, Temp_bool_Variable_1) == 0x0001B2, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_2) == 0x0001B8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetTransform_ReturnValue) == 0x0001D0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_InverseTransformLocation_ReturnValue) == 0x000230, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_X_1) == 0x000248, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Y_1) == 0x000250, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Z_1) == 0x000258, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectFloat_ReturnValue) == 0x000260, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetTransform_ReturnValue_1) == 0x000270, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetTransform_ReturnValue_2) == 0x0002D0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Conv_IntToVector_ReturnValue) == 0x000330, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000348, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectVector_ReturnValue) == 0x000360, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, K2Node_Select_Default) == 0x000378, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x000380, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SnapToLandscapePos_Location_1) == 0x000398, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SnapToLandscapePos_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SnapToLandscapePos_Normal_1) == 0x0003B0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SnapToLandscapePos_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_VSize_ReturnValue) == 0x0003C8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Cross_VectorVector_ReturnValue) == 0x0003D0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0003E8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Normal_ReturnValue) == 0x000400, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x000418, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000430, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectVector_ReturnValue_1) == 0x000448, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectVector_ReturnValue_2) == 0x000460, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_X_2) == 0x000478, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Y_2) == 0x000480, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Z_2) == 0x000488, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_ClampVectorSize_ReturnValue) == 0x000490, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_MakeVector_ReturnValue) == 0x0004A8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_X_3) == 0x0004C0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Y_3) == 0x0004C8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Z_3) == 0x0004D0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectVector_ReturnValue_3) == 0x0004D8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_MakeVector_ReturnValue_1) == 0x0004F0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectVector_ReturnValue_4) == 0x000508, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x000520, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_VSize_ReturnValue_1) == 0x000538, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SnapToLandscapePos_Location_2) == 0x000540, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SnapToLandscapePos_Location_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SnapToLandscapePos_Normal_2) == 0x000558, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SnapToLandscapePos_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000570, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000588, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_InverseTransformLocation_ReturnValue_2) == 0x0005A0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_InverseTransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Normal_ReturnValue_1) == 0x0005B8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectVector_ReturnValue_5) == 0x0005D0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0005E8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_X_4) == 0x000600, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Y_4) == 0x000608, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Z_4) == 0x000610, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectVector_ReturnValue_6) == 0x000618, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_MakeVector_ReturnValue_2) == 0x000630, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_ClampVectorSize_ReturnValue_1) == 0x000648, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_ClampVectorSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectVector_ReturnValue_7) == 0x000660, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_X_5) == 0x000678, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Y_5) == 0x000680, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_BreakVector_Z_5) == 0x000688, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_MakeVector_ReturnValue_3) == 0x000690, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SetStaticMesh_ReturnValue) == 0x0006A8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_SelectVector_ReturnValue_8) == 0x0006B0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_SelectVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, K2Node_Select_Default_1) == 0x0006C8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0006CC, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0006D0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0006D4, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_2) == 0x0006D8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0006DC, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_2) == 0x0006E0, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0006E4, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_AddSplineMeshComponent, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0006E8, "Member 'BP_SplineMesh_C_AddSplineMeshComponent::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.BuildSplineMesh
// 0x03E8 (0x03E8 - 0x0000)
struct BP_SplineMesh_C_BuildSplineMesh final
{
public:
	bool                                          SpawnMesh;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            SelectedMesh;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        EndDistance;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSplineComponentIndex;                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SplineLengthPerMesh;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       SplineComponent;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BD[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BE[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatRangeBound                       K2Node_MakeStruct_FloatRangeBound;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BF[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C0[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C1[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAngle_Angle;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C2[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C3[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C4[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C5[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C6[0x1];                                     // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C7[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C8[0x5];                                     // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C9[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAngle_Angle_1;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSplineComponent_SplineComponent;       // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CA[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue_1;            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CB[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatRangeBound                       K2Node_MakeStruct_FloatRangeBound_1;               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            K2Node_MakeStruct_FloatRange;                      // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CC[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item_2;                         // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_1;                           // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    K2Node_MakeArray_Array_1;                          // 0x0210(0x0010)(ReferenceParm)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0220(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetMeshSize_ReturnValue;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CD[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddSplineMeshComponent_Component;         // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CE[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMeshSize_ReturnValue_1;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBoundSize_Size;                        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBoundSize_Size_1;                      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59CF[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddSplineMeshComponent_Component_1;       // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddSplineMeshComponent_Component_2;       // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_12;          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x0398(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2;   // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_SplineLengthNoCaps_ImplicitCast; // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Value_ImplicitCast;              // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D0[0x4];                                     // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Add_NewItem_ImplicitCast;           // 0x03E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_BuildSplineMesh) == 0x000008, "Wrong alignment on BP_SplineMesh_C_BuildSplineMesh");
static_assert(sizeof(BP_SplineMesh_C_BuildSplineMesh) == 0x0003E8, "Wrong size on BP_SplineMesh_C_BuildSplineMesh");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, SpawnMesh) == 0x000000, "Member 'BP_SplineMesh_C_BuildSplineMesh::SpawnMesh' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, SelectedMesh) == 0x000008, "Member 'BP_SplineMesh_C_BuildSplineMesh::SelectedMesh' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, EndDistance) == 0x000010, "Member 'BP_SplineMesh_C_BuildSplineMesh::EndDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CurrentSplineComponentIndex) == 0x000018, "Member 'BP_SplineMesh_C_BuildSplineMesh::CurrentSplineComponentIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, SplineLengthPerMesh) == 0x00001C, "Member 'BP_SplineMesh_C_BuildSplineMesh::SplineLengthPerMesh' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, SplineComponent) == 0x000020, "Member 'BP_SplineMesh_C_BuildSplineMesh::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetSplineLength_ReturnValue) == 0x000060, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_FTrunc_ReturnValue) == 0x000064, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_MakeRandomStream_ReturnValue) == 0x000068, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_MakeStruct_FloatRangeBound) == 0x000078, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_MakeStruct_FloatRangeBound' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, Temp_bool_Variable) == 0x000084, "Member 'BP_SplineMesh_C_BuildSplineMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Not_PreBool_ReturnValue) == 0x000085, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000088, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_MaxOfFloatArray_MaxValue) == 0x00008C, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_SplineMesh_C_BuildSplineMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0000A8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0000B0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetAngle_Angle) == 0x0000B8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetAngle_Angle' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0000C0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0000D0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, Temp_int_Variable) == 0x0000D8, "Member 'BP_SplineMesh_C_BuildSplineMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000DC, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, Temp_bool_Variable_1) == 0x0000E0, "Member 'BP_SplineMesh_C_BuildSplineMesh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000E8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, Temp_bool_Variable_2) == 0x0000F0, "Member 'BP_SplineMesh_C_BuildSplineMesh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, Temp_int_Variable_1) == 0x0000F4, "Member 'BP_SplineMesh_C_BuildSplineMesh::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, Temp_int_Variable_2) == 0x0000F8, "Member 'BP_SplineMesh_C_BuildSplineMesh::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0000FC, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetTangentAtSplinePoint_ReturnValue) == 0x000100, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000118, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_VSize_ReturnValue) == 0x000120, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000128, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000129, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BooleanAND_ReturnValue) == 0x00012A, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x00012C, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000138, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000148, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000150, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x000151, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BooleanOR_ReturnValue) == 0x000152, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000158, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_SelectFloat_ReturnValue) == 0x000160, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000168, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_SelectFloat_ReturnValue_1) == 0x000170, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000178, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_SelectFloat_ReturnValue_2) == 0x000180, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_SelectFloat_ReturnValue_3) == 0x000188, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_IntInt_ReturnValue_3) == 0x000190, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetAngle_Angle_1) == 0x000198, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetAngle_Angle_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetSplineComponent_SplineComponent) == 0x0001A0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetSplineComponent_SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001A8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001AC, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001B0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetSplineLength_ReturnValue_1) == 0x0001B4, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetSplineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, Temp_int_Array_Index_Variable) == 0x0001B8, "Member 'BP_SplineMesh_C_BuildSplineMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_MakeStruct_FloatRangeBound_1) == 0x0001C8, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_MakeStruct_FloatRangeBound_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_MakeStruct_FloatRange) == 0x0001D0, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_MakeStruct_FloatRange' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_RandomFloat_ReturnValue) == 0x0001E0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Array_Add_ReturnValue) == 0x0001E4, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Array_Length_ReturnValue_2) == 0x0001E8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0001EC, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Percent_IntInt_ReturnValue) == 0x0001F0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x0001F4, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_Select_Default) == 0x0001F8, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Array_Get_Item_2) == 0x000200, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_Select_Default_1) == 0x000208, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_MakeArray_Array_1) == 0x000210, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetBounds_ReturnValue) == 0x000220, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetMeshSize_ReturnValue) == 0x000258, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetMeshSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BreakBoxSphereBounds_Origin) == 0x000260, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x000278, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x000290, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BreakVector_X) == 0x000298, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BreakVector_Y) == 0x0002A0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BreakVector_Z) == 0x0002A8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BreakVector_X_1) == 0x0002B0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BreakVector_Y_1) == 0x0002B8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_BreakVector_Z_1) == 0x0002C0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0002C8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002D0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_AddSplineMeshComponent_Component) == 0x0002D8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_AddSplineMeshComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002E0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, Temp_bool_Variable_3) == 0x0002E8, "Member 'BP_SplineMesh_C_BuildSplineMesh::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetMeshSize_ReturnValue_1) == 0x0002F0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetMeshSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_Select_Default_2) == 0x0002F8, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x000300, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x000308, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetBoundSize_Size) == 0x000310, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetBoundSize_Size' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_GetBoundSize_Size_1) == 0x000318, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_GetBoundSize_Size_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_FMod_Remainder) == 0x000320, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_FMod_ReturnValue) == 0x000328, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000330, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000338, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000340, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000348, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000350, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_AddSplineMeshComponent_Component_1) == 0x000358, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_AddSplineMeshComponent_Component_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000360, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_SelectFloat_ReturnValue_4) == 0x000368, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_SelectFloat_ReturnValue_5) == 0x000370, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_AddSplineMeshComponent_Component_2) == 0x000378, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_AddSplineMeshComponent_Component_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_ReturnValue_12) == 0x000380, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_SelectFloat_ReturnValue_6) == 0x000388, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000390, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x000398, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_SelectFloat_A_ImplicitCast) == 0x0003A8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0003B0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0003B8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x0003C0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2) == 0x0003C8, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_VariableSet_SplineLengthNoCaps_ImplicitCast) == 0x0003D0, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_VariableSet_SplineLengthNoCaps_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, K2Node_MakeStruct_Value_ImplicitCast) == 0x0003D8, "Member 'BP_SplineMesh_C_BuildSplineMesh::K2Node_MakeStruct_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_BuildSplineMesh, CallFunc_Array_Add_NewItem_ImplicitCast) == 0x0003E0, "Member 'BP_SplineMesh_C_BuildSplineMesh::CallFunc_Array_Add_NewItem_ImplicitCast' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.Get Spline
// 0x0040 (0x0040 - 0x0000)
struct BP_SplineMesh_C_Get_Spline final
{
public:
	class USplineComponent*                       SplineComponent;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineComponent*>               SplineComponents;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineComponent*>               CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_SplineMesh_C_Get_Spline) == 0x000008, "Wrong alignment on BP_SplineMesh_C_Get_Spline");
static_assert(sizeof(BP_SplineMesh_C_Get_Spline) == 0x000040, "Wrong size on BP_SplineMesh_C_Get_Spline");
static_assert(offsetof(BP_SplineMesh_C_Get_Spline, SplineComponent) == 0x000000, "Member 'BP_SplineMesh_C_Get_Spline::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Get_Spline, SplineComponents) == 0x000008, "Member 'BP_SplineMesh_C_Get_Spline::SplineComponents' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Get_Spline, CallFunc_Array_IsEmpty_ReturnValue) == 0x000018, "Member 'BP_SplineMesh_C_Get_Spline::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Get_Spline, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SplineMesh_C_Get_Spline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Get_Spline, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_SplineMesh_C_Get_Spline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Get_Spline, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'BP_SplineMesh_C_Get_Spline::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.GetAngle
// 0x00E0 (0x00E0 - 0x0000)
struct BP_SplineMesh_C_GetAngle final
{
public:
	class USplineComponent*                       SplineComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Param_StartDistance;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EndDistance;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRightVector;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Angle;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Acos_ReturnValue;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_GetAngle) == 0x000008, "Wrong alignment on BP_SplineMesh_C_GetAngle");
static_assert(sizeof(BP_SplineMesh_C_GetAngle) == 0x0000E0, "Wrong size on BP_SplineMesh_C_GetAngle");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, SplineComponent) == 0x000000, "Member 'BP_SplineMesh_C_GetAngle::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, Param_StartDistance) == 0x000008, "Member 'BP_SplineMesh_C_GetAngle::Param_StartDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, EndDistance) == 0x000010, "Member 'BP_SplineMesh_C_GetAngle::EndDistance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, UseRightVector) == 0x000018, "Member 'BP_SplineMesh_C_GetAngle::UseRightVector' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, Angle) == 0x000020, "Member 'BP_SplineMesh_C_GetAngle::Angle' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x000038, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x000050, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue) == 0x000068, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_VSize_ReturnValue) == 0x000080, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_SelectVector_ReturnValue) == 0x000088, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_VSize_ReturnValue_1) == 0x0000A8, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_Acos_ReturnValue) == 0x0000C0, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_RadiansToDegrees_ReturnValue) == 0x0000C8, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0000D0, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0000D4, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetAngle, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0000D8, "Member 'BP_SplineMesh_C_GetAngle::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.GetBoundSize
// 0x00B8 (0x00B8 - 0x0000)
struct BP_SplineMesh_C_GetBoundSize final
{
public:
	class UStaticMesh*                            Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0018(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D5[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue_1;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D6[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_GetBoundSize) == 0x000008, "Wrong alignment on BP_SplineMesh_C_GetBoundSize");
static_assert(sizeof(BP_SplineMesh_C_GetBoundSize) == 0x0000B8, "Wrong size on BP_SplineMesh_C_GetBoundSize");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, Object) == 0x000000, "Member 'BP_SplineMesh_C_GetBoundSize::Object' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, Size) == 0x000008, "Member 'BP_SplineMesh_C_GetBoundSize::Size' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, Temp_bool_Variable) == 0x000010, "Member 'BP_SplineMesh_C_GetBoundSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_GetBoundingBox_ReturnValue) == 0x000018, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_Round64_ReturnValue) == 0x000070, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_BreakVector_X_1) == 0x000078, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_BreakVector_Z_1) == 0x000088, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000090, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_EqualEqual_Int64Int64_ReturnValue_1) == 0x0000A8, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_EqualEqual_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_BooleanOR_ReturnValue) == 0x0000A9, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, K2Node_Select_Default) == 0x0000AA, "Member 'BP_SplineMesh_C_GetBoundSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetBoundSize, CallFunc_SelectFloat_ReturnValue) == 0x0000B0, "Member 'BP_SplineMesh_C_GetBoundSize::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.GetMeshSize
// 0x00D8 (0x00D8 - 0x0000)
struct BP_SplineMesh_C_GetMeshSize final
{
public:
	TArray<class UStaticMesh*>                    SplineMeshes;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBoundSize_Size;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0028(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D7[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_GetMeshSize) == 0x000008, "Wrong alignment on BP_SplineMesh_C_GetMeshSize");
static_assert(sizeof(BP_SplineMesh_C_GetMeshSize) == 0x0000D8, "Wrong size on BP_SplineMesh_C_GetMeshSize");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, SplineMeshes) == 0x000000, "Member 'BP_SplineMesh_C_GetMeshSize::SplineMeshes' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, ReturnValue) == 0x000010, "Member 'BP_SplineMesh_C_GetMeshSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_GetBoundSize_Size) == 0x000020, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_GetBoundSize_Size' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_GetBounds_ReturnValue) == 0x000028, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_BreakBoxSphereBounds_Origin) == 0x000060, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x000078, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x000090, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_BreakVector_X) == 0x000098, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_BreakVector_X_1) == 0x0000B0, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_BreakVector_Y_1) == 0x0000B8, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_BreakVector_Z_1) == 0x0000C0, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetMeshSize, CallFunc_SelectFloat_ReturnValue) == 0x0000D0, "Member 'BP_SplineMesh_C_GetMeshSize::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.GetSplineComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_SplineMesh_C_GetSplineComponent final
{
public:
	class USplineComponent*                       SplineComponent;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_Get_Spline_SplineComponent;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       K2Node_DynamicCast_AsSpline_Component;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_GetSplineComponent) == 0x000008, "Wrong alignment on BP_SplineMesh_C_GetSplineComponent");
static_assert(sizeof(BP_SplineMesh_C_GetSplineComponent) == 0x000020, "Wrong size on BP_SplineMesh_C_GetSplineComponent");
static_assert(offsetof(BP_SplineMesh_C_GetSplineComponent, SplineComponent) == 0x000000, "Member 'BP_SplineMesh_C_GetSplineComponent::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetSplineComponent, CallFunc_Get_Spline_SplineComponent) == 0x000008, "Member 'BP_SplineMesh_C_GetSplineComponent::CallFunc_Get_Spline_SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetSplineComponent, K2Node_DynamicCast_AsSpline_Component) == 0x000010, "Member 'BP_SplineMesh_C_GetSplineComponent::K2Node_DynamicCast_AsSpline_Component' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetSplineComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SplineMesh_C_GetSplineComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.GetSplineLength
// 0x0010 (0x0010 - 0x0000)
struct BP_SplineMesh_C_GetSplineLength final
{
public:
	class USplineComponent*                       SplineComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_GetSplineLength) == 0x000008, "Wrong alignment on BP_SplineMesh_C_GetSplineLength");
static_assert(sizeof(BP_SplineMesh_C_GetSplineLength) == 0x000010, "Wrong size on BP_SplineMesh_C_GetSplineLength");
static_assert(offsetof(BP_SplineMesh_C_GetSplineLength, SplineComponent) == 0x000000, "Member 'BP_SplineMesh_C_GetSplineLength::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetSplineLength, ReturnValue) == 0x000008, "Member 'BP_SplineMesh_C_GetSplineLength::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_GetSplineLength, CallFunc_GetSplineLength_ReturnValue) == 0x00000C, "Member 'BP_SplineMesh_C_GetSplineLength::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.SnapToActor
// 0x0118 (0x0118 - 0x0000)
struct BP_SplineMesh_C_SnapToActor final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0020(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SplineMesh_C_SnapToActor) == 0x000008, "Wrong alignment on BP_SplineMesh_C_SnapToActor");
static_assert(sizeof(BP_SplineMesh_C_SnapToActor) == 0x000118, "Wrong size on BP_SplineMesh_C_SnapToActor");
static_assert(offsetof(BP_SplineMesh_C_SnapToActor, Target) == 0x000000, "Member 'BP_SplineMesh_C_SnapToActor::Target' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToActor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_SplineMesh_C_SnapToActor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToActor, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000020, "Member 'BP_SplineMesh_C_SnapToActor::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.SnapToLandscapePos
// 0x02E0 (0x02E0 - 0x0000)
struct BP_SplineMesh_C_SnapToLandscapePos final
{
public:
	double                                        DistanceAlongSpline;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       SplineComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00C0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D8[0x1];                                     // 0x01BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D9[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59DA[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast; // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_SnapToLandscapePos) == 0x000008, "Wrong alignment on BP_SplineMesh_C_SnapToLandscapePos");
static_assert(sizeof(BP_SplineMesh_C_SnapToLandscapePos) == 0x0002E0, "Wrong size on BP_SplineMesh_C_SnapToLandscapePos");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, DistanceAlongSpline) == 0x000000, "Member 'BP_SplineMesh_C_SnapToLandscapePos::DistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, SplineComponent) == 0x000008, "Member 'BP_SplineMesh_C_SnapToLandscapePos::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, Location) == 0x000010, "Member 'BP_SplineMesh_C_SnapToLandscapePos::Location' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, Normal) == 0x000028, "Member 'BP_SplineMesh_C_SnapToLandscapePos::Normal' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, Temp_object_Variable) == 0x000040, "Member 'BP_SplineMesh_C_SnapToLandscapePos::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue) == 0x000050, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000068, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_SplineMesh_C_SnapToLandscapePos::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_Conv_IntToVector_ReturnValue) == 0x0000A8, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000C0, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001B8, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_bBlockingHit) == 0x0001B9, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001BA, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_Time) == 0x0001BC, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_Distance) == 0x0001C0, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_Location) == 0x0001C8, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E0, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_Normal) == 0x0001F8, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_ImpactNormal) == 0x000210, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_PhysMat) == 0x000228, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_HitActor) == 0x000230, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_HitComponent) == 0x000238, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_HitBoneName) == 0x000240, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_BoneName) == 0x000248, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_HitItem) == 0x000250, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_ElementIndex) == 0x000254, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_FaceIndex) == 0x000258, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_TraceStart) == 0x000260, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_BreakHitResult_TraceEnd) == 0x000278, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_SelectVector_ReturnValue) == 0x000290, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002A8, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_SelectVector_ReturnValue_1) == 0x0002C0, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0002D8, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_SnapToLandscapePos, CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0002DC, "Member 'BP_SplineMesh_C_SnapToLandscapePos::CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.SnapToSpline
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineMesh_C_SnapToSpline final
{
public:
	class USplineComponent*                       CallFunc_Get_Spline_SplineComponent;               // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_SnapToSpline) == 0x000008, "Wrong alignment on BP_SplineMesh_C_SnapToSpline");
static_assert(sizeof(BP_SplineMesh_C_SnapToSpline) == 0x000008, "Wrong size on BP_SplineMesh_C_SnapToSpline");
static_assert(offsetof(BP_SplineMesh_C_SnapToSpline, CallFunc_Get_Spline_SplineComponent) == 0x000000, "Member 'BP_SplineMesh_C_SnapToSpline::CallFunc_Get_Spline_SplineComponent' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_SplineMesh_C_UserConstructionScript final
{
public:
	class USplineMeshComponent*                   NewLocalVar;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSplineComponentIndex;                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SplineLengthPerMesh;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       SplineComponent;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_SplineMesh_C_UserConstructionScript");
static_assert(sizeof(BP_SplineMesh_C_UserConstructionScript) == 0x000018, "Wrong size on BP_SplineMesh_C_UserConstructionScript");
static_assert(offsetof(BP_SplineMesh_C_UserConstructionScript, NewLocalVar) == 0x000000, "Member 'BP_SplineMesh_C_UserConstructionScript::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_UserConstructionScript, CurrentSplineComponentIndex) == 0x000008, "Member 'BP_SplineMesh_C_UserConstructionScript::CurrentSplineComponentIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_UserConstructionScript, SplineLengthPerMesh) == 0x00000C, "Member 'BP_SplineMesh_C_UserConstructionScript::SplineLengthPerMesh' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_UserConstructionScript, SplineComponent) == 0x000010, "Member 'BP_SplineMesh_C_UserConstructionScript::SplineComponent' has a wrong offset!");

}

