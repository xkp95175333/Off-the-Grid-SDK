#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Tooltip_Weapon_DOS

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Tooltip_Weapon_DOS.WBP_Tooltip_Weapon_DOS_C.ExecuteUbergraph_WBP_Tooltip_Weapon_DOS
// 0x0008 (0x0008 - 0x0000)
struct WBP_Tooltip_Weapon_DOS_C_ExecuteUbergraph_WBP_Tooltip_Weapon_DOS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tooltip_Weapon_DOS_C_ExecuteUbergraph_WBP_Tooltip_Weapon_DOS) == 0x000004, "Wrong alignment on WBP_Tooltip_Weapon_DOS_C_ExecuteUbergraph_WBP_Tooltip_Weapon_DOS");
static_assert(sizeof(WBP_Tooltip_Weapon_DOS_C_ExecuteUbergraph_WBP_Tooltip_Weapon_DOS) == 0x000008, "Wrong size on WBP_Tooltip_Weapon_DOS_C_ExecuteUbergraph_WBP_Tooltip_Weapon_DOS");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_ExecuteUbergraph_WBP_Tooltip_Weapon_DOS, EntryPoint) == 0x000000, "Member 'WBP_Tooltip_Weapon_DOS_C_ExecuteUbergraph_WBP_Tooltip_Weapon_DOS::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_ExecuteUbergraph_WBP_Tooltip_Weapon_DOS, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Tooltip_Weapon_DOS_C_ExecuteUbergraph_WBP_Tooltip_Weapon_DOS::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Tooltip_Weapon_DOS.WBP_Tooltip_Weapon_DOS_C.InitWeaponSetup
// 0x0008 (0x0008 - 0x0000)
struct WBP_Tooltip_Weapon_DOS_C_InitWeaponSetup final
{
public:
	class UGzWeaponItemData*                      WeaponData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tooltip_Weapon_DOS_C_InitWeaponSetup) == 0x000008, "Wrong alignment on WBP_Tooltip_Weapon_DOS_C_InitWeaponSetup");
static_assert(sizeof(WBP_Tooltip_Weapon_DOS_C_InitWeaponSetup) == 0x000008, "Wrong size on WBP_Tooltip_Weapon_DOS_C_InitWeaponSetup");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_InitWeaponSetup, WeaponData) == 0x000000, "Member 'WBP_Tooltip_Weapon_DOS_C_InitWeaponSetup::WeaponData' has a wrong offset!");

// Function WBP_Tooltip_Weapon_DOS.WBP_Tooltip_Weapon_DOS_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Tooltip_Weapon_DOS_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tooltip_Weapon_DOS_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Tooltip_Weapon_DOS_C_PreConstruct");
static_assert(sizeof(WBP_Tooltip_Weapon_DOS_C_PreConstruct) == 0x000001, "Wrong size on WBP_Tooltip_Weapon_DOS_C_PreConstruct");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Tooltip_Weapon_DOS_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Tooltip_Weapon_DOS.WBP_Tooltip_Weapon_DOS_C.SetWeaponIcon
// 0x0048 (0x0048 - 0x0000)
struct WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon final
{
public:
	class UGzWeaponItemData*                      WeaponData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PistolSize;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultSize;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61B0[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetAmmoTypeImage_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon) == 0x000008, "Wrong alignment on WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon");
static_assert(sizeof(WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon) == 0x000048, "Wrong size on WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon, WeaponData) == 0x000000, "Member 'WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon::WeaponData' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon, PistolSize) == 0x000008, "Member 'WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon::PistolSize' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon, DefaultSize) == 0x000018, "Member 'WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon::DefaultSize' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon, Temp_bool_Variable) == 0x000028, "Member 'WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon, K2Node_Select_Default) == 0x000030, "Member 'WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon, CallFunc_GetAmmoTypeImage_ReturnValue) == 0x000040, "Member 'WBP_Tooltip_Weapon_DOS_C_SetWeaponIcon::CallFunc_GetAmmoTypeImage_ReturnValue' has a wrong offset!");

// Function WBP_Tooltip_Weapon_DOS.WBP_Tooltip_Weapon_DOS_C.SetWeaponType
// 0x0018 (0x0018 - 0x0000)
struct WBP_Tooltip_Weapon_DOS_C_SetWeaponType final
{
public:
	class UGzWeaponItemData*                      WeaponData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetWeaponTypeName_WeaponName;             // 0x0008(0x0010)()
};
static_assert(alignof(WBP_Tooltip_Weapon_DOS_C_SetWeaponType) == 0x000008, "Wrong alignment on WBP_Tooltip_Weapon_DOS_C_SetWeaponType");
static_assert(sizeof(WBP_Tooltip_Weapon_DOS_C_SetWeaponType) == 0x000018, "Wrong size on WBP_Tooltip_Weapon_DOS_C_SetWeaponType");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_SetWeaponType, WeaponData) == 0x000000, "Member 'WBP_Tooltip_Weapon_DOS_C_SetWeaponType::WeaponData' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_SetWeaponType, CallFunc_GetWeaponTypeName_WeaponName) == 0x000008, "Member 'WBP_Tooltip_Weapon_DOS_C_SetWeaponType::CallFunc_GetWeaponTypeName_WeaponName' has a wrong offset!");

// Function WBP_Tooltip_Weapon_DOS.WBP_Tooltip_Weapon_DOS_C.UpdateQuality
// 0x0020 (0x0020 - 0x0000)
struct WBP_Tooltip_Weapon_DOS_C_UpdateQuality final
{
public:
	class UGzItemData*                            WeaponData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61B1[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tooltip_Weapon_DOS_C_UpdateQuality) == 0x000008, "Wrong alignment on WBP_Tooltip_Weapon_DOS_C_UpdateQuality");
static_assert(sizeof(WBP_Tooltip_Weapon_DOS_C_UpdateQuality) == 0x000020, "Wrong size on WBP_Tooltip_Weapon_DOS_C_UpdateQuality");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_UpdateQuality, WeaponData) == 0x000000, "Member 'WBP_Tooltip_Weapon_DOS_C_UpdateQuality::WeaponData' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_UpdateQuality, CallFunc_GetRarity_ReturnValue) == 0x000008, "Member 'WBP_Tooltip_Weapon_DOS_C_UpdateQuality::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_UpdateQuality, CallFunc_GetRarityColor_ReturnValue) == 0x00000C, "Member 'WBP_Tooltip_Weapon_DOS_C_UpdateQuality::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");

// Function WBP_Tooltip_Weapon_DOS.WBP_Tooltip_Weapon_DOS_C.UpdateTooltip
// 0x0018 (0x0018 - 0x0000)
struct WBP_Tooltip_Weapon_DOS_C_UpdateTooltip final
{
public:
	class UGzItemData*                            CallFunc_GetItemData_ItemData;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzWeaponItemData*                      K2Node_DynamicCast_AsGz_Weapon_Item_Data;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Tooltip_Weapon_DOS_C_UpdateTooltip) == 0x000008, "Wrong alignment on WBP_Tooltip_Weapon_DOS_C_UpdateTooltip");
static_assert(sizeof(WBP_Tooltip_Weapon_DOS_C_UpdateTooltip) == 0x000018, "Wrong size on WBP_Tooltip_Weapon_DOS_C_UpdateTooltip");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_UpdateTooltip, CallFunc_GetItemData_ItemData) == 0x000000, "Member 'WBP_Tooltip_Weapon_DOS_C_UpdateTooltip::CallFunc_GetItemData_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_UpdateTooltip, K2Node_DynamicCast_AsGz_Weapon_Item_Data) == 0x000008, "Member 'WBP_Tooltip_Weapon_DOS_C_UpdateTooltip::K2Node_DynamicCast_AsGz_Weapon_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_UpdateTooltip, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_Tooltip_Weapon_DOS_C_UpdateTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Tooltip_Weapon_DOS_C_UpdateTooltip, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_Tooltip_Weapon_DOS_C_UpdateTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

