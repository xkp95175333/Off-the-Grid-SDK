#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SquadInfoInventorySlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SquadInfoInventorySlot.WBP_SquadInfoInventorySlot_C
// 0x0060 (0x0340 - 0x02E0)
class UWBP_SquadInfoInventorySlot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 AmmoType_Image;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         EmptyBox;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_EmptyText;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_ItemName;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_SlotName;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QualityIcon;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QualityIcon_1;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SlotName_Text;                                     // 0x0320(0x0010)(Edit, BlueprintVisible)
	struct FGameplayTag                           ItemSlot;                                          // 0x0330(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerState*                         PlayerState;                                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_SquadInfoInventorySlot(int32 EntryPoint);
	class UGzItemData* GetItemData();
	void PreConstruct(bool IsDesignTime);
	void UpdateItem();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SquadInfoInventorySlot_C">();
	}
	static class UWBP_SquadInfoInventorySlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SquadInfoInventorySlot_C>();
	}
};
static_assert(alignof(UWBP_SquadInfoInventorySlot_C) == 0x000008, "Wrong alignment on UWBP_SquadInfoInventorySlot_C");
static_assert(sizeof(UWBP_SquadInfoInventorySlot_C) == 0x000340, "Wrong size on UWBP_SquadInfoInventorySlot_C");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_SquadInfoInventorySlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, AmmoType_Image) == 0x0002E8, "Member 'UWBP_SquadInfoInventorySlot_C::AmmoType_Image' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, EmptyBox) == 0x0002F0, "Member 'UWBP_SquadInfoInventorySlot_C::EmptyBox' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, Gz_EmptyText) == 0x0002F8, "Member 'UWBP_SquadInfoInventorySlot_C::Gz_EmptyText' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, Gz_ItemName) == 0x000300, "Member 'UWBP_SquadInfoInventorySlot_C::Gz_ItemName' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, Gz_SlotName) == 0x000308, "Member 'UWBP_SquadInfoInventorySlot_C::Gz_SlotName' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, QualityIcon) == 0x000310, "Member 'UWBP_SquadInfoInventorySlot_C::QualityIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, QualityIcon_1) == 0x000318, "Member 'UWBP_SquadInfoInventorySlot_C::QualityIcon_1' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, SlotName_Text) == 0x000320, "Member 'UWBP_SquadInfoInventorySlot_C::SlotName_Text' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, ItemSlot) == 0x000330, "Member 'UWBP_SquadInfoInventorySlot_C::ItemSlot' has a wrong offset!");
static_assert(offsetof(UWBP_SquadInfoInventorySlot_C, PlayerState) == 0x000338, "Member 'UWBP_SquadInfoInventorySlot_C::PlayerState' has a wrong offset!");

}

