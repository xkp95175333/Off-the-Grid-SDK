#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CLA_StickyGoo_Base_L

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ControlRig_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CLA_StickyGoo_Base_L.ABP_CLA_StickyGoo_Base_L_C
// 0x0860 (0x0BD0 - 0x0370)
class UABP_CLA_StickyGoo_Base_L_C final : public UAnimInstance
{
public:
	uint8                                         Pad_6EB4[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x03A8(0x0158)(ContainsInstancedReference)
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0500(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x09D0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0A18(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0A60(0x00F0)()
	class AGzCharacter*                           OwnerCharacter;                                    // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           IdleToActivateToAim;                               // 0x0B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AimToFireToAim;                                    // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AimToFireToDeactivateToIdle;                       // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AimToDeactivateToIdle;                             // 0x0B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingFireAnim;                                 // 0x0B78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EB5[0x7];                                     // 0x0B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ActiveTag;                                         // 0x0B80(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           FiringTag;                                         // 0x0BA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActivated;                                       // 0x0BA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EB6[0x7];                                     // 0x0BA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 LOD_count;                                         // 0x0BB0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 Mat_count;                                         // 0x0BC0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Added_0E9B2BB148425D23A78CCD8EDBB0FBEE();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintInitializeAnimation();
	void ExecuteUbergraph_ABP_CLA_StickyGoo_Base_L(int32 EntryPoint);
	void MontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnTagAdded_D1E4DDA74E8C3BFB627FECA6F17FA325(const struct FGameplayTag& Tag);
	void OnTagRemoved_D1E4DDA74E8C3BFB627FECA6F17FA325(const struct FGameplayTag& Tag);
	void PlayActivationAnimation();
	void PlayDeactivationAnimation();
	void PlayFireAnimation();
	void UnHideMaterialSlots(TArray<int32>& LODs, TArray<int32>& Materials);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CLA_StickyGoo_Base_L_C">();
	}
	static class UABP_CLA_StickyGoo_Base_L_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CLA_StickyGoo_Base_L_C>();
	}
};
static_assert(alignof(UABP_CLA_StickyGoo_Base_L_C) == 0x000010, "Wrong alignment on UABP_CLA_StickyGoo_Base_L_C");
static_assert(sizeof(UABP_CLA_StickyGoo_Base_L_C) == 0x000BD0, "Wrong size on UABP_CLA_StickyGoo_Base_L_C");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, UberGraphFrame) == 0x000370, "Member 'UABP_CLA_StickyGoo_Base_L_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_CLA_StickyGoo_Base_L_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_CLA_StickyGoo_Base_L_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_CLA_StickyGoo_Base_L_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AnimGraphNode_CopyPoseFromMesh) == 0x0003A8, "Member 'UABP_CLA_StickyGoo_Base_L_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AnimGraphNode_ControlRig) == 0x000500, "Member 'UABP_CLA_StickyGoo_Base_L_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AnimGraphNode_Slot) == 0x0009D0, "Member 'UABP_CLA_StickyGoo_Base_L_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AnimGraphNode_SequencePlayer) == 0x000A18, "Member 'UABP_CLA_StickyGoo_Base_L_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AnimGraphNode_LayeredBoneBlend) == 0x000A60, "Member 'UABP_CLA_StickyGoo_Base_L_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, OwnerCharacter) == 0x000B50, "Member 'UABP_CLA_StickyGoo_Base_L_C::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, IdleToActivateToAim) == 0x000B58, "Member 'UABP_CLA_StickyGoo_Base_L_C::IdleToActivateToAim' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AimToFireToAim) == 0x000B60, "Member 'UABP_CLA_StickyGoo_Base_L_C::AimToFireToAim' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AimToFireToDeactivateToIdle) == 0x000B68, "Member 'UABP_CLA_StickyGoo_Base_L_C::AimToFireToDeactivateToIdle' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, AimToDeactivateToIdle) == 0x000B70, "Member 'UABP_CLA_StickyGoo_Base_L_C::AimToDeactivateToIdle' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, IsPlayingFireAnim) == 0x000B78, "Member 'UABP_CLA_StickyGoo_Base_L_C::IsPlayingFireAnim' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, ActiveTag) == 0x000B80, "Member 'UABP_CLA_StickyGoo_Base_L_C::ActiveTag' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, FiringTag) == 0x000BA0, "Member 'UABP_CLA_StickyGoo_Base_L_C::FiringTag' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, IsActivated) == 0x000BA8, "Member 'UABP_CLA_StickyGoo_Base_L_C::IsActivated' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, LOD_count) == 0x000BB0, "Member 'UABP_CLA_StickyGoo_Base_L_C::LOD_count' has a wrong offset!");
static_assert(offsetof(UABP_CLA_StickyGoo_Base_L_C, Mat_count) == 0x000BC0, "Member 'UABP_CLA_StickyGoo_Base_L_C::Mat_count' has a wrong offset!");

}

