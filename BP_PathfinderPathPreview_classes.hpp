#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PathfinderPathPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PathfinderPathPreview.BP_PathfinderPathPreview_C
// 0x0028 (0x04B8 - 0x0490)
class ABP_PathfinderPathPreview_C final : public AGzPreviewPathActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0490(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PathfinderLimbAbilityComponent_C*   AbilityComponent;                                  // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  MultipartCharacterRef;                             // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MaterialSpeed;                                     // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaterialProgress;                                  // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PathfinderPathPreview(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void UpdatePathMaterial(double DeltaSeconds);
	void UpdatePredictedProjectilePath();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PathfinderPathPreview_C">();
	}
	static class ABP_PathfinderPathPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PathfinderPathPreview_C>();
	}
};
static_assert(alignof(ABP_PathfinderPathPreview_C) == 0x000008, "Wrong alignment on ABP_PathfinderPathPreview_C");
static_assert(sizeof(ABP_PathfinderPathPreview_C) == 0x0004B8, "Wrong size on ABP_PathfinderPathPreview_C");
static_assert(offsetof(ABP_PathfinderPathPreview_C, UberGraphFrame) == 0x000490, "Member 'ABP_PathfinderPathPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PathfinderPathPreview_C, AbilityComponent) == 0x000498, "Member 'ABP_PathfinderPathPreview_C::AbilityComponent' has a wrong offset!");
static_assert(offsetof(ABP_PathfinderPathPreview_C, MultipartCharacterRef) == 0x0004A0, "Member 'ABP_PathfinderPathPreview_C::MultipartCharacterRef' has a wrong offset!");
static_assert(offsetof(ABP_PathfinderPathPreview_C, MaterialSpeed) == 0x0004A8, "Member 'ABP_PathfinderPathPreview_C::MaterialSpeed' has a wrong offset!");
static_assert(offsetof(ABP_PathfinderPathPreview_C, MaterialProgress) == 0x0004B0, "Member 'ABP_PathfinderPathPreview_C::MaterialProgress' has a wrong offset!");

}

