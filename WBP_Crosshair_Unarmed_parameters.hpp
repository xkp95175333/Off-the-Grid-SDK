#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_Unarmed

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Crosshair_Unarmed.WBP_Crosshair_Unarmed_C.ExecuteUbergraph_WBP_Crosshair_Unarmed
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetOwningPlayerCameraManager_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A75[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_RotatorRotator_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A76[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A77[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzDeploymentPawn*                      K2Node_DynamicCast_AsGz_Deployment_Pawn;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A78[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A79[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed) == 0x000008, "Wrong alignment on WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed");
static_assert(sizeof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed) == 0x0000B8, "Wrong size on WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, EntryPoint) == 0x000000, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, CallFunc_GetOwningPlayerCameraManager_ReturnValue) == 0x000040, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::CallFunc_GetOwningPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, CallFunc_GetCameraRotation_ReturnValue) == 0x000050, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, CallFunc_NotEqual_RotatorRotator_ReturnValue) == 0x000068, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::CallFunc_NotEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, CallFunc_GetOwningPlayer_ReturnValue) == 0x000070, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, CallFunc_GetViewTarget_ReturnValue) == 0x000078, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, K2Node_DynamicCast_AsGz_Deployment_Pawn) == 0x000088, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::K2Node_DynamicCast_AsGz_Deployment_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, K2Node_CreateDelegate_OutputDelegate) == 0x000094, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A8, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0000B0, "Member 'WBP_Crosshair_Unarmed_C_ExecuteUbergraph_WBP_Crosshair_Unarmed::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function WBP_Crosshair_Unarmed.WBP_Crosshair_Unarmed_C.Hide During Deployment
// 0x0008 (0x0008 - 0x0000)
struct WBP_Crosshair_Unarmed_C_Hide_During_Deployment final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Unarmed_C_Hide_During_Deployment) == 0x000008, "Wrong alignment on WBP_Crosshair_Unarmed_C_Hide_During_Deployment");
static_assert(sizeof(WBP_Crosshair_Unarmed_C_Hide_During_Deployment) == 0x000008, "Wrong size on WBP_Crosshair_Unarmed_C_Hide_During_Deployment");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_Hide_During_Deployment, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Crosshair_Unarmed_C_Hide_During_Deployment::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Crosshair_Unarmed.WBP_Crosshair_Unarmed_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Crosshair_Unarmed_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Unarmed_C_Tick) == 0x000004, "Wrong alignment on WBP_Crosshair_Unarmed_C_Tick");
static_assert(sizeof(WBP_Crosshair_Unarmed_C_Tick) == 0x00003C, "Wrong size on WBP_Crosshair_Unarmed_C_Tick");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Crosshair_Unarmed_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Unarmed_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Crosshair_Unarmed_C_Tick::InDeltaTime' has a wrong offset!");

}

