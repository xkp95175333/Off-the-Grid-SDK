#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_MentalLean

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTService_MentalLean.BTService_MentalLean_C
// 0x0020 (0x00B8 - 0x0098)
class UBTService_MentalLean_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EGzCustomMovementMode                         Lean;                                              // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574F[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DelayAfterLeanStart;                               // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzGA_CharacterState*                   NewVar;                                            // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_BTService_MentalLean(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTService_MentalLean_C">();
	}
	static class UBTService_MentalLean_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTService_MentalLean_C>();
	}
};
static_assert(alignof(UBTService_MentalLean_C) == 0x000008, "Wrong alignment on UBTService_MentalLean_C");
static_assert(sizeof(UBTService_MentalLean_C) == 0x0000B8, "Wrong size on UBTService_MentalLean_C");
static_assert(offsetof(UBTService_MentalLean_C, UberGraphFrame) == 0x000098, "Member 'UBTService_MentalLean_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTService_MentalLean_C, Lean) == 0x0000A0, "Member 'UBTService_MentalLean_C::Lean' has a wrong offset!");
static_assert(offsetof(UBTService_MentalLean_C, DelayAfterLeanStart) == 0x0000A8, "Member 'UBTService_MentalLean_C::DelayAfterLeanStart' has a wrong offset!");
static_assert(offsetof(UBTService_MentalLean_C, NewVar) == 0x0000B0, "Member 'UBTService_MentalLean_C::NewVar' has a wrong offset!");

}

