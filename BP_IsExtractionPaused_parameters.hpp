#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IsExtractionPaused

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_IsExtractionPaused.BP_IsExtractionPaused_C.IsInteractionConditionPassed
// 0x0028 (0x0028 - 0x0000)
struct BP_IsExtractionPaused_C_IsInteractionConditionPassed final
{
public:
	const class AGzCharacter*                     InteractedBy;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           InteractableOwner;                                 // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BB[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InteractionOwnersNum;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HEX_Extractor_C*                    K2Node_DynamicCast_AsBP_HEX_Extractor;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExtractionPaused_bPaused;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IsExtractionPaused_C_IsInteractionConditionPassed) == 0x000008, "Wrong alignment on BP_IsExtractionPaused_C_IsInteractionConditionPassed");
static_assert(sizeof(BP_IsExtractionPaused_C_IsInteractionConditionPassed) == 0x000028, "Wrong size on BP_IsExtractionPaused_C_IsInteractionConditionPassed");
static_assert(offsetof(BP_IsExtractionPaused_C_IsInteractionConditionPassed, InteractedBy) == 0x000000, "Member 'BP_IsExtractionPaused_C_IsInteractionConditionPassed::InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_IsExtractionPaused_C_IsInteractionConditionPassed, InteractableOwner) == 0x000008, "Member 'BP_IsExtractionPaused_C_IsInteractionConditionPassed::InteractableOwner' has a wrong offset!");
static_assert(offsetof(BP_IsExtractionPaused_C_IsInteractionConditionPassed, ReturnValue) == 0x000010, "Member 'BP_IsExtractionPaused_C_IsInteractionConditionPassed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IsExtractionPaused_C_IsInteractionConditionPassed, InteractionOwnersNum) == 0x000014, "Member 'BP_IsExtractionPaused_C_IsInteractionConditionPassed::InteractionOwnersNum' has a wrong offset!");
static_assert(offsetof(BP_IsExtractionPaused_C_IsInteractionConditionPassed, K2Node_DynamicCast_AsBP_HEX_Extractor) == 0x000018, "Member 'BP_IsExtractionPaused_C_IsInteractionConditionPassed::K2Node_DynamicCast_AsBP_HEX_Extractor' has a wrong offset!");
static_assert(offsetof(BP_IsExtractionPaused_C_IsInteractionConditionPassed, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_IsExtractionPaused_C_IsInteractionConditionPassed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_IsExtractionPaused_C_IsInteractionConditionPassed, CallFunc_IsExtractionPaused_bPaused) == 0x000021, "Member 'BP_IsExtractionPaused_C_IsInteractionConditionPassed::CallFunc_IsExtractionPaused_bPaused' has a wrong offset!");

}

