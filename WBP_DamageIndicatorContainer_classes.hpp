#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DamageIndicatorContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DamageIndicatorContainer.WBP_DamageIndicatorContainer_C
// 0x0010 (0x0450 - 0x0440)
class UWBP_DamageIndicatorContainer_C final : public UGzDamageIndicatorContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Root;                                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void AddIndicator(class UGzDamageIndicator* NewIndicator);
	void ClearIndicators();
	void ExecuteUbergraph_WBP_DamageIndicatorContainer(int32 EntryPoint);
	TSubclassOf<class UGzDamageIndicator> GetDamageIndicatorClass(const struct FGzDamageDirectionData& DamageData);
	void RemoveIndicator(class UGzDamageIndicator* DamageIndicator);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DamageIndicatorContainer_C">();
	}
	static class UWBP_DamageIndicatorContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DamageIndicatorContainer_C>();
	}
};
static_assert(alignof(UWBP_DamageIndicatorContainer_C) == 0x000008, "Wrong alignment on UWBP_DamageIndicatorContainer_C");
static_assert(sizeof(UWBP_DamageIndicatorContainer_C) == 0x000450, "Wrong size on UWBP_DamageIndicatorContainer_C");
static_assert(offsetof(UWBP_DamageIndicatorContainer_C, UberGraphFrame) == 0x000440, "Member 'UWBP_DamageIndicatorContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicatorContainer_C, Root) == 0x000448, "Member 'UWBP_DamageIndicatorContainer_C::Root' has a wrong offset!");

}

