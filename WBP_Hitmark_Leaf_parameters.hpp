#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Hitmark_Leaf

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Hitmark_Leaf.WBP_Hitmark_Leaf_C.ExecuteUbergraph_WBP_Hitmark_Leaf
// 0x0100 (0x0100 - 0x0000)
struct WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4D[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0020(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf) == 0x000010, "Wrong alignment on WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf");
static_assert(sizeof(WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf) == 0x000100, "Wrong size on WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf");
static_assert(offsetof(WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf, EntryPoint) == 0x000000, "Member 'WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf, K2Node_MakeStruct_SlateBrush) == 0x000020, "Member 'WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0000F0, "Member 'WBP_Hitmark_Leaf_C_ExecuteUbergraph_WBP_Hitmark_Leaf::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function WBP_Hitmark_Leaf.WBP_Hitmark_Leaf_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Hitmark_Leaf_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hitmark_Leaf_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Hitmark_Leaf_C_PreConstruct");
static_assert(sizeof(WBP_Hitmark_Leaf_C_PreConstruct) == 0x000001, "Wrong size on WBP_Hitmark_Leaf_C_PreConstruct");
static_assert(offsetof(WBP_Hitmark_Leaf_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Hitmark_Leaf_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

