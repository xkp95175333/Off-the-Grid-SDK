#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EarlyBlendOut_NotifyState

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EarlyBlendOut_NotifyState.EarlyBlendOut_NotifyState_C.GetNotifyName
// 0x0010 (0x0010 - 0x0000)
struct EarlyBlendOut_NotifyState_C_GetNotifyName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(EarlyBlendOut_NotifyState_C_GetNotifyName) == 0x000008, "Wrong alignment on EarlyBlendOut_NotifyState_C_GetNotifyName");
static_assert(sizeof(EarlyBlendOut_NotifyState_C_GetNotifyName) == 0x000010, "Wrong size on EarlyBlendOut_NotifyState_C_GetNotifyName");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_GetNotifyName, ReturnValue) == 0x000000, "Member 'EarlyBlendOut_NotifyState_C_GetNotifyName::ReturnValue' has a wrong offset!");

// Function EarlyBlendOut_NotifyState.EarlyBlendOut_NotifyState_C.Received_NotifyTick
// 0x0278 (0x0278 - 0x0000)
struct EarlyBlendOut_NotifyState_C_Received_NotifyTick final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDeltaTime;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ECF[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0018(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED0[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OwningActor;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLocomotionCurrentStates               Temp_struct_Variable;                              // 0x0060(0x0009)(NoDestructor)
	uint8                                         Pad_4ED1[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_BreakLocomotionCurrentStates_PawnMovementMode; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionMovementState                      CallFunc_BreakLocomotionCurrentStates_MovementState; // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionMovementState                      CallFunc_BreakLocomotionCurrentStates_PrevMovementState; // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionMovementAction                     CallFunc_BreakLocomotionCurrentStates_MovementAction; // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionRotationMode                       CallFunc_BreakLocomotionCurrentStates_RotationMode; // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               CallFunc_BreakLocomotionCurrentStates_ActualGait;  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionStance                             CallFunc_BreakLocomotionCurrentStates_ActualStance; // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionViewMode                           CallFunc_BreakLocomotionCurrentStates_ViewMode;    // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionOverlayState                       CallFunc_BreakLocomotionCurrentStates_OverlayState; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED2[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLocomotionCurrentStates               Temp_struct_Variable_1;                            // 0x0090(0x0009)(NoDestructor)
	EMovementMode                                 CallFunc_BreakLocomotionCurrentStates_PawnMovementMode_1; // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionMovementState                      CallFunc_BreakLocomotionCurrentStates_MovementState_1; // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionMovementState                      CallFunc_BreakLocomotionCurrentStates_PrevMovementState_1; // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionMovementAction                     CallFunc_BreakLocomotionCurrentStates_MovementAction_1; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionRotationMode                       CallFunc_BreakLocomotionCurrentStates_RotationMode_1; // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGait                               CallFunc_BreakLocomotionCurrentStates_ActualGait_1; // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionStance                             CallFunc_BreakLocomotionCurrentStates_ActualStance_1; // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionViewMode                           CallFunc_BreakLocomotionCurrentStates_ViewMode_1;  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionOverlayState                       CallFunc_BreakLocomotionCurrentStates_OverlayState_1; // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED3[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLocomotionEssentialValues             Temp_struct_Variable_2;                            // 0x00A8(0x0078)(NoDestructor)
	struct FVector                                CallFunc_BreakLocomotionEssentialValues_Velocity;  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakLocomotionEssentialValues_Acceleration; // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakLocomotionEssentialValues_MovementInput; // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakLocomotionEssentialValues_bIsMoving; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakLocomotionEssentialValues_bHasMovementInput; // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED4[0x2];                                     // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakLocomotionEssentialValues_Speed;     // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakLocomotionEssentialValues_MovementInputAmount; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED5[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_BreakLocomotionEssentialValues_AimingRotation; // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakLocomotionEssentialValues_AimYawRate; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED6[0x3];                                     // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ILocomotionCharacterInterface> K2Node_DynamicCast_AsLocomotion_Character_Interface; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLocomotionCurrentStates               CallFunc_GetCurrentStates_States;                  // 0x01A9(0x0009)(NoDestructor)
	uint8                                         Pad_4ED7[0x6];                                     // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ILocomotionCharacterInterface> K2Node_DynamicCast_AsLocomotion_Character_Interface_1; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED8[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ILocomotionCharacterInterface> K2Node_DynamicCast_AsLocomotion_Character_Interface_2; // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLocomotionCurrentStates               CallFunc_GetCurrentStates_States_1;                // 0x01E1(0x0009)(NoDestructor)
	uint8                                         Pad_4ED9[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLocomotionEssentialValues             CallFunc_GetEssentialValues_Values;                // 0x01F0(0x0078)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDA[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast; // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast_1; // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast_2; // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EarlyBlendOut_NotifyState_C_Received_NotifyTick) == 0x000008, "Wrong alignment on EarlyBlendOut_NotifyState_C_Received_NotifyTick");
static_assert(sizeof(EarlyBlendOut_NotifyState_C_Received_NotifyTick) == 0x000278, "Wrong size on EarlyBlendOut_NotifyState_C_Received_NotifyTick");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, MeshComp) == 0x000000, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::MeshComp' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, Animation) == 0x000008, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::Animation' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, FrameDeltaTime) == 0x000010, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::FrameDeltaTime' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, EventReference) == 0x000018, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::EventReference' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, ReturnValue) == 0x000048, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::ReturnValue' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, OwningActor) == 0x000050, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::OwningActor' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, AnimInstance) == 0x000058, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::AnimInstance' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, Temp_struct_Variable) == 0x000060, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_PawnMovementMode) == 0x000078, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_PawnMovementMode' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_MovementState) == 0x000079, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_MovementState' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_PrevMovementState) == 0x00007A, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_PrevMovementState' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_MovementAction) == 0x00007B, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_MovementAction' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_RotationMode) == 0x00007C, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_RotationMode' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_ActualGait) == 0x00007D, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_ActualGait' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_ActualStance) == 0x00007E, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_ActualStance' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_ViewMode) == 0x00007F, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_ViewMode' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_OverlayState) == 0x000080, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_OverlayState' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_GetAnimInstance_ReturnValue) == 0x000088, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, Temp_struct_Variable_1) == 0x000090, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_PawnMovementMode_1) == 0x000099, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_PawnMovementMode_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_MovementState_1) == 0x00009A, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_MovementState_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_PrevMovementState_1) == 0x00009B, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_PrevMovementState_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_MovementAction_1) == 0x00009C, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_MovementAction_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_RotationMode_1) == 0x00009D, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_RotationMode_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_ActualGait_1) == 0x00009E, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_ActualGait_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_ActualStance_1) == 0x00009F, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_ActualStance_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_ViewMode_1) == 0x0000A0, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_ViewMode_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionCurrentStates_OverlayState_1) == 0x0000A1, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionCurrentStates_OverlayState_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, Temp_struct_Variable_2) == 0x0000A8, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionEssentialValues_Velocity) == 0x000120, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionEssentialValues_Velocity' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionEssentialValues_Acceleration) == 0x000138, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionEssentialValues_Acceleration' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionEssentialValues_MovementInput) == 0x000150, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionEssentialValues_MovementInput' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionEssentialValues_bIsMoving) == 0x000168, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionEssentialValues_bIsMoving' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionEssentialValues_bHasMovementInput) == 0x000169, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionEssentialValues_bHasMovementInput' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionEssentialValues_Speed) == 0x00016C, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionEssentialValues_Speed' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionEssentialValues_MovementInputAmount) == 0x000170, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionEssentialValues_MovementInputAmount' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionEssentialValues_AimingRotation) == 0x000178, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionEssentialValues_AimingRotation' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_BreakLocomotionEssentialValues_AimYawRate) == 0x000190, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_BreakLocomotionEssentialValues_AimYawRate' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000194, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, K2Node_DynamicCast_AsLocomotion_Character_Interface) == 0x000198, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::K2Node_DynamicCast_AsLocomotion_Character_Interface' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_GetCurrentStates_States) == 0x0001A9, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_GetCurrentStates_States' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, K2Node_DynamicCast_AsLocomotion_Character_Interface_1) == 0x0001B8, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::K2Node_DynamicCast_AsLocomotion_Character_Interface_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, K2Node_DynamicCast_AsLocomotion_Character_Interface_2) == 0x0001D0, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::K2Node_DynamicCast_AsLocomotion_Character_Interface_2' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, K2Node_DynamicCast_bSuccess_2) == 0x0001E0, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_GetCurrentStates_States_1) == 0x0001E1, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_GetCurrentStates_States_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_GetEssentialValues_Values) == 0x0001F0, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_GetEssentialValues_Values' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000268, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast) == 0x00026C, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast_1) == 0x000270, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(EarlyBlendOut_NotifyState_C_Received_NotifyTick, CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast_2) == 0x000274, "Member 'EarlyBlendOut_NotifyState_C_Received_NotifyTick::CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast_2' has a wrong offset!");

}

