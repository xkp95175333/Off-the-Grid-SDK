#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimationWarpingRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimationWarpingRuntime.AnimationWarpingLibrary.GetCurveValueFromAnimation
// 0x0020 (0x0020 - 0x0000)
struct AnimationWarpingLibrary_GetCurveValueFromAnimation final
{
public:
	const class UAnimSequenceBase*                Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CurveName;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutValue;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E94[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimationWarpingLibrary_GetCurveValueFromAnimation) == 0x000008, "Wrong alignment on AnimationWarpingLibrary_GetCurveValueFromAnimation");
static_assert(sizeof(AnimationWarpingLibrary_GetCurveValueFromAnimation) == 0x000020, "Wrong size on AnimationWarpingLibrary_GetCurveValueFromAnimation");
static_assert(offsetof(AnimationWarpingLibrary_GetCurveValueFromAnimation, Animation) == 0x000000, "Member 'AnimationWarpingLibrary_GetCurveValueFromAnimation::Animation' has a wrong offset!");
static_assert(offsetof(AnimationWarpingLibrary_GetCurveValueFromAnimation, CurveName) == 0x000008, "Member 'AnimationWarpingLibrary_GetCurveValueFromAnimation::CurveName' has a wrong offset!");
static_assert(offsetof(AnimationWarpingLibrary_GetCurveValueFromAnimation, Time) == 0x000010, "Member 'AnimationWarpingLibrary_GetCurveValueFromAnimation::Time' has a wrong offset!");
static_assert(offsetof(AnimationWarpingLibrary_GetCurveValueFromAnimation, OutValue) == 0x000014, "Member 'AnimationWarpingLibrary_GetCurveValueFromAnimation::OutValue' has a wrong offset!");
static_assert(offsetof(AnimationWarpingLibrary_GetCurveValueFromAnimation, ReturnValue) == 0x000018, "Member 'AnimationWarpingLibrary_GetCurveValueFromAnimation::ReturnValue' has a wrong offset!");

// Function AnimationWarpingRuntime.AnimationWarpingLibrary.GetOffsetRootTransform
// 0x0070 (0x0070 - 0x0000)
struct AnimationWarpingLibrary_GetOffsetRootTransform final
{
public:
	struct FAnimNodeReference                     Node;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimationWarpingLibrary_GetOffsetRootTransform) == 0x000010, "Wrong alignment on AnimationWarpingLibrary_GetOffsetRootTransform");
static_assert(sizeof(AnimationWarpingLibrary_GetOffsetRootTransform) == 0x000070, "Wrong size on AnimationWarpingLibrary_GetOffsetRootTransform");
static_assert(offsetof(AnimationWarpingLibrary_GetOffsetRootTransform, Node) == 0x000000, "Member 'AnimationWarpingLibrary_GetOffsetRootTransform::Node' has a wrong offset!");
static_assert(offsetof(AnimationWarpingLibrary_GetOffsetRootTransform, ReturnValue) == 0x000010, "Member 'AnimationWarpingLibrary_GetOffsetRootTransform::ReturnValue' has a wrong offset!");

}

