#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPP_LI_PROP_LK_Hotel_01_BreakableGlass_01

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPP_LI_PROP_LK_Hotel_01_BreakableGlass_01.BPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C
// 0x0098 (0x03D8 - 0x0340)
class ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C final : public APackedLevelActor
{
public:
	class UGzMultipleDamageableComponent*         GzMultipleDamageable;                              // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge17;          // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge16;          // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge15;          // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge14;          // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge13;          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge12;          // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge11;          // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge10;          // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge9;           // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge8;           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge7;           // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge6;           // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge5;           // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge4;           // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge3;           // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge2;           // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge1;           // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GzDamageableSMComp_4X4_Without_Edge_C* BP_GzDamageableSMComp_4X4_Without_Edge;            // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C">();
	}
	static class ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C>();
	}
};
static_assert(alignof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C) == 0x000008, "Wrong alignment on ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C");
static_assert(sizeof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C) == 0x0003D8, "Wrong size on ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, GzMultipleDamageable) == 0x000340, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::GzMultipleDamageable' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge17) == 0x000348, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge17' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge16) == 0x000350, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge16' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge15) == 0x000358, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge15' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge14) == 0x000360, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge14' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge13) == 0x000368, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge13' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge12) == 0x000370, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge12' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge11) == 0x000378, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge11' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge10) == 0x000380, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge10' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge9) == 0x000388, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge9' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge8) == 0x000390, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge8' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge7) == 0x000398, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge7' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge6) == 0x0003A0, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge6' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge5) == 0x0003A8, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge5' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge4) == 0x0003B0, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge4' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge3) == 0x0003B8, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge3' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge2) == 0x0003C0, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge2' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge1) == 0x0003C8, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge1' has a wrong offset!");
static_assert(offsetof(ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C, BP_GzDamageableSMComp_4X4_Without_Edge) == 0x0003D0, "Member 'ABPP_LI_PROP_LK_Hotel_01_BreakableGlass_01_C::BP_GzDamageableSMComp_4X4_Without_Edge' has a wrong offset!");

}

