#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerName

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_PlayerName.WBP_PlayerName_C.BeingRevived
// 0x0140 (0x0140 - 0x0000)
struct WBP_PlayerName_C_BeingRevived final
{
public:
	bool                                          bWasAdded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A25[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGzInteractionData                     CallFunc_FindInteractionDataByTag_OutInteractionData; // 0x0020(0x00F8)(ContainsInstancedReference)
	bool                                          CallFunc_FindInteractionDataByTag_ReturnValue;     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A26[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LastProgress_ImplicitCast;      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A27[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_BeingRevived) == 0x000008, "Wrong alignment on WBP_PlayerName_C_BeingRevived");
static_assert(sizeof(WBP_PlayerName_C_BeingRevived) == 0x000140, "Wrong size on WBP_PlayerName_C_BeingRevived");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, bWasAdded) == 0x000000, "Member 'WBP_PlayerName_C_BeingRevived::bWasAdded' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_PlayerName_C_BeingRevived::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_PlayerName_C_BeingRevived::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000018, "Member 'WBP_PlayerName_C_BeingRevived::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, CallFunc_FindInteractionDataByTag_OutInteractionData) == 0x000020, "Member 'WBP_PlayerName_C_BeingRevived::CallFunc_FindInteractionDataByTag_OutInteractionData' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, CallFunc_FindInteractionDataByTag_ReturnValue) == 0x000118, "Member 'WBP_PlayerName_C_BeingRevived::CallFunc_FindInteractionDataByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000120, "Member 'WBP_PlayerName_C_BeingRevived::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000128, "Member 'WBP_PlayerName_C_BeingRevived::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, K2Node_VariableSet_LastProgress_ImplicitCast) == 0x000130, "Member 'WBP_PlayerName_C_BeingRevived::K2Node_VariableSet_LastProgress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_BeingRevived, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000138, "Member 'WBP_PlayerName_C_BeingRevived::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.ExecuteUbergraph_WBP_PlayerName
// 0x0260 (0x0260 - 0x0000)
struct WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A28[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x0008(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0050(0x0038)(HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_5;                          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_4;                          // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_3;                          // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_2;                          // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A29[0x1];                                     // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag_1;                          // 0x00FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x0114(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x012C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2A[0x2];                                     // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         K2Node_CustomEvent_PlayerState;                    // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2B[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2C[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue;     // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2D[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         K2Node_DynamicCast_AsGz_Player_State;              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2E[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzPingControllerComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzPingData& PingData)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2F[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x01AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A30[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A31[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1; // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A32[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x01EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01FC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A33[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_3;  // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2; // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A34[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetCurrentHoldTime_DeltaTime_ImplicitCast; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName) == 0x000008, "Wrong alignment on WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName");
static_assert(sizeof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName) == 0x000260, "Wrong size on WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, EntryPoint) == 0x000000, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_Attribute) == 0x000008, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_NewValue) == 0x000040, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_OldValue) == 0x000044, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, Temp_real_Variable) == 0x000048, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, Temp_real_Variable_1) == 0x00004C, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, Temp_struct_Variable) == 0x000050, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_Tag_5) == 0x000098, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_Tag_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_Tag_4) == 0x0000A0, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_Tag_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A8, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, Temp_struct_Variable_1) == 0x0000B8, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C0, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_Tag_3) == 0x0000D0, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_Tag_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_Tag_2) == 0x0000D8, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_Tag_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000E0, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, Temp_struct_Variable_2) == 0x0000F0, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue_1) == 0x0000F9, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue_2) == 0x0000FA, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_Tag_1) == 0x0000FC, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CreateDelegate_OutputDelegate_4) == 0x000104, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_Tag) == 0x000114, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CreateDelegate_OutputDelegate_5) == 0x00011C, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, Temp_struct_Variable_3) == 0x00012C, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue_3) == 0x000134, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000135, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CustomEvent_PlayerState) == 0x000138, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_GetOwner_ReturnValue) == 0x000140, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_DynamicCast_AsGz_Character) == 0x000148, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000158, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue_4) == 0x000160, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_ListenForAttributeChange_ReturnValue) == 0x000168, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_ListenForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue_5) == 0x000170, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_DynamicCast_AsGz_Player_State) == 0x000178, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_DynamicCast_AsGz_Player_State' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_GetOwningPlayer_ReturnValue) == 0x000188, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_GetComponentByClass_ReturnValue) == 0x000190, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CreateDelegate_OutputDelegate_6) == 0x000198, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue_6) == 0x0001A8, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001AC, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x0001C0, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue) == 0x0001C8, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue_7) == 0x0001D0, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x0001D8, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1) == 0x0001E0, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue_8) == 0x0001E8, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001EC, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_Event_MyGeometry) == 0x0001FC, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, K2Node_Event_InDeltaTime) == 0x000234, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_BooleanOR_ReturnValue) == 0x000238, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_GetAbilitySystemComponent_ReturnValue_3) == 0x000240, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_GetAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2) == 0x000248, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_IsValid_ReturnValue_9) == 0x000250, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName, CallFunc_SetCurrentHoldTime_DeltaTime_ImplicitCast) == 0x000258, "Member 'WBP_PlayerName_C_ExecuteUbergraph_WBP_PlayerName::CallFunc_SetCurrentHoldTime_DeltaTime_ImplicitCast' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.GetRelativeLocalPlayerState
// 0x0078 (0x0078 - 0x0000)
struct WBP_PlayerName_C_GetRelativeLocalPlayerState final
{
public:
	class APlayerState*                           OutPlayerState;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    K2Node_DynamicCast_AsGz_Player_Controller;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A35[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A36[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzSpectatorPawn*                       K2Node_DynamicCast_AsGz_Spectator_Pawn;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A37[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetSpectatedPawn_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A38[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzPlayerViewTargetInterface> K2Node_DynamicCast_AsGz_Player_View_Target_Interface; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A39[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         CallFunc_GetViewTargetPlayerState_ReturnValue;     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_GetRelativeLocalPlayerState) == 0x000008, "Wrong alignment on WBP_PlayerName_C_GetRelativeLocalPlayerState");
static_assert(sizeof(WBP_PlayerName_C_GetRelativeLocalPlayerState) == 0x000078, "Wrong size on WBP_PlayerName_C_GetRelativeLocalPlayerState");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, OutPlayerState) == 0x000000, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::OutPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_AsGz_Player_Controller) == 0x000010, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_AsGz_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000020, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_AsGz_Spectator_Pawn) == 0x000030, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_AsGz_Spectator_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, CallFunc_GetSpectatedPawn_ReturnValue) == 0x000040, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::CallFunc_GetSpectatedPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, CallFunc_IsValid_ReturnValue_3) == 0x000051, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_AsGz_Player_View_Target_Interface) == 0x000058, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_AsGz_Player_View_Target_Interface' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetRelativeLocalPlayerState, CallFunc_GetViewTargetPlayerState_ReturnValue) == 0x000070, "Member 'WBP_PlayerName_C_GetRelativeLocalPlayerState::CallFunc_GetViewTargetPlayerState_ReturnValue' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.GetTeamAttitude
// 0x0020 (0x0020 - 0x0000)
struct WBP_PlayerName_C_GetTeamAttitude final
{
public:
	class APlayerState*                           InPlayerState;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 TeamAttitude;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetRelativeLocalPlayerState_OutPlayerState; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_GetTeamAttitude) == 0x000008, "Wrong alignment on WBP_PlayerName_C_GetTeamAttitude");
static_assert(sizeof(WBP_PlayerName_C_GetTeamAttitude) == 0x000020, "Wrong size on WBP_PlayerName_C_GetTeamAttitude");
static_assert(offsetof(WBP_PlayerName_C_GetTeamAttitude, InPlayerState) == 0x000000, "Member 'WBP_PlayerName_C_GetTeamAttitude::InPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetTeamAttitude, TeamAttitude) == 0x000008, "Member 'WBP_PlayerName_C_GetTeamAttitude::TeamAttitude' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetTeamAttitude, CallFunc_GetRelativeLocalPlayerState_OutPlayerState) == 0x000010, "Member 'WBP_PlayerName_C_GetTeamAttitude::CallFunc_GetRelativeLocalPlayerState_OutPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_GetTeamAttitude, CallFunc_GetTeamAttitude_ReturnValue) == 0x000018, "Member 'WBP_PlayerName_C_GetTeamAttitude::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.HexFilter
// 0x0028 (0x0028 - 0x0000)
struct WBP_PlayerName_C_HexFilter final
{
public:
	struct FGzInvItem                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EGzInvChangeEvent                             ChangeEvent;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3B[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_HexFilter) == 0x000008, "Wrong alignment on WBP_PlayerName_C_HexFilter");
static_assert(sizeof(WBP_PlayerName_C_HexFilter) == 0x000028, "Wrong size on WBP_PlayerName_C_HexFilter");
static_assert(offsetof(WBP_PlayerName_C_HexFilter, Item) == 0x000000, "Member 'WBP_PlayerName_C_HexFilter::Item' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_HexFilter, ChangeEvent) == 0x000010, "Member 'WBP_PlayerName_C_HexFilter::ChangeEvent' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_HexFilter, ReturnValue) == 0x000011, "Member 'WBP_PlayerName_C_HexFilter::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_HexFilter, CallFunc_GetItemData_ReturnValue) == 0x000018, "Member 'WBP_PlayerName_C_HexFilter::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_HexFilter, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_PlayerName_C_HexFilter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_HexFilter, CallFunc_MatchesTag_ReturnValue) == 0x000021, "Member 'WBP_PlayerName_C_HexFilter::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnAttributeChanged_1010367E448F82D04FAC4EACE5666703
// 0x0040 (0x0040 - 0x0000)
struct WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703) == 0x000008, "Wrong alignment on WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703");
static_assert(sizeof(WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703) == 0x000040, "Wrong size on WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703");
static_assert(offsetof(WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703, Attribute) == 0x000000, "Member 'WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703, NewValue) == 0x000038, "Member 'WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703, OldValue) == 0x00003C, "Member 'WBP_PlayerName_C_OnAttributeChanged_1010367E448F82D04FAC4EACE5666703::OldValue' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnHexUpdated
// 0x0018 (0x0018 - 0x0000)
struct WBP_PlayerName_C_OnHexUpdated final
{
public:
	struct FGzInvItem                             ItemDelta;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EGzInvChangeEvent                             Event;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnHexUpdated) == 0x000008, "Wrong alignment on WBP_PlayerName_C_OnHexUpdated");
static_assert(sizeof(WBP_PlayerName_C_OnHexUpdated) == 0x000018, "Wrong size on WBP_PlayerName_C_OnHexUpdated");
static_assert(offsetof(WBP_PlayerName_C_OnHexUpdated, ItemDelta) == 0x000000, "Member 'WBP_PlayerName_C_OnHexUpdated::ItemDelta' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_OnHexUpdated, Event) == 0x000010, "Member 'WBP_PlayerName_C_OnHexUpdated::Event' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnPingAdded
// 0x0070 (0x0070 - 0x0000)
struct WBP_PlayerName_C_OnPingAdded final
{
public:
	struct FGzPingData                            PingData;                                          // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FGameplayTag                           PingTypeReviveTag;                                 // 0x0060(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnPingAdded) == 0x000008, "Wrong alignment on WBP_PlayerName_C_OnPingAdded");
static_assert(sizeof(WBP_PlayerName_C_OnPingAdded) == 0x000070, "Wrong size on WBP_PlayerName_C_OnPingAdded");
static_assert(offsetof(WBP_PlayerName_C_OnPingAdded, PingData) == 0x000000, "Member 'WBP_PlayerName_C_OnPingAdded::PingData' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_OnPingAdded, PingTypeReviveTag) == 0x000060, "Member 'WBP_PlayerName_C_OnPingAdded::PingTypeReviveTag' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_OnPingAdded, CallFunc_MatchesTag_ReturnValue) == 0x000068, "Member 'WBP_PlayerName_C_OnPingAdded::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_OnPingAdded, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'WBP_PlayerName_C_OnPingAdded::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnRepPS
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerName_C_OnRepPS final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnRepPS) == 0x000008, "Wrong alignment on WBP_PlayerName_C_OnRepPS");
static_assert(sizeof(WBP_PlayerName_C_OnRepPS) == 0x000008, "Wrong size on WBP_PlayerName_C_OnRepPS");
static_assert(offsetof(WBP_PlayerName_C_OnRepPS, PlayerState) == 0x000000, "Member 'WBP_PlayerName_C_OnRepPS::PlayerState' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnTagAdded_3E38FDB94CE9261D425521AC83325DCA
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerName_C_OnTagAdded_3E38FDB94CE9261D425521AC83325DCA final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnTagAdded_3E38FDB94CE9261D425521AC83325DCA) == 0x000004, "Wrong alignment on WBP_PlayerName_C_OnTagAdded_3E38FDB94CE9261D425521AC83325DCA");
static_assert(sizeof(WBP_PlayerName_C_OnTagAdded_3E38FDB94CE9261D425521AC83325DCA) == 0x000008, "Wrong size on WBP_PlayerName_C_OnTagAdded_3E38FDB94CE9261D425521AC83325DCA");
static_assert(offsetof(WBP_PlayerName_C_OnTagAdded_3E38FDB94CE9261D425521AC83325DCA, Tag) == 0x000000, "Member 'WBP_PlayerName_C_OnTagAdded_3E38FDB94CE9261D425521AC83325DCA::Tag' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnTagAdded_960062434E95F2D5AEE53AB9532E8DA1
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerName_C_OnTagAdded_960062434E95F2D5AEE53AB9532E8DA1 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnTagAdded_960062434E95F2D5AEE53AB9532E8DA1) == 0x000004, "Wrong alignment on WBP_PlayerName_C_OnTagAdded_960062434E95F2D5AEE53AB9532E8DA1");
static_assert(sizeof(WBP_PlayerName_C_OnTagAdded_960062434E95F2D5AEE53AB9532E8DA1) == 0x000008, "Wrong size on WBP_PlayerName_C_OnTagAdded_960062434E95F2D5AEE53AB9532E8DA1");
static_assert(offsetof(WBP_PlayerName_C_OnTagAdded_960062434E95F2D5AEE53AB9532E8DA1, Tag) == 0x000000, "Member 'WBP_PlayerName_C_OnTagAdded_960062434E95F2D5AEE53AB9532E8DA1::Tag' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnTagAdded_D52A13B24AA8ED3B7C98ADB64F0C402B
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerName_C_OnTagAdded_D52A13B24AA8ED3B7C98ADB64F0C402B final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnTagAdded_D52A13B24AA8ED3B7C98ADB64F0C402B) == 0x000004, "Wrong alignment on WBP_PlayerName_C_OnTagAdded_D52A13B24AA8ED3B7C98ADB64F0C402B");
static_assert(sizeof(WBP_PlayerName_C_OnTagAdded_D52A13B24AA8ED3B7C98ADB64F0C402B) == 0x000008, "Wrong size on WBP_PlayerName_C_OnTagAdded_D52A13B24AA8ED3B7C98ADB64F0C402B");
static_assert(offsetof(WBP_PlayerName_C_OnTagAdded_D52A13B24AA8ED3B7C98ADB64F0C402B, Tag) == 0x000000, "Member 'WBP_PlayerName_C_OnTagAdded_D52A13B24AA8ED3B7C98ADB64F0C402B::Tag' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnTagRemoved_3E38FDB94CE9261D425521AC83325DCA
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerName_C_OnTagRemoved_3E38FDB94CE9261D425521AC83325DCA final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnTagRemoved_3E38FDB94CE9261D425521AC83325DCA) == 0x000004, "Wrong alignment on WBP_PlayerName_C_OnTagRemoved_3E38FDB94CE9261D425521AC83325DCA");
static_assert(sizeof(WBP_PlayerName_C_OnTagRemoved_3E38FDB94CE9261D425521AC83325DCA) == 0x000008, "Wrong size on WBP_PlayerName_C_OnTagRemoved_3E38FDB94CE9261D425521AC83325DCA");
static_assert(offsetof(WBP_PlayerName_C_OnTagRemoved_3E38FDB94CE9261D425521AC83325DCA, Tag) == 0x000000, "Member 'WBP_PlayerName_C_OnTagRemoved_3E38FDB94CE9261D425521AC83325DCA::Tag' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnTagRemoved_960062434E95F2D5AEE53AB9532E8DA1
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerName_C_OnTagRemoved_960062434E95F2D5AEE53AB9532E8DA1 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnTagRemoved_960062434E95F2D5AEE53AB9532E8DA1) == 0x000004, "Wrong alignment on WBP_PlayerName_C_OnTagRemoved_960062434E95F2D5AEE53AB9532E8DA1");
static_assert(sizeof(WBP_PlayerName_C_OnTagRemoved_960062434E95F2D5AEE53AB9532E8DA1) == 0x000008, "Wrong size on WBP_PlayerName_C_OnTagRemoved_960062434E95F2D5AEE53AB9532E8DA1");
static_assert(offsetof(WBP_PlayerName_C_OnTagRemoved_960062434E95F2D5AEE53AB9532E8DA1, Tag) == 0x000000, "Member 'WBP_PlayerName_C_OnTagRemoved_960062434E95F2D5AEE53AB9532E8DA1::Tag' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.OnTagRemoved_D52A13B24AA8ED3B7C98ADB64F0C402B
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerName_C_OnTagRemoved_D52A13B24AA8ED3B7C98ADB64F0C402B final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_OnTagRemoved_D52A13B24AA8ED3B7C98ADB64F0C402B) == 0x000004, "Wrong alignment on WBP_PlayerName_C_OnTagRemoved_D52A13B24AA8ED3B7C98ADB64F0C402B");
static_assert(sizeof(WBP_PlayerName_C_OnTagRemoved_D52A13B24AA8ED3B7C98ADB64F0C402B) == 0x000008, "Wrong size on WBP_PlayerName_C_OnTagRemoved_D52A13B24AA8ED3B7C98ADB64F0C402B");
static_assert(offsetof(WBP_PlayerName_C_OnTagRemoved_D52A13B24AA8ED3B7C98ADB64F0C402B, Tag) == 0x000000, "Member 'WBP_PlayerName_C_OnTagRemoved_D52A13B24AA8ED3B7C98ADB64F0C402B::Tag' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.ReviveMePing
// 0x0020 (0x0020 - 0x0000)
struct WBP_PlayerName_C_ReviveMePing final
{
public:
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0000(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PostLocalAnnouncement_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_ReviveMePing) == 0x000008, "Wrong alignment on WBP_PlayerName_C_ReviveMePing");
static_assert(sizeof(WBP_PlayerName_C_ReviveMePing) == 0x000020, "Wrong size on WBP_PlayerName_C_ReviveMePing");
static_assert(offsetof(WBP_PlayerName_C_ReviveMePing, Temp_struct_Variable) == 0x000000, "Member 'WBP_PlayerName_C_ReviveMePing::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ReviveMePing, Temp_struct_Variable_1) == 0x000008, "Member 'WBP_PlayerName_C_ReviveMePing::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ReviveMePing, CallFunc_PostLocalAnnouncement_ReturnValue) == 0x000010, "Member 'WBP_PlayerName_C_ReviveMePing::CallFunc_PostLocalAnnouncement_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_ReviveMePing, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_PlayerName_C_ReviveMePing::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.Set Player Name Visibility
// 0x0090 (0x0090 - 0x0000)
struct WBP_PlayerName_C_Set_Player_Name_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3D[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzBaseCharacter*                       Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCharacterWorldVisibilityComponent*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzWorldVisibilityState                       CallFunc_GetVisibilityState_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzWorldVisibilityState                       Temp_byte_Variable_2;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A40[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue_1;                    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A41[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzPlayerViewTargetInterface> K2Node_DynamicCast_AsGz_Player_View_Target_Interface; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A42[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzBaseCharacter*                       CallFunc_GetViewTargetCharacter_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_Set_Player_Name_Visibility) == 0x000008, "Wrong alignment on WBP_PlayerName_C_Set_Player_Name_Visibility");
static_assert(sizeof(WBP_PlayerName_C_Set_Player_Name_Visibility) == 0x000090, "Wrong size on WBP_PlayerName_C_Set_Player_Name_Visibility");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_2) == 0x000002, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_3) == 0x000003, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_4) == 0x000004, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_5) == 0x000005, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_6) == 0x000006, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_7) == 0x000007, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_8) == 0x000008, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_9) == 0x000009, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_10) == 0x00000A, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_object_Variable) == 0x000010, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_GetVisibilityState_ReturnValue) == 0x000021, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_GetVisibilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_11) == 0x000022, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_byte_Variable) == 0x000023, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_byte_Variable_1) == 0x000024, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_12) == 0x000025, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_13) == 0x000026, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_14) == 0x000027, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000028, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_15) == 0x000030, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_GetViewTarget_ReturnValue) == 0x000038, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_GetPawn_ReturnValue) == 0x000048, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_16) == 0x000050, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_bool_Variable_17) == 0x000052, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, Temp_byte_Variable_2) == 0x000053, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, K2Node_Select_Default) == 0x000054, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_IsValid_ReturnValue_2) == 0x000055, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, K2Node_Select_Default_1) == 0x000056, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_GetPawn_ReturnValue_1) == 0x000058, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_IsValid_ReturnValue_3) == 0x000060, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, K2Node_DynamicCast_AsGz_Player_View_Target_Interface) == 0x000068, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::K2Node_DynamicCast_AsGz_Player_View_Target_Interface' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_GetViewTargetCharacter_ReturnValue) == 0x000080, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_GetViewTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_IsLocallyControlled_ReturnValue) == 0x000088, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Set_Player_Name_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'WBP_PlayerName_C_Set_Player_Name_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.SetCurrentHoldTime
// 0x0020 (0x0020 - 0x0000)
struct WBP_PlayerName_C_SetCurrentHoldTime final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_SetCurrentHoldTime) == 0x000008, "Wrong alignment on WBP_PlayerName_C_SetCurrentHoldTime");
static_assert(sizeof(WBP_PlayerName_C_SetCurrentHoldTime) == 0x000020, "Wrong size on WBP_PlayerName_C_SetCurrentHoldTime");
static_assert(offsetof(WBP_PlayerName_C_SetCurrentHoldTime, DeltaTime) == 0x000000, "Member 'WBP_PlayerName_C_SetCurrentHoldTime::DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetCurrentHoldTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_PlayerName_C_SetCurrentHoldTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetCurrentHoldTime, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'WBP_PlayerName_C_SetCurrentHoldTime::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetCurrentHoldTime, CallFunc_FClamp_Max_ImplicitCast) == 0x000018, "Member 'WBP_PlayerName_C_SetCurrentHoldTime::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.SetIconShapeAndColor
// 0x0038 (0x0038 - 0x0000)
struct WBP_PlayerName_C_SetIconShapeAndColor final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A43[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIndexInTeam_OutputPin;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetTeammateShapeFromIndex_NewParam;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexInTeam_OutputPin_1;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeammateColorFromIndex_OutPlayerColor; // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0024(0x0014)()
};
static_assert(alignof(WBP_PlayerName_C_SetIconShapeAndColor) == 0x000008, "Wrong alignment on WBP_PlayerName_C_SetIconShapeAndColor");
static_assert(sizeof(WBP_PlayerName_C_SetIconShapeAndColor) == 0x000038, "Wrong size on WBP_PlayerName_C_SetIconShapeAndColor");
static_assert(offsetof(WBP_PlayerName_C_SetIconShapeAndColor, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_PlayerName_C_SetIconShapeAndColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetIconShapeAndColor, CallFunc_GetIndexInTeam_OutputPin) == 0x000004, "Member 'WBP_PlayerName_C_SetIconShapeAndColor::CallFunc_GetIndexInTeam_OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetIconShapeAndColor, CallFunc_GetTeammateShapeFromIndex_NewParam) == 0x000008, "Member 'WBP_PlayerName_C_SetIconShapeAndColor::CallFunc_GetTeammateShapeFromIndex_NewParam' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetIconShapeAndColor, CallFunc_GetIndexInTeam_OutputPin_1) == 0x000010, "Member 'WBP_PlayerName_C_SetIconShapeAndColor::CallFunc_GetIndexInTeam_OutputPin_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetIconShapeAndColor, CallFunc_GetTeammateColorFromIndex_OutPlayerColor) == 0x000014, "Member 'WBP_PlayerName_C_SetIconShapeAndColor::CallFunc_GetTeammateColorFromIndex_OutPlayerColor' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetIconShapeAndColor, K2Node_MakeStruct_SlateColor) == 0x000024, "Member 'WBP_PlayerName_C_SetIconShapeAndColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.SetPlayerName
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_PlayerName_C_SetPlayerName final
{
public:
	class FString                                 PlayerClanTag;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A44[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerClanTag_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00B0(0x0010)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_SetPlayerName) == 0x000008, "Wrong alignment on WBP_PlayerName_C_SetPlayerName");
static_assert(sizeof(WBP_PlayerName_C_SetPlayerName) == 0x0000C8, "Wrong size on WBP_PlayerName_C_SetPlayerName");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, PlayerClanTag) == 0x000000, "Member 'WBP_PlayerName_C_SetPlayerName::PlayerClanTag' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, Temp_bool_Variable) == 0x000010, "Member 'WBP_PlayerName_C_SetPlayerName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, Temp_byte_Variable) == 0x000011, "Member 'WBP_PlayerName_C_SetPlayerName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_PlayerName_C_SetPlayerName::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, CallFunc_IsValid_ReturnValue) == 0x000013, "Member 'WBP_PlayerName_C_SetPlayerName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'WBP_PlayerName_C_SetPlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WBP_PlayerName_C_SetPlayerName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, CallFunc_GetPlayerClanTag_ReturnValue) == 0x000070, "Member 'WBP_PlayerName_C_SetPlayerName::CallFunc_GetPlayerClanTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, K2Node_MakeArray_Array) == 0x000080, "Member 'WBP_PlayerName_C_SetPlayerName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, CallFunc_Format_ReturnValue) == 0x000090, "Member 'WBP_PlayerName_C_SetPlayerName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, CallFunc_GetPlayerName_ReturnValue) == 0x0000A0, "Member 'WBP_PlayerName_C_SetPlayerName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000B0, "Member 'WBP_PlayerName_C_SetPlayerName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, CallFunc_IsEmpty_ReturnValue) == 0x0000C0, "Member 'WBP_PlayerName_C_SetPlayerName::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, K2Node_Select_Default) == 0x0000C1, "Member 'WBP_PlayerName_C_SetPlayerName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerName, CallFunc_Not_PreBool_ReturnValue) == 0x0000C2, "Member 'WBP_PlayerName_C_SetPlayerName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.SetPlayerState
// 0x0058 (0x0058 - 0x0000)
struct WBP_PlayerName_C_SetPlayerState final
{
public:
	class AGzPlayerState*                         InGzPlayerState;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A45[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGzInvItem& ItemDelta, EGzInvChangeEvent Event)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzInvItem& Item, EGzInvChangeEvent ChangeEvent)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A46[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A47[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_SetPlayerState) == 0x000008, "Wrong alignment on WBP_PlayerName_C_SetPlayerState");
static_assert(sizeof(WBP_PlayerName_C_SetPlayerState) == 0x000058, "Wrong size on WBP_PlayerName_C_SetPlayerState");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerState, InGzPlayerState) == 0x000000, "Member 'WBP_PlayerName_C_SetPlayerState::InGzPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerState, CallFunc_GetInventoryComponent_ReturnValue) == 0x000008, "Member 'WBP_PlayerName_C_SetPlayerState::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerState, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_PlayerName_C_SetPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerState, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_PlayerName_C_SetPlayerState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerState, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'WBP_PlayerName_C_SetPlayerState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerState, CallFunc_GetPawn_ReturnValue) == 0x000038, "Member 'WBP_PlayerName_C_SetPlayerState::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'WBP_PlayerName_C_SetPlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerState, K2Node_DynamicCast_AsGz_Character) == 0x000048, "Member 'WBP_PlayerName_C_SetPlayerState::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_SetPlayerState, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_PlayerName_C_SetPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_PlayerName_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_Tick) == 0x000004, "Wrong alignment on WBP_PlayerName_C_Tick");
static_assert(sizeof(WBP_PlayerName_C_Tick) == 0x00003C, "Wrong size on WBP_PlayerName_C_Tick");
static_assert(offsetof(WBP_PlayerName_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_PlayerName_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_PlayerName_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.Update Player Name Visuals
// 0x0014 (0x0014 - 0x0000)
struct WBP_PlayerName_C_Update_Player_Name_Visuals final
{
public:
	int32                                         CallFunc_GetIndexInTeam_OutputPin;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeammateColorFromIndex_OutPlayerColor; // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_Update_Player_Name_Visuals) == 0x000004, "Wrong alignment on WBP_PlayerName_C_Update_Player_Name_Visuals");
static_assert(sizeof(WBP_PlayerName_C_Update_Player_Name_Visuals) == 0x000014, "Wrong size on WBP_PlayerName_C_Update_Player_Name_Visuals");
static_assert(offsetof(WBP_PlayerName_C_Update_Player_Name_Visuals, CallFunc_GetIndexInTeam_OutputPin) == 0x000000, "Member 'WBP_PlayerName_C_Update_Player_Name_Visuals::CallFunc_GetIndexInTeam_OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Player_Name_Visuals, CallFunc_GetTeammateColorFromIndex_OutPlayerColor) == 0x000004, "Member 'WBP_PlayerName_C_Update_Player_Name_Visuals::CallFunc_GetTeammateColorFromIndex_OutPlayerColor' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.Update Progress
// 0x0090 (0x0090 - 0x0000)
struct WBP_PlayerName_C_Update_Progress final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A48[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A49[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzHealthInterface>    CallFunc_GetMaxHealth_self_CastInput;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4A[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzHealthInterface>    CallFunc_GetHealth_self_CastInput;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4B[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_RangeMax_ImplicitCast;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgress_Percent__0_1__ImplicitCast;   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4C[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgress_Percent__0_1__ImplicitCast_1; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_Update_Progress) == 0x000008, "Wrong alignment on WBP_PlayerName_C_Update_Progress");
static_assert(sizeof(WBP_PlayerName_C_Update_Progress) == 0x000090, "Wrong size on WBP_PlayerName_C_Update_Progress");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_NormalizeToRange_ReturnValue) == 0x000008, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_GetMaxHealth_self_CastInput) == 0x000030, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_GetMaxHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_GetMaxHealth_ReturnValue) == 0x000040, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_GetHealth_self_CastInput) == 0x000048, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_GetHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_GetHealth_ReturnValue) == 0x000058, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_SafeDivide_ReturnValue) == 0x000060, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_NormalizeToRange_RangeMax_ImplicitCast) == 0x000068, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_NormalizeToRange_RangeMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_SetProgress_Percent__0_1__ImplicitCast) == 0x000070, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_SetProgress_Percent__0_1__ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_SafeDivide_B_ImplicitCast) == 0x000078, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_SafeDivide_A_ImplicitCast) == 0x000080, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_Update_Progress, CallFunc_SetProgress_Percent__0_1__ImplicitCast_1) == 0x000088, "Member 'WBP_PlayerName_C_Update_Progress::CallFunc_SetProgress_Percent__0_1__ImplicitCast_1' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.UpdateHex
// 0x0070 (0x0070 - 0x0000)
struct WBP_PlayerName_C_UpdateHex final
{
public:
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0000(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGzInvItem>                     CallFunc_GetItemsByItemType_ReturnValue;           // 0x0028(0x0010)(ReferenceParm)
	struct FGzInvItem                             CallFunc_GetHighestRarityItem_ReturnValue;         // 0x0038(0x0010)()
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0048(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PostLocalAnnouncement_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4F[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItem_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_UpdateHex) == 0x000008, "Wrong alignment on WBP_PlayerName_C_UpdateHex");
static_assert(sizeof(WBP_PlayerName_C_UpdateHex) == 0x000070, "Wrong size on WBP_PlayerName_C_UpdateHex");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, Temp_struct_Variable) == 0x000000, "Member 'WBP_PlayerName_C_UpdateHex::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, Temp_struct_Variable_1) == 0x000008, "Member 'WBP_PlayerName_C_UpdateHex::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_GetInventoryComponent_ReturnValue) == 0x000018, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_GetItemsByItemType_ReturnValue) == 0x000028, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_GetItemsByItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_GetHighestRarityItem_ReturnValue) == 0x000038, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_GetHighestRarityItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, Temp_struct_Variable_2) == 0x000048, "Member 'WBP_PlayerName_C_UpdateHex::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_GetItemData_ReturnValue) == 0x000050, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_PostLocalAnnouncement_ReturnValue) == 0x000058, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_PostLocalAnnouncement_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_GetRarityColor_ReturnValue) == 0x00005C, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_IsValidItem_ReturnValue) == 0x00006C, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_IsValidItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateHex, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00006D, "Member 'WBP_PlayerName_C_UpdateHex::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.UpdateKnockDownIndication
// 0x0010 (0x0010 - 0x0000)
struct WBP_PlayerName_C_UpdateKnockDownIndication final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A50[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               NewLocalVar;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_UpdateKnockDownIndication) == 0x000008, "Wrong alignment on WBP_PlayerName_C_UpdateKnockDownIndication");
static_assert(sizeof(WBP_PlayerName_C_UpdateKnockDownIndication) == 0x000010, "Wrong size on WBP_PlayerName_C_UpdateKnockDownIndication");
static_assert(offsetof(WBP_PlayerName_C_UpdateKnockDownIndication, Condition) == 0x000000, "Member 'WBP_PlayerName_C_UpdateKnockDownIndication::Condition' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UpdateKnockDownIndication, NewLocalVar) == 0x000008, "Member 'WBP_PlayerName_C_UpdateKnockDownIndication::NewLocalVar' has a wrong offset!");

// Function WBP_PlayerName.WBP_PlayerName_C.UsingSelfReviveKit
// 0x0038 (0x0038 - 0x0000)
struct WBP_PlayerName_C_UsingSelfReviveKit final
{
public:
	bool                                          bWasAdded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A51[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LastProgress_ImplicitCast;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerName_C_UsingSelfReviveKit) == 0x000008, "Wrong alignment on WBP_PlayerName_C_UsingSelfReviveKit");
static_assert(sizeof(WBP_PlayerName_C_UsingSelfReviveKit) == 0x000038, "Wrong size on WBP_PlayerName_C_UsingSelfReviveKit");
static_assert(offsetof(WBP_PlayerName_C_UsingSelfReviveKit, bWasAdded) == 0x000000, "Member 'WBP_PlayerName_C_UsingSelfReviveKit::bWasAdded' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UsingSelfReviveKit, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_PlayerName_C_UsingSelfReviveKit::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UsingSelfReviveKit, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_PlayerName_C_UsingSelfReviveKit::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UsingSelfReviveKit, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'WBP_PlayerName_C_UsingSelfReviveKit::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UsingSelfReviveKit, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'WBP_PlayerName_C_UsingSelfReviveKit::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UsingSelfReviveKit, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'WBP_PlayerName_C_UsingSelfReviveKit::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerName_C_UsingSelfReviveKit, K2Node_VariableSet_LastProgress_ImplicitCast) == 0x000030, "Member 'WBP_PlayerName_C_UsingSelfReviveKit::K2Node_VariableSet_LastProgress_ImplicitCast' has a wrong offset!");

}

