#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Barrier_Part

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "G01_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Barrier_Part.BP_Barrier_Part_C
// 0x0180 (0x0480 - 0x0300)
class ABP_Barrier_Part_C final : public AGzDamageableActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   BoxTrigger;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Barrier_3dMesh;                                 // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_84520E8143A6711162F6AD883C2726E5; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_84520E8143A6711162F6AD883C2726E5; // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64ED[0x3];                                     // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_NewTrack_0_CF2E009C482BFD9246A0C5B68CB2BA5A; // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_CF2E009C482BFD9246A0C5B68CB2BA5A; // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64EE[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_OpenEvent_NewTrack_0_9C74511B4C56356BC1D127B1998D07BA; // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_OpenEvent__Direction_9C74511B4C56356BC1D127B1998D07BA; // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64EF[0x3];                                     // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_OpenEvent;                                // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        WidthHalf;                                         // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Part;                                          // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Gameplay_Effect_Class;                             // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           ListenDamageTask;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Parent;                                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            ParalysisEffectClass;                              // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            InfinityPulseEffectClass;                          // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FColor                                 ColorShield;                                       // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LowHPColor;                                        // 0x038C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FullHPColor;                                       // 0x039C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F0[0x4];                                     // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LifeSpanHackEffect;                                // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HackEffetLock;                                     // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F1[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Visual;                                            // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_Barrier_C*                          Barrier;                                           // 0x03C8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        TraceWidth_Depr;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightResult;                                      // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      Object_Types;                                      // 0x03E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        HeightKoef;                                        // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WidthKoef;                                         // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightMax;                                         // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WidthResult;                                       // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Width;                                             // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WidthQuarter;                                      // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightQuarter;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightHalf;                                        // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0438(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bRight;                                            // 0x0450(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bClosed;                                           // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F2[0x6];                                     // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HealthMax;                                         // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Barrier_ShockEffect_Component_C*    ShockEffect;                                       // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GameplayEffectHandle;                              // 0x0468(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           NewVar;                                            // 0x0470(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DurationPulseEffectClass;                          // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyDefilerAreaEffect(class UClass* Effect, class AActor* Actor);
	void ApplyDefilerDurationAreaEffect(class AActor* Actor);
	void ApplyDefilerInfinityAreaEffect(class AActor* Actor);
	void ApplyGameplayEffectToTarget(class UClass* Effect, class AActor* Target);
	void BndEvt__BP_Barrier_Part_BoxTrigger_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_Barrier_Part_BoxTrigger_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BoxsTrace(const struct FVector& TraceDiraction, double* Param_Width);
	void BP_OnDeath(bool HasDeathHitPoint, const struct FVector& DeathHitPoint);
	void CancelDefilerAreaEffect(class AActor* Actor);
	void Close_Event();
	void ConvertHealthInMaterialParameter(double Health, double* Param);
	void Destroy_Event();
	void Event_Start();
	void ExecuteUbergraph_BP_Barrier_Part(int32 EntryPoint);
	void MaterialSequention_Event();
	void NeagaraSequention_Event();
	void OnAttributeChanged_D377C7F142D209F3A9A06FBC8159209C(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnRep_Barrier();
	void Open_Event();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void RemoveDefilerAreaEffect(class AActor* Actor);
	void RemoveGameplayEffectToTarget(class AActor* Actor);
	void ScaleUpdate(float ScaleTime);
	void Setup_Height_And_Width();
	void SetupDMI();
	void SetupHealth();
	void SubsribeDamage_Event();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void Timeline_OpenEvent__FinishedFunc();
	void Timeline_OpenEvent__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Barrier_Part_C">();
	}
	static class ABP_Barrier_Part_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Barrier_Part_C>();
	}
};
static_assert(alignof(ABP_Barrier_Part_C) == 0x000008, "Wrong alignment on ABP_Barrier_Part_C");
static_assert(sizeof(ABP_Barrier_Part_C) == 0x000480, "Wrong size on ABP_Barrier_Part_C");
static_assert(offsetof(ABP_Barrier_Part_C, UberGraphFrame) == 0x000300, "Member 'ABP_Barrier_Part_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, BoxTrigger) == 0x000308, "Member 'ABP_Barrier_Part_C::BoxTrigger' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, NS_Barrier_3dMesh) == 0x000310, "Member 'ABP_Barrier_Part_C::NS_Barrier_3dMesh' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Cube) == 0x000318, "Member 'ABP_Barrier_Part_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Timeline_0_NewTrack_0_84520E8143A6711162F6AD883C2726E5) == 0x000320, "Member 'ABP_Barrier_Part_C::Timeline_0_NewTrack_0_84520E8143A6711162F6AD883C2726E5' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Timeline_0__Direction_84520E8143A6711162F6AD883C2726E5) == 0x000324, "Member 'ABP_Barrier_Part_C::Timeline_0__Direction_84520E8143A6711162F6AD883C2726E5' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Timeline_0) == 0x000328, "Member 'ABP_Barrier_Part_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Timeline_NewTrack_0_CF2E009C482BFD9246A0C5B68CB2BA5A) == 0x000330, "Member 'ABP_Barrier_Part_C::Timeline_NewTrack_0_CF2E009C482BFD9246A0C5B68CB2BA5A' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Timeline__Direction_CF2E009C482BFD9246A0C5B68CB2BA5A) == 0x000334, "Member 'ABP_Barrier_Part_C::Timeline__Direction_CF2E009C482BFD9246A0C5B68CB2BA5A' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Timeline) == 0x000338, "Member 'ABP_Barrier_Part_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Timeline_OpenEvent_NewTrack_0_9C74511B4C56356BC1D127B1998D07BA) == 0x000340, "Member 'ABP_Barrier_Part_C::Timeline_OpenEvent_NewTrack_0_9C74511B4C56356BC1D127B1998D07BA' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Timeline_OpenEvent__Direction_9C74511B4C56356BC1D127B1998D07BA) == 0x000344, "Member 'ABP_Barrier_Part_C::Timeline_OpenEvent__Direction_9C74511B4C56356BC1D127B1998D07BA' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Timeline_OpenEvent) == 0x000348, "Member 'ABP_Barrier_Part_C::Timeline_OpenEvent' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, WidthHalf) == 0x000350, "Member 'ABP_Barrier_Part_C::WidthHalf' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, DMI_Part) == 0x000358, "Member 'ABP_Barrier_Part_C::DMI_Part' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Gameplay_Effect_Class) == 0x000360, "Member 'ABP_Barrier_Part_C::Gameplay_Effect_Class' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, ListenDamageTask) == 0x000368, "Member 'ABP_Barrier_Part_C::ListenDamageTask' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Parent) == 0x000370, "Member 'ABP_Barrier_Part_C::Parent' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, ParalysisEffectClass) == 0x000378, "Member 'ABP_Barrier_Part_C::ParalysisEffectClass' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, InfinityPulseEffectClass) == 0x000380, "Member 'ABP_Barrier_Part_C::InfinityPulseEffectClass' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, ColorShield) == 0x000388, "Member 'ABP_Barrier_Part_C::ColorShield' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, LowHPColor) == 0x00038C, "Member 'ABP_Barrier_Part_C::LowHPColor' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, FullHPColor) == 0x00039C, "Member 'ABP_Barrier_Part_C::FullHPColor' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, LifeSpanHackEffect) == 0x0003B0, "Member 'ABP_Barrier_Part_C::LifeSpanHackEffect' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, HackEffetLock) == 0x0003B8, "Member 'ABP_Barrier_Part_C::HackEffetLock' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Visual) == 0x0003C0, "Member 'ABP_Barrier_Part_C::Visual' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Barrier) == 0x0003C8, "Member 'ABP_Barrier_Part_C::Barrier' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, TraceWidth_Depr) == 0x0003D0, "Member 'ABP_Barrier_Part_C::TraceWidth_Depr' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, HeightResult) == 0x0003D8, "Member 'ABP_Barrier_Part_C::HeightResult' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Height) == 0x0003E0, "Member 'ABP_Barrier_Part_C::Height' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Object_Types) == 0x0003E8, "Member 'ABP_Barrier_Part_C::Object_Types' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, HeightKoef) == 0x0003F8, "Member 'ABP_Barrier_Part_C::HeightKoef' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, WidthKoef) == 0x000400, "Member 'ABP_Barrier_Part_C::WidthKoef' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, HeightMax) == 0x000408, "Member 'ABP_Barrier_Part_C::HeightMax' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, WidthResult) == 0x000410, "Member 'ABP_Barrier_Part_C::WidthResult' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, Width) == 0x000418, "Member 'ABP_Barrier_Part_C::Width' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, WidthQuarter) == 0x000420, "Member 'ABP_Barrier_Part_C::WidthQuarter' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, HeightQuarter) == 0x000428, "Member 'ABP_Barrier_Part_C::HeightQuarter' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, HeightHalf) == 0x000430, "Member 'ABP_Barrier_Part_C::HeightHalf' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, StartLocation) == 0x000438, "Member 'ABP_Barrier_Part_C::StartLocation' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, bRight) == 0x000450, "Member 'ABP_Barrier_Part_C::bRight' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, bClosed) == 0x000451, "Member 'ABP_Barrier_Part_C::bClosed' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, HealthMax) == 0x000458, "Member 'ABP_Barrier_Part_C::HealthMax' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, ShockEffect) == 0x000460, "Member 'ABP_Barrier_Part_C::ShockEffect' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, GameplayEffectHandle) == 0x000468, "Member 'ABP_Barrier_Part_C::GameplayEffectHandle' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, NewVar) == 0x000470, "Member 'ABP_Barrier_Part_C::NewVar' has a wrong offset!");
static_assert(offsetof(ABP_Barrier_Part_C, DurationPulseEffectClass) == 0x000478, "Member 'ABP_Barrier_Part_C::DurationPulseEffectClass' has a wrong offset!");

}

