#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PropagationComponent_Overlap_Phosphor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "G01_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PropagationComponent_Overlap_Phosphor.BP_PropagationComponent_Overlap_Phosphor_C
// 0x0080 (0x0610 - 0x0590)
class UBP_PropagationComponent_Overlap_Phosphor_C final : public UGzCheckedOverlapSphereComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0590(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<class UAbilitySystemComponent*, struct FActiveGameplayEffectHandle> ActiveEffectHandles;                               // 0x0598(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         OwnerTeamID;                                       // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_61CC[0x4];                                     // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              OwnerASC;                                          // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowFriendlyFire;                                 // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61CD[0x3];                                     // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         In_Sphere_Radius;                                  // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  OwningCharacter;                                   // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void RemoveRemainingEffects();
	void RemoveDoTEffect(class AActor* TargetActor);
	void ApplyDoTEffect(class UAbilitySystemComponent* TargetASC, struct FActiveGameplayEffectHandle* EffectHandle);
	void OnPawnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnPawnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_PropagationComponent_Overlap_Phosphor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PropagationComponent_Overlap_Phosphor_C">();
	}
	static class UBP_PropagationComponent_Overlap_Phosphor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PropagationComponent_Overlap_Phosphor_C>();
	}
};
static_assert(alignof(UBP_PropagationComponent_Overlap_Phosphor_C) == 0x000010, "Wrong alignment on UBP_PropagationComponent_Overlap_Phosphor_C");
static_assert(sizeof(UBP_PropagationComponent_Overlap_Phosphor_C) == 0x000610, "Wrong size on UBP_PropagationComponent_Overlap_Phosphor_C");
static_assert(offsetof(UBP_PropagationComponent_Overlap_Phosphor_C, UberGraphFrame) == 0x000590, "Member 'UBP_PropagationComponent_Overlap_Phosphor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PropagationComponent_Overlap_Phosphor_C, ActiveEffectHandles) == 0x000598, "Member 'UBP_PropagationComponent_Overlap_Phosphor_C::ActiveEffectHandles' has a wrong offset!");
static_assert(offsetof(UBP_PropagationComponent_Overlap_Phosphor_C, OwnerTeamID) == 0x0005E8, "Member 'UBP_PropagationComponent_Overlap_Phosphor_C::OwnerTeamID' has a wrong offset!");
static_assert(offsetof(UBP_PropagationComponent_Overlap_Phosphor_C, OwnerASC) == 0x0005F0, "Member 'UBP_PropagationComponent_Overlap_Phosphor_C::OwnerASC' has a wrong offset!");
static_assert(offsetof(UBP_PropagationComponent_Overlap_Phosphor_C, AllowFriendlyFire) == 0x0005F8, "Member 'UBP_PropagationComponent_Overlap_Phosphor_C::AllowFriendlyFire' has a wrong offset!");
static_assert(offsetof(UBP_PropagationComponent_Overlap_Phosphor_C, In_Sphere_Radius) == 0x0005FC, "Member 'UBP_PropagationComponent_Overlap_Phosphor_C::In_Sphere_Radius' has a wrong offset!");
static_assert(offsetof(UBP_PropagationComponent_Overlap_Phosphor_C, OwningCharacter) == 0x000600, "Member 'UBP_PropagationComponent_Overlap_Phosphor_C::OwningCharacter' has a wrong offset!");

}

