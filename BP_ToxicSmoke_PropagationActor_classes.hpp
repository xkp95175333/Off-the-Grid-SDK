#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ToxicSmoke_PropagationActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "G01_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C
// 0x00D8 (0x0570 - 0x0498)
class ABP_ToxicSmoke_PropagationActor_C final : public AGzToxicSmokePropagation
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0498(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Force;                                             // 0x04A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OwnerTeamID;                                       // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalPlayerTeamID;                                 // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UAbilitySystemComponent*, struct FActiveGameplayEffectHandle> ActiveEffectHandles;                               // 0x04C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          AllowFriendlyFire;                                 // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6741[0x3];                                     // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewVar;                                            // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnTime;                                         // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableSmokeColorVariation;                         // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6742[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ParticlePositionArray;                             // 0x0530(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      SmokeFX;                                           // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        SmokePositionArray;                                // 0x0550(0x0010)(Edit, BlueprintVisible)
	TArray<class UStaticMeshComponent*>           TestCubes;                                         // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void CanApplyEffectToTarget(class AActor* TargetActor, bool* CanApplyEffect);
	void ExecuteUbergraph_BP_ToxicSmoke_PropagationActor(int32 EntryPoint);
	void OnPawnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnPawnEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnPropagationPointActivated(const int32 PropagationPointID, const struct FVector& Location, const struct FVector& Normal, const float PointLifespan);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem, const struct FVector& SimulationPositionOffset);
	void RemoveExistingEffectFromTarget(class UAbilitySystemComponent* TargetASC);
	void RemoveRemainingEffects();
	void RoundVector(const struct FVector& In_Vector, struct FVector* Out_Vector);
	void SpawnOverlap(const struct FVector& RelativeLocation);
	void SpawnSmoke(const struct FVector& RelativeLocation, class UNiagaraComponent** NiagaraSystem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ToxicSmoke_PropagationActor_C">();
	}
	static class ABP_ToxicSmoke_PropagationActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ToxicSmoke_PropagationActor_C>();
	}
};
static_assert(alignof(ABP_ToxicSmoke_PropagationActor_C) == 0x000008, "Wrong alignment on ABP_ToxicSmoke_PropagationActor_C");
static_assert(sizeof(ABP_ToxicSmoke_PropagationActor_C) == 0x000570, "Wrong size on ABP_ToxicSmoke_PropagationActor_C");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, UberGraphFrame) == 0x000498, "Member 'ABP_ToxicSmoke_PropagationActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, DefaultSceneRoot) == 0x0004A0, "Member 'ABP_ToxicSmoke_PropagationActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, Force) == 0x0004A8, "Member 'ABP_ToxicSmoke_PropagationActor_C::Force' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, OwnerTeamID) == 0x0004C0, "Member 'ABP_ToxicSmoke_PropagationActor_C::OwnerTeamID' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, LocalPlayerTeamID) == 0x0004C4, "Member 'ABP_ToxicSmoke_PropagationActor_C::LocalPlayerTeamID' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, ActiveEffectHandles) == 0x0004C8, "Member 'ABP_ToxicSmoke_PropagationActor_C::ActiveEffectHandles' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, AllowFriendlyFire) == 0x000518, "Member 'ABP_ToxicSmoke_PropagationActor_C::AllowFriendlyFire' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, NewVar) == 0x00051C, "Member 'ABP_ToxicSmoke_PropagationActor_C::NewVar' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, SpawnTime) == 0x000520, "Member 'ABP_ToxicSmoke_PropagationActor_C::SpawnTime' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, EnableSmokeColorVariation) == 0x000528, "Member 'ABP_ToxicSmoke_PropagationActor_C::EnableSmokeColorVariation' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, ParticlePositionArray) == 0x000530, "Member 'ABP_ToxicSmoke_PropagationActor_C::ParticlePositionArray' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, SmokeFX) == 0x000548, "Member 'ABP_ToxicSmoke_PropagationActor_C::SmokeFX' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, SmokePositionArray) == 0x000550, "Member 'ABP_ToxicSmoke_PropagationActor_C::SmokePositionArray' has a wrong offset!");
static_assert(offsetof(ABP_ToxicSmoke_PropagationActor_C, TestCubes) == 0x000560, "Member 'ABP_ToxicSmoke_PropagationActor_C::TestCubes' has a wrong offset!");

}

