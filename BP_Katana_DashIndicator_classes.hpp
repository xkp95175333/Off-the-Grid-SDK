#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Katana_DashIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Katana_DashIndicator.BP_Katana_DashIndicator_C
// 0x0058 (0x02F8 - 0x02A0)
class ABP_Katana_DashIndicator_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Niaraga_Crosshair;                                 // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niaraga_Area;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Indicator_Anim_Size_Multipler_173DDA084E592B584C692F9FBC62F538; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Indicator_Anim__Direction_173DDA084E592B584C692F9FBC62F538; // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DBB[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Indicator_Anim;                                    // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzKatanaComponent*                     KatanaComponent;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzGA_KatanaArm*                        KatanaAbility;                                     // 0x02D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bDashing;                                          // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DBC[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DashingColor;                                      // 0x02E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Katana_DashIndicator(int32 EntryPoint);
	void Indicator_Anim__FinishedFunc();
	void Indicator_Anim__UpdateFunc();
	void NotifyStartDash();
	void PerformIndicatorTrace(const struct FVector& Start, const struct FVector& End, struct FHitResult* OutHit, bool* bBlockingHit);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UpdateIndicator();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Katana_DashIndicator_C">();
	}
	static class ABP_Katana_DashIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Katana_DashIndicator_C>();
	}
};
static_assert(alignof(ABP_Katana_DashIndicator_C) == 0x000008, "Wrong alignment on ABP_Katana_DashIndicator_C");
static_assert(sizeof(ABP_Katana_DashIndicator_C) == 0x0002F8, "Wrong size on ABP_Katana_DashIndicator_C");
static_assert(offsetof(ABP_Katana_DashIndicator_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_Katana_DashIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, Niaraga_Crosshair) == 0x0002A8, "Member 'ABP_Katana_DashIndicator_C::Niaraga_Crosshair' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, Niaraga_Area) == 0x0002B0, "Member 'ABP_Katana_DashIndicator_C::Niaraga_Area' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_Katana_DashIndicator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, Indicator_Anim_Size_Multipler_173DDA084E592B584C692F9FBC62F538) == 0x0002C0, "Member 'ABP_Katana_DashIndicator_C::Indicator_Anim_Size_Multipler_173DDA084E592B584C692F9FBC62F538' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, Indicator_Anim__Direction_173DDA084E592B584C692F9FBC62F538) == 0x0002C4, "Member 'ABP_Katana_DashIndicator_C::Indicator_Anim__Direction_173DDA084E592B584C692F9FBC62F538' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, Indicator_Anim) == 0x0002C8, "Member 'ABP_Katana_DashIndicator_C::Indicator_Anim' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, KatanaComponent) == 0x0002D0, "Member 'ABP_Katana_DashIndicator_C::KatanaComponent' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, KatanaAbility) == 0x0002D8, "Member 'ABP_Katana_DashIndicator_C::KatanaAbility' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, bDashing) == 0x0002E0, "Member 'ABP_Katana_DashIndicator_C::bDashing' has a wrong offset!");
static_assert(offsetof(ABP_Katana_DashIndicator_C, DashingColor) == 0x0002E4, "Member 'ABP_Katana_DashIndicator_C::DashingColor' has a wrong offset!");

}

