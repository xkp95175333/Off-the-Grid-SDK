#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBP_DestructibleAsset

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.BP_ClientOnDiedPlayFx
// 0x0018 (0x0018 - 0x0000)
struct DBP_DestructibleAsset_C_BP_ClientOnDiedPlayFx final
{
public:
	struct FVector                                LastHitLocation;                                   // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_BP_ClientOnDiedPlayFx) == 0x000008, "Wrong alignment on DBP_DestructibleAsset_C_BP_ClientOnDiedPlayFx");
static_assert(sizeof(DBP_DestructibleAsset_C_BP_ClientOnDiedPlayFx) == 0x000018, "Wrong size on DBP_DestructibleAsset_C_BP_ClientOnDiedPlayFx");
static_assert(offsetof(DBP_DestructibleAsset_C_BP_ClientOnDiedPlayFx, LastHitLocation) == 0x000000, "Member 'DBP_DestructibleAsset_C_BP_ClientOnDiedPlayFx::LastHitLocation' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.BP_OnHealthChange
// 0x0004 (0x0004 - 0x0000)
struct DBP_DestructibleAsset_C_BP_OnHealthChange final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_BP_OnHealthChange) == 0x000004, "Wrong alignment on DBP_DestructibleAsset_C_BP_OnHealthChange");
static_assert(sizeof(DBP_DestructibleAsset_C_BP_OnHealthChange) == 0x000004, "Wrong size on DBP_DestructibleAsset_C_BP_OnHealthChange");
static_assert(offsetof(DBP_DestructibleAsset_C_BP_OnHealthChange, Health) == 0x000000, "Member 'DBP_DestructibleAsset_C_BP_OnHealthChange::Health' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.BP_OnHitApplied
// 0x00F8 (0x00F8 - 0x0000)
struct DBP_DestructibleAsset_C_BP_OnHitApplied final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(DBP_DestructibleAsset_C_BP_OnHitApplied) == 0x000008, "Wrong alignment on DBP_DestructibleAsset_C_BP_OnHitApplied");
static_assert(sizeof(DBP_DestructibleAsset_C_BP_OnHitApplied) == 0x0000F8, "Wrong size on DBP_DestructibleAsset_C_BP_OnHitApplied");
static_assert(offsetof(DBP_DestructibleAsset_C_BP_OnHitApplied, HitResult) == 0x000000, "Member 'DBP_DestructibleAsset_C_BP_OnHitApplied::HitResult' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.DoDamage
// 0x0100 (0x0100 - 0x0000)
struct DBP_DestructibleAsset_C_DoDamage final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_DoDamage) == 0x000008, "Wrong alignment on DBP_DestructibleAsset_C_DoDamage");
static_assert(sizeof(DBP_DestructibleAsset_C_DoDamage) == 0x000100, "Wrong size on DBP_DestructibleAsset_C_DoDamage");
static_assert(offsetof(DBP_DestructibleAsset_C_DoDamage, HitResult) == 0x000000, "Member 'DBP_DestructibleAsset_C_DoDamage::HitResult' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_DoDamage, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'DBP_DestructibleAsset_C_DoDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_DoDamage, CallFunc_IsAlive_ReturnValue) == 0x0000F9, "Member 'DBP_DestructibleAsset_C_DoDamage::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.ExecuteUbergraph_DBP_DestructibleAsset
// 0x0120 (0x0120 - 0x0000)
struct DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6425[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_LastHitLocation;                      // 0x0008(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0020(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_Health;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset) == 0x000008, "Wrong alignment on DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset");
static_assert(sizeof(DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset) == 0x000120, "Wrong size on DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset");
static_assert(offsetof(DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset, EntryPoint) == 0x000000, "Member 'DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset::EntryPoint' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset, CallFunc_IsAlive_ReturnValue) == 0x000004, "Member 'DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset, K2Node_Event_LastHitLocation) == 0x000008, "Member 'DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset::K2Node_Event_LastHitLocation' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset, K2Node_Event_HitResult) == 0x000020, "Member 'DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset, K2Node_Event_Health) == 0x000118, "Member 'DBP_DestructibleAsset_C_ExecuteUbergraph_DBP_DestructibleAsset::K2Node_Event_Health' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.OnDied
// 0x0560 (0x0560 - 0x0000)
struct DBP_DestructibleAsset_C_OnDied final
{
public:
	struct FVector                                ImpactPoint;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6426[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6427[0xF];                                     // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0120(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0218(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x0250(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0340(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0450(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6428[0x6];                                     // 0x054A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_OnDied) == 0x000010, "Wrong alignment on DBP_DestructibleAsset_C_OnDied");
static_assert(sizeof(DBP_DestructibleAsset_C_OnDied) == 0x000560, "Wrong size on DBP_DestructibleAsset_C_OnDied");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, ImpactPoint) == 0x000000, "Member 'DBP_DestructibleAsset_C_OnDied::ImpactPoint' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_GetTransform_ReturnValue_1) == 0x000090, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_MakeRotator_ReturnValue) == 0x0000F0, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_TransformRotation_ReturnValue) == 0x000108, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000120, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_GetBoundingBox_ReturnValue) == 0x000218, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_GetTransform_ReturnValue_2) == 0x000250, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_BreakVector_X) == 0x0002B0, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_BreakVector_Y) == 0x0002B8, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_BreakVector_Z) == 0x0002C0, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_BreakVector_X_1) == 0x0002C8, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_BreakVector_Y_1) == 0x0002D0, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_BreakVector_Z_1) == 0x0002D8, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_MakeVector_ReturnValue) == 0x0002E0, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_BreakVector_X_2) == 0x0002F8, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_BreakVector_Y_2) == 0x000300, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_BreakVector_Z_2) == 0x000308, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_TransformLocation_ReturnValue) == 0x000310, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_MakeVector_ReturnValue_1) == 0x000328, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000340, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_TransformLocation_ReturnValue_1) == 0x000438, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000450, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_IsValid_ReturnValue_1) == 0x000548, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_SetStaticMesh_ReturnValue) == 0x000549, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_GetMaterial_ReturnValue) == 0x000550, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_OnDied, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000558, "Member 'DBP_DestructibleAsset_C_OnDied::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.PlayExplosionFX
// 0x0030 (0x0030 - 0x0000)
struct DBP_DestructibleAsset_C_PlayExplosionFX final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_PlayExplosionFX) == 0x000008, "Wrong alignment on DBP_DestructibleAsset_C_PlayExplosionFX");
static_assert(sizeof(DBP_DestructibleAsset_C_PlayExplosionFX) == 0x000030, "Wrong size on DBP_DestructibleAsset_C_PlayExplosionFX");
static_assert(offsetof(DBP_DestructibleAsset_C_PlayExplosionFX, Location) == 0x000000, "Member 'DBP_DestructibleAsset_C_PlayExplosionFX::Location' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_PlayExplosionFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000018, "Member 'DBP_DestructibleAsset_C_PlayExplosionFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_PlayExplosionFX, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000020, "Member 'DBP_DestructibleAsset_C_PlayExplosionFX::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_PlayExplosionFX, CallFunc_PostEventAtLocation_ReturnValue) == 0x000028, "Member 'DBP_DestructibleAsset_C_PlayExplosionFX::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.TryDestroyOriginalMesh
// 0x0001 (0x0001 - 0x0000)
struct DBP_DestructibleAsset_C_TryDestroyOriginalMesh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_TryDestroyOriginalMesh) == 0x000001, "Wrong alignment on DBP_DestructibleAsset_C_TryDestroyOriginalMesh");
static_assert(sizeof(DBP_DestructibleAsset_C_TryDestroyOriginalMesh) == 0x000001, "Wrong size on DBP_DestructibleAsset_C_TryDestroyOriginalMesh");
static_assert(offsetof(DBP_DestructibleAsset_C_TryDestroyOriginalMesh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'DBP_DestructibleAsset_C_TryDestroyOriginalMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.TrySetupRenderTarget
// 0x0020 (0x0020 - 0x0000)
struct DBP_DestructibleAsset_C_TrySetupRenderTarget final
{
public:
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6429[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_TrySetupRenderTarget) == 0x000008, "Wrong alignment on DBP_DestructibleAsset_C_TrySetupRenderTarget");
static_assert(sizeof(DBP_DestructibleAsset_C_TrySetupRenderTarget) == 0x000020, "Wrong size on DBP_DestructibleAsset_C_TrySetupRenderTarget");
static_assert(offsetof(DBP_DestructibleAsset_C_TrySetupRenderTarget, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000000, "Member 'DBP_DestructibleAsset_C_TrySetupRenderTarget::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_TrySetupRenderTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'DBP_DestructibleAsset_C_TrySetupRenderTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_TrySetupRenderTarget, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'DBP_DestructibleAsset_C_TrySetupRenderTarget::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_TrySetupRenderTarget, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'DBP_DestructibleAsset_C_TrySetupRenderTarget::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.UpdateDamage
// 0x0258 (0x0258 - 0x0000)
struct DBP_DestructibleAsset_C_UpdateDamage final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactPoint;                                       // 0x00F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUV_UV;                       // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_642A[0x1];                                     // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_642B[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_642C[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_Array_Random_OutItem;                     // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_642D[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_UpdateDamage) == 0x000008, "Wrong alignment on DBP_DestructibleAsset_C_UpdateDamage");
static_assert(sizeof(DBP_DestructibleAsset_C_UpdateDamage) == 0x000258, "Wrong size on DBP_DestructibleAsset_C_UpdateDamage");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, Hit) == 0x000000, "Member 'DBP_DestructibleAsset_C_UpdateDamage::Hit' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, ImpactPoint) == 0x0000F8, "Member 'DBP_DestructibleAsset_C_UpdateDamage::ImpactPoint' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_FindCollisionUV_UV) == 0x000110, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_FindCollisionUV_UV' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_FindCollisionUV_ReturnValue) == 0x000120, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_FindCollisionUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x000121, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x000122, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_Time) == 0x000124, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_Distance) == 0x000128, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_Location) == 0x000130, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x000148, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_Normal) == 0x000160, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x000178, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_BoneName) == 0x0001B0, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_ElementIndex) == 0x0001BC, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_FaceIndex) == 0x0001C0, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_TraceStart) == 0x0001C8, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_BreakHitResult_TraceEnd) == 0x0001E0, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x0001F8, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000210, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000220, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000228, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_Array_Random_OutItem) == 0x000230, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_Array_Random_OutIndex) == 0x000238, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_RandomFloatInRange_ReturnValue) == 0x000240, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000248, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000250, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_UpdateDamage, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000254, "Member 'DBP_DestructibleAsset_C_UpdateDamage::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct DBP_DestructibleAsset_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_UserConstructionScript) == 0x000001, "Wrong alignment on DBP_DestructibleAsset_C_UserConstructionScript");
static_assert(sizeof(DBP_DestructibleAsset_C_UserConstructionScript) == 0x000001, "Wrong size on DBP_DestructibleAsset_C_UserConstructionScript");
static_assert(offsetof(DBP_DestructibleAsset_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'DBP_DestructibleAsset_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.CanAttachTo
// 0x0010 (0x0010 - 0x0000)
struct DBP_DestructibleAsset_C_CanAttachTo final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_CanAttachTo) == 0x000008, "Wrong alignment on DBP_DestructibleAsset_C_CanAttachTo");
static_assert(sizeof(DBP_DestructibleAsset_C_CanAttachTo) == 0x000010, "Wrong size on DBP_DestructibleAsset_C_CanAttachTo");
static_assert(offsetof(DBP_DestructibleAsset_C_CanAttachTo, Actor) == 0x000000, "Member 'DBP_DestructibleAsset_C_CanAttachTo::Actor' has a wrong offset!");
static_assert(offsetof(DBP_DestructibleAsset_C_CanAttachTo, ReturnValue) == 0x000008, "Member 'DBP_DestructibleAsset_C_CanAttachTo::ReturnValue' has a wrong offset!");

// Function DBP_DestructibleAsset.DBP_DestructibleAsset_C.IsValidAttachment
// 0x0001 (0x0001 - 0x0000)
struct DBP_DestructibleAsset_C_IsValidAttachment final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_DestructibleAsset_C_IsValidAttachment) == 0x000001, "Wrong alignment on DBP_DestructibleAsset_C_IsValidAttachment");
static_assert(sizeof(DBP_DestructibleAsset_C_IsValidAttachment) == 0x000001, "Wrong size on DBP_DestructibleAsset_C_IsValidAttachment");
static_assert(offsetof(DBP_DestructibleAsset_C_IsValidAttachment, ReturnValue) == 0x000000, "Member 'DBP_DestructibleAsset_C_IsValidAttachment::ReturnValue' has a wrong offset!");

}

