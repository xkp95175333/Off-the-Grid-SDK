#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_DefaultArm_R

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ControlRig_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_DefaultArm_R.ABP_DefaultArm_R_C
// 0x0680 (0x09F0 - 0x0370)
class UABP_DefaultArm_R_C final : public UAnimInstance
{
public:
	uint8                                         Pad_5827[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x03A8(0x0158)(ContainsInstancedReference)
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0500(0x04D0)(ContainsInstancedReference)
	TArray<int32>                                 LOD_count;                                         // 0x09D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 Mat_count;                                         // 0x09E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintInitializeAnimation();
	void ExecuteUbergraph_ABP_DefaultArm_R(int32 EntryPoint);
	void UnHideMaterialSlots(TArray<int32>& LODs, TArray<int32>& Materials);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_DefaultArm_R_C">();
	}
	static class UABP_DefaultArm_R_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_DefaultArm_R_C>();
	}
};
static_assert(alignof(UABP_DefaultArm_R_C) == 0x000010, "Wrong alignment on UABP_DefaultArm_R_C");
static_assert(sizeof(UABP_DefaultArm_R_C) == 0x0009F0, "Wrong size on UABP_DefaultArm_R_C");
static_assert(offsetof(UABP_DefaultArm_R_C, UberGraphFrame) == 0x000370, "Member 'UABP_DefaultArm_R_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_DefaultArm_R_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_DefaultArm_R_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_DefaultArm_R_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_DefaultArm_R_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_DefaultArm_R_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_DefaultArm_R_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_DefaultArm_R_C, AnimGraphNode_CopyPoseFromMesh) == 0x0003A8, "Member 'UABP_DefaultArm_R_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UABP_DefaultArm_R_C, AnimGraphNode_ControlRig) == 0x000500, "Member 'UABP_DefaultArm_R_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_DefaultArm_R_C, LOD_count) == 0x0009D0, "Member 'UABP_DefaultArm_R_C::LOD_count' has a wrong offset!");
static_assert(offsetof(UABP_DefaultArm_R_C, Mat_count) == 0x0009E0, "Member 'UABP_DefaultArm_R_C::Mat_count' has a wrong offset!");

}

