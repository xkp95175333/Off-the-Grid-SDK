#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SmashDownLegs

#include "Basic.hpp"

#include "ABP_SmashDownLegs_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_SmashDownLegs.ABP_SmashDownLegs_C
// 0x1170 (0x1A20 - 0x08B0)
class UABP_SmashDownLegs_C final : public UGzAbilityAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_SmashDownLegs::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x08B8(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x08C0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x08C8(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_21;                             // 0x08D0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_20;                             // 0x08F0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_19;                             // 0x0910(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_18;                             // 0x0930(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_17;                             // 0x0950(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0970(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_16;                             // 0x0A28(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_15;                             // 0x0A48(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_14;                             // 0x0A68(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_13;                             // 0x0A88(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_12;                             // 0x0AA8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_11;                             // 0x0AC8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x0AE8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x0B08(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x0B28(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x0B48(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0B68(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x0C20(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x0C40(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0C60(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0C80(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0CA0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0CC0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0CE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0D08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0D30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0D58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0D80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0DA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0DD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0DF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0E20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0E48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0E70(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0E98(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0EE0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0F00(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0F48(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0F68(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0FB0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0FD0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1018(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1038(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1128(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1170(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x11B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x11D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1220(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1240(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1268(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x12B0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1378(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x13C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x13E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1428(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1448(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1490(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x14B0(0x00C8)()
	uint8                                         Pad_6F4C[0x8];                                     // 0x1578(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x1580(0x0440)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x19C0(0x0020)()
	float                                         K2Node_PropertyAccess_7;                           // 0x19E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_6;                           // 0x19E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_5;                           // 0x19E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_4;                           // 0x19E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_3;                           // 0x19E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_2;                           // 0x19E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4D[0x7];                                     // 0x19E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_PropertyAccess_1;                           // 0x19F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          K2Node_PropertyAccess;                             // 0x19F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  MultiPartCharacterOwner;                           // 0x1A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OwnerMesh;                                         // 0x1A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   Tag_Container_Gameplay_Tags;                       // 0x1A10(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Aiming_Correction(const struct FPoseLink& Aim_pose, struct FPoseLink* Param_Aiming_Correction);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void DamagedBody_CycleState(struct FPoseLink* Param_DamagedBody_CycleState);
	void DamagedBody_EnterState(struct FPoseLink* Param_DamagedBody_EnterState);
	void DamagedBody_ExitState(struct FPoseLink* Param_DamagedBody_ExitState);
	void DamagedBody_IdleState(struct FPoseLink* Param_DamagedBody_IdleState);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SmashDownLegs_AnimGraphNode_SequencePlayer_D985842449A1E14151FAD7B15C74534A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SmashDownLegs_AnimGraphNode_TransitionResult_18D7D65348E7D4E45D9E7DAC6FBA8CD7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SmashDownLegs_AnimGraphNode_TransitionResult_27F1B9EC48DE6D2EECBB2DB77FFE667F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SmashDownLegs_AnimGraphNode_TransitionResult_2DCBBF78467769BB0FC44A8E8B1B3D19();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SmashDownLegs_AnimGraphNode_TransitionResult_52D03ECA4519337F3110459F4CE06BD0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SmashDownLegs_AnimGraphNode_TransitionResult_6C3D05384B998FC4674991B2E876D1ED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SmashDownLegs_AnimGraphNode_TransitionResult_89022C2E4048A3F123D8DAACB6EA4BF0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SmashDownLegs_AnimGraphNode_TransitionResult_9B3458854C47D6A3C76C758EFF14DF45();
	void ExecuteUbergraph_ABP_SmashDownLegs(int32 EntryPoint);
	void FullBody_Aiming(const struct FPoseLink& PreAimPose, double AimYaw, double AimPitch, struct FPoseLink* Param_FullBody_Aiming);
	void FullBody_AnimAbility(struct FPoseLink* Param_FullBody_AnimAbility);
	void FullBody_CycleState(struct FPoseLink* Param_FullBody_CycleState);
	void FullBody_FallLandState(struct FPoseLink* Param_FullBody_FallLandState);
	void FullBody_FallLoopState(struct FPoseLink* Param_FullBody_FallLoopState);
	void FullBody_IdleState(struct FPoseLink* Param_FullBody_IdleState);
	void FullBody_JumpApexState(struct FPoseLink* Param_FullBody_JumpApexState);
	void FullBody_JumpStartLoopState(struct FPoseLink* Param_FullBody_JumpStartLoopState);
	void FullBody_JumpStartState(struct FPoseLink* Param_FullBody_JumpStartState);
	void FullBody_PivotState(struct FPoseLink* Param_FullBody_PivotState);
	void FullBody_SkeletalControls(const struct FPoseLink& InPose, struct FPoseLink* Param_FullBody_SkeletalControls);
	void FullBody_StartState(struct FPoseLink* Param_FullBody_StartState);
	void FullBody_StopState(struct FPoseLink* Param_FullBody_StopState);
	void FullBodyAdditives(struct FPoseLink* Param_FullBodyAdditives);
	void KneeSlide_State(struct FPoseLink* Param_KneeSlide_State);
	void LeftHandPose_OverrideState(const struct FPoseLink& InputPose, struct FPoseLink* Param_LeftHandPose_OverrideState);
	void Limbless_State(struct FPoseLink* Param_Limbless_State);
	void NPC_CoverState(struct FPoseLink* Param_NPC_CoverState);
	class UABP_Human_C* SPX_GetBaseAnimBP();
	class ACharacter* SPX_GetCharacter();
	void UpdateAnimState(TArray<struct FGameplayTag>* Param_Tag_Container_Gameplay_Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_SmashDownLegs_C">();
	}
	static class UABP_SmashDownLegs_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_SmashDownLegs_C>();
	}
};
static_assert(alignof(UABP_SmashDownLegs_C) == 0x000010, "Wrong alignment on UABP_SmashDownLegs_C");
static_assert(sizeof(UABP_SmashDownLegs_C) == 0x001A20, "Wrong size on UABP_SmashDownLegs_C");
static_assert(offsetof(UABP_SmashDownLegs_C, UberGraphFrame) == 0x0008B0, "Member 'UABP_SmashDownLegs_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, __AnimBlueprintMutables) == 0x0008B8, "Member 'UABP_SmashDownLegs_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimBlueprintExtension_PropertyAccess) == 0x0008C0, "Member 'UABP_SmashDownLegs_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimBlueprintExtension_Base) == 0x0008C8, "Member 'UABP_SmashDownLegs_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_21) == 0x0008D0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_21' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_20) == 0x0008F0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_20' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_19) == 0x000910, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_19' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_18) == 0x000930, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_18' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_17) == 0x000950, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_17' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_LinkedInputPose_1) == 0x000970, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_16) == 0x000A28, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_16' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_15) == 0x000A48, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_15' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_14) == 0x000A68, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_14' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_13) == 0x000A88, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_13' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_12) == 0x000AA8, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_12' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_11) == 0x000AC8, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_11' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_10) == 0x000AE8, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_9) == 0x000B08, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_8) == 0x000B28, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_7) == 0x000B48, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_LinkedInputPose) == 0x000B68, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_6) == 0x000C20, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_5) == 0x000C40, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_4) == 0x000C60, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_3) == 0x000C80, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_2) == 0x000CA0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root_1) == 0x000CC0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_11) == 0x000CE0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_10) == 0x000D08, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_9) == 0x000D30, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_8) == 0x000D58, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_7) == 0x000D80, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_6) == 0x000DA8, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_5) == 0x000DD0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_4) == 0x000DF8, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_3) == 0x000E20, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_2) == 0x000E48, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult_1) == 0x000E70, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_10) == 0x000E98, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateResult_8) == 0x000EE0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_9) == 0x000F00, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateResult_7) == 0x000F48, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_8) == 0x000F68, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateResult_6) == 0x000FB0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_7) == 0x000FD0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateResult_5) == 0x001018, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_LayeredBoneBlend) == 0x001038, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_6) == 0x001128, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_5) == 0x001170, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateResult_4) == 0x0011B8, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_4) == 0x0011D8, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateResult_3) == 0x001220, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_TransitionResult) == 0x001240, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_3) == 0x001268, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_ApplyAdditive) == 0x0012B0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_2) == 0x001378, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateResult_2) == 0x0013C0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer_1) == 0x0013E0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateResult_1) == 0x001428, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_SequencePlayer) == 0x001448, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateResult) == 0x001490, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_StateMachine) == 0x0014B0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Inertialization) == 0x001580, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, AnimGraphNode_Root) == 0x0019C0, "Member 'UABP_SmashDownLegs_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, K2Node_PropertyAccess_7) == 0x0019E0, "Member 'UABP_SmashDownLegs_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, K2Node_PropertyAccess_6) == 0x0019E4, "Member 'UABP_SmashDownLegs_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, K2Node_PropertyAccess_5) == 0x0019E5, "Member 'UABP_SmashDownLegs_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, K2Node_PropertyAccess_4) == 0x0019E6, "Member 'UABP_SmashDownLegs_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, K2Node_PropertyAccess_3) == 0x0019E7, "Member 'UABP_SmashDownLegs_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, K2Node_PropertyAccess_2) == 0x0019E8, "Member 'UABP_SmashDownLegs_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, K2Node_PropertyAccess_1) == 0x0019F0, "Member 'UABP_SmashDownLegs_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, K2Node_PropertyAccess) == 0x0019F8, "Member 'UABP_SmashDownLegs_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, MultiPartCharacterOwner) == 0x001A00, "Member 'UABP_SmashDownLegs_C::MultiPartCharacterOwner' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, OwnerMesh) == 0x001A08, "Member 'UABP_SmashDownLegs_C::OwnerMesh' has a wrong offset!");
static_assert(offsetof(UABP_SmashDownLegs_C, Tag_Container_Gameplay_Tags) == 0x001A10, "Member 'UABP_SmashDownLegs_C::Tag_Container_Gameplay_Tags' has a wrong offset!");

}

