#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaLogin

#include "Basic.hpp"

#include "XsollaLogin_classes.hpp"
#include "XsollaLogin_parameters.hpp"


namespace SDK
{

// Function XsollaLogin.XsollaLoginBrowserWrapper.ExecuteBrowserClosed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAuthenticationCompleted                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginBrowserWrapper::ExecuteBrowserClosed(bool bAuthenticationCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginBrowserWrapper", "ExecuteBrowserClosed");

	Params::XsollaLoginBrowserWrapper_ExecuteBrowserClosed Parms{};

	Parms.bAuthenticationCompleted = bAuthenticationCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginBrowserWrapper.LoadUrl
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginBrowserWrapper::LoadUrl(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginBrowserWrapper", "LoadUrl");

	Params::XsollaLoginBrowserWrapper_LoadUrl Parms{};

	Parms.URL = std::move(URL);

	UObject::ProcessEvent(Func, &Parms);
}


// Function XsollaLogin.XsollaLoginLibrary.ConvertTextureToByteArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UXsollaLoginLibrary::ConvertTextureToByteArray(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "ConvertTextureToByteArray");

	Params::XsollaLoginLibrary_ConvertTextureToByteArray Parms{};

	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaLogin.XsollaLoginLibrary.GetAppId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UXsollaLoginLibrary::GetAppId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "GetAppId");

	Params::XsollaLoginLibrary_GetAppId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaLogin.XsollaLoginLibrary.GetDeviceId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UXsollaLoginLibrary::GetDeviceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "GetDeviceId");

	Params::XsollaLoginLibrary_GetDeviceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaLogin.XsollaLoginLibrary.GetDeviceName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UXsollaLoginLibrary::GetDeviceName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "GetDeviceName");

	Params::XsollaLoginLibrary_GetDeviceName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaLogin.XsollaLoginLibrary.GetSessionTicket
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UXsollaLoginLibrary::GetSessionTicket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "GetSessionTicket");

	Params::XsollaLoginLibrary_GetSessionTicket Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaLogin.XsollaLoginLibrary.GetStringCommandLineParam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ParamName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UXsollaLoginLibrary::GetStringCommandLineParam(const class FString& ParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "GetStringCommandLineParam");

	Params::XsollaLoginLibrary_GetStringCommandLineParam Parms{};

	Parms.ParamName = std::move(ParamName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaLogin.XsollaLoginLibrary.GetUrlParameter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Parameter                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UXsollaLoginLibrary::GetUrlParameter(const class FString& URL, const class FString& Parameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "GetUrlParameter");

	Params::XsollaLoginLibrary_GetUrlParameter Parms{};

	Parms.URL = std::move(URL);
	Parms.Parameter = std::move(Parameter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaLogin.XsollaLoginLibrary.IsEmailValid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Email                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UXsollaLoginLibrary::IsEmailValid(const class FString& Email)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "IsEmailValid");

	Params::XsollaLoginLibrary_IsEmailValid Parms{};

	Parms.Email = std::move(Email);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function XsollaLogin.XsollaLoginLibrary.IsSteamBuildValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           OutError                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UXsollaLoginLibrary::IsSteamBuildValid(class FString* OutError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "IsSteamBuildValid");

	Params::XsollaLoginLibrary_IsSteamBuildValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = std::move(Parms.OutError);

	return Parms.ReturnValue;
}


// Function XsollaLogin.XsollaLoginLibrary.LaunchPlatfromBrowser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginLibrary::LaunchPlatfromBrowser(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("XsollaLoginLibrary", "LaunchPlatfromBrowser");

	Params::XsollaLoginLibrary_LaunchPlatfromBrowser Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.AuthenticateUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Username                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRememberMe                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::AuthenticateUser(const class FString& Username, const class FString& Password, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback, const bool bRememberMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "AuthenticateUser");

	Params::XsollaLoginSubsystem_AuthenticateUser Parms{};

	Parms.Username = std::move(Username);
	Parms.Password = std::move(Password);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;
	Parms.bRememberMe = bRememberMe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.AuthenticateViaDeviceId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           DeviceName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DeviceID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::AuthenticateViaDeviceId(const class FString& DeviceName, const class FString& DeviceID, const class FString& State, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "AuthenticateViaDeviceId");

	Params::XsollaLoginSubsystem_AuthenticateViaDeviceId Parms{};

	Parms.DeviceName = std::move(DeviceName);
	Parms.DeviceID = std::move(DeviceID);
	Parms.State = std::move(State);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.AuthenticateViaSocialNetwork
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ProviderName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       CancelCallback                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRememberMe                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::AuthenticateViaSocialNetwork(const class FString& ProviderName, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void()>& CancelCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback, const bool bRememberMe, const class FString& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "AuthenticateViaSocialNetwork");

	Params::XsollaLoginSubsystem_AuthenticateViaSocialNetwork Parms{};

	Parms.ProviderName = std::move(ProviderName);
	Parms.SuccessCallback = SuccessCallback;
	Parms.CancelCallback = CancelCallback;
	Parms.ErrorCallback = ErrorCallback;
	Parms.bRememberMe = bRememberMe;
	Parms.State = std::move(State);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.AuthenticateWithSessionTicket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ProviderName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SessionTicket                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Code                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AppId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::AuthenticateWithSessionTicket(const class FString& ProviderName, const class FString& SessionTicket, const class FString& Code, const class FString& AppId, const class FString& State, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "AuthenticateWithSessionTicket");

	Params::XsollaLoginSubsystem_AuthenticateWithSessionTicket Parms{};

	Parms.ProviderName = std::move(ProviderName);
	Parms.SessionTicket = std::move(SessionTicket);
	Parms.Code = std::move(Code);
	Parms.AppId = std::move(AppId);
	Parms.State = std::move(State);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.AuthViaAccessTokenOfSocialNetwork
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AuthTokenSecret                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OpenId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ProviderName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::AuthViaAccessTokenOfSocialNetwork(const class FString& AuthToken, const class FString& AuthTokenSecret, const class FString& OpenId, const class FString& ProviderName, const class FString& State, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "AuthViaAccessTokenOfSocialNetwork");

	Params::XsollaLoginSubsystem_AuthViaAccessTokenOfSocialNetwork Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.AuthTokenSecret = std::move(AuthTokenSecret);
	Parms.OpenId = std::move(OpenId);
	Parms.ProviderName = std::move(ProviderName);
	Parms.State = std::move(State);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.AuthWithXsollaWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UXsollaLoginBrowserWrapper*       BrowserWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       CancelCallback                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRememberMe                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::AuthWithXsollaWidget(class UObject* WorldContextObject, class UXsollaLoginBrowserWrapper** BrowserWidget, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void()>& CancelCallback, const bool bRememberMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "AuthWithXsollaWidget");

	Params::XsollaLoginSubsystem_AuthWithXsollaWidget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SuccessCallback = SuccessCallback;
	Parms.CancelCallback = CancelCallback;
	Parms.bRememberMe = bRememberMe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BrowserWidget != nullptr)
		*BrowserWidget = Parms.BrowserWidget;
}


// Function XsollaLogin.XsollaLoginSubsystem.CheckUserAge
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           DateOfBirth                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaCheckUserAgeResult& CheckUserAgeResult)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::CheckUserAge(const class FString& DateOfBirth, const TDelegate<void(struct FXsollaCheckUserAgeResult& CheckUserAgeResult)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "CheckUserAge");

	Params::XsollaLoginSubsystem_CheckUserAge Parms{};

	Parms.DateOfBirth = std::move(DateOfBirth);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.CompleteAuthByEmail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Code                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OperationId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Email                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::CompleteAuthByEmail(const class FString& Code, const class FString& OperationId, const class FString& Email, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "CompleteAuthByEmail");

	Params::XsollaLoginSubsystem_CompleteAuthByEmail Parms{};

	Parms.Code = std::move(Code);
	Parms.OperationId = std::move(OperationId);
	Parms.Email = std::move(Email);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.CompleteAuthByPhoneNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Code                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OperationId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PhoneNumber                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::CompleteAuthByPhoneNumber(const class FString& Code, const class FString& OperationId, const class FString& PhoneNumber, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "CompleteAuthByPhoneNumber");

	Params::XsollaLoginSubsystem_CompleteAuthByPhoneNumber Parms{};

	Parms.Code = std::move(Code);
	Parms.OperationId = std::move(OperationId);
	Parms.PhoneNumber = std::move(PhoneNumber);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.CreateAccountLinkingCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::CreateAccountLinkingCode(const class FString& AuthToken, const TDelegate<void(const class FString& Code)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "CreateAccountLinkingCode");

	Params::XsollaLoginSubsystem_CreateAccountLinkingCode Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.DropLoginData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ClearCache                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::DropLoginData(const bool ClearCache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "DropLoginData");

	Params::XsollaLoginSubsystem_DropLoginData Parms{};

	Parms.ClearCache = ClearCache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.ExchangeAuthenticationCodeToToken
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthenticationCode                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::ExchangeAuthenticationCodeToToken(const class FString& AuthenticationCode, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "ExchangeAuthenticationCodeToToken");

	Params::XsollaLoginSubsystem_ExchangeAuthenticationCodeToToken Parms{};

	Parms.AuthenticationCode = std::move(AuthenticationCode);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetAuthConfirmationCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OperationId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& OperationId)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& OperationId)>TimeoutCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetAuthConfirmationCode(const class FString& UserId, const class FString& OperationId, const TDelegate<void(const class FString& Code, const class FString& OperationId)>& SuccessCallback, const TDelegate<void(const class FString& OperationId)>& TimeoutCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetAuthConfirmationCode");

	Params::XsollaLoginSubsystem_GetAuthConfirmationCode Parms{};

	Parms.UserId = std::move(UserId);
	Parms.OperationId = std::move(OperationId);
	Parms.SuccessCallback = SuccessCallback;
	Parms.TimeoutCallback = TimeoutCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetFriends
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EXsollaFriendsType                      Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EXsollaUsersSortCriteria                SortBy                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EXsollaUsersSortOrder                   SortOrder                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaFriendsData& FriendsData, EXsollaFriendsType Type)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           After                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Limit                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetFriends(const class FString& AuthToken, const EXsollaFriendsType Type, const EXsollaUsersSortCriteria SortBy, const EXsollaUsersSortOrder SortOrder, const TDelegate<void(struct FXsollaFriendsData& FriendsData, EXsollaFriendsType Type)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback, const class FString& After, const int32 Limit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetFriends");

	Params::XsollaLoginSubsystem_GetFriends Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.Type = Type;
	Parms.SortBy = SortBy;
	Parms.SortOrder = SortOrder;
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;
	Parms.After = std::move(After);
	Parms.Limit = Limit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetLinkedSocialNetworks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<struct FXsollaLinkedSocialNetworkData>& LinkedSocialNetworks)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetLinkedSocialNetworks(const class FString& AuthToken, const TDelegate<void(TArray<struct FXsollaLinkedSocialNetworkData>& LinkedSocialNetworks)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetLinkedSocialNetworks");

	Params::XsollaLoginSubsystem_GetLinkedSocialNetworks Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetSocialAuthenticationUrl
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ProviderName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& URL)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetSocialAuthenticationUrl(const class FString& ProviderName, const class FString& State, const TDelegate<void(const class FString& URL)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetSocialAuthenticationUrl");

	Params::XsollaLoginSubsystem_GetSocialAuthenticationUrl Parms{};

	Parms.ProviderName = std::move(ProviderName);
	Parms.State = std::move(State);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetSocialAuthLinks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Locale                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<struct FXsollaSocialAuthLink>& Links)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetSocialAuthLinks(const class FString& AuthToken, const class FString& Locale, const TDelegate<void(TArray<struct FXsollaSocialAuthLink>& Links)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetSocialAuthLinks");

	Params::XsollaLoginSubsystem_GetSocialAuthLinks Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.Locale = std::move(Locale);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetSocialFriends
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Platform                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaSocialFriendsData& SocialFriendsData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Offset                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Limit                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromThisGame                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetSocialFriends(const class FString& AuthToken, const class FString& Platform, const TDelegate<void(struct FXsollaSocialFriendsData& SocialFriendsData)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback, const int32 Offset, const int32 Limit, const bool FromThisGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetSocialFriends");

	Params::XsollaLoginSubsystem_GetSocialFriends Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.Platform = std::move(Platform);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;
	Parms.Offset = Offset;
	Parms.Limit = Limit;
	Parms.FromThisGame = FromThisGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetUserAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   AttributeKeys                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<struct FXsollaUserAttribute>& UserAttributes)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetUserAttributes(const class FString& AuthToken, const class FString& UserId, const TArray<class FString>& AttributeKeys, const TDelegate<void(TArray<struct FXsollaUserAttribute>& UserAttributes)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetUserAttributes");

	Params::XsollaLoginSubsystem_GetUserAttributes Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.UserId = std::move(UserId);
	Parms.AttributeKeys = std::move(AttributeKeys);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetUserDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaUserDetails& UserDetails)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetUserDetails(const class FString& AuthToken, const TDelegate<void(struct FXsollaUserDetails& UserDetails)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetUserDetails");

	Params::XsollaLoginSubsystem_GetUserDetails Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetUserEmail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Param)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetUserEmail(const class FString& AuthToken, const TDelegate<void(const class FString& Param)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetUserEmail");

	Params::XsollaLoginSubsystem_GetUserEmail Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetUserPhoneNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Param)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetUserPhoneNumber(const class FString& AuthToken, const TDelegate<void(const class FString& Param)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetUserPhoneNumber");

	Params::XsollaLoginSubsystem_GetUserPhoneNumber Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetUserProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaPublicProfile& UserProfile)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetUserProfile(const class FString& AuthToken, const class FString& UserId, const TDelegate<void(struct FXsollaPublicProfile& UserProfile)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetUserProfile");

	Params::XsollaLoginSubsystem_GetUserProfile Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.UserId = std::move(UserId);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetUserReadOnlyAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   AttributeKeys                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<struct FXsollaUserAttribute>& UserAttributes)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetUserReadOnlyAttributes(const class FString& AuthToken, const class FString& UserId, const TArray<class FString>& AttributeKeys, const TDelegate<void(TArray<struct FXsollaUserAttribute>& UserAttributes)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetUserReadOnlyAttributes");

	Params::XsollaLoginSubsystem_GetUserReadOnlyAttributes Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.UserId = std::move(UserId);
	Parms.AttributeKeys = std::move(AttributeKeys);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetUsersDevices
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<struct FXsollaUserDevice>& UserDevices)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetUsersDevices(const class FString& AuthToken, const TDelegate<void(TArray<struct FXsollaUserDevice>& UserDevices)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetUsersDevices");

	Params::XsollaLoginSubsystem_GetUsersDevices Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetUsersFriends
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Platform                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::GetUsersFriends(const class FString& AuthToken, const class FString& Platform, const TDelegate<void(const class FString& Code)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetUsersFriends");

	Params::XsollaLoginSubsystem_GetUsersFriends Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.Platform = std::move(Platform);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InProjectId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InLoginId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InClientId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::Initialize(const class FString& InProjectId, const class FString& InLoginId, const class FString& InClientId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "Initialize");

	Params::XsollaLoginSubsystem_Initialize Parms{};

	Parms.InProjectId = std::move(InProjectId);
	Parms.InLoginId = std::move(InLoginId);
	Parms.InClientId = std::move(InClientId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.LaunchNativeSocialAuthentication
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ProviderName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       CancelCallback                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRememberMe                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::LaunchNativeSocialAuthentication(const class FString& ProviderName, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void()>& CancelCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback, const bool bRememberMe, const class FString& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "LaunchNativeSocialAuthentication");

	Params::XsollaLoginSubsystem_LaunchNativeSocialAuthentication Parms{};

	Parms.ProviderName = std::move(ProviderName);
	Parms.SuccessCallback = SuccessCallback;
	Parms.CancelCallback = CancelCallback;
	Parms.ErrorCallback = ErrorCallback;
	Parms.bRememberMe = bRememberMe;
	Parms.State = std::move(State);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.LaunchSocialAuthentication
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      BrowserWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRememberMe                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::LaunchSocialAuthentication(class UObject* WorldContextObject, class UUserWidget** BrowserWidget, const bool bRememberMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "LaunchSocialAuthentication");

	Params::XsollaLoginSubsystem_LaunchSocialAuthentication Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bRememberMe = bRememberMe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BrowserWidget != nullptr)
		*BrowserWidget = Parms.BrowserWidget;
}


// Function XsollaLogin.XsollaLoginSubsystem.LinkDeviceToAccount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlatformName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DeviceName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DeviceID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::LinkDeviceToAccount(const class FString& AuthToken, const class FString& PlatformName, const class FString& DeviceName, const class FString& DeviceID, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "LinkDeviceToAccount");

	Params::XsollaLoginSubsystem_LinkDeviceToAccount Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.PlatformName = std::move(PlatformName);
	Parms.DeviceName = std::move(DeviceName);
	Parms.DeviceID = std::move(DeviceID);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.LinkEmailAndPassword
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Email                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReceiveNewsConsent                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Username                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bNeedToConfirmEmail)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::LinkEmailAndPassword(const class FString& AuthToken, const class FString& Email, const class FString& Password, const bool ReceiveNewsConsent, const class FString& Username, const TDelegate<void(bool bNeedToConfirmEmail)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "LinkEmailAndPassword");

	Params::XsollaLoginSubsystem_LinkEmailAndPassword Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.Email = std::move(Email);
	Parms.Password = std::move(Password);
	Parms.ReceiveNewsConsent = ReceiveNewsConsent;
	Parms.Username = std::move(Username);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.LinkSocialNetworkToUserAccount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ProviderName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Content)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::LinkSocialNetworkToUserAccount(const class FString& AuthToken, const class FString& ProviderName, const TDelegate<void(const class FString& Content)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "LinkSocialNetworkToUserAccount");

	Params::XsollaLoginSubsystem_LinkSocialNetworkToUserAccount Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.ProviderName = std::move(ProviderName);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.LogoutUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EXsollaSessionType                      Sessions                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::LogoutUser(const class FString& AuthToken, const EXsollaSessionType Sessions, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "LogoutUser");

	Params::XsollaLoginSubsystem_LogoutUser Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.Sessions = Sessions;
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.ModifyFriends
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EXsollaFriendAction                     Action                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::ModifyFriends(const class FString& AuthToken, const EXsollaFriendAction Action, const class FString& UserId, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "ModifyFriends");

	Params::XsollaLoginSubsystem_ModifyFriends Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.Action = Action;
	Parms.UserId = std::move(UserId);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.ModifyUserAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FXsollaUserAttribute>     AttributesToModify                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::ModifyUserAttributes(const class FString& AuthToken, const TArray<struct FXsollaUserAttribute>& AttributesToModify, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "ModifyUserAttributes");

	Params::XsollaLoginSubsystem_ModifyUserAttributes Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.AttributesToModify = std::move(AttributesToModify);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.ModifyUserDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           birthday                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FirstName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LastName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Gender                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Nickname                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaUserDetails& UserDetails)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::ModifyUserDetails(const class FString& AuthToken, const class FString& birthday, const class FString& FirstName, const class FString& LastName, const class FString& Gender, const class FString& Nickname, const TDelegate<void(struct FXsollaUserDetails& UserDetails)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "ModifyUserDetails");

	Params::XsollaLoginSubsystem_ModifyUserDetails Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.birthday = std::move(birthday);
	Parms.FirstName = std::move(FirstName);
	Parms.LastName = std::move(LastName);
	Parms.Gender = std::move(Gender);
	Parms.Nickname = std::move(Nickname);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.ModifyUserPhoneNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PhoneNumber                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Param)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::ModifyUserPhoneNumber(const class FString& AuthToken, const class FString& PhoneNumber, const TDelegate<void(const class FString& Param)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "ModifyUserPhoneNumber");

	Params::XsollaLoginSubsystem_ModifyUserPhoneNumber Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.PhoneNumber = std::move(PhoneNumber);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.ModifyUserProfilePicture
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Picture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Param)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::ModifyUserProfilePicture(const class FString& AuthToken, const class UTexture2D* Picture, const TDelegate<void(const class FString& Param)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "ModifyUserProfilePicture");

	Params::XsollaLoginSubsystem_ModifyUserProfilePicture Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.Picture = Picture;
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.RefreshToken
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Param_RefreshToken                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::RefreshToken(const class FString& Param_RefreshToken, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "RefreshToken");

	Params::XsollaLoginSubsystem_RefreshToken Parms{};

	Parms.Param_RefreshToken = std::move(Param_RefreshToken);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.RegisterUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Username                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Email                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Locale                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    PersonalDataProcessingConsent                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReceiveNewsConsent                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>      AdditionalFields                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::RegisterUser(const class FString& Username, const class FString& Password, const class FString& Email, const class FString& State, const class FString& Locale, const bool PersonalDataProcessingConsent, const bool ReceiveNewsConsent, const TMap<class FString, class FString>& AdditionalFields, const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "RegisterUser");

	Params::XsollaLoginSubsystem_RegisterUser Parms{};

	Parms.Username = std::move(Username);
	Parms.Password = std::move(Password);
	Parms.Email = std::move(Email);
	Parms.State = std::move(State);
	Parms.Locale = std::move(Locale);
	Parms.PersonalDataProcessingConsent = PersonalDataProcessingConsent;
	Parms.ReceiveNewsConsent = ReceiveNewsConsent;
	Parms.AdditionalFields = std::move(AdditionalFields);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.RemoveProfilePicture
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::RemoveProfilePicture(const class FString& AuthToken, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "RemoveProfilePicture");

	Params::XsollaLoginSubsystem_RemoveProfilePicture Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.RemoveUserAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   AttributesToRemove                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::RemoveUserAttributes(const class FString& AuthToken, const TArray<class FString>& AttributesToRemove, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "RemoveUserAttributes");

	Params::XsollaLoginSubsystem_RemoveUserAttributes Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.AttributesToRemove = std::move(AttributesToRemove);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.RemoveUserPhoneNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PhoneNumber                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::RemoveUserPhoneNumber(const class FString& AuthToken, const class FString& PhoneNumber, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "RemoveUserPhoneNumber");

	Params::XsollaLoginSubsystem_RemoveUserPhoneNumber Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.PhoneNumber = std::move(PhoneNumber);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.ResendAccountConfirmationEmail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Username                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Locale                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::ResendAccountConfirmationEmail(const class FString& Username, const class FString& State, const class FString& Locale, const TDelegate<void()>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "ResendAccountConfirmationEmail");

	Params::XsollaLoginSubsystem_ResendAccountConfirmationEmail Parms{};

	Parms.Username = std::move(Username);
	Parms.State = std::move(State);
	Parms.Locale = std::move(Locale);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.ResetUserPassword
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           User                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Locale                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::ResetUserPassword(const class FString& User, const class FString& Locale, const TDelegate<void()>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "ResetUserPassword");

	Params::XsollaLoginSubsystem_ResetUserPassword Parms{};

	Parms.User = std::move(User);
	Parms.Locale = std::move(Locale);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.SearchUsersByNickname
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Nickname                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FXsollaUserSearchResult& SearchResult)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Offset                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Limit                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::SearchUsersByNickname(const class FString& AuthToken, const class FString& Nickname, const TDelegate<void(struct FXsollaUserSearchResult& SearchResult)>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback, const int32 Offset, const int32 Limit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "SearchUsersByNickname");

	Params::XsollaLoginSubsystem_SearchUsersByNickname Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.Nickname = std::move(Nickname);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;
	Parms.Offset = Offset;
	Parms.Limit = Limit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.SetLoginData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FXsollaLoginData                 Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ClearCache                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::SetLoginData(const struct FXsollaLoginData& Data, const bool ClearCache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "SetLoginData");

	Params::XsollaLoginSubsystem_SetLoginData Parms{};

	Parms.Data = std::move(Data);
	Parms.ClearCache = ClearCache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.SetToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Token                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::SetToken(const class FString& Token)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "SetToken");

	Params::XsollaLoginSubsystem_SetToken Parms{};

	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.SocialAuthUrlReceivedCallback
// (Final, Native, Protected)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::SocialAuthUrlReceivedCallback(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "SocialAuthUrlReceivedCallback");

	Params::XsollaLoginSubsystem_SocialAuthUrlReceivedCallback Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.StartAuthByEmail
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Email                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& OperationId)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::StartAuthByEmail(const class FString& Email, const class FString& State, const TDelegate<void(const class FString& OperationId)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "StartAuthByEmail");

	Params::XsollaLoginSubsystem_StartAuthByEmail Parms{};

	Parms.Email = std::move(Email);
	Parms.State = std::move(State);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.StartAuthByPhoneNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PhoneNumber                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& OperationId)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::StartAuthByPhoneNumber(const class FString& PhoneNumber, const class FString& State, const TDelegate<void(const class FString& OperationId)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "StartAuthByPhoneNumber");

	Params::XsollaLoginSubsystem_StartAuthByPhoneNumber Parms{};

	Parms.PhoneNumber = std::move(PhoneNumber);
	Parms.State = std::move(State);
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.UnlinkDeviceFromAccount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   DeviceID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::UnlinkDeviceFromAccount(const class FString& AuthToken, const int64 DeviceID, const TDelegate<void()>& SuccessCallback, const TDelegate<void(int32 StatusCode, int32 ErrorCode, const class FString& ErrorMessage)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "UnlinkDeviceFromAccount");

	Params::XsollaLoginSubsystem_UnlinkDeviceFromAccount Parms{};

	Parms.AuthToken = std::move(AuthToken);
	Parms.DeviceID = DeviceID;
	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.UpdateAuthTokenData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AccessToken                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ExpiresIn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           RefreshToken                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRememberMe                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::UpdateAuthTokenData(const class FString& AccessToken, int32 ExpiresIn, const class FString& RefreshToken, bool bRememberMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "UpdateAuthTokenData");

	Params::XsollaLoginSubsystem_UpdateAuthTokenData Parms{};

	Parms.AccessToken = std::move(AccessToken);
	Parms.ExpiresIn = ExpiresIn;
	Parms.RefreshToken = std::move(RefreshToken);
	Parms.bRememberMe = bRememberMe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.ValidateToken
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FXsollaLoginData& LoginData)>SuccessCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Code, const class FString& Description)>ErrorCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UXsollaLoginSubsystem::ValidateToken(const TDelegate<void(struct FXsollaLoginData& LoginData)>& SuccessCallback, const TDelegate<void(const class FString& Code, const class FString& Description)>& ErrorCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "ValidateToken");

	Params::XsollaLoginSubsystem_ValidateToken Parms{};

	Parms.SuccessCallback = SuccessCallback;
	Parms.ErrorCallback = ErrorCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function XsollaLogin.XsollaLoginSubsystem.GetLoginData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FXsollaLoginData                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FXsollaLoginData UXsollaLoginSubsystem::GetLoginData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("XsollaLoginSubsystem", "GetLoginData");

	Params::XsollaLoginSubsystem_GetLoginData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

