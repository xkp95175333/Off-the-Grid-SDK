#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HoldBreathProgress

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HoldBreathProgress.WBP_HoldBreathProgress_C
// 0x0098 (0x03A0 - 0x0308)
class UWBP_HoldBreathProgress_C final : public UGzProgressLogEntryWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                NearEndTimerBorder;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProgressImage;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ProgressOverlay;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           RemainingTimeText;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Crosshair_InputAction_C*           WBP_Crosshair_InputAction;                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstance*                      MaterialInstance;                                  // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialInstanceDynamic;                           // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimerUpdateRate;                                   // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E53[0x4];                                     // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CloseToEndTime;                                    // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateOnCloseToEnd;                                // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E54[0x3];                                     // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ProgressEndColor;                                  // 0x035C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E55[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           HoldBreathTimer;                                   // 0x0370(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentHoldTime;                                   // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     As_Gz_Player_Character;                            // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Hold_Breath_Max_Time;                              // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbility*                       WeaponAim;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Progress_UIHandle;                                 // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void EndHoldBreath();
	void ExecuteUbergraph_WBP_HoldBreathProgress(int32 EntryPoint);
	void GetCurrentPercent(double HoldBreathMaxTime, double Interval, double* CurrentPercentage, double* Param_CurrentHoldTime);
	void OnStaminaChanged(float CurrentStamina, float MaxStamina);
	void PreConstruct(bool IsDesignTime);
	void SetPlayerCharacter();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HoldBreathProgress_C">();
	}
	static class UWBP_HoldBreathProgress_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HoldBreathProgress_C>();
	}
};
static_assert(alignof(UWBP_HoldBreathProgress_C) == 0x000008, "Wrong alignment on UWBP_HoldBreathProgress_C");
static_assert(sizeof(UWBP_HoldBreathProgress_C) == 0x0003A0, "Wrong size on UWBP_HoldBreathProgress_C");
static_assert(offsetof(UWBP_HoldBreathProgress_C, UberGraphFrame) == 0x000308, "Member 'UWBP_HoldBreathProgress_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, NearEndTimerBorder) == 0x000310, "Member 'UWBP_HoldBreathProgress_C::NearEndTimerBorder' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, ProgressImage) == 0x000318, "Member 'UWBP_HoldBreathProgress_C::ProgressImage' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, ProgressOverlay) == 0x000320, "Member 'UWBP_HoldBreathProgress_C::ProgressOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, RemainingTimeText) == 0x000328, "Member 'UWBP_HoldBreathProgress_C::RemainingTimeText' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, WBP_Crosshair_InputAction) == 0x000330, "Member 'UWBP_HoldBreathProgress_C::WBP_Crosshair_InputAction' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, MaterialInstance) == 0x000338, "Member 'UWBP_HoldBreathProgress_C::MaterialInstance' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, MaterialInstanceDynamic) == 0x000340, "Member 'UWBP_HoldBreathProgress_C::MaterialInstanceDynamic' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, TimerUpdateRate) == 0x000348, "Member 'UWBP_HoldBreathProgress_C::TimerUpdateRate' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, CloseToEndTime) == 0x000350, "Member 'UWBP_HoldBreathProgress_C::CloseToEndTime' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, UpdateOnCloseToEnd) == 0x000358, "Member 'UWBP_HoldBreathProgress_C::UpdateOnCloseToEnd' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, ProgressEndColor) == 0x00035C, "Member 'UWBP_HoldBreathProgress_C::ProgressEndColor' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, HoldBreathTimer) == 0x000370, "Member 'UWBP_HoldBreathProgress_C::HoldBreathTimer' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, CurrentHoldTime) == 0x000378, "Member 'UWBP_HoldBreathProgress_C::CurrentHoldTime' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, As_Gz_Player_Character) == 0x000380, "Member 'UWBP_HoldBreathProgress_C::As_Gz_Player_Character' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, Hold_Breath_Max_Time) == 0x000388, "Member 'UWBP_HoldBreathProgress_C::Hold_Breath_Max_Time' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, WeaponAim) == 0x000390, "Member 'UWBP_HoldBreathProgress_C::WeaponAim' has a wrong offset!");
static_assert(offsetof(UWBP_HoldBreathProgress_C, Progress_UIHandle) == 0x000398, "Member 'UWBP_HoldBreathProgress_C::Progress_UIHandle' has a wrong offset!");

}

