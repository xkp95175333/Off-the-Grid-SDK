#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Barrier

#include "Basic.hpp"

#include "BP_Barrier_classes.hpp"
#include "BP_Barrier_parameters.hpp"


namespace SDK
{

// Function BP_Barrier.BP_Barrier_C.AssignOnPartDestroy
// (BlueprintCallable, BlueprintEvent)

void ABP_Barrier_C::AssignOnPartDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "AssignOnPartDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           InteractedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzInteractableComponent*         Interactable                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Barrier_C::BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature");

	Params::BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature Parms{};

	Parms.InteractedBy = InteractedBy;
	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Barrier.BP_Barrier_C.Cache Barrier Component
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Barrier_C::Cache_Barrier_Component()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "Cache Barrier Component");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.Close_Barrier
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Barrier_C::Close_Barrier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "Close_Barrier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.EndLaunchSequention
// (BlueprintCallable, BlueprintEvent)

void ABP_Barrier_C::EndLaunchSequention()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "EndLaunchSequention");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.ExecuteUbergraph_BP_Barrier
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Barrier_C::ExecuteUbergraph_BP_Barrier(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "ExecuteUbergraph_BP_Barrier");

	Params::BP_Barrier_C_ExecuteUbergraph_BP_Barrier Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Barrier.BP_Barrier_C.LaunchToTarget_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReverse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Barrier_C::LaunchToTarget_Event(bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "LaunchToTarget_Event");

	Params::BP_Barrier_C_LaunchToTarget_Event Parms{};

	Parms.bReverse = bReverse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Barrier.BP_Barrier_C.OnDestroyed_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Barrier_C::OnDestroyed_Event(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "OnDestroyed_Event");

	Params::BP_Barrier_C_OnDestroyed_Event Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Barrier.BP_Barrier_C.OnRep_BarrierReplicatedValues
// (BlueprintCallable, BlueprintEvent)

void ABP_Barrier_C::OnRep_BarrierReplicatedValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "OnRep_BarrierReplicatedValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Barrier_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.RestoreCharge
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Barrier_C::RestoreCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "RestoreCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.Set Parts
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Barrier_Part_C*               Part                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Barrier_C::Set_Parts(bool bRight, class ABP_Barrier_Part_C* Part)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "Set Parts");

	Params::BP_Barrier_C_Set_Parts Parms{};

	Parms.bRight = bRight;
	Parms.Part = Part;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Barrier.BP_Barrier_C.Setup Interactable Objects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Barrier_C::Setup_Interactable_Objects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "Setup Interactable Objects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.SetupInteractableObjectsWithDelay_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_Barrier_C::SetupInteractableObjectsWithDelay_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "SetupInteractableObjectsWithDelay_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.SpawnPart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Barrier_Part_C*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class ABP_Barrier_Part_C* ABP_Barrier_C::SpawnPart(bool bRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "SpawnPart");

	Params::BP_Barrier_C_SpawnPart Parms{};

	Parms.bRight = bRight;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Barrier.BP_Barrier_C.SpawnParts
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Barrier_C::SpawnParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "SpawnParts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.StartLaunch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Barrier_Replicated_Values_Target_Position              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Barrier_C::StartLaunch(const struct FVector& Barrier_Replicated_Values_Target_Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "StartLaunch");

	Params::BP_Barrier_C_StartLaunch Parms{};

	Parms.Barrier_Replicated_Values_Target_Position = std::move(Barrier_Replicated_Values_Target_Position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Barrier.BP_Barrier_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_Barrier_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_Barrier_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Barrier.BP_Barrier_C.UpdateLaunchSequence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reverce                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Barrier_C::UpdateLaunchSequence(float Location, bool Reverce, double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "UpdateLaunchSequence");

	Params::BP_Barrier_C_UpdateLaunchSequence Parms{};

	Parms.Location = Location;
	Parms.Reverce = Reverce;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Barrier.BP_Barrier_C.GetCurrentInteractionInfo
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AGzCharacter*                     InteractedBy                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FGzInteractionInfo>       InteractionInfoArray                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FGameplayTag                     OutInteractionTag                                      (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// struct FGzInteractionData               OutInteractionData                                     (Parm, OutParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Barrier_C::GetCurrentInteractionInfo(const class AGzCharacter* InteractedBy, const TArray<struct FGzInteractionInfo>& InteractionInfoArray, struct FGameplayTag* OutInteractionTag, struct FGzInteractionData* OutInteractionData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "GetCurrentInteractionInfo");

	Params::BP_Barrier_C_GetCurrentInteractionInfo Parms{};

	Parms.InteractedBy = InteractedBy;
	Parms.InteractionInfoArray = std::move(InteractionInfoArray);

	UObject::ProcessEvent(Func, &Parms);

	if (OutInteractionTag != nullptr)
		*OutInteractionTag = std::move(Parms.OutInteractionTag);

	if (OutInteractionData != nullptr)
		*OutInteractionData = std::move(Parms.OutInteractionData);

	return Parms.ReturnValue;
}


// Function BP_Barrier.BP_Barrier_C.IsPickeable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Pick                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Barrier_C::IsPickeable(bool* Pick) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Barrier_C", "IsPickeable");

	Params::BP_Barrier_C_IsPickeable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pick != nullptr)
		*Pick = Parms.Pick;
}

}

