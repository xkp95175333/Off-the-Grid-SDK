#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DamageIndicatorContainer

#include "Basic.hpp"

#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_DamageIndicatorContainer.WBP_DamageIndicatorContainer_C.AddIndicator
// 0x0008 (0x0008 - 0x0000)
struct WBP_DamageIndicatorContainer_C_AddIndicator final
{
public:
	class UGzDamageIndicator*                     NewIndicator;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DamageIndicatorContainer_C_AddIndicator) == 0x000008, "Wrong alignment on WBP_DamageIndicatorContainer_C_AddIndicator");
static_assert(sizeof(WBP_DamageIndicatorContainer_C_AddIndicator) == 0x000008, "Wrong size on WBP_DamageIndicatorContainer_C_AddIndicator");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_AddIndicator, NewIndicator) == 0x000000, "Member 'WBP_DamageIndicatorContainer_C_AddIndicator::NewIndicator' has a wrong offset!");

// Function WBP_DamageIndicatorContainer.WBP_DamageIndicatorContainer_C.ExecuteUbergraph_WBP_DamageIndicatorContainer
// 0x0020 (0x0020 - 0x0000)
struct WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzDamageIndicator*                     K2Node_Event_NewIndicator;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzDamageIndicator*                     K2Node_Event_DamageIndicator;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer) == 0x000008, "Wrong alignment on WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer");
static_assert(sizeof(WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer) == 0x000020, "Wrong size on WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer, EntryPoint) == 0x000000, "Member 'WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer, K2Node_Event_NewIndicator) == 0x000008, "Member 'WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer::K2Node_Event_NewIndicator' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer, CallFunc_AddChildToOverlay_ReturnValue) == 0x000010, "Member 'WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer, K2Node_Event_DamageIndicator) == 0x000018, "Member 'WBP_DamageIndicatorContainer_C_ExecuteUbergraph_WBP_DamageIndicatorContainer::K2Node_Event_DamageIndicator' has a wrong offset!");

// Function WBP_DamageIndicatorContainer.WBP_DamageIndicatorContainer_C.GetDamageIndicatorClass
// 0x0080 (0x0080 - 0x0000)
struct WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass final
{
public:
	struct FGzDamageDirectionData                 DamageData;                                        // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	TSubclassOf<class UGzDamageIndicator>         ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EGzDamageIndicatorType                        Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1D[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGzDamageIndicator>         Temp_class_Variable_3;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGzDamageIndicator>         Temp_class_Variable_4;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGzDamageIndicator>         K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass) == 0x000008, "Wrong alignment on WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass");
static_assert(sizeof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass) == 0x000080, "Wrong size on WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, DamageData) == 0x000000, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::DamageData' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, ReturnValue) == 0x000030, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, Temp_byte_Variable) == 0x000038, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, Temp_class_Variable) == 0x000040, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, Temp_class_Variable_1) == 0x000048, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, Temp_class_Variable_2) == 0x000050, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, Temp_bool_Variable) == 0x000058, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, Temp_class_Variable_3) == 0x000060, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, Temp_class_Variable_4) == 0x000068, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, K2Node_Select_Default) == 0x000070, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass, K2Node_Select_Default_1) == 0x000078, "Member 'WBP_DamageIndicatorContainer_C_GetDamageIndicatorClass::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_DamageIndicatorContainer.WBP_DamageIndicatorContainer_C.RemoveIndicator
// 0x0008 (0x0008 - 0x0000)
struct WBP_DamageIndicatorContainer_C_RemoveIndicator final
{
public:
	class UGzDamageIndicator*                     DamageIndicator;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DamageIndicatorContainer_C_RemoveIndicator) == 0x000008, "Wrong alignment on WBP_DamageIndicatorContainer_C_RemoveIndicator");
static_assert(sizeof(WBP_DamageIndicatorContainer_C_RemoveIndicator) == 0x000008, "Wrong size on WBP_DamageIndicatorContainer_C_RemoveIndicator");
static_assert(offsetof(WBP_DamageIndicatorContainer_C_RemoveIndicator, DamageIndicator) == 0x000000, "Member 'WBP_DamageIndicatorContainer_C_RemoveIndicator::DamageIndicator' has a wrong offset!");

}

