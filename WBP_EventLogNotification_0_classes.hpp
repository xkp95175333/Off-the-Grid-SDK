#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EventLogNotification_0

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Enum_EventLogTypes_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_EventLogNotification.WBP_EventLogNotification_C
// 0x0120 (0x0400 - 0x02E0)
class WBP_EventLogNotification_0::UWBP_EventLogNotification_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOut;                                           // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Event_Border;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Event_GzText;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Instigator_Border;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Instigator_DevPrefixColor_Border;                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           InstigatorClanTag_GzText;                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           InstigatorName_GzText;                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 KillSource_Image;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Modifier1_Image;                                   // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Modifier2_Image;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Victim_DevPrefixColor_Border;                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           VictimClanTag_GzText;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           VictimName_GzText;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               WrongSizeFixer_SizeBox;                            // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        LifeTime_Other;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LifeTime_Important;                                // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 MessageClass;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Instigator;                                        // 0x0370(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class AGzPlayerState*                         InstigatorPlayerState;                             // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Victim;                                            // 0x0388(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class AGzPlayerState*                         VictimPlayerState;                                 // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   ActionDescription;                                 // 0x03A0(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UTexture2D*                             KillSourceTexture;                                 // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Modifier1Texture;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Modifier2Texture;                                  // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsImportant;                                       // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D67[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 ObjectReference;                                   // 0x03D0(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	class AGzPlayerState*                         ViewTargetPlayerState;                             // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BuildEntry();
	void CheckTeamLogColors(class AGzPlayerState* PlayerState);
	void Construct();
	void ExecuteUbergraph_WBP_EventLogNotification(int32 EntryPoint);
	void Finished_758AFB764FDD76E8602D88AEE76AD585();
	bool IsPrematch();
	void RemoveEntry();
	void SetActionDescription();
	void SetIconTexture(class UTexture2D* Texture, class UImage* ImageElement, class USizeBox* SizeBox);
	void SetInstigatorText();
	void SetLogColor();
	void SetTextColor(class UGzTextBlock* TextElement, class AGzPlayerState* PlayerState);
	void SetVictimText();
	void ShouldColorTeamsInPreMatch(bool* Assign_on_Start);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WidgetBlueprintGeneratedClass WBP_EventLogNotification.WBP_EventLogNotification_C", true, "WBP_EventLogNotification_C">();
	}
	static class WBP_EventLogNotification_0::UWBP_EventLogNotification_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<WBP_EventLogNotification_0::UWBP_EventLogNotification_C>();
	}
};
static_assert(alignof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C) == 0x000008, "Wrong alignment on WBP_EventLogNotification_0::UWBP_EventLogNotification_C");
static_assert(sizeof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C) == 0x000400, "Wrong size on WBP_EventLogNotification_0::UWBP_EventLogNotification_C");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, UberGraphFrame) == 0x0002E0, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, FadeOut) == 0x0002E8, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::FadeOut' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Event_Border) == 0x0002F0, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Event_Border' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Event_GzText) == 0x0002F8, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Event_GzText' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Instigator_Border) == 0x000300, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Instigator_Border' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Instigator_DevPrefixColor_Border) == 0x000308, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Instigator_DevPrefixColor_Border' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, InstigatorClanTag_GzText) == 0x000310, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::InstigatorClanTag_GzText' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, InstigatorName_GzText) == 0x000318, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::InstigatorName_GzText' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, KillSource_Image) == 0x000320, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::KillSource_Image' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Modifier1_Image) == 0x000328, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Modifier1_Image' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Modifier2_Image) == 0x000330, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Modifier2_Image' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Victim_DevPrefixColor_Border) == 0x000338, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Victim_DevPrefixColor_Border' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, VictimClanTag_GzText) == 0x000340, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::VictimClanTag_GzText' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, VictimName_GzText) == 0x000348, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::VictimName_GzText' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, WrongSizeFixer_SizeBox) == 0x000350, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::WrongSizeFixer_SizeBox' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, LifeTime_Other) == 0x000358, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::LifeTime_Other' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, LifeTime_Important) == 0x000360, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::LifeTime_Important' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, MessageClass) == 0x000368, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::MessageClass' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Instigator) == 0x000370, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Instigator' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, InstigatorPlayerState) == 0x000380, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::InstigatorPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Victim) == 0x000388, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Victim' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, VictimPlayerState) == 0x000398, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::VictimPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, ActionDescription) == 0x0003A0, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::ActionDescription' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, KillSourceTexture) == 0x0003B0, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::KillSourceTexture' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Modifier1Texture) == 0x0003B8, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Modifier1Texture' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, Modifier2Texture) == 0x0003C0, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::Modifier2Texture' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, IsImportant) == 0x0003C8, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::IsImportant' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, ObjectReference) == 0x0003D0, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::ObjectReference' has a wrong offset!");
static_assert(offsetof(WBP_EventLogNotification_0::UWBP_EventLogNotification_C, ViewTargetPlayerState) == 0x0003F8, "Member 'WBP_EventLogNotification_0::UWBP_EventLogNotification_C::ViewTargetPlayerState' has a wrong offset!");

}

