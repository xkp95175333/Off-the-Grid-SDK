#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_InputAction

#include "Basic.hpp"

#include "E_InputHint_structs.hpp"


namespace SDK::Params
{

// Function WBP_Crosshair_InputAction.WBP_Crosshair_InputAction_C.CyberlimbUpdateState
// 0x0020 (0x0020 - 0x0000)
struct WBP_Crosshair_InputAction_C_CyberlimbUpdateState final
{
public:
	class FText                                   Param_ResultText;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_InputHint                                   Param_InputHint;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_573D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Param_InputAction;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_InputAction_C_CyberlimbUpdateState) == 0x000008, "Wrong alignment on WBP_Crosshair_InputAction_C_CyberlimbUpdateState");
static_assert(sizeof(WBP_Crosshair_InputAction_C_CyberlimbUpdateState) == 0x000020, "Wrong size on WBP_Crosshair_InputAction_C_CyberlimbUpdateState");
static_assert(offsetof(WBP_Crosshair_InputAction_C_CyberlimbUpdateState, Param_ResultText) == 0x000000, "Member 'WBP_Crosshair_InputAction_C_CyberlimbUpdateState::Param_ResultText' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_CyberlimbUpdateState, Param_InputHint) == 0x000010, "Member 'WBP_Crosshair_InputAction_C_CyberlimbUpdateState::Param_InputHint' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_CyberlimbUpdateState, Param_InputAction) == 0x000018, "Member 'WBP_Crosshair_InputAction_C_CyberlimbUpdateState::Param_InputAction' has a wrong offset!");

// Function WBP_Crosshair_InputAction.WBP_Crosshair_InputAction_C.ExecuteUbergraph_WBP_Crosshair_InputAction
// 0x0090 (0x0090 - 0x0000)
struct WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InputHint                                   Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_573E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	class FText                                   K2Node_CustomEvent_InText;                         // 0x0028(0x0010)(ConstParm)
	class UInputAction*                           K2Node_CustomEvent_NewInputAction;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_573F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_ResultText;                     // 0x0048(0x0010)()
	E_InputHint                                   K2Node_CustomEvent_InputHint;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5740[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           K2Node_CustomEvent_InputAction;                    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5741[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0070(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0080(0x0010)()
};
static_assert(alignof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction) == 0x000008, "Wrong alignment on WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction");
static_assert(sizeof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction) == 0x000090, "Wrong size on WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, EntryPoint) == 0x000000, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, Temp_byte_Variable) == 0x000004, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, Temp_text_Variable) == 0x000008, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, Temp_text_Variable_1) == 0x000018, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, K2Node_CustomEvent_InText) == 0x000028, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, K2Node_CustomEvent_NewInputAction) == 0x000038, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::K2Node_CustomEvent_NewInputAction' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, K2Node_Event_IsDesignTime) == 0x000040, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, K2Node_CustomEvent_ResultText) == 0x000048, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::K2Node_CustomEvent_ResultText' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, K2Node_CustomEvent_InputHint) == 0x000058, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::K2Node_CustomEvent_InputHint' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, K2Node_CustomEvent_InputAction) == 0x000060, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::K2Node_CustomEvent_InputAction' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, Temp_text_Variable_2) == 0x000070, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction, K2Node_Select_Default) == 0x000080, "Member 'WBP_Crosshair_InputAction_C_ExecuteUbergraph_WBP_Crosshair_InputAction::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Crosshair_InputAction.WBP_Crosshair_InputAction_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Crosshair_InputAction_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_InputAction_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Crosshair_InputAction_C_PreConstruct");
static_assert(sizeof(WBP_Crosshair_InputAction_C_PreConstruct) == 0x000001, "Wrong size on WBP_Crosshair_InputAction_C_PreConstruct");
static_assert(offsetof(WBP_Crosshair_InputAction_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Crosshair_InputAction_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Crosshair_InputAction.WBP_Crosshair_InputAction_C.SetNewInputAction
// 0x0008 (0x0008 - 0x0000)
struct WBP_Crosshair_InputAction_C_SetNewInputAction final
{
public:
	class UInputAction*                           NewInputAction;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_InputAction_C_SetNewInputAction) == 0x000008, "Wrong alignment on WBP_Crosshair_InputAction_C_SetNewInputAction");
static_assert(sizeof(WBP_Crosshair_InputAction_C_SetNewInputAction) == 0x000008, "Wrong size on WBP_Crosshair_InputAction_C_SetNewInputAction");
static_assert(offsetof(WBP_Crosshair_InputAction_C_SetNewInputAction, NewInputAction) == 0x000000, "Member 'WBP_Crosshair_InputAction_C_SetNewInputAction::NewInputAction' has a wrong offset!");

// Function WBP_Crosshair_InputAction.WBP_Crosshair_InputAction_C.SetNewResultText
// 0x0010 (0x0010 - 0x0000)
struct WBP_Crosshair_InputAction_C_SetNewResultText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Crosshair_InputAction_C_SetNewResultText) == 0x000008, "Wrong alignment on WBP_Crosshair_InputAction_C_SetNewResultText");
static_assert(sizeof(WBP_Crosshair_InputAction_C_SetNewResultText) == 0x000010, "Wrong size on WBP_Crosshair_InputAction_C_SetNewResultText");
static_assert(offsetof(WBP_Crosshair_InputAction_C_SetNewResultText, InText) == 0x000000, "Member 'WBP_Crosshair_InputAction_C_SetNewResultText::InText' has a wrong offset!");

}

