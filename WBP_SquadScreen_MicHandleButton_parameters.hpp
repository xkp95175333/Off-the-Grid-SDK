#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SquadScreen_MicHandleButton

#include "Basic.hpp"

#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_SquadScreen_MicHandleButton.WBP_SquadScreen_MicHandleButton_C.SetPlayer
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadScreen_MicHandleButton_C_SetPlayer final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MicHandleButton_C_SetPlayer) == 0x000008, "Wrong alignment on WBP_SquadScreen_MicHandleButton_C_SetPlayer");
static_assert(sizeof(WBP_SquadScreen_MicHandleButton_C_SetPlayer) == 0x000008, "Wrong size on WBP_SquadScreen_MicHandleButton_C_SetPlayer");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_SetPlayer, PlayerState) == 0x000000, "Member 'WBP_SquadScreen_MicHandleButton_C_SetPlayer::PlayerState' has a wrong offset!");

// Function WBP_SquadScreen_MicHandleButton.WBP_SquadScreen_MicHandleButton_C.SetMicState
// 0x0028 (0x0028 - 0x0000)
struct WBP_SquadScreen_MicHandleButton_C_SetMicState final
{
public:
	EGzVoiceChatState                             StateToChangeTo;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzVoiceChatState                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66E3[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MicHandleButton_C_SetMicState) == 0x000008, "Wrong alignment on WBP_SquadScreen_MicHandleButton_C_SetMicState");
static_assert(sizeof(WBP_SquadScreen_MicHandleButton_C_SetMicState) == 0x000028, "Wrong size on WBP_SquadScreen_MicHandleButton_C_SetMicState");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_SetMicState, StateToChangeTo) == 0x000000, "Member 'WBP_SquadScreen_MicHandleButton_C_SetMicState::StateToChangeTo' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_SetMicState, Temp_byte_Variable) == 0x000001, "Member 'WBP_SquadScreen_MicHandleButton_C_SetMicState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_SetMicState, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'WBP_SquadScreen_MicHandleButton_C_SetMicState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_SetMicState, Temp_object_Variable) == 0x000008, "Member 'WBP_SquadScreen_MicHandleButton_C_SetMicState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_SetMicState, Temp_object_Variable_1) == 0x000010, "Member 'WBP_SquadScreen_MicHandleButton_C_SetMicState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_SetMicState, Temp_object_Variable_2) == 0x000018, "Member 'WBP_SquadScreen_MicHandleButton_C_SetMicState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_SetMicState, K2Node_Select_Default) == 0x000020, "Member 'WBP_SquadScreen_MicHandleButton_C_SetMicState::K2Node_Select_Default' has a wrong offset!");

// Function WBP_SquadScreen_MicHandleButton.WBP_SquadScreen_MicHandleButton_C.IterateMicState
// 0x0018 (0x0018 - 0x0000)
struct WBP_SquadScreen_MicHandleButton_C_IterateMicState final
{
public:
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzVoiceChatState                             CallFunc_GetMicState_CurrentState;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66E4[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MicHandleButton_C_IterateMicState) == 0x000004, "Wrong alignment on WBP_SquadScreen_MicHandleButton_C_IterateMicState");
static_assert(sizeof(WBP_SquadScreen_MicHandleButton_C_IterateMicState) == 0x000018, "Wrong size on WBP_SquadScreen_MicHandleButton_C_IterateMicState");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_MakeLiteralInt_ReturnValue) == 0x000000, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_GetMicState_CurrentState) == 0x00000A, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_GetMicState_CurrentState' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00000C, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000014, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000015, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_GetValidValue_ReturnValue_1) == 0x000016, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_IterateMicState, CallFunc_Less_ByteByte_ReturnValue) == 0x000017, "Member 'WBP_SquadScreen_MicHandleButton_C_IterateMicState::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_SquadScreen_MicHandleButton.WBP_SquadScreen_MicHandleButton_C.GetMicState
// 0x0018 (0x0018 - 0x0000)
struct WBP_SquadScreen_MicHandleButton_C_GetMicState final
{
public:
	EGzVoiceChatState                             CurrentState;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66E5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzGameUserSettings*                    CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzVoiceChatState                             CallFunc_GetVoiceChatState_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MicHandleButton_C_GetMicState) == 0x000008, "Wrong alignment on WBP_SquadScreen_MicHandleButton_C_GetMicState");
static_assert(sizeof(WBP_SquadScreen_MicHandleButton_C_GetMicState) == 0x000018, "Wrong size on WBP_SquadScreen_MicHandleButton_C_GetMicState");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_GetMicState, CurrentState) == 0x000000, "Member 'WBP_SquadScreen_MicHandleButton_C_GetMicState::CurrentState' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_GetMicState, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WBP_SquadScreen_MicHandleButton_C_GetMicState::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_GetMicState, CallFunc_GetVoiceChatState_ReturnValue) == 0x000010, "Member 'WBP_SquadScreen_MicHandleButton_C_GetMicState::CallFunc_GetVoiceChatState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_GetMicState, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_SquadScreen_MicHandleButton_C_GetMicState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_SquadScreen_MicHandleButton.WBP_SquadScreen_MicHandleButton_C.ExecuteUbergraph_WBP_SquadScreen_MicHandleButton
// 0x0008 (0x0008 - 0x0000)
struct WBP_SquadScreen_MicHandleButton_C_ExecuteUbergraph_WBP_SquadScreen_MicHandleButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzVoiceChatState                             CallFunc_GetMicState_CurrentState;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadScreen_MicHandleButton_C_ExecuteUbergraph_WBP_SquadScreen_MicHandleButton) == 0x000004, "Wrong alignment on WBP_SquadScreen_MicHandleButton_C_ExecuteUbergraph_WBP_SquadScreen_MicHandleButton");
static_assert(sizeof(WBP_SquadScreen_MicHandleButton_C_ExecuteUbergraph_WBP_SquadScreen_MicHandleButton) == 0x000008, "Wrong size on WBP_SquadScreen_MicHandleButton_C_ExecuteUbergraph_WBP_SquadScreen_MicHandleButton");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_ExecuteUbergraph_WBP_SquadScreen_MicHandleButton, EntryPoint) == 0x000000, "Member 'WBP_SquadScreen_MicHandleButton_C_ExecuteUbergraph_WBP_SquadScreen_MicHandleButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SquadScreen_MicHandleButton_C_ExecuteUbergraph_WBP_SquadScreen_MicHandleButton, CallFunc_GetMicState_CurrentState) == 0x000004, "Member 'WBP_SquadScreen_MicHandleButton_C_ExecuteUbergraph_WBP_SquadScreen_MicHandleButton::CallFunc_GetMicState_CurrentState' has a wrong offset!");

}

