#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ReportOption

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_ReportOption.WBP_ReportOption_C.ExecuteUbergraph_WBP_ReportOption
// 0x0028 (0x0028 - 0x0000)
struct WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_682A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_CustomEvent_Button;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption) == 0x000008, "Wrong alignment on WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption");
static_assert(sizeof(WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption) == 0x000028, "Wrong size on WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption");
static_assert(offsetof(WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption, EntryPoint) == 0x000000, "Member 'WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption, K2Node_CustomEvent_Button) == 0x000018, "Member 'WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption, K2Node_Event_IsDesignTime) == 0x000021, "Member 'WBP_ReportOption_C_ExecuteUbergraph_WBP_ReportOption::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_ReportOption.WBP_ReportOption_C.OnButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct WBP_ReportOption_C_OnButtonClicked final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ReportOption_C_OnButtonClicked) == 0x000008, "Wrong alignment on WBP_ReportOption_C_OnButtonClicked");
static_assert(sizeof(WBP_ReportOption_C_OnButtonClicked) == 0x000008, "Wrong size on WBP_ReportOption_C_OnButtonClicked");
static_assert(offsetof(WBP_ReportOption_C_OnButtonClicked, Button) == 0x000000, "Member 'WBP_ReportOption_C_OnButtonClicked::Button' has a wrong offset!");

// Function WBP_ReportOption.WBP_ReportOption_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ReportOption_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ReportOption_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ReportOption_C_PreConstruct");
static_assert(sizeof(WBP_ReportOption_C_PreConstruct) == 0x000001, "Wrong size on WBP_ReportOption_C_PreConstruct");
static_assert(offsetof(WBP_ReportOption_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ReportOption_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

