#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Human

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK::Params
{

// Function ABP_Human.ABP_Human_C.Aiming_Correction
// 0x0020 (0x0020 - 0x0000)
struct ABP_Human_C_Aiming_Correction final
{
public:
	struct FPoseLink                              Aim_pose;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_Aiming_Correction;                           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_Aiming_Correction) == 0x000008, "Wrong alignment on ABP_Human_C_Aiming_Correction");
static_assert(sizeof(ABP_Human_C_Aiming_Correction) == 0x000020, "Wrong size on ABP_Human_C_Aiming_Correction");
static_assert(offsetof(ABP_Human_C_Aiming_Correction, Aim_pose) == 0x000000, "Member 'ABP_Human_C_Aiming_Correction::Aim_pose' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Aiming_Correction, Param_Aiming_Correction) == 0x000010, "Member 'ABP_Human_C_Aiming_Correction::Param_Aiming_Correction' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Human_C_AnimGraph");
static_assert(sizeof(ABP_Human_C_AnimGraph) == 0x000010, "Wrong size on ABP_Human_C_AnimGraph");
static_assert(offsetof(ABP_Human_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_Human_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.DamagedBody_CycleState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_DamagedBody_CycleState final
{
public:
	struct FPoseLink                              Param_DamagedBody_CycleState;                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_DamagedBody_CycleState) == 0x000008, "Wrong alignment on ABP_Human_C_DamagedBody_CycleState");
static_assert(sizeof(ABP_Human_C_DamagedBody_CycleState) == 0x000010, "Wrong size on ABP_Human_C_DamagedBody_CycleState");
static_assert(offsetof(ABP_Human_C_DamagedBody_CycleState, Param_DamagedBody_CycleState) == 0x000000, "Member 'ABP_Human_C_DamagedBody_CycleState::Param_DamagedBody_CycleState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.DamagedBody_EnterState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_DamagedBody_EnterState final
{
public:
	struct FPoseLink                              Param_DamagedBody_EnterState;                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_DamagedBody_EnterState) == 0x000008, "Wrong alignment on ABP_Human_C_DamagedBody_EnterState");
static_assert(sizeof(ABP_Human_C_DamagedBody_EnterState) == 0x000010, "Wrong size on ABP_Human_C_DamagedBody_EnterState");
static_assert(offsetof(ABP_Human_C_DamagedBody_EnterState, Param_DamagedBody_EnterState) == 0x000000, "Member 'ABP_Human_C_DamagedBody_EnterState::Param_DamagedBody_EnterState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.DamagedBody_ExitState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_DamagedBody_ExitState final
{
public:
	struct FPoseLink                              Param_DamagedBody_ExitState;                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_DamagedBody_ExitState) == 0x000008, "Wrong alignment on ABP_Human_C_DamagedBody_ExitState");
static_assert(sizeof(ABP_Human_C_DamagedBody_ExitState) == 0x000010, "Wrong size on ABP_Human_C_DamagedBody_ExitState");
static_assert(offsetof(ABP_Human_C_DamagedBody_ExitState, Param_DamagedBody_ExitState) == 0x000000, "Member 'ABP_Human_C_DamagedBody_ExitState::Param_DamagedBody_ExitState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.DamagedBody_IdleState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_DamagedBody_IdleState final
{
public:
	struct FPoseLink                              Param_DamagedBody_IdleState;                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_DamagedBody_IdleState) == 0x000008, "Wrong alignment on ABP_Human_C_DamagedBody_IdleState");
static_assert(sizeof(ABP_Human_C_DamagedBody_IdleState) == 0x000010, "Wrong size on ABP_Human_C_DamagedBody_IdleState");
static_assert(offsetof(ABP_Human_C_DamagedBody_IdleState, Param_DamagedBody_IdleState) == 0x000000, "Member 'ABP_Human_C_DamagedBody_IdleState::Param_DamagedBody_IdleState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.DamagedBodyOnExitStateEntry
// 0x0020 (0x0020 - 0x0000)
struct ABP_Human_C_DamagedBodyOnExitStateEntry final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_DamagedBodyOnExitStateEntry) == 0x000008, "Wrong alignment on ABP_Human_C_DamagedBodyOnExitStateEntry");
static_assert(sizeof(ABP_Human_C_DamagedBodyOnExitStateEntry) == 0x000020, "Wrong size on ABP_Human_C_DamagedBodyOnExitStateEntry");
static_assert(offsetof(ABP_Human_C_DamagedBodyOnExitStateEntry, Context) == 0x000000, "Member 'ABP_Human_C_DamagedBodyOnExitStateEntry::Context' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyOnExitStateEntry, Node) == 0x000010, "Member 'ABP_Human_C_DamagedBodyOnExitStateEntry::Node' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.DamagedBodySetupState
// 0x0028 (0x0028 - 0x0000)
struct ABP_Human_C_DamagedBodySetupState final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_DamagedBodySetupState) == 0x000008, "Wrong alignment on ABP_Human_C_DamagedBodySetupState");
static_assert(sizeof(ABP_Human_C_DamagedBodySetupState) == 0x000028, "Wrong size on ABP_Human_C_DamagedBodySetupState");
static_assert(offsetof(ABP_Human_C_DamagedBodySetupState, Context) == 0x000000, "Member 'ABP_Human_C_DamagedBodySetupState::Context' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodySetupState, Node) == 0x000010, "Member 'ABP_Human_C_DamagedBodySetupState::Node' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodySetupState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'ABP_Human_C_DamagedBodySetupState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.DamagedBodyUpdateRootYawOffset_CompensateAimYaw
// 0x06B0 (0x06B0 - 0x0000)
struct ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue;                 // 0x0020(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_1;               // 0x0238(0x0218)(NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_2;               // 0x0458(0x0218)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245D[0x7];                                     // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245E[0x7];                                     // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw) == 0x000008, "Wrong alignment on ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw");
static_assert(sizeof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw) == 0x0006B0, "Wrong size on ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, Context) == 0x000000, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::Context' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, Node) == 0x000010, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::Node' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_GetAnimCache_ReturnValue) == 0x000020, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_GetAnimCache_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_GetAnimCache_ReturnValue_1) == 0x000238, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_GetAnimCache_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000450, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_GetAnimCache_ReturnValue_2) == 0x000458, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_GetAnimCache_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000670, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000678, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_BooleanAND_ReturnValue) == 0x000680, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000688, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000690, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000698, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0006A0, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0006A8, "Member 'ABP_Human_C_DamagedBodyUpdateRootYawOffset_CompensateAimYaw::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.DebugFullBodyAbilityBlendTime
// 0x0068 (0x0068 - 0x0000)
struct ABP_Human_C_DebugFullBodyAbilityBlendTime final
{
public:
	bool                                          Debug;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_DebugFullBodyAbilityBlendTime) == 0x000008, "Wrong alignment on ABP_Human_C_DebugFullBodyAbilityBlendTime");
static_assert(sizeof(ABP_Human_C_DebugFullBodyAbilityBlendTime) == 0x000068, "Wrong size on ABP_Human_C_DebugFullBodyAbilityBlendTime");
static_assert(offsetof(ABP_Human_C_DebugFullBodyAbilityBlendTime, Debug) == 0x000000, "Member 'ABP_Human_C_DebugFullBodyAbilityBlendTime::Debug' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DebugFullBodyAbilityBlendTime, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000008, "Member 'ABP_Human_C_DebugFullBodyAbilityBlendTime::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DebugFullBodyAbilityBlendTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'ABP_Human_C_DebugFullBodyAbilityBlendTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DebugFullBodyAbilityBlendTime, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000028, "Member 'ABP_Human_C_DebugFullBodyAbilityBlendTime::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DebugFullBodyAbilityBlendTime, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'ABP_Human_C_DebugFullBodyAbilityBlendTime::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DebugFullBodyAbilityBlendTime, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000048, "Member 'ABP_Human_C_DebugFullBodyAbilityBlendTime::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DebugFullBodyAbilityBlendTime, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x000058, "Member 'ABP_Human_C_DebugFullBodyAbilityBlendTime::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_DebugFullBodyAbilityBlendTime, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_1) == 0x000060, "Member 'ABP_Human_C_DebugFullBodyAbilityBlendTime::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_1' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.ExecuteUbergraph_ABP_Human
// 0x4AE0 (0x4AE0 - 0x0000)
struct ABP_Human_C_ExecuteUbergraph_ABP_Human final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2460[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue;                 // 0x0008(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_1;               // 0x0220(0x0218)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasAnimNotifyStateActiveInSourceState_ReturnValue; // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2461[0x6];                                     // 0x043A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_2;               // 0x0440(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_3;               // 0x0658(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2462[0x7];                                     // 0x0871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_4;               // 0x0878(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_5;               // 0x0A90(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_6;               // 0x0CA8(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0EC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0EC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0EC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0EC3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue; // 0x0EC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2463[0x7];                                     // 0x0EC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_7;               // 0x0ED0(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x10E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2464[0x7];                                     // 0x10E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_8;               // 0x10F0(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_9;               // 0x1308(0x0218)(NoDestructor)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x1520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2465[0x7];                                     // 0x1521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_10;              // 0x1528(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x1740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2466[0x7];                                     // 0x1741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_11;              // 0x1748(0x0218)(NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x1960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2467[0x7];                                     // 0x1961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_12;              // 0x1968(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x1B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x1B81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x1B82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2468[0x5];                                     // 0x1B83(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_13;              // 0x1B88(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_14;              // 0x1DA0(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x1FB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x1FB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1FBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x1FBB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x1FBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x1FBD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2469[0x2];                                     // 0x1FBE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_15;              // 0x1FC0(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x21D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x21D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246A[0x6];                                     // 0x21DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x21E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x21E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246B[0x7];                                     // 0x21E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_16;              // 0x21F0(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_17;              // 0x2408(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_18;              // 0x2620(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_19;              // 0x2838(0x0218)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x2A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246C[0x7];                                     // 0x2A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x2A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x2A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246D[0x3];                                     // 0x2A61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_OverlayOverride;                      // 0x2A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x2A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionGroundedEntryState                 K2Node_Event_EntryState;                           // 0x2A69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246E[0x6];                                     // 0x2A6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_20;              // 0x2A70(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x2C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246F[0x7];                                     // 0x2C89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_21;              // 0x2C90(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x2EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2470[0x3];                                     // 0x2EA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x2EAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x2EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x2EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x2EB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x2EBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2471[0x5];                                     // 0x2EBB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_22;              // 0x2EC0(0x0218)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x30D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x30D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2472[0x6];                                     // 0x30DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_23;              // 0x30E0(0x0218)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x32F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2473[0x7];                                     // 0x32F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_24;              // 0x3300(0x0218)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x3518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2474[0x7];                                     // 0x3519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x3520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_25;              // 0x3528(0x0218)(NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x3740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzCharacterDamageAreaType                    Temp_byte_Variable;                                // 0x3748(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x3749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x374A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzCharacterDamageAreaType                    Temp_byte_Variable_1;                              // 0x374B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x374C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x374D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzCharacterDamageAreaType                    Temp_byte_Variable_2;                              // 0x374E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzCharacterDamageAreaType                    Temp_byte_Variable_3;                              // 0x374F(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x3750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzCharacterDamageAreaType                    Temp_byte_Variable_4;                              // 0x3754(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x3755(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzCharacterDamageAreaType                    Temp_byte_Variable_5;                              // 0x3756(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzCharacterDamageAreaType                    Temp_byte_Variable_6;                              // 0x3757(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzCharacterDamageAreaType                    Temp_byte_Variable_7;                              // 0x3758(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x3759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2475[0x6];                                     // 0x375A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_26;              // 0x3760(0x0218)(NoDestructor)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x3978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2476[0x7];                                     // 0x3979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_27;              // 0x3980(0x0218)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x3B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2477[0x7];                                     // 0x3B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLeftHandIKLocation_ReturnValue;        // 0x3BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeftHandIKBlendValue_ReturnValue;      // 0x3BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x3BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2478[0x3];                                     // 0x3BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_28;              // 0x3BC0(0x0218)(NoDestructor)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x3DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x3DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x3DE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2479[0x6];                                     // 0x3DE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitDirectionInfo                      CallFunc_Map_Find_Value;                           // 0x3DE8(0x0030)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x3E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_247A[0x7];                                     // 0x3E19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitDirectionInfo                      CallFunc_Map_Find_Value_1;                         // 0x3E20(0x0030)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x3E50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_247B[0x7];                                     // 0x3E51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitDirectionInfo                      CallFunc_Map_Find_Value_2;                         // 0x3E58(0x0030)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x3E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_247C[0x7];                                     // 0x3E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitDirectionInfo                      CallFunc_Map_Find_Value_3;                         // 0x3E90(0x0030)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x3EC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimStances                                  CallFunc_GetAnimStance_ReturnValue;                // 0x3EC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x3EC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_247D[0x5];                                     // 0x3EC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitDirectionInfo                      CallFunc_Map_Find_Value_4;                         // 0x3EC8(0x0030)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x3EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x3EF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_247E[0x6];                                     // 0x3EFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitDirectionInfo                      CallFunc_Map_Find_Value_5;                         // 0x3F00(0x0030)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x3F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_247F[0x7];                                     // 0x3F31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitDirectionInfo                      CallFunc_Map_Find_Value_6;                         // 0x3F38(0x0030)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x3F68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2480[0x7];                                     // 0x3F69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitDirectionInfo                      CallFunc_Map_Find_Value_7;                         // 0x3F70(0x0030)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x3FA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2481[0x7];                                     // 0x3FA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_29;              // 0x3FA8(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_30;              // 0x41C0(0x0218)(NoDestructor)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x43D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2482[0x7];                                     // 0x43D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_31;              // 0x43E0(0x0218)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x45F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x45F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x45FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x45FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x45FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Left_Hand_IK_Enable_Enable;               // 0x4600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x4601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x4602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Right_Hand_IK_Enable_Enable;              // 0x4603(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2483[0x4];                                     // 0x4604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SideGripOffset_Offset;                    // 0x4608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingPerpendicularToInitialPivotNative_ReturnValue; // 0x4620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2484[0x7];                                     // 0x4621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x4628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x4640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x4641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2485[0x6];                                     // 0x4642(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_32;              // 0x4648(0x0218)(NoDestructor)
	EGzLayerItemType                              K2Node_Event_LayerIndex;                           // 0x4860(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x4861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2486[0x6];                                     // 0x4862(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue; // 0x4868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x4870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2487[0x7];                                     // 0x4871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_33;              // 0x4878(0x0218)(NoDestructor)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x4A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x4A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x4AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x4AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x4AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2488[0x4];                                     // 0x4AB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1; // 0x4AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x4AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_2;       // 0x4AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x4AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2; // 0x4AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_ExecuteUbergraph_ABP_Human) == 0x000008, "Wrong alignment on ABP_Human_C_ExecuteUbergraph_ABP_Human");
static_assert(sizeof(ABP_Human_C_ExecuteUbergraph_ABP_Human) == 0x004AE0, "Wrong size on ABP_Human_C_ExecuteUbergraph_ABP_Human");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, EntryPoint) == 0x000000, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue) == 0x000008, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_1) == 0x000220, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Not_PreBool_ReturnValue) == 0x000438, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_WasAnimNotifyStateActiveInSourceState_ReturnValue) == 0x000439, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_WasAnimNotifyStateActiveInSourceState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_2) == 0x000440, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_3) == 0x000658, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue) == 0x000870, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_4) == 0x000878, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_5) == 0x000A90, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_6) == 0x000CA8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_1) == 0x000EC0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Not_PreBool_ReturnValue_1) == 0x000EC1, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue) == 0x000EC2, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Not_PreBool_ReturnValue_2) == 0x000EC3, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue) == 0x000EC4, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000EC8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_7) == 0x000ED0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_1) == 0x0010E8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_8) == 0x0010F0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_9) == 0x001308, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Less_DoubleDouble_ReturnValue) == 0x001520, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_10) == 0x001528, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_2) == 0x001740, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_11) == 0x001748, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x001960, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_12) == 0x001968, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_2) == 0x001B80, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_3) == 0x001B81, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_4) == 0x001B82, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_13) == 0x001B88, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_14) == 0x001DA0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_3) == 0x001FB8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_5) == 0x001FB9, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001FBA, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Not_PreBool_ReturnValue_3) == 0x001FBB, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x001FBC, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_6) == 0x001FBD, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_15) == 0x001FC0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_7) == 0x0021D8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_4) == 0x0021D9, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Abs_ReturnValue) == 0x0021E0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0021E8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_16) == 0x0021F0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_17) == 0x002408, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_18) == 0x002620, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_19) == 0x002838, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Not_PreBool_ReturnValue_4) == 0x002A50, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Dot_VectorVector_ReturnValue) == 0x002A58, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x002A60, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, K2Node_Event_OverlayOverride) == 0x002A64, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::K2Node_Event_OverlayOverride' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_5) == 0x002A68, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, K2Node_Event_EntryState) == 0x002A69, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::K2Node_Event_EntryState' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_20) == 0x002A70, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_6) == 0x002C88, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_21) == 0x002C90, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_8) == 0x002EA8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetCurveValue_ReturnValue) == 0x002EAC, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_VSizeXY_ReturnValue) == 0x002EB0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x002EB8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x002EB9, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_7) == 0x002EBA, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_22) == 0x002EC0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0030D8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0030D9, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_23) == 0x0030E0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_9) == 0x0032F8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_24) == 0x003300, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Not_PreBool_ReturnValue_5) == 0x003518, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_VSize_ReturnValue) == 0x003520, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_25) == 0x003528, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_MapRangeClamped_ReturnValue) == 0x003740, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, Temp_byte_Variable) == 0x003748, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x003749, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_10) == 0x00374A, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, Temp_byte_Variable_1) == 0x00374B, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Not_PreBool_ReturnValue_6) == 0x00374C, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_8) == 0x00374D, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, Temp_byte_Variable_2) == 0x00374E, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, Temp_byte_Variable_3) == 0x00374F, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetCurveValue_ReturnValue_1) == 0x003750, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, Temp_byte_Variable_4) == 0x003754, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x003755, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, Temp_byte_Variable_5) == 0x003756, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, Temp_byte_Variable_6) == 0x003757, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, Temp_byte_Variable_7) == 0x003758, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x003759, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_26) == 0x003760, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x003978, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_27) == 0x003980, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Not_PreBool_ReturnValue_7) == 0x003B98, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetLeftHandIKLocation_ReturnValue) == 0x003BA0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetLeftHandIKLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetLeftHandIKBlendValue_ReturnValue) == 0x003BB8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetLeftHandIKBlendValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x003BBC, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_28) == 0x003BC0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_VSizeSquared_ReturnValue) == 0x003DD8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x003DE0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_9) == 0x003DE1, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_Value) == 0x003DE8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_ReturnValue) == 0x003E18, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_Value_1) == 0x003E20, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_ReturnValue_1) == 0x003E50, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_Value_2) == 0x003E58, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_ReturnValue_2) == 0x003E88, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_Value_3) == 0x003E90, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_ReturnValue_3) == 0x003EC0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimStance_ReturnValue) == 0x003EC1, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimStance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x003EC2, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_Value_4) == 0x003EC8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_ReturnValue_4) == 0x003EF8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x003EF9, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_Value_5) == 0x003F00, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_ReturnValue_5) == 0x003F30, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_Value_6) == 0x003F38, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_ReturnValue_6) == 0x003F68, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_Value_7) == 0x003F70, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Map_Find_ReturnValue_7) == 0x003FA0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_29) == 0x003FA8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_30) == 0x0041C0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0043D8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_31) == 0x0043E0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0045F8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_11) == 0x0045F9, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_12) == 0x0045FA, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_10) == 0x0045FB, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetCurveValue_ReturnValue_2) == 0x0045FC, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Left_Hand_IK_Enable_Enable) == 0x004600, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Left_Hand_IK_Enable_Enable' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x004601, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_11) == 0x004602, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Right_Hand_IK_Enable_Enable) == 0x004603, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Right_Hand_IK_Enable_Enable' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_SideGripOffset_Offset) == 0x004608, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_SideGripOffset_Offset' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_IsMovingPerpendicularToInitialPivotNative_ReturnValue) == 0x004620, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_IsMovingPerpendicularToInitialPivotNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Add_VectorVector_ReturnValue) == 0x004628, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanAND_ReturnValue_12) == 0x004640, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_13) == 0x004641, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_32) == 0x004648, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, K2Node_Event_LayerIndex) == 0x004860, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::K2Node_Event_LayerIndex' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_BooleanOR_ReturnValue_14) == 0x004861, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue) == 0x004868, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x004870, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_GetAnimCache_ReturnValue_33) == 0x004878, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_GetAnimCache_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x004A90, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x004A98, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Abs_A_ImplicitCast) == 0x004AA0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x004AA8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x004AB0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1) == 0x004AB8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x004AC0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_Less_DoubleDouble_A_ImplicitCast_2) == 0x004AC8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_Less_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x004AD0, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ExecuteUbergraph_ABP_Human, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2) == 0x004AD8, "Member 'ABP_Human_C_ExecuteUbergraph_ABP_Human::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_Aiming
// 0x0030 (0x0030 - 0x0000)
struct ABP_Human_C_FullBody_Aiming final
{
public:
	struct FPoseLink                              PreAimPose;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	double                                        AimYaw;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimPitch;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseLink                              Param_FullBody_Aiming;                             // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_Aiming) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_Aiming");
static_assert(sizeof(ABP_Human_C_FullBody_Aiming) == 0x000030, "Wrong size on ABP_Human_C_FullBody_Aiming");
static_assert(offsetof(ABP_Human_C_FullBody_Aiming, PreAimPose) == 0x000000, "Member 'ABP_Human_C_FullBody_Aiming::PreAimPose' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_FullBody_Aiming, AimYaw) == 0x000010, "Member 'ABP_Human_C_FullBody_Aiming::AimYaw' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_FullBody_Aiming, AimPitch) == 0x000018, "Member 'ABP_Human_C_FullBody_Aiming::AimPitch' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_FullBody_Aiming, Param_FullBody_Aiming) == 0x000020, "Member 'ABP_Human_C_FullBody_Aiming::Param_FullBody_Aiming' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_AnimAbility
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_AnimAbility final
{
public:
	struct FPoseLink                              Param_FullBody_AnimAbility;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_AnimAbility) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_AnimAbility");
static_assert(sizeof(ABP_Human_C_FullBody_AnimAbility) == 0x000010, "Wrong size on ABP_Human_C_FullBody_AnimAbility");
static_assert(offsetof(ABP_Human_C_FullBody_AnimAbility, Param_FullBody_AnimAbility) == 0x000000, "Member 'ABP_Human_C_FullBody_AnimAbility::Param_FullBody_AnimAbility' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_CycleState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_CycleState final
{
public:
	struct FPoseLink                              Param_FullBody_CycleState;                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_CycleState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_CycleState");
static_assert(sizeof(ABP_Human_C_FullBody_CycleState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_CycleState");
static_assert(offsetof(ABP_Human_C_FullBody_CycleState, Param_FullBody_CycleState) == 0x000000, "Member 'ABP_Human_C_FullBody_CycleState::Param_FullBody_CycleState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_FallLandState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_FallLandState final
{
public:
	struct FPoseLink                              Param_FullBody_FallLandState;                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_FallLandState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_FallLandState");
static_assert(sizeof(ABP_Human_C_FullBody_FallLandState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_FallLandState");
static_assert(offsetof(ABP_Human_C_FullBody_FallLandState, Param_FullBody_FallLandState) == 0x000000, "Member 'ABP_Human_C_FullBody_FallLandState::Param_FullBody_FallLandState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_FallLoopState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_FallLoopState final
{
public:
	struct FPoseLink                              Param_FullBody_FallLoopState;                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_FallLoopState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_FallLoopState");
static_assert(sizeof(ABP_Human_C_FullBody_FallLoopState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_FallLoopState");
static_assert(offsetof(ABP_Human_C_FullBody_FallLoopState, Param_FullBody_FallLoopState) == 0x000000, "Member 'ABP_Human_C_FullBody_FallLoopState::Param_FullBody_FallLoopState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_IdleState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_IdleState final
{
public:
	struct FPoseLink                              Param_FullBody_IdleState;                          // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_IdleState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_IdleState");
static_assert(sizeof(ABP_Human_C_FullBody_IdleState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_IdleState");
static_assert(offsetof(ABP_Human_C_FullBody_IdleState, Param_FullBody_IdleState) == 0x000000, "Member 'ABP_Human_C_FullBody_IdleState::Param_FullBody_IdleState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_JumpApexState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_JumpApexState final
{
public:
	struct FPoseLink                              Param_FullBody_JumpApexState;                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_JumpApexState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_JumpApexState");
static_assert(sizeof(ABP_Human_C_FullBody_JumpApexState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_JumpApexState");
static_assert(offsetof(ABP_Human_C_FullBody_JumpApexState, Param_FullBody_JumpApexState) == 0x000000, "Member 'ABP_Human_C_FullBody_JumpApexState::Param_FullBody_JumpApexState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_JumpStartLoopState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_JumpStartLoopState final
{
public:
	struct FPoseLink                              Param_FullBody_JumpStartLoopState;                 // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_JumpStartLoopState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_JumpStartLoopState");
static_assert(sizeof(ABP_Human_C_FullBody_JumpStartLoopState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_JumpStartLoopState");
static_assert(offsetof(ABP_Human_C_FullBody_JumpStartLoopState, Param_FullBody_JumpStartLoopState) == 0x000000, "Member 'ABP_Human_C_FullBody_JumpStartLoopState::Param_FullBody_JumpStartLoopState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_JumpStartState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_JumpStartState final
{
public:
	struct FPoseLink                              Param_FullBody_JumpStartState;                     // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_JumpStartState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_JumpStartState");
static_assert(sizeof(ABP_Human_C_FullBody_JumpStartState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_JumpStartState");
static_assert(offsetof(ABP_Human_C_FullBody_JumpStartState, Param_FullBody_JumpStartState) == 0x000000, "Member 'ABP_Human_C_FullBody_JumpStartState::Param_FullBody_JumpStartState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_PivotState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_PivotState final
{
public:
	struct FPoseLink                              Param_FullBody_PivotState;                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_PivotState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_PivotState");
static_assert(sizeof(ABP_Human_C_FullBody_PivotState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_PivotState");
static_assert(offsetof(ABP_Human_C_FullBody_PivotState, Param_FullBody_PivotState) == 0x000000, "Member 'ABP_Human_C_FullBody_PivotState::Param_FullBody_PivotState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_StartState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_StartState final
{
public:
	struct FPoseLink                              Param_FullBody_StartState;                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_StartState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_StartState");
static_assert(sizeof(ABP_Human_C_FullBody_StartState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_StartState");
static_assert(offsetof(ABP_Human_C_FullBody_StartState, Param_FullBody_StartState) == 0x000000, "Member 'ABP_Human_C_FullBody_StartState::Param_FullBody_StartState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBody_StopState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBody_StopState final
{
public:
	struct FPoseLink                              Param_FullBody_StopState;                          // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBody_StopState) == 0x000008, "Wrong alignment on ABP_Human_C_FullBody_StopState");
static_assert(sizeof(ABP_Human_C_FullBody_StopState) == 0x000010, "Wrong size on ABP_Human_C_FullBody_StopState");
static_assert(offsetof(ABP_Human_C_FullBody_StopState, Param_FullBody_StopState) == 0x000000, "Member 'ABP_Human_C_FullBody_StopState::Param_FullBody_StopState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.FullBodyAdditives
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_FullBodyAdditives final
{
public:
	struct FPoseLink                              Param_FullBodyAdditives;                           // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_FullBodyAdditives) == 0x000008, "Wrong alignment on ABP_Human_C_FullBodyAdditives");
static_assert(sizeof(ABP_Human_C_FullBodyAdditives) == 0x000010, "Wrong size on ABP_Human_C_FullBodyAdditives");
static_assert(offsetof(ABP_Human_C_FullBodyAdditives, Param_FullBodyAdditives) == 0x000000, "Member 'ABP_Human_C_FullBodyAdditives::Param_FullBodyAdditives' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.GetMovementComponent
// 0x0018 (0x0018 - 0x0000)
struct ABP_Human_C_GetMovementComponent final
{
public:
	class UCharacterMovementComponent*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_GetMovementComponent) == 0x000008, "Wrong alignment on ABP_Human_C_GetMovementComponent");
static_assert(sizeof(ABP_Human_C_GetMovementComponent) == 0x000018, "Wrong size on ABP_Human_C_GetMovementComponent");
static_assert(offsetof(ABP_Human_C_GetMovementComponent, ReturnValue) == 0x000000, "Member 'ABP_Human_C_GetMovementComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GetMovementComponent, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000008, "Member 'ABP_Human_C_GetMovementComponent::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GetMovementComponent, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ABP_Human_C_GetMovementComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.GrappleArmCheck
// 0x0070 (0x0070 - 0x0000)
struct ABP_Human_C_GrappleArmCheck final
{
public:
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0000(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	ELocomotionStance                             CallFunc_GetOwnerStance_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2489[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetGzCharacter_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0030(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248A[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_GrappleArmCheck) == 0x000008, "Wrong alignment on ABP_Human_C_GrappleArmCheck");
static_assert(sizeof(ABP_Human_C_GrappleArmCheck) == 0x000070, "Wrong size on ABP_Human_C_GrappleArmCheck");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, Temp_struct_Variable) == 0x000000, "Member 'ABP_Human_C_GrappleArmCheck::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, CallFunc_GetOwnerStance_ReturnValue) == 0x000008, "Member 'ABP_Human_C_GrappleArmCheck::CallFunc_GetOwnerStance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'ABP_Human_C_GrappleArmCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, CallFunc_GetGzCharacter_ReturnValue) == 0x000010, "Member 'ABP_Human_C_GrappleArmCheck::CallFunc_GetGzCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'ABP_Human_C_GrappleArmCheck::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x000020, "Member 'ABP_Human_C_GrappleArmCheck::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000030, "Member 'ABP_Human_C_GrappleArmCheck::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'ABP_Human_C_GrappleArmCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000058, "Member 'ABP_Human_C_GrappleArmCheck::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_GrappleArmCheck, CallFunc_Array_Contains_ReturnValue) == 0x000068, "Member 'ABP_Human_C_GrappleArmCheck::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.JumpBostLanding
// 0x0020 (0x0020 - 0x0000)
struct ABP_Human_C_JumpBostLanding final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_JumpBostLanding) == 0x000008, "Wrong alignment on ABP_Human_C_JumpBostLanding");
static_assert(sizeof(ABP_Human_C_JumpBostLanding) == 0x000020, "Wrong size on ABP_Human_C_JumpBostLanding");
static_assert(offsetof(ABP_Human_C_JumpBostLanding, Context) == 0x000000, "Member 'ABP_Human_C_JumpBostLanding::Context' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_JumpBostLanding, Node) == 0x000010, "Member 'ABP_Human_C_JumpBostLanding::Node' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.KneeSlide_State
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_KneeSlide_State final
{
public:
	struct FPoseLink                              Param_KneeSlide_State;                             // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_KneeSlide_State) == 0x000008, "Wrong alignment on ABP_Human_C_KneeSlide_State");
static_assert(sizeof(ABP_Human_C_KneeSlide_State) == 0x000010, "Wrong size on ABP_Human_C_KneeSlide_State");
static_assert(offsetof(ABP_Human_C_KneeSlide_State, Param_KneeSlide_State) == 0x000000, "Member 'ABP_Human_C_KneeSlide_State::Param_KneeSlide_State' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.Left Hand IK Enable
// 0x0450 (0x0450 - 0x0000)
struct ABP_Human_C_Left_Hand_IK_Enable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue;                 // 0x0008(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_1;               // 0x0220(0x0218)(NoDestructor)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0443(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248C[0x3];                                     // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_Left_Hand_IK_Enable) == 0x000008, "Wrong alignment on ABP_Human_C_Left_Hand_IK_Enable");
static_assert(sizeof(ABP_Human_C_Left_Hand_IK_Enable) == 0x000450, "Wrong size on ABP_Human_C_Left_Hand_IK_Enable");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, Enable) == 0x000000, "Member 'ABP_Human_C_Left_Hand_IK_Enable::Enable' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_GetAnimCache_ReturnValue) == 0x000008, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_GetAnimCache_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_GetAnimCache_ReturnValue_1) == 0x000220, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_GetAnimCache_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_GetCurveValue_ReturnValue) == 0x000438, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_MakeLiteralInt_ReturnValue) == 0x00043C, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000440, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000441, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_BooleanAND_ReturnValue) == 0x000442, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_BooleanAND_ReturnValue_1) == 0x000443, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_BooleanOR_ReturnValue) == 0x000444, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Left_Hand_IK_Enable, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000448, "Member 'ABP_Human_C_Left_Hand_IK_Enable::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.Limbless_State
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_Limbless_State final
{
public:
	struct FPoseLink                              Param_Limbless_State;                              // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_Limbless_State) == 0x000008, "Wrong alignment on ABP_Human_C_Limbless_State");
static_assert(sizeof(ABP_Human_C_Limbless_State) == 0x000010, "Wrong size on ABP_Human_C_Limbless_State");
static_assert(offsetof(ABP_Human_C_Limbless_State, Param_Limbless_State) == 0x000000, "Member 'ABP_Human_C_Limbless_State::Param_Limbless_State' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.NPC_CoverState
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_C_NPC_CoverState final
{
public:
	struct FPoseLink                              Param_NPC_CoverState;                              // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_NPC_CoverState) == 0x000008, "Wrong alignment on ABP_Human_C_NPC_CoverState");
static_assert(sizeof(ABP_Human_C_NPC_CoverState) == 0x000010, "Wrong size on ABP_Human_C_NPC_CoverState");
static_assert(offsetof(ABP_Human_C_NPC_CoverState, Param_NPC_CoverState) == 0x000000, "Member 'ABP_Human_C_NPC_CoverState::Param_NPC_CoverState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.OnFullBodyAbilityInitiated
// 0x0020 (0x0020 - 0x0000)
struct ABP_Human_C_OnFullBodyAbilityInitiated final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Human_C_OnFullBodyAbilityInitiated) == 0x000008, "Wrong alignment on ABP_Human_C_OnFullBodyAbilityInitiated");
static_assert(sizeof(ABP_Human_C_OnFullBodyAbilityInitiated) == 0x000020, "Wrong size on ABP_Human_C_OnFullBodyAbilityInitiated");
static_assert(offsetof(ABP_Human_C_OnFullBodyAbilityInitiated, Context) == 0x000000, "Member 'ABP_Human_C_OnFullBodyAbilityInitiated::Context' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_OnFullBodyAbilityInitiated, Node) == 0x000010, "Member 'ABP_Human_C_OnFullBodyAbilityInitiated::Node' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.Right Hand IK Enable
// 0x0458 (0x0458 - 0x0000)
struct ABP_Human_C_Right_Hand_IK_Enable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue;                 // 0x0008(0x0218)(NoDestructor)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248E[0x2];                                     // 0x0226(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_1;               // 0x0228(0x0218)(NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0445(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0446(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0447(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248F[0x7];                                     // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_Right_Hand_IK_Enable) == 0x000008, "Wrong alignment on ABP_Human_C_Right_Hand_IK_Enable");
static_assert(sizeof(ABP_Human_C_Right_Hand_IK_Enable) == 0x000458, "Wrong size on ABP_Human_C_Right_Hand_IK_Enable");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, Enable) == 0x000000, "Member 'ABP_Human_C_Right_Hand_IK_Enable::Enable' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_GetAnimCache_ReturnValue) == 0x000008, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_GetAnimCache_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_GetCurveValue_ReturnValue) == 0x000220, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000224, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_Not_PreBool_ReturnValue) == 0x000225, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_GetAnimCache_ReturnValue_1) == 0x000228, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_GetAnimCache_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_MakeLiteralInt_ReturnValue) == 0x000440, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000444, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_BooleanAND_ReturnValue) == 0x000445, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_Not_PreBool_ReturnValue_1) == 0x000446, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_BooleanAND_ReturnValue_1) == 0x000447, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_BooleanAND_ReturnValue_2) == 0x000448, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_Right_Hand_IK_Enable, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000450, "Member 'ABP_Human_C_Right_Hand_IK_Enable::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.SetGroundedEntryState
// 0x0001 (0x0001 - 0x0000)
struct ABP_Human_C_SetGroundedEntryState final
{
public:
	ELocomotionGroundedEntryState                 EntryState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_SetGroundedEntryState) == 0x000001, "Wrong alignment on ABP_Human_C_SetGroundedEntryState");
static_assert(sizeof(ABP_Human_C_SetGroundedEntryState) == 0x000001, "Wrong size on ABP_Human_C_SetGroundedEntryState");
static_assert(offsetof(ABP_Human_C_SetGroundedEntryState, EntryState) == 0x000000, "Member 'ABP_Human_C_SetGroundedEntryState::EntryState' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.SetOverlayOverrideState
// 0x0004 (0x0004 - 0x0000)
struct ABP_Human_C_SetOverlayOverrideState final
{
public:
	int32                                         OverlayOverride;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_SetOverlayOverrideState) == 0x000004, "Wrong alignment on ABP_Human_C_SetOverlayOverrideState");
static_assert(sizeof(ABP_Human_C_SetOverlayOverrideState) == 0x000004, "Wrong size on ABP_Human_C_SetOverlayOverrideState");
static_assert(offsetof(ABP_Human_C_SetOverlayOverrideState, OverlayOverride) == 0x000000, "Member 'ABP_Human_C_SetOverlayOverrideState::OverlayOverride' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.ShouldEnableControlRig
// 0x0238 (0x0238 - 0x0000)
struct ABP_Human_C_ShouldEnableControlRig final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2490[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue;                 // 0x0008(0x0218)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2491[0x2];                                     // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2492[0x5];                                     // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_ShouldEnableControlRig) == 0x000008, "Wrong alignment on ABP_Human_C_ShouldEnableControlRig");
static_assert(sizeof(ABP_Human_C_ShouldEnableControlRig) == 0x000238, "Wrong size on ABP_Human_C_ShouldEnableControlRig");
static_assert(offsetof(ABP_Human_C_ShouldEnableControlRig, ReturnValue) == 0x000000, "Member 'ABP_Human_C_ShouldEnableControlRig::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ShouldEnableControlRig, CallFunc_GetAnimCache_ReturnValue) == 0x000008, "Member 'ABP_Human_C_ShouldEnableControlRig::CallFunc_GetAnimCache_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ShouldEnableControlRig, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000220, "Member 'ABP_Human_C_ShouldEnableControlRig::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ShouldEnableControlRig, CallFunc_Not_PreBool_ReturnValue) == 0x000221, "Member 'ABP_Human_C_ShouldEnableControlRig::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ShouldEnableControlRig, CallFunc_GetCurveValue_ReturnValue) == 0x000224, "Member 'ABP_Human_C_ShouldEnableControlRig::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ShouldEnableControlRig, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000228, "Member 'ABP_Human_C_ShouldEnableControlRig::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ShouldEnableControlRig, CallFunc_BooleanAND_ReturnValue) == 0x000229, "Member 'ABP_Human_C_ShouldEnableControlRig::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ShouldEnableControlRig, CallFunc_BooleanAND_ReturnValue_1) == 0x00022A, "Member 'ABP_Human_C_ShouldEnableControlRig::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_ShouldEnableControlRig, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000230, "Member 'ABP_Human_C_ShouldEnableControlRig::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.SideGripOffset
// 0x04A0 (0x04A0 - 0x0000)
struct ABP_Human_C_SideGripOffset final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue;                 // 0x0018(0x0218)(NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue_1;               // 0x0230(0x0218)(NoDestructor)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2493[0x2];                                     // 0x044E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzWeaponSupportHoldType                      CallFunc_GetWeaponUnderBarrelGripType_ReturnValue; // 0x0454(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0455(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0456(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0457(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x045B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2494[0x4];                                     // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_SideGripOffset) == 0x000008, "Wrong alignment on ABP_Human_C_SideGripOffset");
static_assert(sizeof(ABP_Human_C_SideGripOffset) == 0x0004A0, "Wrong size on ABP_Human_C_SideGripOffset");
static_assert(offsetof(ABP_Human_C_SideGripOffset, Offset) == 0x000000, "Member 'ABP_Human_C_SideGripOffset::Offset' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_GetAnimCache_ReturnValue) == 0x000018, "Member 'ABP_Human_C_SideGripOffset::CallFunc_GetAnimCache_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_GetAnimCache_ReturnValue_1) == 0x000230, "Member 'ABP_Human_C_SideGripOffset::CallFunc_GetAnimCache_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_GetCurveValue_ReturnValue) == 0x000448, "Member 'ABP_Human_C_SideGripOffset::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_Not_PreBool_ReturnValue) == 0x00044C, "Member 'ABP_Human_C_SideGripOffset::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00044D, "Member 'ABP_Human_C_SideGripOffset::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_MakeLiteralInt_ReturnValue) == 0x000450, "Member 'ABP_Human_C_SideGripOffset::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_GetWeaponUnderBarrelGripType_ReturnValue) == 0x000454, "Member 'ABP_Human_C_SideGripOffset::CallFunc_GetWeaponUnderBarrelGripType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000455, "Member 'ABP_Human_C_SideGripOffset::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000456, "Member 'ABP_Human_C_SideGripOffset::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_BooleanAND_ReturnValue) == 0x000457, "Member 'ABP_Human_C_SideGripOffset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_Not_PreBool_ReturnValue_1) == 0x000458, "Member 'ABP_Human_C_SideGripOffset::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_BooleanAND_ReturnValue_1) == 0x000459, "Member 'ABP_Human_C_SideGripOffset::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_BooleanAND_ReturnValue_2) == 0x00045A, "Member 'ABP_Human_C_SideGripOffset::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_BooleanAND_ReturnValue_3) == 0x00045B, "Member 'ABP_Human_C_SideGripOffset::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000460, "Member 'ABP_Human_C_SideGripOffset::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000468, "Member 'ABP_Human_C_SideGripOffset::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000470, "Member 'ABP_Human_C_SideGripOffset::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000478, "Member 'ABP_Human_C_SideGripOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_MakeVector_ReturnValue) == 0x000480, "Member 'ABP_Human_C_SideGripOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_SideGripOffset, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000498, "Member 'ABP_Human_C_SideGripOffset::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.SwitchAnimLayer
// 0x0001 (0x0001 - 0x0000)
struct ABP_Human_C_SwitchAnimLayer final
{
public:
	EGzLayerItemType                              LayerIndex;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_SwitchAnimLayer) == 0x000001, "Wrong alignment on ABP_Human_C_SwitchAnimLayer");
static_assert(sizeof(ABP_Human_C_SwitchAnimLayer) == 0x000001, "Wrong size on ABP_Human_C_SwitchAnimLayer");
static_assert(offsetof(ABP_Human_C_SwitchAnimLayer, LayerIndex) == 0x000000, "Member 'ABP_Human_C_SwitchAnimLayer::LayerIndex' has a wrong offset!");

// Function ABP_Human.ABP_Human_C.UpdateLocomotionStateMachine
// 0x0270 (0x0270 - 0x0000)
struct ABP_Human_C_UpdateLocomotionStateMachine final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAnimCache                             CallFunc_GetAnimCache_ReturnValue;                 // 0x0020(0x0218)(NoDestructor)
	struct FAnimNodeReference                     CallFunc_GetAnimNodeReference_ReturnValue;         // 0x0238(0x0010)(NoDestructor)
	struct FLinkedAnimGraphReference              CallFunc_ConvertToLinkedAnimGraphPure_LinkedAnimGraph; // 0x0248(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToLinkedAnimGraphPure_Result;      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2495[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetLinkedAnimInstance_ReturnValue;        // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_C_UpdateLocomotionStateMachine) == 0x000008, "Wrong alignment on ABP_Human_C_UpdateLocomotionStateMachine");
static_assert(sizeof(ABP_Human_C_UpdateLocomotionStateMachine) == 0x000270, "Wrong size on ABP_Human_C_UpdateLocomotionStateMachine");
static_assert(offsetof(ABP_Human_C_UpdateLocomotionStateMachine, Context) == 0x000000, "Member 'ABP_Human_C_UpdateLocomotionStateMachine::Context' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_UpdateLocomotionStateMachine, Node) == 0x000010, "Member 'ABP_Human_C_UpdateLocomotionStateMachine::Node' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_UpdateLocomotionStateMachine, CallFunc_GetAnimCache_ReturnValue) == 0x000020, "Member 'ABP_Human_C_UpdateLocomotionStateMachine::CallFunc_GetAnimCache_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_UpdateLocomotionStateMachine, CallFunc_GetAnimNodeReference_ReturnValue) == 0x000238, "Member 'ABP_Human_C_UpdateLocomotionStateMachine::CallFunc_GetAnimNodeReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_UpdateLocomotionStateMachine, CallFunc_ConvertToLinkedAnimGraphPure_LinkedAnimGraph) == 0x000248, "Member 'ABP_Human_C_UpdateLocomotionStateMachine::CallFunc_ConvertToLinkedAnimGraphPure_LinkedAnimGraph' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_UpdateLocomotionStateMachine, CallFunc_ConvertToLinkedAnimGraphPure_Result) == 0x000258, "Member 'ABP_Human_C_UpdateLocomotionStateMachine::CallFunc_ConvertToLinkedAnimGraphPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_UpdateLocomotionStateMachine, CallFunc_GetLinkedAnimInstance_ReturnValue) == 0x000260, "Member 'ABP_Human_C_UpdateLocomotionStateMachine::CallFunc_GetLinkedAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_C_UpdateLocomotionStateMachine, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000268, "Member 'ABP_Human_C_UpdateLocomotionStateMachine::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

