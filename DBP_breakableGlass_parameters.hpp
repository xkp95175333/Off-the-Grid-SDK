#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBP_breakableGlass

#include "Basic.hpp"


namespace SDK::Params
{

// Function DBP_breakableGlass.DBP_breakableGlass_C.BP_OnHealthChange
// 0x0004 (0x0004 - 0x0000)
struct DBP_breakableGlass_C_BP_OnHealthChange final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_breakableGlass_C_BP_OnHealthChange) == 0x000004, "Wrong alignment on DBP_breakableGlass_C_BP_OnHealthChange");
static_assert(sizeof(DBP_breakableGlass_C_BP_OnHealthChange) == 0x000004, "Wrong size on DBP_breakableGlass_C_BP_OnHealthChange");
static_assert(offsetof(DBP_breakableGlass_C_BP_OnHealthChange, Health) == 0x000000, "Member 'DBP_breakableGlass_C_BP_OnHealthChange::Health' has a wrong offset!");

// Function DBP_breakableGlass.DBP_breakableGlass_C.ExecuteUbergraph_DBP_breakableGlass
// 0x0020 (0x0020 - 0x0000)
struct DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Health;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5176[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass) == 0x000008, "Wrong alignment on DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass");
static_assert(sizeof(DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass) == 0x000020, "Wrong size on DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass");
static_assert(offsetof(DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass, EntryPoint) == 0x000000, "Member 'DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass::EntryPoint' has a wrong offset!");
static_assert(offsetof(DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass, K2Node_Event_Health) == 0x000004, "Member 'DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass::K2Node_Event_Health' has a wrong offset!");
static_assert(offsetof(DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'DBP_breakableGlass_C_ExecuteUbergraph_DBP_breakableGlass::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function DBP_breakableGlass.DBP_breakableGlass_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct DBP_breakableGlass_C_UserConstructionScript final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DBP_breakableGlass_C_UserConstructionScript) == 0x000001, "Wrong alignment on DBP_breakableGlass_C_UserConstructionScript");
static_assert(sizeof(DBP_breakableGlass_C_UserConstructionScript) == 0x000001, "Wrong size on DBP_breakableGlass_C_UserConstructionScript");
static_assert(offsetof(DBP_breakableGlass_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'DBP_breakableGlass_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

