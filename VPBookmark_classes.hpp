#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VPBookmark

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "VPBookmark_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class VPBookmark.VPBookmarkProvider
// 0x0000 (0x0028 - 0x0028)
class IVPBookmarkProvider final : public IInterface
{
public:
	void GenerateBookmarkName();
	void HideBookmarkSplineMeshIndicator();
	void OnBookmarkActivation(class UVPBookmark* BookMark, bool bActivate);
	void OnBookmarkChanged(class UVPBookmark* BookMark);
	void UpdateBookmarkSplineMeshIndicator();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VPBookmarkProvider">();
	}
	static class IVPBookmarkProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<IVPBookmarkProvider>();
	}
};
static_assert(alignof(IVPBookmarkProvider) == 0x000008, "Wrong alignment on IVPBookmarkProvider");
static_assert(sizeof(IVPBookmarkProvider) == 0x000028, "Wrong size on IVPBookmarkProvider");

// Class VPBookmark.VPBookmark
// 0x0080 (0x00A8 - 0x0028)
class UVPBookmark final : public UBookmarkBase
{
public:
	bool                                          bIsActive;                                         // 0x0028(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4706[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TLazyObjectPtr<class AActor>                  OwnedActor;                                        // 0x002C(0x0018)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4707[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVPBookmarkCreationContext             CreationContext;                                   // 0x0048(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FVPBookmarkViewportData                CachedViewportData;                                // 0x0070(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)

public:
	class AActor* GetAssociatedBookmarkActor() const;
	int32 GetBookmarkIndex() const;
	class FText GetDisplayName() const;
	bool IsActive() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VPBookmark">();
	}
	static class UVPBookmark* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVPBookmark>();
	}
};
static_assert(alignof(UVPBookmark) == 0x000008, "Wrong alignment on UVPBookmark");
static_assert(sizeof(UVPBookmark) == 0x0000A8, "Wrong size on UVPBookmark");
static_assert(offsetof(UVPBookmark, bIsActive) == 0x000028, "Member 'UVPBookmark::bIsActive' has a wrong offset!");
static_assert(offsetof(UVPBookmark, OwnedActor) == 0x00002C, "Member 'UVPBookmark::OwnedActor' has a wrong offset!");
static_assert(offsetof(UVPBookmark, CreationContext) == 0x000048, "Member 'UVPBookmark::CreationContext' has a wrong offset!");
static_assert(offsetof(UVPBookmark, CachedViewportData) == 0x000070, "Member 'UVPBookmark::CachedViewportData' has a wrong offset!");

// Class VPBookmark.VPBookmarkBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UVPBookmarkBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool CreateVPBookmarkName(class AActor* BookMark, const class FString& FormatString, class FString* GeneratedNumber, class FString* GeneratedLetter);
	static class UVPBookmark* FindVPBookmark(const class AActor* Actor);
	static void GetAllVPBookmark(const class UObject* WorldContextObject, TArray<class UVPBookmark*>* OutBookmarks);
	static void GetAllVPBookmarkActors(const class UObject* WorldContextObject, TArray<class AActor*>* OutActors);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VPBookmarkBlueprintLibrary">();
	}
	static class UVPBookmarkBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVPBookmarkBlueprintLibrary>();
	}
};
static_assert(alignof(UVPBookmarkBlueprintLibrary) == 0x000008, "Wrong alignment on UVPBookmarkBlueprintLibrary");
static_assert(sizeof(UVPBookmarkBlueprintLibrary) == 0x000028, "Wrong size on UVPBookmarkBlueprintLibrary");

}

