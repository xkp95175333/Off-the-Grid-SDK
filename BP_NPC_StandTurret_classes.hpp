#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_StandTurret

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPC_StandTurret.BP_NPC_StandTurret_C
// 0x0060 (0x0530 - 0x04D0)
class ABP_NPC_StandTurret_C final : public AGzStandTurret
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_NPCVoiceComponent_C*                BP_NPCVoiceComponent;                              // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      AmmoEffect_R;                                      // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      AmmoEffect_L;                                      // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FireLWeapon;                                       // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FireRWeapon;                                       // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Mental_Effect;                                     // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzInvComponent*                        GzInventory;                                       // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             TurretDestroyed;                                   // 0x0510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             TargetUpdated;                                     // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_NPC_StandTurret(int32 EntryPoint);
	void TurretDestroyed__DelegateSignature();
	void TargetUpdated__DelegateSignature();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnDeath();
	void GetAIController(class ABPC_NPC_NewStandTurret_C** AsBPC_NPC_New_Stand_Turret);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPC_StandTurret_C">();
	}
	static class ABP_NPC_StandTurret_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPC_StandTurret_C>();
	}
};
static_assert(alignof(ABP_NPC_StandTurret_C) == 0x000010, "Wrong alignment on ABP_NPC_StandTurret_C");
static_assert(sizeof(ABP_NPC_StandTurret_C) == 0x000530, "Wrong size on ABP_NPC_StandTurret_C");
static_assert(offsetof(ABP_NPC_StandTurret_C, UberGraphFrame) == 0x0004D0, "Member 'ABP_NPC_StandTurret_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NPC_StandTurret_C, BP_NPCVoiceComponent) == 0x0004D8, "Member 'ABP_NPC_StandTurret_C::BP_NPCVoiceComponent' has a wrong offset!");
static_assert(offsetof(ABP_NPC_StandTurret_C, AmmoEffect_R) == 0x0004E0, "Member 'ABP_NPC_StandTurret_C::AmmoEffect_R' has a wrong offset!");
static_assert(offsetof(ABP_NPC_StandTurret_C, AmmoEffect_L) == 0x0004E8, "Member 'ABP_NPC_StandTurret_C::AmmoEffect_L' has a wrong offset!");
static_assert(offsetof(ABP_NPC_StandTurret_C, FireLWeapon) == 0x0004F0, "Member 'ABP_NPC_StandTurret_C::FireLWeapon' has a wrong offset!");
static_assert(offsetof(ABP_NPC_StandTurret_C, FireRWeapon) == 0x0004F8, "Member 'ABP_NPC_StandTurret_C::FireRWeapon' has a wrong offset!");
static_assert(offsetof(ABP_NPC_StandTurret_C, Mental_Effect) == 0x000500, "Member 'ABP_NPC_StandTurret_C::Mental_Effect' has a wrong offset!");
static_assert(offsetof(ABP_NPC_StandTurret_C, GzInventory) == 0x000508, "Member 'ABP_NPC_StandTurret_C::GzInventory' has a wrong offset!");
static_assert(offsetof(ABP_NPC_StandTurret_C, TurretDestroyed) == 0x000510, "Member 'ABP_NPC_StandTurret_C::TurretDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_NPC_StandTurret_C, TargetUpdated) == 0x000520, "Member 'ABP_NPC_StandTurret_C::TargetUpdated' has a wrong offset!");

}

