#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DroneGoblinLootContainer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.StartCheckingForGround
// 0x0050 (0x0050 - 0x0000)
struct BP_DroneGoblinLootContainer_C_StartCheckingForGround final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50AF[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_StartCheckingForGround) == 0x000008, "Wrong alignment on BP_DroneGoblinLootContainer_C_StartCheckingForGround");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_StartCheckingForGround) == 0x000050, "Wrong size on BP_DroneGoblinLootContainer_C_StartCheckingForGround");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_StartCheckingForGround, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_StartCheckingForGround::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_StartCheckingForGround, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_DroneGoblinLootContainer_C_StartCheckingForGround::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_StartCheckingForGround, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_DroneGoblinLootContainer_C_StartCheckingForGround::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_StartCheckingForGround, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_DroneGoblinLootContainer_C_StartCheckingForGround::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_StartCheckingForGround, CallFunc_BreakVector_X) == 0x000030, "Member 'BP_DroneGoblinLootContainer_C_StartCheckingForGround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_StartCheckingForGround, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_DroneGoblinLootContainer_C_StartCheckingForGround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_StartCheckingForGround, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_DroneGoblinLootContainer_C_StartCheckingForGround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_StartCheckingForGround, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'BP_DroneGoblinLootContainer_C_StartCheckingForGround::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.SetOpenAnimation
// 0x0028 (0x0028 - 0x0000)
struct BP_DroneGoblinLootContainer_C_SetOpenAnimation final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetFirstAnimReference_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_GetFirstAnimReference_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDownSide_IsDownside;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_SetOpenAnimation) == 0x000008, "Wrong alignment on BP_DroneGoblinLootContainer_C_SetOpenAnimation");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_SetOpenAnimation) == 0x000028, "Wrong size on BP_DroneGoblinLootContainer_C_SetOpenAnimation");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_SetOpenAnimation, Temp_bool_Variable) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_SetOpenAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_SetOpenAnimation, CallFunc_GetFirstAnimReference_ReturnValue) == 0x000008, "Member 'BP_DroneGoblinLootContainer_C_SetOpenAnimation::CallFunc_GetFirstAnimReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_SetOpenAnimation, CallFunc_GetFirstAnimReference_ReturnValue_1) == 0x000010, "Member 'BP_DroneGoblinLootContainer_C_SetOpenAnimation::CallFunc_GetFirstAnimReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_SetOpenAnimation, CallFunc_IsDownSide_IsDownside) == 0x000018, "Member 'BP_DroneGoblinLootContainer_C_SetOpenAnimation::CallFunc_IsDownSide_IsDownside' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_SetOpenAnimation, K2Node_Select_Default) == 0x000020, "Member 'BP_DroneGoblinLootContainer_C_SetOpenAnimation::K2Node_Select_Default' has a wrong offset!");

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.ObjectiveExpiredCrateDestruction
// 0x0008 (0x0008 - 0x0000)
struct BP_DroneGoblinLootContainer_C_ObjectiveExpiredCrateDestruction final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_ObjectiveExpiredCrateDestruction) == 0x000008, "Wrong alignment on BP_DroneGoblinLootContainer_C_ObjectiveExpiredCrateDestruction");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_ObjectiveExpiredCrateDestruction) == 0x000008, "Wrong size on BP_DroneGoblinLootContainer_C_ObjectiveExpiredCrateDestruction");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ObjectiveExpiredCrateDestruction, Delay) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_ObjectiveExpiredCrateDestruction::Delay' has a wrong offset!");

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.IsDownSide
// 0x0030 (0x0030 - 0x0000)
struct BP_DroneGoblinLootContainer_C_IsDownSide final
{
public:
	bool                                          Param_IsDownSide;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_IsDownSide) == 0x000008, "Wrong alignment on BP_DroneGoblinLootContainer_C_IsDownSide");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_IsDownSide) == 0x000030, "Wrong size on BP_DroneGoblinLootContainer_C_IsDownSide");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_IsDownSide, Param_IsDownSide) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_IsDownSide::Param_IsDownSide' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_IsDownSide, CallFunc_GetActorUpVector_ReturnValue) == 0x000008, "Member 'BP_DroneGoblinLootContainer_C_IsDownSide::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_IsDownSide, CallFunc_Dot_VectorVector_ReturnValue) == 0x000020, "Member 'BP_DroneGoblinLootContainer_C_IsDownSide::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_IsDownSide, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_DroneGoblinLootContainer_C_IsDownSide::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.HitGround
// 0x0030 (0x0030 - 0x0000)
struct BP_DroneGoblinLootContainer_C_HitGround final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B3[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_HitGround) == 0x000008, "Wrong alignment on BP_DroneGoblinLootContainer_C_HitGround");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_HitGround) == 0x000030, "Wrong size on BP_DroneGoblinLootContainer_C_HitGround");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_HitGround, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_HitGround::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_HitGround, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_DroneGoblinLootContainer_C_HitGround::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_HitGround, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000008, "Member 'BP_DroneGoblinLootContainer_C_HitGround::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_HitGround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_DroneGoblinLootContainer_C_HitGround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_HitGround, CallFunc_PostEventAtLocation_ReturnValue) == 0x000028, "Member 'BP_DroneGoblinLootContainer_C_HitGround::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.GetOpenChestAnimMontage
// 0x0018 (0x0018 - 0x0000)
struct BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage final
{
public:
	class UAnimMontage*                           OpenMontage;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDownSide_IsDownside;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B4[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage) == 0x000008, "Wrong alignment on BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage) == 0x000018, "Wrong size on BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage, OpenMontage) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage::OpenMontage' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage, Temp_bool_Variable) == 0x000008, "Member 'BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage, CallFunc_IsDownSide_IsDownside) == 0x000009, "Member 'BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage::CallFunc_IsDownSide_IsDownside' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage, K2Node_Select_Default) == 0x000010, "Member 'BP_DroneGoblinLootContainer_C_GetOpenChestAnimMontage::K2Node_Select_Default' has a wrong offset!");

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.ExecuteUbergraph_BP_DroneGoblinLootContainer
// 0x0048 (0x0048 - 0x0000)
struct BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B5[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Delay;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_InteractedBy;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UGzInteractableComponent*         K2Node_ComponentBoundEvent_Interactable;           // 0x0018(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B6[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B7[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer) == 0x000008, "Wrong alignment on BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer) == 0x000048, "Wrong size on BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, EntryPoint) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, CallFunc_IsDedicatedServer_ReturnValue) == 0x000005, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, K2Node_CustomEvent_Delay) == 0x000008, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, K2Node_ComponentBoundEvent_InteractedBy) == 0x000010, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::K2Node_ComponentBoundEvent_InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, K2Node_ComponentBoundEvent_Interactable) == 0x000018, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000020, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000040, "Member 'BP_DroneGoblinLootContainer_C_ExecuteUbergraph_BP_DroneGoblinLootContainer::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.CheckForGround
// 0x0048 (0x0048 - 0x0000)
struct BP_DroneGoblinLootContainer_C_CheckForGround final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_CheckForGround) == 0x000008, "Wrong alignment on BP_DroneGoblinLootContainer_C_CheckForGround");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_CheckForGround) == 0x000048, "Wrong size on BP_DroneGoblinLootContainer_C_CheckForGround");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_CheckForGround, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_CheckForGround::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_CheckForGround, CallFunc_BreakVector_X) == 0x000018, "Member 'BP_DroneGoblinLootContainer_C_CheckForGround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_CheckForGround, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_DroneGoblinLootContainer_C_CheckForGround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_CheckForGround, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_DroneGoblinLootContainer_C_CheckForGround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_CheckForGround, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_DroneGoblinLootContainer_C_CheckForGround::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_CheckForGround, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_DroneGoblinLootContainer_C_CheckForGround::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_CheckForGround, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_DroneGoblinLootContainer_C_CheckForGround::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_DroneGoblinLootContainer_C_BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature final
{
public:
	class AActor*                                 InteractedBy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UGzInteractableComponent*         Interactable;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature) == 0x000008, "Wrong alignment on BP_DroneGoblinLootContainer_C_BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature) == 0x000010, "Wrong size on BP_DroneGoblinLootContainer_C_BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature, InteractedBy) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature::InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature, Interactable) == 0x000008, "Member 'BP_DroneGoblinLootContainer_C_BndEvt__BP_DroneGoblinLootContainer_InteractableComponent_K2Node_ComponentBoundEvent_2_GzOnInteract__DelegateSignature::Interactable' has a wrong offset!");

// Function BP_DroneGoblinLootContainer.BP_DroneGoblinLootContainer_C.Awake
// 0x0001 (0x0001 - 0x0000)
struct BP_DroneGoblinLootContainer_C_Awake final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DroneGoblinLootContainer_C_Awake) == 0x000001, "Wrong alignment on BP_DroneGoblinLootContainer_C_Awake");
static_assert(sizeof(BP_DroneGoblinLootContainer_C_Awake) == 0x000001, "Wrong size on BP_DroneGoblinLootContainer_C_Awake");
static_assert(offsetof(BP_DroneGoblinLootContainer_C_Awake, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_DroneGoblinLootContainer_C_Awake::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

}

