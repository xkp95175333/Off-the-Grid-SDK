#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GrappleIndicator

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.ExecuteUbergraph_WBP_GrappleIndicator
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BEF[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_NewViewTarget;                        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_OldViewTarget;                        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF0[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF1[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character_1;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF2[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0064(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF3[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzGA_GrappleHook*                      CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetInRange_ReturnValue;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF4[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF5[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_CanActivateAbility_ReturnValue;        // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF6[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00DC(0x0014)()
};
static_assert(alignof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator) == 0x000008, "Wrong alignment on WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator");
static_assert(sizeof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator) == 0x0000F0, "Wrong size on WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, EntryPoint) == 0x000000, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, Temp_byte_Variable) == 0x000018, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, Temp_bool_Variable) == 0x000019, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_Event_NewViewTarget) == 0x000020, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_Event_NewViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_Event_OldViewTarget) == 0x000028, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_Event_OldViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_DynamicCast_AsGz_Player_Character) == 0x000038, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_DynamicCast_AsGz_Player_Character_1) == 0x000048, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_DynamicCast_AsGz_Player_Character_1' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_Event_MyGeometry) == 0x000064, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_Event_InDeltaTime) == 0x00009C, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000A0, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_IsTargetInRange_ReturnValue) == 0x0000B0, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_IsTargetInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_IsValid_ReturnValue_2) == 0x0000B1, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, Temp_byte_Variable_1) == 0x0000C4, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_Select_Default) == 0x0000C5, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_BP_CanActivateAbility_ReturnValue) == 0x0000C6, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_BP_CanActivateAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_BooleanAND_ReturnValue) == 0x0000C7, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_IsValid_ReturnValue_3) == 0x0000C8, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, CallFunc_SelectColor_ReturnValue) == 0x0000CC, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator, K2Node_MakeStruct_SlateColor) == 0x0000DC, "Member 'WBP_GrappleIndicator_C_ExecuteUbergraph_WBP_GrappleIndicator::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.InitGrappleAbilities
// 0x0070 (0x0070 - 0x0000)
struct WBP_GrappleIndicator_C_InitGrappleAbilities final
{
public:
	class AGzCharacter*                           Param_PlayerCharacter;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0008(0x0020)(ConstParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF7[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGzGameplayAbility*>             CallFunc_GetAbilitiesForInventorySlots_OutAbilities; // 0x0030(0x0010)(ReferenceParm)
	class UGzGameplayAbility*                     CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF8[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzGA_GrappleHook*                      K2Node_DynamicCast_AsGz_GA_Grapple_Hook;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BF9[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BFA[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BFB[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GrappleIndicator_C_InitGrappleAbilities) == 0x000008, "Wrong alignment on WBP_GrappleIndicator_C_InitGrappleAbilities");
static_assert(sizeof(WBP_GrappleIndicator_C_InitGrappleAbilities) == 0x000070, "Wrong size on WBP_GrappleIndicator_C_InitGrappleAbilities");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, Param_PlayerCharacter) == 0x000000, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::Param_PlayerCharacter' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, Temp_struct_Variable) == 0x000008, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, CallFunc_GetAbilitiesForInventorySlots_OutAbilities) == 0x000030, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::CallFunc_GetAbilitiesForInventorySlots_OutAbilities' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, K2Node_DynamicCast_AsGz_GA_Grapple_Hook) == 0x000050, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::K2Node_DynamicCast_AsGz_GA_Grapple_Hook' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, CallFunc_Array_IsEmpty_ReturnValue) == 0x000068, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_InitGrappleAbilities, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'WBP_GrappleIndicator_C_InitGrappleAbilities::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.On Abilities Updated
// 0x0001 (0x0001 - 0x0000)
struct WBP_GrappleIndicator_C_On_Abilities_Updated final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GrappleIndicator_C_On_Abilities_Updated) == 0x000001, "Wrong alignment on WBP_GrappleIndicator_C_On_Abilities_Updated");
static_assert(sizeof(WBP_GrappleIndicator_C_On_Abilities_Updated) == 0x000001, "Wrong size on WBP_GrappleIndicator_C_On_Abilities_Updated");
static_assert(offsetof(WBP_GrappleIndicator_C_On_Abilities_Updated, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_GrappleIndicator_C_On_Abilities_Updated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.ReceiveBindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_GrappleIndicator_C_ReceiveBindEvents final
{
public:
	class APawn*                                  NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GrappleIndicator_C_ReceiveBindEvents) == 0x000008, "Wrong alignment on WBP_GrappleIndicator_C_ReceiveBindEvents");
static_assert(sizeof(WBP_GrappleIndicator_C_ReceiveBindEvents) == 0x000008, "Wrong size on WBP_GrappleIndicator_C_ReceiveBindEvents");
static_assert(offsetof(WBP_GrappleIndicator_C_ReceiveBindEvents, NewViewTarget) == 0x000000, "Member 'WBP_GrappleIndicator_C_ReceiveBindEvents::NewViewTarget' has a wrong offset!");

// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.ReceiveUnbindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_GrappleIndicator_C_ReceiveUnbindEvents final
{
public:
	class APawn*                                  OldViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GrappleIndicator_C_ReceiveUnbindEvents) == 0x000008, "Wrong alignment on WBP_GrappleIndicator_C_ReceiveUnbindEvents");
static_assert(sizeof(WBP_GrappleIndicator_C_ReceiveUnbindEvents) == 0x000008, "Wrong size on WBP_GrappleIndicator_C_ReceiveUnbindEvents");
static_assert(offsetof(WBP_GrappleIndicator_C_ReceiveUnbindEvents, OldViewTarget) == 0x000000, "Member 'WBP_GrappleIndicator_C_ReceiveUnbindEvents::OldViewTarget' has a wrong offset!");

// Function WBP_GrappleIndicator.WBP_GrappleIndicator_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_GrappleIndicator_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GrappleIndicator_C_Tick) == 0x000004, "Wrong alignment on WBP_GrappleIndicator_C_Tick");
static_assert(sizeof(WBP_GrappleIndicator_C_Tick) == 0x00003C, "Wrong size on WBP_GrappleIndicator_C_Tick");
static_assert(offsetof(WBP_GrappleIndicator_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_GrappleIndicator_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GrappleIndicator_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_GrappleIndicator_C_Tick::InDeltaTime' has a wrong offset!");

}

