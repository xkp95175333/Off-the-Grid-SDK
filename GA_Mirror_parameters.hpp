#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Mirror

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_Mirror.GA_Mirror_C.EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Mirror_C_EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Mirror_C_EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB) == 0x000008, "Wrong alignment on GA_Mirror_C_EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB");
static_assert(sizeof(GA_Mirror_C_EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB) == 0x0000B8, "Wrong size on GA_Mirror_C_EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB");
static_assert(offsetof(GA_Mirror_C_EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB, EventTag) == 0x000000, "Member 'GA_Mirror_C_EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB, EventData) == 0x000008, "Member 'GA_Mirror_C_EventReceived_E36C3B224BAEDE43681472A0B4DAF5FB::EventData' has a wrong offset!");

// Function GA_Mirror.GA_Mirror_C.EventReceived_E4F0299B42582F581B1F7A8A35518561
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Mirror_C_EventReceived_E4F0299B42582F581B1F7A8A35518561 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Mirror_C_EventReceived_E4F0299B42582F581B1F7A8A35518561) == 0x000008, "Wrong alignment on GA_Mirror_C_EventReceived_E4F0299B42582F581B1F7A8A35518561");
static_assert(sizeof(GA_Mirror_C_EventReceived_E4F0299B42582F581B1F7A8A35518561) == 0x0000B8, "Wrong size on GA_Mirror_C_EventReceived_E4F0299B42582F581B1F7A8A35518561");
static_assert(offsetof(GA_Mirror_C_EventReceived_E4F0299B42582F581B1F7A8A35518561, EventTag) == 0x000000, "Member 'GA_Mirror_C_EventReceived_E4F0299B42582F581B1F7A8A35518561::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_EventReceived_E4F0299B42582F581B1F7A8A35518561, EventData) == 0x000008, "Member 'GA_Mirror_C_EventReceived_E4F0299B42582F581B1F7A8A35518561::EventData' has a wrong offset!");

// Function GA_Mirror.GA_Mirror_C.ExecuteUbergraph_GA_Mirror
// 0x0890 (0x0890 - 0x0000)
struct GA_Mirror_C_ExecuteUbergraph_GA_Mirror final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607A[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0028(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0150(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0200(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0210(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0220(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Data;                           // 0x0240(0x0028)(ConstParm)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Data)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0268(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable;                              // 0x0278(0x0028)()
	class UGzAT_ServerWaitForTargetData*          CallFunc_ServerWaitForClientTargetData_ReturnValue; // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607B[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x02B0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607C[0x2];                                     // 0x03AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607D[0x4];                                     // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607E[0x4];                                     // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     K2Node_MakeArray_Array;                            // 0x0488(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayAbilityTargetDataHandle       CallFunc_MakeGameplayAbilityTargetDataHandleFromHitResults_ReturnValue; // 0x0498(0x0028)()
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x04C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607F[0x6];                                     // 0x04D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAT_PlayMontageAndWaitForEvent*       CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6080[0x7];                                     // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAT_PlayMontageAndWaitForEvent*       CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1; // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6081[0x7];                                     // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6082[0x7];                                     // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue_1;         // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0530(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzAIController*                        CallFunc_SpawnMirrorBreaker_ReturnValue;           // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x05B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6083[0x7];                                     // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x05C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetViewHitResult_ReturnValue;             // 0x05C8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6084[0x2];                                     // 0x06C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6085[0x4];                                     // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x06D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x06E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0740(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6086[0x4];                                     // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0798(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror) == 0x000010, "Wrong alignment on GA_Mirror_C_ExecuteUbergraph_GA_Mirror");
static_assert(sizeof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror) == 0x000890, "Wrong size on GA_Mirror_C_ExecuteUbergraph_GA_Mirror");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, EntryPoint) == 0x000000, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CustomEvent_NotifyName_2) == 0x000004, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CustomEvent_EventTag_1) == 0x00001C, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CustomEvent_EventData_1) == 0x000028, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_4) == 0x000108, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CustomEvent_NotifyName_1) == 0x000118, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_5) == 0x000120, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CustomEvent_NotifyName) == 0x000130, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_6) == 0x000138, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CustomEvent_EventTag) == 0x000148, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CustomEvent_EventData) == 0x000150, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_7) == 0x000200, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_8) == 0x000210, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_9) == 0x000220, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_10) == 0x000230, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CustomEvent_Data) == 0x000240, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_11) == 0x000268, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, Temp_struct_Variable) == 0x000278, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_ServerWaitForClientTargetData_ReturnValue) == 0x0002A0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_ServerWaitForClientTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_IsValid_ReturnValue) == 0x0002A8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x0002B0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_bBlockingHit) == 0x0003A8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003A9, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_Time) == 0x0003AC, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_Distance) == 0x0003B0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_Location) == 0x0003B8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_ImpactPoint) == 0x0003D0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_Normal) == 0x0003E8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_ImpactNormal) == 0x000400, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_PhysMat) == 0x000418, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_HitActor) == 0x000420, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_HitComponent) == 0x000428, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_HitBoneName) == 0x000430, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_BoneName) == 0x000438, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_HitItem) == 0x000440, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_ElementIndex) == 0x000444, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_FaceIndex) == 0x000448, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_TraceStart) == 0x000450, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_TraceEnd) == 0x000468, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CustomEvent_NotifyName_3) == 0x000480, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_MakeArray_Array) == 0x000488, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_MakeGameplayAbilityTargetDataHandleFromHitResults_ReturnValue) == 0x000498, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_MakeGameplayAbilityTargetDataHandleFromHitResults_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_CreateDelegate_OutputDelegate_12) == 0x0004C0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_K2_HasAuthority_ReturnValue) == 0x0004D0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_K2_CommitAbility_ReturnValue) == 0x0004D1, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x0004D8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_IsValid_ReturnValue_1) == 0x0004E0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1) == 0x0004E8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_IsValid_ReturnValue_2) == 0x0004F0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_GetOwningCharacter_ReturnValue) == 0x0004F8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_DynamicCast_AsGz_Player_Character) == 0x000500, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_DynamicCast_bSuccess) == 0x000508, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000510, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_GetOwningCharacter_ReturnValue_1) == 0x000528, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_GetOwningCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_MakeTransform_ReturnValue) == 0x000530, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000590, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_SpawnMirrorBreaker_ReturnValue) == 0x0005A8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_SpawnMirrorBreaker_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x0005B0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, K2Node_DynamicCast_bSuccess_1) == 0x0005B8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_GetCombatComponent_ReturnValue) == 0x0005C0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_GetViewHitResult_ReturnValue) == 0x0005C8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_GetViewHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0006C0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0006C1, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_Time_1) == 0x0006C4, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_Distance_1) == 0x0006C8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_Location_1) == 0x0006D0, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0006E8, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_Normal_1) == 0x000700, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000718, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_PhysMat_1) == 0x000730, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_HitActor_1) == 0x000738, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_HitComponent_1) == 0x000740, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_HitBoneName_1) == 0x000748, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_BoneName_1) == 0x000750, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_HitItem_1) == 0x000758, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_ElementIndex_1) == 0x00075C, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_FaceIndex_1) == 0x000760, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_TraceStart_1) == 0x000768, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_BreakHitResult_TraceEnd_1) == 0x000780, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(GA_Mirror_C_ExecuteUbergraph_GA_Mirror, CallFunc_MakeHitResult_ReturnValue) == 0x000798, "Member 'GA_Mirror_C_ExecuteUbergraph_GA_Mirror::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");

// Function GA_Mirror.GA_Mirror_C.OnNotifyBegin_E36C3B224BAEDE43681472A0B4DAF5FB
// 0x0008 (0x0008 - 0x0000)
struct GA_Mirror_C_OnNotifyBegin_E36C3B224BAEDE43681472A0B4DAF5FB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Mirror_C_OnNotifyBegin_E36C3B224BAEDE43681472A0B4DAF5FB) == 0x000004, "Wrong alignment on GA_Mirror_C_OnNotifyBegin_E36C3B224BAEDE43681472A0B4DAF5FB");
static_assert(sizeof(GA_Mirror_C_OnNotifyBegin_E36C3B224BAEDE43681472A0B4DAF5FB) == 0x000008, "Wrong size on GA_Mirror_C_OnNotifyBegin_E36C3B224BAEDE43681472A0B4DAF5FB");
static_assert(offsetof(GA_Mirror_C_OnNotifyBegin_E36C3B224BAEDE43681472A0B4DAF5FB, NotifyName) == 0x000000, "Member 'GA_Mirror_C_OnNotifyBegin_E36C3B224BAEDE43681472A0B4DAF5FB::NotifyName' has a wrong offset!");

// Function GA_Mirror.GA_Mirror_C.OnNotifyBegin_E4F0299B42582F581B1F7A8A35518561
// 0x0008 (0x0008 - 0x0000)
struct GA_Mirror_C_OnNotifyBegin_E4F0299B42582F581B1F7A8A35518561 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Mirror_C_OnNotifyBegin_E4F0299B42582F581B1F7A8A35518561) == 0x000004, "Wrong alignment on GA_Mirror_C_OnNotifyBegin_E4F0299B42582F581B1F7A8A35518561");
static_assert(sizeof(GA_Mirror_C_OnNotifyBegin_E4F0299B42582F581B1F7A8A35518561) == 0x000008, "Wrong size on GA_Mirror_C_OnNotifyBegin_E4F0299B42582F581B1F7A8A35518561");
static_assert(offsetof(GA_Mirror_C_OnNotifyBegin_E4F0299B42582F581B1F7A8A35518561, NotifyName) == 0x000000, "Member 'GA_Mirror_C_OnNotifyBegin_E4F0299B42582F581B1F7A8A35518561::NotifyName' has a wrong offset!");

// Function GA_Mirror.GA_Mirror_C.OnNotifyEnd_E36C3B224BAEDE43681472A0B4DAF5FB
// 0x0008 (0x0008 - 0x0000)
struct GA_Mirror_C_OnNotifyEnd_E36C3B224BAEDE43681472A0B4DAF5FB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Mirror_C_OnNotifyEnd_E36C3B224BAEDE43681472A0B4DAF5FB) == 0x000004, "Wrong alignment on GA_Mirror_C_OnNotifyEnd_E36C3B224BAEDE43681472A0B4DAF5FB");
static_assert(sizeof(GA_Mirror_C_OnNotifyEnd_E36C3B224BAEDE43681472A0B4DAF5FB) == 0x000008, "Wrong size on GA_Mirror_C_OnNotifyEnd_E36C3B224BAEDE43681472A0B4DAF5FB");
static_assert(offsetof(GA_Mirror_C_OnNotifyEnd_E36C3B224BAEDE43681472A0B4DAF5FB, NotifyName) == 0x000000, "Member 'GA_Mirror_C_OnNotifyEnd_E36C3B224BAEDE43681472A0B4DAF5FB::NotifyName' has a wrong offset!");

// Function GA_Mirror.GA_Mirror_C.OnNotifyEnd_E4F0299B42582F581B1F7A8A35518561
// 0x0008 (0x0008 - 0x0000)
struct GA_Mirror_C_OnNotifyEnd_E4F0299B42582F581B1F7A8A35518561 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Mirror_C_OnNotifyEnd_E4F0299B42582F581B1F7A8A35518561) == 0x000004, "Wrong alignment on GA_Mirror_C_OnNotifyEnd_E4F0299B42582F581B1F7A8A35518561");
static_assert(sizeof(GA_Mirror_C_OnNotifyEnd_E4F0299B42582F581B1F7A8A35518561) == 0x000008, "Wrong size on GA_Mirror_C_OnNotifyEnd_E4F0299B42582F581B1F7A8A35518561");
static_assert(offsetof(GA_Mirror_C_OnNotifyEnd_E4F0299B42582F581B1F7A8A35518561, NotifyName) == 0x000000, "Member 'GA_Mirror_C_OnNotifyEnd_E4F0299B42582F581B1F7A8A35518561::NotifyName' has a wrong offset!");

// Function GA_Mirror.GA_Mirror_C.ValidData_5132CA09429075E4B6CFF6B18DE2B972
// 0x0028 (0x0028 - 0x0000)
struct GA_Mirror_C_ValidData_5132CA09429075E4B6CFF6B18DE2B972 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Mirror_C_ValidData_5132CA09429075E4B6CFF6B18DE2B972) == 0x000008, "Wrong alignment on GA_Mirror_C_ValidData_5132CA09429075E4B6CFF6B18DE2B972");
static_assert(sizeof(GA_Mirror_C_ValidData_5132CA09429075E4B6CFF6B18DE2B972) == 0x000028, "Wrong size on GA_Mirror_C_ValidData_5132CA09429075E4B6CFF6B18DE2B972");
static_assert(offsetof(GA_Mirror_C_ValidData_5132CA09429075E4B6CFF6B18DE2B972, Data) == 0x000000, "Member 'GA_Mirror_C_ValidData_5132CA09429075E4B6CFF6B18DE2B972::Data' has a wrong offset!");

}

