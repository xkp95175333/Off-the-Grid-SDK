#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_NPC_Enemy

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "E_NPC_MissionStates_structs.hpp"
#include "E_NPCIdleMontages_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.SetMissionState
// 0x0001 (0x0001 - 0x0000)
struct BPC_NPC_Enemy_C_SetMissionState final
{
public:
	E_NPC_MissionStates                           NewMissionState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_SetMissionState) == 0x000001, "Wrong alignment on BPC_NPC_Enemy_C_SetMissionState");
static_assert(sizeof(BPC_NPC_Enemy_C_SetMissionState) == 0x000001, "Wrong size on BPC_NPC_Enemy_C_SetMissionState");
static_assert(offsetof(BPC_NPC_Enemy_C_SetMissionState, NewMissionState) == 0x000000, "Member 'BPC_NPC_Enemy_C_SetMissionState::NewMissionState' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.ReceiveUnPossess
// 0x0008 (0x0008 - 0x0000)
struct BPC_NPC_Enemy_C_ReceiveUnPossess final
{
public:
	class APawn*                                  UnpossessedPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_ReceiveUnPossess) == 0x000008, "Wrong alignment on BPC_NPC_Enemy_C_ReceiveUnPossess");
static_assert(sizeof(BPC_NPC_Enemy_C_ReceiveUnPossess) == 0x000008, "Wrong size on BPC_NPC_Enemy_C_ReceiveUnPossess");
static_assert(offsetof(BPC_NPC_Enemy_C_ReceiveUnPossess, UnpossessedPawn) == 0x000000, "Member 'BPC_NPC_Enemy_C_ReceiveUnPossess::UnpossessedPawn' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_NPC_Enemy_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_NPC_Enemy_C_ReceiveTick");
static_assert(sizeof(BPC_NPC_Enemy_C_ReceiveTick) == 0x000004, "Wrong size on BPC_NPC_Enemy_C_ReceiveTick");
static_assert(offsetof(BPC_NPC_Enemy_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_NPC_Enemy_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct BPC_NPC_Enemy_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_ReceivePossess) == 0x000008, "Wrong alignment on BPC_NPC_Enemy_C_ReceivePossess");
static_assert(sizeof(BPC_NPC_Enemy_C_ReceivePossess) == 0x000008, "Wrong size on BPC_NPC_Enemy_C_ReceivePossess");
static_assert(offsetof(BPC_NPC_Enemy_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'BPC_NPC_Enemy_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.OnNPCDied
// 0x0008 (0x0008 - 0x0000)
struct BPC_NPC_Enemy_C_OnNPCDied final
{
public:
	class AGzCharacter*                           Param_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_OnNPCDied) == 0x000008, "Wrong alignment on BPC_NPC_Enemy_C_OnNPCDied");
static_assert(sizeof(BPC_NPC_Enemy_C_OnNPCDied) == 0x000008, "Wrong size on BPC_NPC_Enemy_C_OnNPCDied");
static_assert(offsetof(BPC_NPC_Enemy_C_OnNPCDied, Param_Character) == 0x000000, "Member 'BPC_NPC_Enemy_C_OnNPCDied::Param_Character' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.OnChangeAILOD
// 0x0040 (0x0040 - 0x0000)
struct BPC_NPC_Enemy_C_OnChangeAILOD final
{
public:
	struct FGzAILOD                               AILOD;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BPC_NPC_Enemy_C_OnChangeAILOD) == 0x000008, "Wrong alignment on BPC_NPC_Enemy_C_OnChangeAILOD");
static_assert(sizeof(BPC_NPC_Enemy_C_OnChangeAILOD) == 0x000040, "Wrong size on BPC_NPC_Enemy_C_OnChangeAILOD");
static_assert(offsetof(BPC_NPC_Enemy_C_OnChangeAILOD, AILOD) == 0x000000, "Member 'BPC_NPC_Enemy_C_OnChangeAILOD::AILOD' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.GetIdleMontageToPlay
// 0x0050 (0x0050 - 0x0000)
struct BPC_NPC_Enemy_C_GetIdleMontageToPlay final
{
public:
	E_NPCIdleMontages                             IdleToPlay;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389D[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389E[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_GetIdleMontageToPlay) == 0x000008, "Wrong alignment on BPC_NPC_Enemy_C_GetIdleMontageToPlay");
static_assert(sizeof(BPC_NPC_Enemy_C_GetIdleMontageToPlay) == 0x000050, "Wrong size on BPC_NPC_Enemy_C_GetIdleMontageToPlay");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, IdleToPlay) == 0x000000, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::IdleToPlay' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, Montage) == 0x000008, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::Montage' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, CallFunc_Map_Length_ReturnValue) == 0x000014, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, CallFunc_Map_Values_Values) == 0x000020, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000030, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, CallFunc_Array_Get_Item) == 0x000038, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, CallFunc_Map_Find_Value) == 0x000040, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_GetIdleMontageToPlay, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BPC_NPC_Enemy_C_GetIdleMontageToPlay::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.ExecuteUbergraph_BPC_NPC_Enemy
// 0x0108 (0x0108 - 0x0000)
struct BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAIVoiceComponent*                    CallFunc_GetAIVoiceComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartSound_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartSound_ReturnValue_1;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A0[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzAILOD                               K2Node_CustomEvent_AILOD;                          // 0x0018(0x0040)(ConstParm, NoDestructor)
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzNonPlayerCharacter*                  K2Node_DynamicCast_AsGz_Non_Player_Character;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A1[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzCharacter* Character)> K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_CustomEvent_Character;                      // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzNonPlayerCharacter*                  K2Node_DynamicCast_AsGz_Non_Player_Character_1;    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A2[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGzAILOD& AILOD)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A3[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAIVoiceComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartSound_ReturnValue_2;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A4[0x5];                                     // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue;  // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A5[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_UnpossessedPawn;                      // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGzMentalState ChangedMentalState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzMentalState                                K2Node_CustomEvent_ChangedMentalState;             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy) == 0x000008, "Wrong alignment on BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy");
static_assert(sizeof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy) == 0x000108, "Wrong size on BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, EntryPoint) == 0x000000, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_GetAIVoiceComponent_ReturnValue) == 0x000008, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_GetAIVoiceComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_StartSound_ReturnValue) == 0x000010, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_StartSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_StartSound_ReturnValue_1) == 0x000011, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_StartSound_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_CustomEvent_AILOD) == 0x000018, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_CustomEvent_AILOD' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_Event_PossessedPawn) == 0x000058, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_DynamicCast_AsGz_Non_Player_Character) == 0x000060, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_DynamicCast_AsGz_Non_Player_Character' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_Event_DeltaSeconds) == 0x00006C, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_CustomEvent_Character) == 0x000080, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_DynamicCast_AsGz_Non_Player_Character_1) == 0x000088, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_DynamicCast_AsGz_Non_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_CreateDelegate_OutputDelegate_1) == 0x000094, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A8, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_StartSound_ReturnValue_2) == 0x0000B1, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_StartSound_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_HasAuthority_ReturnValue) == 0x0000B2, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_GetGzAbilitySystemComponent_ReturnValue) == 0x0000D0, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_GetGzAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x0000D8, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_Event_UnpossessedPawn) == 0x0000E0, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_Event_UnpossessedPawn' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E8, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_DynamicCast_AsGz_Character) == 0x0000F8, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_CustomEvent_ChangedMentalState) == 0x000101, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_CustomEvent_ChangedMentalState' has a wrong offset!");
static_assert(offsetof(BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy, K2Node_SwitchEnum_CmpSuccess) == 0x000102, "Member 'BPC_NPC_Enemy_C_ExecuteUbergraph_BPC_NPC_Enemy::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.Event_IdleEnd__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BPC_NPC_Enemy_C_Event_IdleEnd__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_Event_IdleEnd__DelegateSignature) == 0x000001, "Wrong alignment on BPC_NPC_Enemy_C_Event_IdleEnd__DelegateSignature");
static_assert(sizeof(BPC_NPC_Enemy_C_Event_IdleEnd__DelegateSignature) == 0x000001, "Wrong size on BPC_NPC_Enemy_C_Event_IdleEnd__DelegateSignature");
static_assert(offsetof(BPC_NPC_Enemy_C_Event_IdleEnd__DelegateSignature, Success) == 0x000000, "Member 'BPC_NPC_Enemy_C_Event_IdleEnd__DelegateSignature::Success' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.Event_AlertEnd__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BPC_NPC_Enemy_C_Event_AlertEnd__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_Event_AlertEnd__DelegateSignature) == 0x000001, "Wrong alignment on BPC_NPC_Enemy_C_Event_AlertEnd__DelegateSignature");
static_assert(sizeof(BPC_NPC_Enemy_C_Event_AlertEnd__DelegateSignature) == 0x000001, "Wrong size on BPC_NPC_Enemy_C_Event_AlertEnd__DelegateSignature");
static_assert(offsetof(BPC_NPC_Enemy_C_Event_AlertEnd__DelegateSignature, Success) == 0x000000, "Member 'BPC_NPC_Enemy_C_Event_AlertEnd__DelegateSignature::Success' has a wrong offset!");

// Function BPC_NPC_Enemy.BPC_NPC_Enemy_C.MentalStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BPC_NPC_Enemy_C_MentalStateChanged final
{
public:
	EGzMentalState                                ChangedMentalState;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NPC_Enemy_C_MentalStateChanged) == 0x000001, "Wrong alignment on BPC_NPC_Enemy_C_MentalStateChanged");
static_assert(sizeof(BPC_NPC_Enemy_C_MentalStateChanged) == 0x000001, "Wrong size on BPC_NPC_Enemy_C_MentalStateChanged");
static_assert(offsetof(BPC_NPC_Enemy_C_MentalStateChanged, ChangedMentalState) == 0x000000, "Member 'BPC_NPC_Enemy_C_MentalStateChanged::ChangedMentalState' has a wrong offset!");

}

