#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MissionStarter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MissionStarter.BP_MissionStarter_C
// 0x0028 (0x0328 - 0x0300)
class ABP_MissionStarter_C : public AGzMissionStarterActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGzAudioHintComponent*                  GzAudioHint;                                       // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MarkerComponent_Opportunity_C*      BP_MarkerComponent_Opportunity;                    // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MarkerAnchor;                                      // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnRep_MissionData();
	void HandleInteraction(class AActor* Actor);
	void ExecuteUbergraph_BP_MissionStarter(int32 EntryPoint);
	bool CanScanOnAnyDistance();
	void BndEvt__BP_MissionStarter_InteractableComponent_K2Node_ComponentBoundEvent_3_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MissionStarter_C">();
	}
	static class ABP_MissionStarter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MissionStarter_C>();
	}
};
static_assert(alignof(ABP_MissionStarter_C) == 0x000008, "Wrong alignment on ABP_MissionStarter_C");
static_assert(sizeof(ABP_MissionStarter_C) == 0x000328, "Wrong size on ABP_MissionStarter_C");
static_assert(offsetof(ABP_MissionStarter_C, UberGraphFrame) == 0x000300, "Member 'ABP_MissionStarter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MissionStarter_C, GzAudioHint) == 0x000308, "Member 'ABP_MissionStarter_C::GzAudioHint' has a wrong offset!");
static_assert(offsetof(ABP_MissionStarter_C, BP_MarkerComponent_Opportunity) == 0x000310, "Member 'ABP_MissionStarter_C::BP_MarkerComponent_Opportunity' has a wrong offset!");
static_assert(offsetof(ABP_MissionStarter_C, MarkerAnchor) == 0x000318, "Member 'ABP_MissionStarter_C::MarkerAnchor' has a wrong offset!");
static_assert(offsetof(ABP_MissionStarter_C, Sphere) == 0x000320, "Member 'ABP_MissionStarter_C::Sphere' has a wrong offset!");

}

