#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkyNavRoute_Base

#include "Basic.hpp"

#include "BP_SkyNavRoute_Base_classes.hpp"
#include "BP_SkyNavRoute_Base_parameters.hpp"


namespace SDK
{

// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.UpdateSplinePointsDetails
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::UpdateSplinePointsDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "UpdateSplinePointsDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.SetTrajectoryValuesToGate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_SkyNavGate_C*                 GateActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::SetTrajectoryValuesToGate(class ABP_SkyNavGate_C* GateActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "SetTrajectoryValuesToGate");

	Params::BP_SkyNavRoute_Base_C_SetTrajectoryValuesToGate Parms{};

	Parms.GateActor = GateActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.SetActive
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMissionObjective*                Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::SetActive(bool bActive, class UMissionObjective* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "SetActive");

	Params::BP_SkyNavRoute_Base_C_SetActive Parms{};

	Parms.bActive = bActive;
	Parms.Objective = Objective;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.RouteActivation_SC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::RouteActivation_SC(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "RouteActivation_SC");

	Params::BP_SkyNavRoute_Base_C_RouteActivation_SC Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.RotateStartEffectTowardsFirstGate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::RotateStartEffectTowardsFirstGate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "RotateStartEffectTowardsFirstGate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.OnRouteDestroyed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::OnRouteDestroyed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "OnRouteDestroyed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.OnPlayerFlyThrough__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FlyGateSplinePoint                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::OnPlayerFlyThrough__DelegateSignature(int32 FlyGateSplinePoint, int32 PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "OnPlayerFlyThrough__DelegateSignature");

	Params::BP_SkyNavRoute_Base_C_OnPlayerFlyThrough__DelegateSignature Parms{};

	Parms.FlyGateSplinePoint = FlyGateSplinePoint;
	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.OnGatePendingDestroyStarted
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::OnGatePendingDestroyStarted(double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "OnGatePendingDestroyStarted");

	Params::BP_SkyNavRoute_Base_C_OnGatePendingDestroyStarted Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.OnGateConsumedEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_SkyNavGate_C*                 GateRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::OnGateConsumedEvent(class ABP_SkyNavGate_C* GateRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "OnGateConsumedEvent");

	Params::BP_SkyNavRoute_Base_C_OnGateConsumedEvent Parms{};

	Parms.GateRef = GateRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.OnGateConsumed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   GateIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::OnGateConsumed__DelegateSignature(int32 GateIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "OnGateConsumed__DelegateSignature");

	Params::BP_SkyNavRoute_Base_C_OnGateConsumed__DelegateSignature Parms{};

	Parms.GateIndex = GateIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.OnEnoughGatesConsumed
// (BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::OnEnoughGatesConsumed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "OnEnoughGatesConsumed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.OnEnoughGateConsumptionStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ShortestDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::OnEnoughGateConsumptionStarted__DelegateSignature(double ShortestDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "OnEnoughGateConsumptionStarted__DelegateSignature");

	Params::BP_SkyNavRoute_Base_C_OnEnoughGateConsumptionStarted__DelegateSignature Parms{};

	Parms.ShortestDuration = ShortestDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.MissionStartConsumed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::MissionStartConsumed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "MissionStartConsumed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.GetLocalPlayerID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PlayerId                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::GetLocalPlayerID(int32* PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "GetLocalPlayerID");

	Params::BP_SkyNavRoute_Base_C_GetLocalPlayerID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerId != nullptr)
		*PlayerId = Parms.PlayerId;
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.ExecuteUbergraph_BP_SkyNavRoute_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::ExecuteUbergraph_BP_SkyNavRoute_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "ExecuteUbergraph_BP_SkyNavRoute_Base");

	Params::BP_SkyNavRoute_Base_C_ExecuteUbergraph_BP_SkyNavRoute_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.DispatchPlayerFlyThrough
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FlyGateSplinePoint                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::DispatchPlayerFlyThrough(int32 FlyGateSplinePoint, int32 PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "DispatchPlayerFlyThrough");

	Params::BP_SkyNavRoute_Base_C_DispatchPlayerFlyThrough Parms{};

	Parms.FlyGateSplinePoint = FlyGateSplinePoint;
	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.CheckNumberOfGates
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ArrayLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Correct                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::CheckNumberOfGates(int32 ArrayLength, bool* Correct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "CheckNumberOfGates");

	Params::BP_SkyNavRoute_Base_C_CheckNumberOfGates Parms{};

	Parms.ArrayLength = ArrayLength;

	UObject::ProcessEvent(Func, &Parms);

	if (Correct != nullptr)
		*Correct = Parms.Correct;
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.CheckIfRunStarted
// (BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::CheckIfRunStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "CheckIfRunStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.ChangeMarkerVisibility_CO
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::ChangeMarkerVisibility_CO(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "ChangeMarkerVisibility_CO");

	Params::BP_SkyNavRoute_Base_C_ChangeMarkerVisibility_CO Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.CalculateSplinePointTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PointIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESplineCoordinateSpace                  CoordinateSpace                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Return                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::CalculateSplinePointTransform(int32 PointIndex, ESplineCoordinateSpace CoordinateSpace, struct FTransform* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "CalculateSplinePointTransform");

	Params::BP_SkyNavRoute_Base_C_CalculateSplinePointTransform Parms{};

	Parms.PointIndex = PointIndex;
	Parms.CoordinateSpace = CoordinateSpace;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.BndEvt__BP_SkyNavRoute_Base_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_SkyNavRoute_Base_C::BndEvt__BP_SkyNavRoute_Base_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "BndEvt__BP_SkyNavRoute_Base_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_SkyNavRoute_Base_C_BndEvt__BP_SkyNavRoute_Base_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.BndEvt__BP_SkyNavRoute_Base_PlayerDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::BndEvt__BP_SkyNavRoute_Base_PlayerDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "BndEvt__BP_SkyNavRoute_Base_PlayerDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_SkyNavRoute_Base_C_BndEvt__BP_SkyNavRoute_Base_PlayerDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.BndEvt__BP_SkyNavRoute_Base_MissionResource_K2Node_ComponentBoundEvent_2_OnResourcePendingDestroyFinished__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UMissionResourceComponent*        Resource                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::BndEvt__BP_SkyNavRoute_Base_MissionResource_K2Node_ComponentBoundEvent_2_OnResourcePendingDestroyFinished__DelegateSignature(class UMissionResourceComponent* Resource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "BndEvt__BP_SkyNavRoute_Base_MissionResource_K2Node_ComponentBoundEvent_2_OnResourcePendingDestroyFinished__DelegateSignature");

	Params::BP_SkyNavRoute_Base_C_BndEvt__BP_SkyNavRoute_Base_MissionResource_K2Node_ComponentBoundEvent_2_OnResourcePendingDestroyFinished__DelegateSignature Parms{};

	Parms.Resource = Resource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.B2_TeleportRouteToSavedWorldTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::B2_TeleportRouteToSavedWorldTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "B2_TeleportRouteToSavedWorldTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.B1_SaveRouteWorldTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::B1_SaveRouteWorldTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "B1_SaveRouteWorldTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.ActivateGateByProgress
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkyNavRoute_Base_C::ActivateGateByProgress(int32 CurrentProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "ActivateGateByProgress");

	Params::BP_SkyNavRoute_Base_C_ActivateGateByProgress Parms{};

	Parms.CurrentProgress = CurrentProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.A4_CalculateAndSetTrajectoryTangents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::A4_CalculateAndSetTrajectoryTangents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "A4_CalculateAndSetTrajectoryTangents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.A3_ApplySavedCustomGatesParameters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::A3_ApplySavedCustomGatesParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "A3_ApplySavedCustomGatesParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.A2_UpdateCustomGatesParameters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::A2_UpdateCustomGatesParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "A2_UpdateCustomGatesParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkyNavRoute_Base.BP_SkyNavRoute_Base_C.A1_TeleportAllAssignedGatesToSplinePoints
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SkyNavRoute_Base_C::A1_TeleportAllAssignedGatesToSplinePoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyNavRoute_Base_C", "A1_TeleportAllAssignedGatesToSplinePoints");

	UObject::ProcessEvent(Func, nullptr);
}

}

