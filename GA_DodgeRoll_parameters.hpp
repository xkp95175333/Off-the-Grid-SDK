#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DodgeRoll

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_DodgeRoll.GA_DodgeRoll_C.EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56
// 0x00B8 (0x00B8 - 0x0000)
struct GA_DodgeRoll_C_EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_DodgeRoll_C_EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56) == 0x000008, "Wrong alignment on GA_DodgeRoll_C_EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56");
static_assert(sizeof(GA_DodgeRoll_C_EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56) == 0x0000B8, "Wrong size on GA_DodgeRoll_C_EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56");
static_assert(offsetof(GA_DodgeRoll_C_EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56, EventTag) == 0x000000, "Member 'GA_DodgeRoll_C_EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56::EventTag' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56, EventData) == 0x000008, "Member 'GA_DodgeRoll_C_EventReceived_1DDD3AC84E9379B858EFD699ECAFDB56::EventData' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.EventReceived_5BE19EEB455228D6542E999D7593EA31
// 0x00B8 (0x00B8 - 0x0000)
struct GA_DodgeRoll_C_EventReceived_5BE19EEB455228D6542E999D7593EA31 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_DodgeRoll_C_EventReceived_5BE19EEB455228D6542E999D7593EA31) == 0x000008, "Wrong alignment on GA_DodgeRoll_C_EventReceived_5BE19EEB455228D6542E999D7593EA31");
static_assert(sizeof(GA_DodgeRoll_C_EventReceived_5BE19EEB455228D6542E999D7593EA31) == 0x0000B8, "Wrong size on GA_DodgeRoll_C_EventReceived_5BE19EEB455228D6542E999D7593EA31");
static_assert(offsetof(GA_DodgeRoll_C_EventReceived_5BE19EEB455228D6542E999D7593EA31, EventTag) == 0x000000, "Member 'GA_DodgeRoll_C_EventReceived_5BE19EEB455228D6542E999D7593EA31::EventTag' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_EventReceived_5BE19EEB455228D6542E999D7593EA31, EventData) == 0x000008, "Member 'GA_DodgeRoll_C_EventReceived_5BE19EEB455228D6542E999D7593EA31::EventData' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.EventReceived_7332110F42319464795BF691BFDC3545
// 0x00B8 (0x00B8 - 0x0000)
struct GA_DodgeRoll_C_EventReceived_7332110F42319464795BF691BFDC3545 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_DodgeRoll_C_EventReceived_7332110F42319464795BF691BFDC3545) == 0x000008, "Wrong alignment on GA_DodgeRoll_C_EventReceived_7332110F42319464795BF691BFDC3545");
static_assert(sizeof(GA_DodgeRoll_C_EventReceived_7332110F42319464795BF691BFDC3545) == 0x0000B8, "Wrong size on GA_DodgeRoll_C_EventReceived_7332110F42319464795BF691BFDC3545");
static_assert(offsetof(GA_DodgeRoll_C_EventReceived_7332110F42319464795BF691BFDC3545, EventTag) == 0x000000, "Member 'GA_DodgeRoll_C_EventReceived_7332110F42319464795BF691BFDC3545::EventTag' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_EventReceived_7332110F42319464795BF691BFDC3545, EventData) == 0x000008, "Member 'GA_DodgeRoll_C_EventReceived_7332110F42319464795BF691BFDC3545::EventData' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.EventReceived_AC0A7748432E9230D04655BDDE0584FB
// 0x00B8 (0x00B8 - 0x0000)
struct GA_DodgeRoll_C_EventReceived_AC0A7748432E9230D04655BDDE0584FB final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_DodgeRoll_C_EventReceived_AC0A7748432E9230D04655BDDE0584FB) == 0x000008, "Wrong alignment on GA_DodgeRoll_C_EventReceived_AC0A7748432E9230D04655BDDE0584FB");
static_assert(sizeof(GA_DodgeRoll_C_EventReceived_AC0A7748432E9230D04655BDDE0584FB) == 0x0000B8, "Wrong size on GA_DodgeRoll_C_EventReceived_AC0A7748432E9230D04655BDDE0584FB");
static_assert(offsetof(GA_DodgeRoll_C_EventReceived_AC0A7748432E9230D04655BDDE0584FB, EventTag) == 0x000000, "Member 'GA_DodgeRoll_C_EventReceived_AC0A7748432E9230D04655BDDE0584FB::EventTag' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_EventReceived_AC0A7748432E9230D04655BDDE0584FB, EventData) == 0x000008, "Member 'GA_DodgeRoll_C_EventReceived_AC0A7748432E9230D04655BDDE0584FB::EventData' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.ExecuteUbergraph_GA_DodgeRoll
// 0x0580 (0x0580 - 0x0000)
struct GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6072[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x0010(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x0138(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x01E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x01F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0208(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0218(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0248(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0258(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0260(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0310(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0320(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0330(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0340(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x0358(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x0370(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0380(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0388(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_18;           // 0x0438(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x0448(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_20;           // 0x0458(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_21;           // 0x0468(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6073[0x7];                                     // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6074[0x7];                                     // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6075[0x3];                                     // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x04BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6076[0x4];                                     // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6077[0x7];                                     // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x0508(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzAT_PlayMontageAndWaitForEvent*       CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzAT_PlayMontageAndWaitForEvent*       CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1; // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzAT_PlayMontageAndWaitForEvent*       CallFunc_PlayMontageAndWaitForEvent_ReturnValue_2; // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6078[0x6];                                     // 0x0562(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAT_PlayMontageAndWaitForEvent*       CallFunc_PlayMontageAndWaitForEvent_ReturnValue_3; // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0573(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0574(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll) == 0x000008, "Wrong alignment on GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll");
static_assert(sizeof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll) == 0x000580, "Wrong size on GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, EntryPoint) == 0x000000, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_EventTag_3) == 0x000004, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_EventData_3) == 0x000010, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D0, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E0, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F0, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_NotifyName_5) == 0x000100, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_4) == 0x000108, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_NotifyName_4) == 0x000118, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_5) == 0x000120, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_EventTag_2) == 0x000130, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_EventData_2) == 0x000138, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001E8, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001F8, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_8) == 0x000208, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_9) == 0x000218, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_NotifyName_3) == 0x000228, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_10) == 0x000230, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_NotifyName_2) == 0x000240, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_11) == 0x000248, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_EventTag_1) == 0x000258, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_EventData_1) == 0x000260, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_12) == 0x000310, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_13) == 0x000320, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_14) == 0x000330, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_15) == 0x000340, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_NotifyName_1) == 0x000350, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_16) == 0x000358, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_NotifyName) == 0x000368, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_17) == 0x000370, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_EventTag) == 0x000380, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_EventData) == 0x000388, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_18) == 0x000438, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_19) == 0x000448, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_20) == 0x000458, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_21) == 0x000468, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_BreakVector_X) == 0x000478, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_BreakVector_Y) == 0x000480, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_BreakVector_Z) == 0x000488, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_NotifyName_6) == 0x000490, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000498, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_Abs_ReturnValue) == 0x0004A0, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0004A8, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_Abs_ReturnValue_1) == 0x0004B0, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0004B8, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_22) == 0x0004BC, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_GetOwningCharacter_ReturnValue) == 0x0004D0, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CustomEvent_NotifyName_7) == 0x0004D8, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_DynamicCast_AsGz_Player_Character) == 0x0004E0, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_DynamicCast_bSuccess) == 0x0004E8, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0004F0, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_CreateDelegate_OutputDelegate_23) == 0x000508, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_GetVelocity_ReturnValue) == 0x000518, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000530, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x000548, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1) == 0x000550, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_PlayMontageAndWaitForEvent_ReturnValue_2) == 0x000558, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_PlayMontageAndWaitForEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_IsValid_ReturnValue) == 0x000560, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_IsValid_ReturnValue_1) == 0x000561, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_PlayMontageAndWaitForEvent_ReturnValue_3) == 0x000568, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_PlayMontageAndWaitForEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_IsValid_ReturnValue_2) == 0x000570, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_IsValid_ReturnValue_3) == 0x000571, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, K2Node_Event_bWasCancelled) == 0x000572, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_K2_HasAuthority_ReturnValue) == 0x000573, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000574, "Member 'GA_DodgeRoll_C_ExecuteUbergraph_GA_DodgeRoll::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_DodgeRoll_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_DodgeRoll_C_K2_OnEndAbility");
static_assert(sizeof(GA_DodgeRoll_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_DodgeRoll_C_K2_OnEndAbility");
static_assert(offsetof(GA_DodgeRoll_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_DodgeRoll_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.OnNotifyBegin_1DDD3AC84E9379B858EFD699ECAFDB56
// 0x0008 (0x0008 - 0x0000)
struct GA_DodgeRoll_C_OnNotifyBegin_1DDD3AC84E9379B858EFD699ECAFDB56 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_OnNotifyBegin_1DDD3AC84E9379B858EFD699ECAFDB56) == 0x000004, "Wrong alignment on GA_DodgeRoll_C_OnNotifyBegin_1DDD3AC84E9379B858EFD699ECAFDB56");
static_assert(sizeof(GA_DodgeRoll_C_OnNotifyBegin_1DDD3AC84E9379B858EFD699ECAFDB56) == 0x000008, "Wrong size on GA_DodgeRoll_C_OnNotifyBegin_1DDD3AC84E9379B858EFD699ECAFDB56");
static_assert(offsetof(GA_DodgeRoll_C_OnNotifyBegin_1DDD3AC84E9379B858EFD699ECAFDB56, NotifyName) == 0x000000, "Member 'GA_DodgeRoll_C_OnNotifyBegin_1DDD3AC84E9379B858EFD699ECAFDB56::NotifyName' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.OnNotifyBegin_5BE19EEB455228D6542E999D7593EA31
// 0x0008 (0x0008 - 0x0000)
struct GA_DodgeRoll_C_OnNotifyBegin_5BE19EEB455228D6542E999D7593EA31 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_OnNotifyBegin_5BE19EEB455228D6542E999D7593EA31) == 0x000004, "Wrong alignment on GA_DodgeRoll_C_OnNotifyBegin_5BE19EEB455228D6542E999D7593EA31");
static_assert(sizeof(GA_DodgeRoll_C_OnNotifyBegin_5BE19EEB455228D6542E999D7593EA31) == 0x000008, "Wrong size on GA_DodgeRoll_C_OnNotifyBegin_5BE19EEB455228D6542E999D7593EA31");
static_assert(offsetof(GA_DodgeRoll_C_OnNotifyBegin_5BE19EEB455228D6542E999D7593EA31, NotifyName) == 0x000000, "Member 'GA_DodgeRoll_C_OnNotifyBegin_5BE19EEB455228D6542E999D7593EA31::NotifyName' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.OnNotifyBegin_7332110F42319464795BF691BFDC3545
// 0x0008 (0x0008 - 0x0000)
struct GA_DodgeRoll_C_OnNotifyBegin_7332110F42319464795BF691BFDC3545 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_OnNotifyBegin_7332110F42319464795BF691BFDC3545) == 0x000004, "Wrong alignment on GA_DodgeRoll_C_OnNotifyBegin_7332110F42319464795BF691BFDC3545");
static_assert(sizeof(GA_DodgeRoll_C_OnNotifyBegin_7332110F42319464795BF691BFDC3545) == 0x000008, "Wrong size on GA_DodgeRoll_C_OnNotifyBegin_7332110F42319464795BF691BFDC3545");
static_assert(offsetof(GA_DodgeRoll_C_OnNotifyBegin_7332110F42319464795BF691BFDC3545, NotifyName) == 0x000000, "Member 'GA_DodgeRoll_C_OnNotifyBegin_7332110F42319464795BF691BFDC3545::NotifyName' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.OnNotifyBegin_AC0A7748432E9230D04655BDDE0584FB
// 0x0008 (0x0008 - 0x0000)
struct GA_DodgeRoll_C_OnNotifyBegin_AC0A7748432E9230D04655BDDE0584FB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_OnNotifyBegin_AC0A7748432E9230D04655BDDE0584FB) == 0x000004, "Wrong alignment on GA_DodgeRoll_C_OnNotifyBegin_AC0A7748432E9230D04655BDDE0584FB");
static_assert(sizeof(GA_DodgeRoll_C_OnNotifyBegin_AC0A7748432E9230D04655BDDE0584FB) == 0x000008, "Wrong size on GA_DodgeRoll_C_OnNotifyBegin_AC0A7748432E9230D04655BDDE0584FB");
static_assert(offsetof(GA_DodgeRoll_C_OnNotifyBegin_AC0A7748432E9230D04655BDDE0584FB, NotifyName) == 0x000000, "Member 'GA_DodgeRoll_C_OnNotifyBegin_AC0A7748432E9230D04655BDDE0584FB::NotifyName' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.OnNotifyEnd_1DDD3AC84E9379B858EFD699ECAFDB56
// 0x0008 (0x0008 - 0x0000)
struct GA_DodgeRoll_C_OnNotifyEnd_1DDD3AC84E9379B858EFD699ECAFDB56 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_OnNotifyEnd_1DDD3AC84E9379B858EFD699ECAFDB56) == 0x000004, "Wrong alignment on GA_DodgeRoll_C_OnNotifyEnd_1DDD3AC84E9379B858EFD699ECAFDB56");
static_assert(sizeof(GA_DodgeRoll_C_OnNotifyEnd_1DDD3AC84E9379B858EFD699ECAFDB56) == 0x000008, "Wrong size on GA_DodgeRoll_C_OnNotifyEnd_1DDD3AC84E9379B858EFD699ECAFDB56");
static_assert(offsetof(GA_DodgeRoll_C_OnNotifyEnd_1DDD3AC84E9379B858EFD699ECAFDB56, NotifyName) == 0x000000, "Member 'GA_DodgeRoll_C_OnNotifyEnd_1DDD3AC84E9379B858EFD699ECAFDB56::NotifyName' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.OnNotifyEnd_5BE19EEB455228D6542E999D7593EA31
// 0x0008 (0x0008 - 0x0000)
struct GA_DodgeRoll_C_OnNotifyEnd_5BE19EEB455228D6542E999D7593EA31 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_OnNotifyEnd_5BE19EEB455228D6542E999D7593EA31) == 0x000004, "Wrong alignment on GA_DodgeRoll_C_OnNotifyEnd_5BE19EEB455228D6542E999D7593EA31");
static_assert(sizeof(GA_DodgeRoll_C_OnNotifyEnd_5BE19EEB455228D6542E999D7593EA31) == 0x000008, "Wrong size on GA_DodgeRoll_C_OnNotifyEnd_5BE19EEB455228D6542E999D7593EA31");
static_assert(offsetof(GA_DodgeRoll_C_OnNotifyEnd_5BE19EEB455228D6542E999D7593EA31, NotifyName) == 0x000000, "Member 'GA_DodgeRoll_C_OnNotifyEnd_5BE19EEB455228D6542E999D7593EA31::NotifyName' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.OnNotifyEnd_7332110F42319464795BF691BFDC3545
// 0x0008 (0x0008 - 0x0000)
struct GA_DodgeRoll_C_OnNotifyEnd_7332110F42319464795BF691BFDC3545 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_OnNotifyEnd_7332110F42319464795BF691BFDC3545) == 0x000004, "Wrong alignment on GA_DodgeRoll_C_OnNotifyEnd_7332110F42319464795BF691BFDC3545");
static_assert(sizeof(GA_DodgeRoll_C_OnNotifyEnd_7332110F42319464795BF691BFDC3545) == 0x000008, "Wrong size on GA_DodgeRoll_C_OnNotifyEnd_7332110F42319464795BF691BFDC3545");
static_assert(offsetof(GA_DodgeRoll_C_OnNotifyEnd_7332110F42319464795BF691BFDC3545, NotifyName) == 0x000000, "Member 'GA_DodgeRoll_C_OnNotifyEnd_7332110F42319464795BF691BFDC3545::NotifyName' has a wrong offset!");

// Function GA_DodgeRoll.GA_DodgeRoll_C.OnNotifyEnd_AC0A7748432E9230D04655BDDE0584FB
// 0x0008 (0x0008 - 0x0000)
struct GA_DodgeRoll_C_OnNotifyEnd_AC0A7748432E9230D04655BDDE0584FB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DodgeRoll_C_OnNotifyEnd_AC0A7748432E9230D04655BDDE0584FB) == 0x000004, "Wrong alignment on GA_DodgeRoll_C_OnNotifyEnd_AC0A7748432E9230D04655BDDE0584FB");
static_assert(sizeof(GA_DodgeRoll_C_OnNotifyEnd_AC0A7748432E9230D04655BDDE0584FB) == 0x000008, "Wrong size on GA_DodgeRoll_C_OnNotifyEnd_AC0A7748432E9230D04655BDDE0584FB");
static_assert(offsetof(GA_DodgeRoll_C_OnNotifyEnd_AC0A7748432E9230D04655BDDE0584FB, NotifyName) == 0x000000, "Member 'GA_DodgeRoll_C_OnNotifyEnd_AC0A7748432E9230D04655BDDE0584FB::NotifyName' has a wrong offset!");

}

