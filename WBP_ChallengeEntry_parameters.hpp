#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChallengeEntry

#include "Basic.hpp"

#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_ChallengeEntry.WBP_ChallengeEntry_C.UpdateProgressText
// 0x0098 (0x0098 - 0x0000)
struct WBP_ChallengeEntry_C_UpdateProgressText final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66F6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_SelectName_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0010)()
};
static_assert(alignof(WBP_ChallengeEntry_C_UpdateProgressText) == 0x000008, "Wrong alignment on WBP_ChallengeEntry_C_UpdateProgressText");
static_assert(sizeof(WBP_ChallengeEntry_C_UpdateProgressText) == 0x000098, "Wrong size on WBP_ChallengeEntry_C_UpdateProgressText");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, Current) == 0x000000, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::Current' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, Max) == 0x000004, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::Max' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_SelectName_ReturnValue) == 0x000020, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_SelectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000028, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000068, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_SelectString_ReturnValue) == 0x000078, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressText, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'WBP_ChallengeEntry_C_UpdateProgressText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_ChallengeEntry.WBP_ChallengeEntry_C.UpdateProgressBox
// 0x0028 (0x0028 - 0x0000)
struct WBP_ChallengeEntry_C_UpdateProgressBox final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeEntry_C_UpdateProgressBox) == 0x000008, "Wrong alignment on WBP_ChallengeEntry_C_UpdateProgressBox");
static_assert(sizeof(WBP_ChallengeEntry_C_UpdateProgressBox) == 0x000028, "Wrong size on WBP_ChallengeEntry_C_UpdateProgressBox");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressBox, Current) == 0x000000, "Member 'WBP_ChallengeEntry_C_UpdateProgressBox::Current' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressBox, Max) == 0x000004, "Member 'WBP_ChallengeEntry_C_UpdateProgressBox::Max' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressBox, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WBP_ChallengeEntry_C_UpdateProgressBox::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressBox, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000010, "Member 'WBP_ChallengeEntry_C_UpdateProgressBox::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressBox, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'WBP_ChallengeEntry_C_UpdateProgressBox::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_UpdateProgressBox, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000020, "Member 'WBP_ChallengeEntry_C_UpdateProgressBox::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_ChallengeEntry.WBP_ChallengeEntry_C.PullDataFromTrialTemplate
// 0x0028 (0x0028 - 0x0000)
struct WBP_ChallengeEntry_C_PullDataFromTrialTemplate final
{
public:
	class UGzTrialTemplate*                       SourceTemplate;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
};
static_assert(alignof(WBP_ChallengeEntry_C_PullDataFromTrialTemplate) == 0x000008, "Wrong alignment on WBP_ChallengeEntry_C_PullDataFromTrialTemplate");
static_assert(sizeof(WBP_ChallengeEntry_C_PullDataFromTrialTemplate) == 0x000028, "Wrong size on WBP_ChallengeEntry_C_PullDataFromTrialTemplate");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromTrialTemplate, SourceTemplate) == 0x000000, "Member 'WBP_ChallengeEntry_C_PullDataFromTrialTemplate::SourceTemplate' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromTrialTemplate, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'WBP_ChallengeEntry_C_PullDataFromTrialTemplate::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromTrialTemplate, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'WBP_ChallengeEntry_C_PullDataFromTrialTemplate::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_ChallengeEntry.WBP_ChallengeEntry_C.PullDataFromGameplayTrial
// 0x0060 (0x0060 - 0x0000)
struct WBP_ChallengeEntry_C_PullDataFromGameplayTrial final
{
public:
	struct FGzGameplayTrial                       SourceTrial;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FGzGameplayTrial                       LocalSourceTrial;                                  // 0x0020(0x0020)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66F7[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast_1;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeEntry_C_PullDataFromGameplayTrial) == 0x000008, "Wrong alignment on WBP_ChallengeEntry_C_PullDataFromGameplayTrial");
static_assert(sizeof(WBP_ChallengeEntry_C_PullDataFromGameplayTrial) == 0x000060, "Wrong size on WBP_ChallengeEntry_C_PullDataFromGameplayTrial");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromGameplayTrial, SourceTrial) == 0x000000, "Member 'WBP_ChallengeEntry_C_PullDataFromGameplayTrial::SourceTrial' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromGameplayTrial, LocalSourceTrial) == 0x000020, "Member 'WBP_ChallengeEntry_C_PullDataFromGameplayTrial::LocalSourceTrial' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromGameplayTrial, CallFunc_FTrunc_ReturnValue) == 0x000040, "Member 'WBP_ChallengeEntry_C_PullDataFromGameplayTrial::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromGameplayTrial, CallFunc_Array_LastIndex_ReturnValue) == 0x000044, "Member 'WBP_ChallengeEntry_C_PullDataFromGameplayTrial::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromGameplayTrial, CallFunc_FTrunc_ReturnValue_1) == 0x000048, "Member 'WBP_ChallengeEntry_C_PullDataFromGameplayTrial::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromGameplayTrial, CallFunc_FTrunc_A_ImplicitCast) == 0x000050, "Member 'WBP_ChallengeEntry_C_PullDataFromGameplayTrial::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_PullDataFromGameplayTrial, CallFunc_FTrunc_A_ImplicitCast_1) == 0x000058, "Member 'WBP_ChallengeEntry_C_PullDataFromGameplayTrial::CallFunc_FTrunc_A_ImplicitCast_1' has a wrong offset!");

// Function WBP_ChallengeEntry.WBP_ChallengeEntry_C.HandleChallengeCompleted
// 0x0008 (0x0008 - 0x0000)
struct WBP_ChallengeEntry_C_HandleChallengeCompleted final
{
public:
	class UGzTrialTemplate*                       NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeEntry_C_HandleChallengeCompleted) == 0x000008, "Wrong alignment on WBP_ChallengeEntry_C_HandleChallengeCompleted");
static_assert(sizeof(WBP_ChallengeEntry_C_HandleChallengeCompleted) == 0x000008, "Wrong size on WBP_ChallengeEntry_C_HandleChallengeCompleted");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleChallengeCompleted, NewParam) == 0x000000, "Member 'WBP_ChallengeEntry_C_HandleChallengeCompleted::NewParam' has a wrong offset!");

// Function WBP_ChallengeEntry.WBP_ChallengeEntry_C.HandleAchievementStageCompleted
// 0x0090 (0x0090 - 0x0000)
struct WBP_ChallengeEntry_C_HandleAchievementStageCompleted final
{
public:
	class UGzTrialTemplate*                       AchievementTemplate;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CompletedStageIdx;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66F8[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66F9[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0010)()
};
static_assert(alignof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted) == 0x000008, "Wrong alignment on WBP_ChallengeEntry_C_HandleAchievementStageCompleted");
static_assert(sizeof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted) == 0x000090, "Wrong size on WBP_ChallengeEntry_C_HandleAchievementStageCompleted");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, AchievementTemplate) == 0x000000, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::AchievementTemplate' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CompletedStageIdx) == 0x000008, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CompletedStageIdx' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000050, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000070, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_HandleAchievementStageCompleted, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'WBP_ChallengeEntry_C_HandleAchievementStageCompleted::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_ChallengeEntry.WBP_ChallengeEntry_C.GetCurrentStage
// 0x0098 (0x0098 - 0x0000)
struct WBP_ChallengeEntry_C_GetCurrentStage final
{
public:
	struct FGzGameplayTrial                       GameplayTrial;                                     // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         CurrentStageNumber;                                // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentStage;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66FA[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66FB[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66FC[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzTrialStage                          CallFunc_Array_Get_Item;                           // 0x0040(0x0038)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66FD[0x1];                                     // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66FE[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeEntry_C_GetCurrentStage) == 0x000008, "Wrong alignment on WBP_ChallengeEntry_C_GetCurrentStage");
static_assert(sizeof(WBP_ChallengeEntry_C_GetCurrentStage) == 0x000098, "Wrong size on WBP_ChallengeEntry_C_GetCurrentStage");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, GameplayTrial) == 0x000000, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::GameplayTrial' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CurrentStageNumber) == 0x000020, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CurrentStageNumber' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CurrentStage) == 0x000024, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CurrentStage' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000079, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeEntry_C_GetCurrentStage, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000090, "Member 'WBP_ChallengeEntry_C_GetCurrentStage::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");

}

