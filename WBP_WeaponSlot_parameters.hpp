#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponSlot

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_WeaponSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.ButtonHover__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_WeaponSlot_C_ButtonHover__DelegateSignature final
{
public:
	bool                                          IsHover;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6968[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             Item;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_WeaponSlot_C_ButtonHover__DelegateSignature) == 0x000008, "Wrong alignment on WBP_WeaponSlot_C_ButtonHover__DelegateSignature");
static_assert(sizeof(WBP_WeaponSlot_C_ButtonHover__DelegateSignature) == 0x000018, "Wrong size on WBP_WeaponSlot_C_ButtonHover__DelegateSignature");
static_assert(offsetof(WBP_WeaponSlot_C_ButtonHover__DelegateSignature, IsHover) == 0x000000, "Member 'WBP_WeaponSlot_C_ButtonHover__DelegateSignature::IsHover' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ButtonHover__DelegateSignature, Item) == 0x000008, "Member 'WBP_WeaponSlot_C_ButtonHover__DelegateSignature::Item' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.ExecuteUbergraph_WBP_WeaponSlot
// 0x0058 (0x0058 - 0x0000)
struct WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6969[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             K2Node_Event_NewItem;                              // 0x0008(0x0010)(ConstParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCanEquip;                            // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEquipped;                            // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemQuantity_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_696A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot) == 0x000008, "Wrong alignment on WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot");
static_assert(sizeof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot) == 0x000058, "Wrong size on WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, EntryPoint) == 0x000000, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, K2Node_Event_NewItem) == 0x000008, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::K2Node_Event_NewItem' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, Temp_bool_Variable) == 0x000018, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, Temp_byte_Variable) == 0x000019, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, Temp_bool_Variable_1) == 0x00001B, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, Temp_byte_Variable_2) == 0x00001C, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, Temp_byte_Variable_3) == 0x00001D, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, K2Node_Event_bCanEquip) == 0x00001E, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::K2Node_Event_bCanEquip' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, K2Node_Event_bEquipped) == 0x00001F, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::K2Node_Event_bEquipped' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, CallFunc_GetItemQuantity_ReturnValue) == 0x000020, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::CallFunc_GetItemQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, K2Node_Select_Default) == 0x000025, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, K2Node_Select_Default_1) == 0x000027, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, K2Node_ComponentBoundEvent_Button_1) == 0x000028, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, K2Node_ComponentBoundEvent_Button) == 0x000030, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000048, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000050, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000054, "Member 'WBP_WeaponSlot_C_ExecuteUbergraph_WBP_WeaponSlot::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.HandleEmptyItem
// 0x0010 (0x0010 - 0x0000)
struct WBP_WeaponSlot_C_HandleEmptyItem final
{
public:
	class UWBP_Inventory_BaseButton_C*            K2Node_DynamicCast_AsWBP_Inventory_Base_Button;    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponSlot_C_HandleEmptyItem) == 0x000008, "Wrong alignment on WBP_WeaponSlot_C_HandleEmptyItem");
static_assert(sizeof(WBP_WeaponSlot_C_HandleEmptyItem) == 0x000010, "Wrong size on WBP_WeaponSlot_C_HandleEmptyItem");
static_assert(offsetof(WBP_WeaponSlot_C_HandleEmptyItem, K2Node_DynamicCast_AsWBP_Inventory_Base_Button) == 0x000000, "Member 'WBP_WeaponSlot_C_HandleEmptyItem::K2Node_DynamicCast_AsWBP_Inventory_Base_Button' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_HandleEmptyItem, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'WBP_WeaponSlot_C_HandleEmptyItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_HandleEmptyItem, CallFunc_IsHovered_ReturnValue) == 0x000009, "Member 'WBP_WeaponSlot_C_HandleEmptyItem::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.HandleValidItem
// 0x0060 (0x0060 - 0x0000)
struct WBP_WeaponSlot_C_HandleValidItem final
{
public:
	struct FGzInvItem                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzWeaponItemData*                      K2Node_DynamicCast_AsGz_Weapon_Item_Data;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_696B[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_696C[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvPocket                           CallFunc_GetPocket_ReturnValue;                    // 0x0038(0x0028)(ConstParm)
};
static_assert(alignof(WBP_WeaponSlot_C_HandleValidItem) == 0x000008, "Wrong alignment on WBP_WeaponSlot_C_HandleValidItem");
static_assert(sizeof(WBP_WeaponSlot_C_HandleValidItem) == 0x000060, "Wrong size on WBP_WeaponSlot_C_HandleValidItem");
static_assert(offsetof(WBP_WeaponSlot_C_HandleValidItem, Item) == 0x000000, "Member 'WBP_WeaponSlot_C_HandleValidItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_HandleValidItem, CallFunc_GetItemData_ReturnValue) == 0x000010, "Member 'WBP_WeaponSlot_C_HandleValidItem::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_HandleValidItem, K2Node_DynamicCast_AsGz_Weapon_Item_Data) == 0x000018, "Member 'WBP_WeaponSlot_C_HandleValidItem::K2Node_DynamicCast_AsGz_Weapon_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_HandleValidItem, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_WeaponSlot_C_HandleValidItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_HandleValidItem, CallFunc_GetRarity_ReturnValue) == 0x000021, "Member 'WBP_WeaponSlot_C_HandleValidItem::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_HandleValidItem, CallFunc_GetRarityColor_ReturnValue) == 0x000024, "Member 'WBP_WeaponSlot_C_HandleValidItem::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_HandleValidItem, CallFunc_GetPocket_ReturnValue) == 0x000038, "Member 'WBP_WeaponSlot_C_HandleValidItem::CallFunc_GetPocket_ReturnValue' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.OnPocketChanged_BP
// 0x0010 (0x0010 - 0x0000)
struct WBP_WeaponSlot_C_OnPocketChanged_BP final
{
public:
	struct FGzInvItem                             NewItem;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_WeaponSlot_C_OnPocketChanged_BP) == 0x000008, "Wrong alignment on WBP_WeaponSlot_C_OnPocketChanged_BP");
static_assert(sizeof(WBP_WeaponSlot_C_OnPocketChanged_BP) == 0x000010, "Wrong size on WBP_WeaponSlot_C_OnPocketChanged_BP");
static_assert(offsetof(WBP_WeaponSlot_C_OnPocketChanged_BP, NewItem) == 0x000000, "Member 'WBP_WeaponSlot_C_OnPocketChanged_BP::NewItem' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_WeaponSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponSlot_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_WeaponSlot_C_PreConstruct");
static_assert(sizeof(WBP_WeaponSlot_C_PreConstruct) == 0x000001, "Wrong size on WBP_WeaponSlot_C_PreConstruct");
static_assert(offsetof(WBP_WeaponSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_WeaponSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.RefreshEquipCondition
// 0x0001 (0x0001 - 0x0000)
struct WBP_WeaponSlot_C_RefreshEquipCondition final
{
public:
	bool                                          bCanEquip;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponSlot_C_RefreshEquipCondition) == 0x000001, "Wrong alignment on WBP_WeaponSlot_C_RefreshEquipCondition");
static_assert(sizeof(WBP_WeaponSlot_C_RefreshEquipCondition) == 0x000001, "Wrong size on WBP_WeaponSlot_C_RefreshEquipCondition");
static_assert(offsetof(WBP_WeaponSlot_C_RefreshEquipCondition, bCanEquip) == 0x000000, "Member 'WBP_WeaponSlot_C_RefreshEquipCondition::bCanEquip' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.UpdateEquipped
// 0x0001 (0x0001 - 0x0000)
struct WBP_WeaponSlot_C_UpdateEquipped final
{
public:
	bool                                          bEquipped;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponSlot_C_UpdateEquipped) == 0x000001, "Wrong alignment on WBP_WeaponSlot_C_UpdateEquipped");
static_assert(sizeof(WBP_WeaponSlot_C_UpdateEquipped) == 0x000001, "Wrong size on WBP_WeaponSlot_C_UpdateEquipped");
static_assert(offsetof(WBP_WeaponSlot_C_UpdateEquipped, bEquipped) == 0x000000, "Member 'WBP_WeaponSlot_C_UpdateEquipped::bEquipped' has a wrong offset!");

// Function WBP_WeaponSlot.WBP_WeaponSlot_C.UpdateState
// 0x0040 (0x0040 - 0x0000)
struct WBP_WeaponSlot_C_UpdateState final
{
public:
	struct FGzInvPocket                           CallFunc_GetPocket_ReturnValue;                    // 0x0000(0x0028)(ConstParm)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzWeaponItemData*                      K2Node_DynamicCast_AsGz_Weapon_Item_Data;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponSlot_C_UpdateState) == 0x000008, "Wrong alignment on WBP_WeaponSlot_C_UpdateState");
static_assert(sizeof(WBP_WeaponSlot_C_UpdateState) == 0x000040, "Wrong size on WBP_WeaponSlot_C_UpdateState");
static_assert(offsetof(WBP_WeaponSlot_C_UpdateState, CallFunc_GetPocket_ReturnValue) == 0x000000, "Member 'WBP_WeaponSlot_C_UpdateState::CallFunc_GetPocket_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_UpdateState, CallFunc_GetItemData_ReturnValue) == 0x000028, "Member 'WBP_WeaponSlot_C_UpdateState::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_UpdateState, K2Node_DynamicCast_AsGz_Weapon_Item_Data) == 0x000030, "Member 'WBP_WeaponSlot_C_UpdateState::K2Node_DynamicCast_AsGz_Weapon_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_WeaponSlot_C_UpdateState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_WeaponSlot_C_UpdateState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

