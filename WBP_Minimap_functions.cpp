#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Minimap

#include "Basic.hpp"

#include "WBP_Minimap_classes.hpp"
#include "WBP_Minimap_parameters.hpp"


namespace SDK
{

// Function WBP_Minimap.WBP_Minimap_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Minimap_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Minimap_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Minimap.WBP_Minimap_C.ExecuteUbergraph_WBP_Minimap
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Minimap_C::ExecuteUbergraph_WBP_Minimap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Minimap_C", "ExecuteUbergraph_WBP_Minimap");

	Params::WBP_Minimap_C_ExecuteUbergraph_WBP_Minimap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Minimap.WBP_Minimap_C.OnViewTargetChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            ViewTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Minimap_C::OnViewTargetChanged(class APawn* ViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Minimap_C", "OnViewTargetChanged");

	Params::WBP_Minimap_C_OnViewTargetChanged Parms{};

	Parms.ViewTarget = ViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Minimap.WBP_Minimap_C.ShouldDisplayMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            ViewTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Minimap_C::ShouldDisplayMap(class APawn* ViewTarget, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Minimap_C", "ShouldDisplayMap");

	Params::WBP_Minimap_C_ShouldDisplayMap Parms{};

	Parms.ViewTarget = ViewTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function WBP_Minimap.WBP_Minimap_C.ShouldDisplaySpectatedPlayerMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_Minimap_C::ShouldDisplaySpectatedPlayerMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Minimap_C", "ShouldDisplaySpectatedPlayerMap");

	Params::WBP_Minimap_C_ShouldDisplaySpectatedPlayerMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Minimap.WBP_Minimap_C.UpdateMinimapVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ViewTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Minimap_C::UpdateMinimapVisibility(class APawn* ViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Minimap_C", "UpdateMinimapVisibility");

	Params::WBP_Minimap_C_UpdateMinimapVisibility Parms{};

	Parms.ViewTarget = ViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}

}

