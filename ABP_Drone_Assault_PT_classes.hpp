#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Drone_Assault_PT

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Drone_Assault_PT.ABP_Drone_Assault_PT_C
// 0x06C0 (0x0A30 - 0x0370)
class UABP_Drone_Assault_PT_C final : public UAnimInstance
{
public:
	uint8                                         Pad_5B0B[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0388(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x03D0(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x04C0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0540(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0568(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0590(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x05B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x05E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0628(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0648(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0690(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x06B0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x06F0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0710(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x07D8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x07F8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0820(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0910(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0990(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x09B8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x09E0(0x0048)()
	bool                                          IsActive;                                          // 0x0A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_Drone_Assault_PT(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Drone_Assault_PT_C">();
	}
	static class UABP_Drone_Assault_PT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Drone_Assault_PT_C>();
	}
};
static_assert(alignof(UABP_Drone_Assault_PT_C) == 0x000010, "Wrong alignment on UABP_Drone_Assault_PT_C");
static_assert(sizeof(UABP_Drone_Assault_PT_C) == 0x000A30, "Wrong size on UABP_Drone_Assault_PT_C");
static_assert(offsetof(UABP_Drone_Assault_PT_C, UberGraphFrame) == 0x000370, "Member 'UABP_Drone_Assault_PT_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_Drone_Assault_PT_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_Drone_Assault_PT_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_Slot_1) == 0x000388, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0003D0, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_SaveCachedPose_1) == 0x0004C0, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_UseCachedPose_3) == 0x000540, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_TransitionResult_2) == 0x000568, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_TransitionResult_1) == 0x000590, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_TransitionResult) == 0x0005B8, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_SequencePlayer_1) == 0x0005E0, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_StateResult_2) == 0x000628, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_SequencePlayer) == 0x000648, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_StateResult_1) == 0x000690, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_SequenceEvaluator) == 0x0006B0, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_StateResult) == 0x0006F0, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_StateMachine) == 0x000710, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_Root) == 0x0007D8, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_UseCachedPose_2) == 0x0007F8, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_LayeredBoneBlend) == 0x000820, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_SaveCachedPose) == 0x000910, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_UseCachedPose_1) == 0x000990, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_UseCachedPose) == 0x0009B8, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, AnimGraphNode_Slot) == 0x0009E0, "Member 'UABP_Drone_Assault_PT_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Drone_Assault_PT_C, IsActive) == 0x000A28, "Member 'UABP_Drone_Assault_PT_C::IsActive' has a wrong offset!");

}

