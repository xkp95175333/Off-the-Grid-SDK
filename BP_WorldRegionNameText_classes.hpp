#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WorldRegionNameText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WorldRegionNameText.BP_WorldRegionNameText_C
// 0x00A8 (0x0348 - 0x02A0)
class ABP_WorldRegionNameText_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGzWidgetComponent*                     GzWidget;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_NewTrack_0_CB685D2D4C05CFE087A0FE8B91812925; // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_CB685D2D4C05CFE087A0FE8B91812925; // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A59[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_742676F94B8F00BB6E45C19D022E1370; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_742676F94B8F00BB6E45C19D022E1370; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A5A[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   RegionName;                                        // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AGzMultiStageGameState*                 As_Gz_Multi_Stage_Game_State;                      // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasDeployment;                                    // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A5B[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ToFadeTimer;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bHideOnEnd;                                        // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A5C[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxVisibilityAngle;                                // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinVisibilityDistance;                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_WorldRegionName_C*                 As_WBP_World_Region_Name;                          // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Parameter_Name;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Playback_Speed;                                    // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOverrideBRZoneNameLayer;                          // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A5D[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OverrideRegionName;                                // 0x0338(0x0010)(Edit, BlueprintVisible)

public:
	void CheckRotation();
	void ConvertRegionNameToParam(class FName* ParamName);
	void ExecuteUbergraph_BP_WorldRegionNameText(int32 EntryPoint);
	void FadeIn(bool Param_bHideOnEnd);
	void FadeOut(bool Param_bHideOnEnd);
	void OnPawnChanged(class APawn* Pawn);
	void OnStageChanged();
	void ReceiveBeginPlay();
	void SetText();
	void SetUp();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WorldRegionNameText_C">();
	}
	static class ABP_WorldRegionNameText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WorldRegionNameText_C>();
	}
};
static_assert(alignof(ABP_WorldRegionNameText_C) == 0x000008, "Wrong alignment on ABP_WorldRegionNameText_C");
static_assert(sizeof(ABP_WorldRegionNameText_C) == 0x000348, "Wrong size on ABP_WorldRegionNameText_C");
static_assert(offsetof(ABP_WorldRegionNameText_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_WorldRegionNameText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, GzWidget) == 0x0002A8, "Member 'ABP_WorldRegionNameText_C::GzWidget' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, Scene) == 0x0002B0, "Member 'ABP_WorldRegionNameText_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, Timeline_NewTrack_0_CB685D2D4C05CFE087A0FE8B91812925) == 0x0002B8, "Member 'ABP_WorldRegionNameText_C::Timeline_NewTrack_0_CB685D2D4C05CFE087A0FE8B91812925' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, Timeline__Direction_CB685D2D4C05CFE087A0FE8B91812925) == 0x0002BC, "Member 'ABP_WorldRegionNameText_C::Timeline__Direction_CB685D2D4C05CFE087A0FE8B91812925' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, Timeline) == 0x0002C0, "Member 'ABP_WorldRegionNameText_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, Timeline_0_NewTrack_0_742676F94B8F00BB6E45C19D022E1370) == 0x0002C8, "Member 'ABP_WorldRegionNameText_C::Timeline_0_NewTrack_0_742676F94B8F00BB6E45C19D022E1370' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, Timeline_0__Direction_742676F94B8F00BB6E45C19D022E1370) == 0x0002CC, "Member 'ABP_WorldRegionNameText_C::Timeline_0__Direction_742676F94B8F00BB6E45C19D022E1370' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, Timeline_0) == 0x0002D0, "Member 'ABP_WorldRegionNameText_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, RegionName) == 0x0002D8, "Member 'ABP_WorldRegionNameText_C::RegionName' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, As_Gz_Multi_Stage_Game_State) == 0x0002E8, "Member 'ABP_WorldRegionNameText_C::As_Gz_Multi_Stage_Game_State' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, bWasDeployment) == 0x0002F0, "Member 'ABP_WorldRegionNameText_C::bWasDeployment' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, ToFadeTimer) == 0x0002F8, "Member 'ABP_WorldRegionNameText_C::ToFadeTimer' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, ControlledPawn) == 0x000300, "Member 'ABP_WorldRegionNameText_C::ControlledPawn' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, bHideOnEnd) == 0x000308, "Member 'ABP_WorldRegionNameText_C::bHideOnEnd' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, MaxVisibilityAngle) == 0x000310, "Member 'ABP_WorldRegionNameText_C::MaxVisibilityAngle' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, MinVisibilityDistance) == 0x000318, "Member 'ABP_WorldRegionNameText_C::MinVisibilityDistance' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, As_WBP_World_Region_Name) == 0x000320, "Member 'ABP_WorldRegionNameText_C::As_WBP_World_Region_Name' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, Parameter_Name) == 0x000328, "Member 'ABP_WorldRegionNameText_C::Parameter_Name' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, Playback_Speed) == 0x000330, "Member 'ABP_WorldRegionNameText_C::Playback_Speed' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, bOverrideBRZoneNameLayer) == 0x000334, "Member 'ABP_WorldRegionNameText_C::bOverrideBRZoneNameLayer' has a wrong offset!");
static_assert(offsetof(ABP_WorldRegionNameText_C, OverrideRegionName) == 0x000338, "Member 'ABP_WorldRegionNameText_C::OverrideRegionName' has a wrong offset!");

}

