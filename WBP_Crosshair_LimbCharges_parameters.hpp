#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_LimbCharges

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Crosshair_LimbCharges.WBP_Crosshair_LimbCharges_C.AddLockedCharge
// 0x0020 (0x0020 - 0x0000)
struct WBP_Crosshair_LimbCharges_C_AddLockedCharge final
{
public:
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ADE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C* K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_LimbCharges_C_AddLockedCharge) == 0x000008, "Wrong alignment on WBP_Crosshair_LimbCharges_C_AddLockedCharge");
static_assert(sizeof(WBP_Crosshair_LimbCharges_C_AddLockedCharge) == 0x000020, "Wrong size on WBP_Crosshair_LimbCharges_C_AddLockedCharge");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_AddLockedCharge, CallFunc_GetChildAt_ReturnValue) == 0x000000, "Member 'WBP_Crosshair_LimbCharges_C_AddLockedCharge::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_AddLockedCharge, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Crosshair_LimbCharges_C_AddLockedCharge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_AddLockedCharge, K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator) == 0x000010, "Member 'WBP_Crosshair_LimbCharges_C_AddLockedCharge::K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_AddLockedCharge, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Crosshair_LimbCharges_C_AddLockedCharge::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Crosshair_LimbCharges.WBP_Crosshair_LimbCharges_C.InitCharges
// 0x0088 (0x0088 - 0x0000)
struct WBP_Crosshair_LimbCharges_C_InitCharges final
{
public:
	int32                                         Param_MaxChargesAmount;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ADF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ChargeWidgetPadding;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE0[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE1[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C* CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE2[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_LimbCharges_C_InitCharges) == 0x000008, "Wrong alignment on WBP_Crosshair_LimbCharges_C_InitCharges");
static_assert(sizeof(WBP_Crosshair_LimbCharges_C_InitCharges) == 0x000088, "Wrong size on WBP_Crosshair_LimbCharges_C_InitCharges");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, Param_MaxChargesAmount) == 0x000000, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::Param_MaxChargesAmount' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, ChargeWidgetPadding) == 0x000008, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::ChargeWidgetPadding' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, Temp_int_Variable) == 0x000014, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, K2Node_MakeStruct_Margin) == 0x00001C, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000050, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_Create_ReturnValue) == 0x000068, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000078, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, K2Node_MakeStruct_Left_ImplicitCast) == 0x000080, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_InitCharges, K2Node_MakeStruct_Right_ImplicitCast) == 0x000084, "Member 'WBP_Crosshair_LimbCharges_C_InitCharges::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");

// Function WBP_Crosshair_LimbCharges.WBP_Crosshair_LimbCharges_C.RemoveLockedCharge
// 0x0020 (0x0020 - 0x0000)
struct WBP_Crosshair_LimbCharges_C_RemoveLockedCharge final
{
public:
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C* K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_LimbCharges_C_RemoveLockedCharge) == 0x000008, "Wrong alignment on WBP_Crosshair_LimbCharges_C_RemoveLockedCharge");
static_assert(sizeof(WBP_Crosshair_LimbCharges_C_RemoveLockedCharge) == 0x000020, "Wrong size on WBP_Crosshair_LimbCharges_C_RemoveLockedCharge");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_RemoveLockedCharge, CallFunc_GetChildAt_ReturnValue) == 0x000000, "Member 'WBP_Crosshair_LimbCharges_C_RemoveLockedCharge::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_RemoveLockedCharge, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Crosshair_LimbCharges_C_RemoveLockedCharge::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_RemoveLockedCharge, K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator) == 0x000010, "Member 'WBP_Crosshair_LimbCharges_C_RemoveLockedCharge::K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_RemoveLockedCharge, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Crosshair_LimbCharges_C_RemoveLockedCharge::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Crosshair_LimbCharges.WBP_Crosshair_LimbCharges_C.UpdateChargesState
// 0x0078 (0x0078 - 0x0000)
struct WBP_Crosshair_LimbCharges_C_UpdateChargesState final
{
public:
	class UGzGA_BaseLimbAbility*                  LimbAbilityRef;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxCharges_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE4[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C* K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE5[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentCharges_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE6[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_GetCurrentCharges_ReturnValue_1;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE7[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE8[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C* K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator_1; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_LimbCharges_C_UpdateChargesState) == 0x000008, "Wrong alignment on WBP_Crosshair_LimbCharges_C_UpdateChargesState");
static_assert(sizeof(WBP_Crosshair_LimbCharges_C_UpdateChargesState) == 0x000078, "Wrong size on WBP_Crosshair_LimbCharges_C_UpdateChargesState");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, LimbAbilityRef) == 0x000000, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::LimbAbilityRef' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, Temp_int_Variable) == 0x000008, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, Temp_int_Variable_1) == 0x00000C, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_GetMaxCharges_ReturnValue) == 0x000020, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_GetMaxCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator) == 0x000028, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000031, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_GetCurrentCharges_ReturnValue) == 0x000034, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_GetCurrentCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_Clamp_ReturnValue) == 0x000038, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_GetCurrentCharges_ReturnValue_1) == 0x000050, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_GetCurrentCharges_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator_1) == 0x000068, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::K2Node_DynamicCast_AsWBP_Crosshair_Cyberlimbs_Charge_Indicator_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000071, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_IsValid_ReturnValue_1) == 0x000072, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LimbCharges_C_UpdateChargesState, CallFunc_Greater_IntInt_ReturnValue) == 0x000073, "Member 'WBP_Crosshair_LimbCharges_C_UpdateChargesState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

