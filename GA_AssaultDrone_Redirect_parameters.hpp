#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AssaultDrone_Redirect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_AssaultDrone_Redirect.GA_AssaultDrone_Redirect_C.ExecuteUbergraph_GA_AssaultDrone_Redirect
// 0x0030 (0x0030 - 0x0000)
struct GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D83[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect) == 0x000008, "Wrong alignment on GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect");
static_assert(sizeof(GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect) == 0x000030, "Wrong size on GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect, EntryPoint) == 0x000000, "Member 'GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect, CallFunc_GetOwningCharacter_ReturnValue) == 0x000008, "Member 'GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect, CallFunc_PostEventAtLocation_ReturnValue) == 0x000028, "Member 'GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect, CallFunc_IsDedicatedServer_ReturnValue) == 0x00002C, "Member 'GA_AssaultDrone_Redirect_C_ExecuteUbergraph_GA_AssaultDrone_Redirect::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function GA_AssaultDrone_Redirect.GA_AssaultDrone_Redirect_C.RedirectDrone
// 0x0120 (0x0120 - 0x0000)
struct GA_AssaultDrone_Redirect_C_RedirectDrone final
{
public:
	class UBP_AssaultDroneComponent_C*            CallFunc_GetLimbComponent_Component;               // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D84[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetViewHitResult_ReturnValue;             // 0x0020(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AssaultDrone_Redirect_C_RedirectDrone) == 0x000008, "Wrong alignment on GA_AssaultDrone_Redirect_C_RedirectDrone");
static_assert(sizeof(GA_AssaultDrone_Redirect_C_RedirectDrone) == 0x000120, "Wrong size on GA_AssaultDrone_Redirect_C_RedirectDrone");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_RedirectDrone, CallFunc_GetLimbComponent_Component) == 0x000000, "Member 'GA_AssaultDrone_Redirect_C_RedirectDrone::CallFunc_GetLimbComponent_Component' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_RedirectDrone, CallFunc_GetOwningCharacter_ReturnValue) == 0x000008, "Member 'GA_AssaultDrone_Redirect_C_RedirectDrone::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_RedirectDrone, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GA_AssaultDrone_Redirect_C_RedirectDrone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_RedirectDrone, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'GA_AssaultDrone_Redirect_C_RedirectDrone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_RedirectDrone, CallFunc_GetCombatComponent_ReturnValue) == 0x000018, "Member 'GA_AssaultDrone_Redirect_C_RedirectDrone::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_RedirectDrone, CallFunc_GetViewHitResult_ReturnValue) == 0x000020, "Member 'GA_AssaultDrone_Redirect_C_RedirectDrone::CallFunc_GetViewHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_RedirectDrone, CallFunc_IsValid_ReturnValue_2) == 0x000118, "Member 'GA_AssaultDrone_Redirect_C_RedirectDrone::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function GA_AssaultDrone_Redirect.GA_AssaultDrone_Redirect_C.GetLimbComponent
// 0x0048 (0x0048 - 0x0000)
struct GA_AssaultDrone_Redirect_C_GetLimbComponent final
{
public:
	class UBP_AssaultDroneComponent_C*            Component;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D85[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D86[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AssaultDroneComponent_C*>    CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_AssaultDroneComponent_C*            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRight_NewParam;                         // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AssaultDrone_Redirect_C_GetLimbComponent) == 0x000008, "Wrong alignment on GA_AssaultDrone_Redirect_C_GetLimbComponent");
static_assert(sizeof(GA_AssaultDrone_Redirect_C_GetLimbComponent) == 0x000048, "Wrong size on GA_AssaultDrone_Redirect_C_GetLimbComponent");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, Component) == 0x000000, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::Component' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, Temp_int_Array_Index_Variable) == 0x000008, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_GetOwningCharacter_ReturnValue) == 0x000018, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000028, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_Array_Get_Item) == 0x000038, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_IsRight_NewParam) == 0x000046, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_IsRight_NewParam' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_GetLimbComponent, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000047, "Member 'GA_AssaultDrone_Redirect_C_GetLimbComponent::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function GA_AssaultDrone_Redirect.GA_AssaultDrone_Redirect_C.K2_CanActivateAbility
// 0x0090 (0x0090 - 0x0000)
struct GA_AssaultDrone_Redirect_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D87[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D88[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_AssaultDroneComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_AssaultDrone_Redirect_C_K2_CanActivateAbility");
static_assert(sizeof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility) == 0x000090, "Wrong size on GA_AssaultDrone_Redirect_C_K2_CanActivateAbility");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_AssaultDrone_Redirect_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_AssaultDrone_Redirect_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_AssaultDrone_Redirect_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_AssaultDrone_Redirect_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility, CallFunc_GetOwningCharacter_ReturnValue) == 0x000078, "Member 'GA_AssaultDrone_Redirect_C_K2_CanActivateAbility::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'GA_AssaultDrone_Redirect_C_K2_CanActivateAbility::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'GA_AssaultDrone_Redirect_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_Redirect_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'GA_AssaultDrone_Redirect_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

