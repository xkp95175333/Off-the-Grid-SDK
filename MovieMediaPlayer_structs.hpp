#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovieMediaPlayer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK
{

// ScriptStruct MovieMediaPlayer.MovieSceneMediaPlayerSectionParams
// 0x0030 (0x0030 - 0x0000)
struct FMovieSceneMediaPlayerSectionParams final
{
public:
	class UMediaSource*                           MediaSource;                                       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaTexture*                          MediaTexture;                                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     MediaPlayerMaterial;                               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 BackgroundColor;                                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           SectionStartFrame;                                 // 0x001C(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           SectionEndFrame;                                   // 0x0020(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48FB[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameNumber                           StartFrameOffset;                                  // 0x0028(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48FC[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneMediaPlayerSectionParams) == 0x000008, "Wrong alignment on FMovieSceneMediaPlayerSectionParams");
static_assert(sizeof(FMovieSceneMediaPlayerSectionParams) == 0x000030, "Wrong size on FMovieSceneMediaPlayerSectionParams");
static_assert(offsetof(FMovieSceneMediaPlayerSectionParams, MediaSource) == 0x000000, "Member 'FMovieSceneMediaPlayerSectionParams::MediaSource' has a wrong offset!");
static_assert(offsetof(FMovieSceneMediaPlayerSectionParams, MediaTexture) == 0x000008, "Member 'FMovieSceneMediaPlayerSectionParams::MediaTexture' has a wrong offset!");
static_assert(offsetof(FMovieSceneMediaPlayerSectionParams, MediaPlayerMaterial) == 0x000010, "Member 'FMovieSceneMediaPlayerSectionParams::MediaPlayerMaterial' has a wrong offset!");
static_assert(offsetof(FMovieSceneMediaPlayerSectionParams, BackgroundColor) == 0x000018, "Member 'FMovieSceneMediaPlayerSectionParams::BackgroundColor' has a wrong offset!");
static_assert(offsetof(FMovieSceneMediaPlayerSectionParams, SectionStartFrame) == 0x00001C, "Member 'FMovieSceneMediaPlayerSectionParams::SectionStartFrame' has a wrong offset!");
static_assert(offsetof(FMovieSceneMediaPlayerSectionParams, SectionEndFrame) == 0x000020, "Member 'FMovieSceneMediaPlayerSectionParams::SectionEndFrame' has a wrong offset!");
static_assert(offsetof(FMovieSceneMediaPlayerSectionParams, bLooping) == 0x000024, "Member 'FMovieSceneMediaPlayerSectionParams::bLooping' has a wrong offset!");
static_assert(offsetof(FMovieSceneMediaPlayerSectionParams, StartFrameOffset) == 0x000028, "Member 'FMovieSceneMediaPlayerSectionParams::StartFrameOffset' has a wrong offset!");

// ScriptStruct MovieMediaPlayer.MovieSceneMediaPlayerSectionTemplate
// 0x0038 (0x0058 - 0x0020)
struct FMovieSceneMediaPlayerSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneMediaPlayerSectionParams    Params;                                            // 0x0020(0x0030)(NoDestructor, NativeAccessSpecifierPrivate)
	class UMovieSceneMediaPlayerSection*          MediaSection;                                      // 0x0050(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FMovieSceneMediaPlayerSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneMediaPlayerSectionTemplate");
static_assert(sizeof(FMovieSceneMediaPlayerSectionTemplate) == 0x000058, "Wrong size on FMovieSceneMediaPlayerSectionTemplate");
static_assert(offsetof(FMovieSceneMediaPlayerSectionTemplate, Params) == 0x000020, "Member 'FMovieSceneMediaPlayerSectionTemplate::Params' has a wrong offset!");
static_assert(offsetof(FMovieSceneMediaPlayerSectionTemplate, MediaSection) == 0x000050, "Member 'FMovieSceneMediaPlayerSectionTemplate::MediaSection' has a wrong offset!");

}

