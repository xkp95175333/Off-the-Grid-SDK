#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Defiler_MarkActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "G01_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Defiler_MarkActor.BP_Defiler_MarkActor_C
// 0x0098 (0x0338 - 0x02A0)
class ABP_Defiler_MarkActor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGzMarkerComponent*                     GzMarker;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EGzDefilerTargetType                          Type;                                              // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5B34[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   DebufDefilerVisionTag;                             // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<class AActor*>                           Sources;                                           // 0x02D8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AGzMultiPartCharacter*                  As_Gz_Multi_Part_Character;                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bMarkDisabled;                                     // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddSource(const class AActor*& Source);
	void DefilerTypeToStencilType(EGzDefilerTargetType DefilerType, EDepthStencilValue* StencilType);
	void DisableMark();
	void EnableMark();
	void ExecuteUbergraph_BP_Defiler_MarkActor(int32 EntryPoint);
	void GetNumSources(int32* Param_Sources);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void RemoveSource(const class AActor*& Source, bool* Disabled);
	void SetDefilerStencil(class AActor* Actor, bool bEnable, EDepthStencilValue Stencil);
	void SetStencil(class AActor* Actor, bool bEnable);
	void SetStencilEnabledDefault(bool bEnable);
	void TryKillSelf();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Defiler_MarkActor_C">();
	}
	static class ABP_Defiler_MarkActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Defiler_MarkActor_C>();
	}
};
static_assert(alignof(ABP_Defiler_MarkActor_C) == 0x000008, "Wrong alignment on ABP_Defiler_MarkActor_C");
static_assert(sizeof(ABP_Defiler_MarkActor_C) == 0x000338, "Wrong size on ABP_Defiler_MarkActor_C");
static_assert(offsetof(ABP_Defiler_MarkActor_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_Defiler_MarkActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_MarkActor_C, GzMarker) == 0x0002A8, "Member 'ABP_Defiler_MarkActor_C::GzMarker' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_MarkActor_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_Defiler_MarkActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_MarkActor_C, Target) == 0x0002B8, "Member 'ABP_Defiler_MarkActor_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_MarkActor_C, Type) == 0x0002C0, "Member 'ABP_Defiler_MarkActor_C::Type' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_MarkActor_C, DebufDefilerVisionTag) == 0x0002C8, "Member 'ABP_Defiler_MarkActor_C::DebufDefilerVisionTag' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_MarkActor_C, Sources) == 0x0002D8, "Member 'ABP_Defiler_MarkActor_C::Sources' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_MarkActor_C, As_Gz_Multi_Part_Character) == 0x000328, "Member 'ABP_Defiler_MarkActor_C::As_Gz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_MarkActor_C, bMarkDisabled) == 0x000330, "Member 'ABP_Defiler_MarkActor_C::bMarkDisabled' has a wrong offset!");

}

