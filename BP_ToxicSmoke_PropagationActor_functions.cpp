#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ToxicSmoke_PropagationActor

#include "Basic.hpp"

#include "BP_ToxicSmoke_PropagationActor_classes.hpp"
#include "BP_ToxicSmoke_PropagationActor_parameters.hpp"


namespace SDK
{

// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.CanApplyEffectToTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CanApplyEffect                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::CanApplyEffectToTarget(class AActor* TargetActor, bool* CanApplyEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "CanApplyEffectToTarget");

	Params::BP_ToxicSmoke_PropagationActor_C_CanApplyEffectToTarget Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);

	if (CanApplyEffect != nullptr)
		*CanApplyEffect = Parms.CanApplyEffect;
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.ExecuteUbergraph_BP_ToxicSmoke_PropagationActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::ExecuteUbergraph_BP_ToxicSmoke_PropagationActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "ExecuteUbergraph_BP_ToxicSmoke_PropagationActor");

	Params::BP_ToxicSmoke_PropagationActor_C_ExecuteUbergraph_BP_ToxicSmoke_PropagationActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.OnPawnBeginOverlap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::OnPawnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "OnPawnBeginOverlap");

	Params::BP_ToxicSmoke_PropagationActor_C_OnPawnBeginOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.OnPawnEndOverlap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::OnPawnEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "OnPawnEndOverlap");

	Params::BP_ToxicSmoke_PropagationActor_C_OnPawnEndOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.OnPropagationPointActivated
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   PropagationPointID                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PointLifespan                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::OnPropagationPointActivated(const int32 PropagationPointID, const struct FVector& Location, const struct FVector& Normal, const float PointLifespan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "OnPropagationPointActivated");

	Params::BP_ToxicSmoke_PropagationActor_C_OnPropagationPointActivated Parms{};

	Parms.PropagationPointID = PropagationPointID;
	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);
	Parms.PointLifespan = PointLifespan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ToxicSmoke_PropagationActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "ReceiveEndPlay");

	Params::BP_ToxicSmoke_PropagationActor_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.ReceiveParticleData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBasicParticleData>       Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UNiagaraSystem*                   NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SimulationPositionOffset                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem, const struct FVector& SimulationPositionOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "ReceiveParticleData");

	Params::BP_ToxicSmoke_PropagationActor_C_ReceiveParticleData Parms{};

	Parms.Data = std::move(Data);
	Parms.NiagaraSystem = NiagaraSystem;
	Parms.SimulationPositionOffset = std::move(SimulationPositionOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.RemoveExistingEffectFromTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::RemoveExistingEffectFromTarget(class UAbilitySystemComponent* TargetASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "RemoveExistingEffectFromTarget");

	Params::BP_ToxicSmoke_PropagationActor_C_RemoveExistingEffectFromTarget Parms{};

	Parms.TargetASC = TargetASC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.RemoveRemainingEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ToxicSmoke_PropagationActor_C::RemoveRemainingEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "RemoveRemainingEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.RoundVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          In_Vector                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Out_Vector                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::RoundVector(const struct FVector& In_Vector, struct FVector* Out_Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "RoundVector");

	Params::BP_ToxicSmoke_PropagationActor_C_RoundVector Parms{};

	Parms.In_Vector = std::move(In_Vector);

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Vector != nullptr)
		*Out_Vector = std::move(Parms.Out_Vector);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.SpawnOverlap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          RelativeLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::SpawnOverlap(const struct FVector& RelativeLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "SpawnOverlap");

	Params::BP_ToxicSmoke_PropagationActor_C_SpawnOverlap Parms{};

	Parms.RelativeLocation = std::move(RelativeLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ToxicSmoke_PropagationActor.BP_ToxicSmoke_PropagationActor_C.SpawnSmoke
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          RelativeLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraComponent*                NiagaraSystem                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ToxicSmoke_PropagationActor_C::SpawnSmoke(const struct FVector& RelativeLocation, class UNiagaraComponent** NiagaraSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ToxicSmoke_PropagationActor_C", "SpawnSmoke");

	Params::BP_ToxicSmoke_PropagationActor_C_SpawnSmoke Parms{};

	Parms.RelativeLocation = std::move(RelativeLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (NiagaraSystem != nullptr)
		*NiagaraSystem = Parms.NiagaraSystem;
}

}

