#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EventStatus

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "G01_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_EventStatus.WBP_EventStatus_C.DecrementTime
// 0x0010 (0x0010 - 0x0000)
struct WBP_EventStatus_C_DecrementTime final
{
public:
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AE0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_DecrementTime) == 0x000008, "Wrong alignment on WBP_EventStatus_C_DecrementTime");
static_assert(sizeof(WBP_EventStatus_C_DecrementTime) == 0x000010, "Wrong size on WBP_EventStatus_C_DecrementTime");
static_assert(offsetof(WBP_EventStatus_C_DecrementTime, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'WBP_EventStatus_C_DecrementTime::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_DecrementTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_EventStatus_C_DecrementTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.ExecuteUbergraph_WBP_EventStatus
// 0x0020 (0x0020 - 0x0000)
struct WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AE1[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus) == 0x000008, "Wrong alignment on WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus");
static_assert(sizeof(WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus) == 0x000020, "Wrong size on WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus");
static_assert(offsetof(WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus, EntryPoint) == 0x000000, "Member 'WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WBP_EventStatus_C_ExecuteUbergraph_WBP_EventStatus::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.GetCurrentTime
// 0x0008 (0x0008 - 0x0000)
struct WBP_EventStatus_C_GetCurrentTime final
{
public:
	double                                        Param_CurrentTime;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_GetCurrentTime) == 0x000008, "Wrong alignment on WBP_EventStatus_C_GetCurrentTime");
static_assert(sizeof(WBP_EventStatus_C_GetCurrentTime) == 0x000008, "Wrong size on WBP_EventStatus_C_GetCurrentTime");
static_assert(offsetof(WBP_EventStatus_C_GetCurrentTime, Param_CurrentTime) == 0x000000, "Member 'WBP_EventStatus_C_GetCurrentTime::Param_CurrentTime' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.GetEventTag
// 0x0008 (0x0008 - 0x0000)
struct WBP_EventStatus_C_GetEventTag final
{
public:
	struct FGameplayTag                           Param_EventTag;                                    // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_GetEventTag) == 0x000004, "Wrong alignment on WBP_EventStatus_C_GetEventTag");
static_assert(sizeof(WBP_EventStatus_C_GetEventTag) == 0x000008, "Wrong size on WBP_EventStatus_C_GetEventTag");
static_assert(offsetof(WBP_EventStatus_C_GetEventTag, Param_EventTag) == 0x000000, "Member 'WBP_EventStatus_C_GetEventTag::Param_EventTag' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.OnEventTimeExpired__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_EventStatus_C_OnEventTimeExpired__DelegateSignature final
{
public:
	class UWBP_EventStatus_C*                     InfoPanelSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_OnEventTimeExpired__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EventStatus_C_OnEventTimeExpired__DelegateSignature");
static_assert(sizeof(WBP_EventStatus_C_OnEventTimeExpired__DelegateSignature) == 0x000008, "Wrong size on WBP_EventStatus_C_OnEventTimeExpired__DelegateSignature");
static_assert(offsetof(WBP_EventStatus_C_OnEventTimeExpired__DelegateSignature, InfoPanelSlot) == 0x000000, "Member 'WBP_EventStatus_C_OnEventTimeExpired__DelegateSignature::InfoPanelSlot' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.PostEventEndAnnouncement
// 0x0108 (0x0108 - 0x0000)
struct WBP_EventStatus_C_PostEventEndAnnouncement final
{
public:
	struct FGzGameNotificationDT                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0100)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PostLocalAnnouncement_ReturnValue;        // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue_1;         // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_PostEventEndAnnouncement) == 0x000008, "Wrong alignment on WBP_EventStatus_C_PostEventEndAnnouncement");
static_assert(sizeof(WBP_EventStatus_C_PostEventEndAnnouncement) == 0x000108, "Wrong size on WBP_EventStatus_C_PostEventEndAnnouncement");
static_assert(offsetof(WBP_EventStatus_C_PostEventEndAnnouncement, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'WBP_EventStatus_C_PostEventEndAnnouncement::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_PostEventEndAnnouncement, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'WBP_EventStatus_C_PostEventEndAnnouncement::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_PostEventEndAnnouncement, CallFunc_PostLocalAnnouncement_ReturnValue) == 0x000101, "Member 'WBP_EventStatus_C_PostEventEndAnnouncement::CallFunc_PostLocalAnnouncement_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_PostEventEndAnnouncement, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000102, "Member 'WBP_EventStatus_C_PostEventEndAnnouncement::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_PostEventEndAnnouncement, CallFunc_IsGameplayTagValid_ReturnValue_1) == 0x000103, "Member 'WBP_EventStatus_C_PostEventEndAnnouncement::CallFunc_IsGameplayTagValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_PostEventEndAnnouncement, CallFunc_BooleanAND_ReturnValue) == 0x000104, "Member 'WBP_EventStatus_C_PostEventEndAnnouncement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.SetIconTexture
// 0x0010 (0x0010 - 0x0000)
struct WBP_EventStatus_C_SetIconTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_SetIconTexture) == 0x000008, "Wrong alignment on WBP_EventStatus_C_SetIconTexture");
static_assert(sizeof(WBP_EventStatus_C_SetIconTexture) == 0x000010, "Wrong size on WBP_EventStatus_C_SetIconTexture");
static_assert(offsetof(WBP_EventStatus_C_SetIconTexture, Texture) == 0x000000, "Member 'WBP_EventStatus_C_SetIconTexture::Texture' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_SetIconTexture, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_EventStatus_C_SetIconTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.SetProgressColor
// 0x0010 (0x0010 - 0x0000)
struct WBP_EventStatus_C_SetProgressColor final
{
public:
	struct FLinearColor                           Param_ProgressColor;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_SetProgressColor) == 0x000004, "Wrong alignment on WBP_EventStatus_C_SetProgressColor");
static_assert(sizeof(WBP_EventStatus_C_SetProgressColor) == 0x000010, "Wrong size on WBP_EventStatus_C_SetProgressColor");
static_assert(offsetof(WBP_EventStatus_C_SetProgressColor, Param_ProgressColor) == 0x000000, "Member 'WBP_EventStatus_C_SetProgressColor::Param_ProgressColor' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.SetTitleText
// 0x0018 (0x0018 - 0x0000)
struct WBP_EventStatus_C_SetTitleText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bForceShow;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_SetTitleText) == 0x000008, "Wrong alignment on WBP_EventStatus_C_SetTitleText");
static_assert(sizeof(WBP_EventStatus_C_SetTitleText) == 0x000018, "Wrong size on WBP_EventStatus_C_SetTitleText");
static_assert(offsetof(WBP_EventStatus_C_SetTitleText, InText) == 0x000000, "Member 'WBP_EventStatus_C_SetTitleText::InText' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_SetTitleText, bForceShow) == 0x000010, "Member 'WBP_EventStatus_C_SetTitleText::bForceShow' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_SetTitleText, CallFunc_TextIsEmpty_ReturnValue) == 0x000011, "Member 'WBP_EventStatus_C_SetTitleText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.ShowTitle
// 0x0005 (0x0005 - 0x0000)
struct WBP_EventStatus_C_ShowTitle final
{
public:
	bool                                          bShowTitleText;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_ShowTitle) == 0x000001, "Wrong alignment on WBP_EventStatus_C_ShowTitle");
static_assert(sizeof(WBP_EventStatus_C_ShowTitle) == 0x000005, "Wrong size on WBP_EventStatus_C_ShowTitle");
static_assert(offsetof(WBP_EventStatus_C_ShowTitle, bShowTitleText) == 0x000000, "Member 'WBP_EventStatus_C_ShowTitle::bShowTitleText' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_ShowTitle, Temp_bool_Variable) == 0x000001, "Member 'WBP_EventStatus_C_ShowTitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_ShowTitle, Temp_byte_Variable) == 0x000002, "Member 'WBP_EventStatus_C_ShowTitle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_ShowTitle, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_EventStatus_C_ShowTitle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_ShowTitle, K2Node_Select_Default) == 0x000004, "Member 'WBP_EventStatus_C_ShowTitle::K2Node_Select_Default' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.StartTimer
// 0x0010 (0x0010 - 0x0000)
struct WBP_EventStatus_C_StartTimer final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_StartTimer) == 0x000008, "Wrong alignment on WBP_EventStatus_C_StartTimer");
static_assert(sizeof(WBP_EventStatus_C_StartTimer) == 0x000010, "Wrong size on WBP_EventStatus_C_StartTimer");
static_assert(offsetof(WBP_EventStatus_C_StartTimer, Time) == 0x000000, "Member 'WBP_EventStatus_C_StartTimer::Time' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_StartTimer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_EventStatus_C_StartTimer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.Update Background Visibility
// 0x0020 (0x0020 - 0x0000)
struct WBP_EventStatus_C_Update_Background_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AE2[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0010)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_Update_Background_Visibility) == 0x000008, "Wrong alignment on WBP_EventStatus_C_Update_Background_Visibility");
static_assert(sizeof(WBP_EventStatus_C_Update_Background_Visibility) == 0x000020, "Wrong size on WBP_EventStatus_C_Update_Background_Visibility");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_EventStatus_C_Update_Background_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_EventStatus_C_Update_Background_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_EventStatus_C_Update_Background_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000003, "Member 'WBP_EventStatus_C_Update_Background_Visibility::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, CallFunc_IsVisible_ReturnValue) == 0x000004, "Member 'WBP_EventStatus_C_Update_Background_Visibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'WBP_EventStatus_C_Update_Background_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'WBP_EventStatus_C_Update_Background_Visibility::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'WBP_EventStatus_C_Update_Background_Visibility::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'WBP_EventStatus_C_Update_Background_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WBP_EventStatus_C_Update_Background_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_Update_Background_Visibility, K2Node_Select_Default) == 0x00001B, "Member 'WBP_EventStatus_C_Update_Background_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.UpdateDisplayTime
// 0x0020 (0x0020 - 0x0000)
struct WBP_EventStatus_C_UpdateDisplayTime final
{
public:
	class FText                                   CallFunc_GetTimeInMinutesSecondFormatText_Result;  // 0x0000(0x0010)()
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeInMinutesSecondFormatText_InSeconds_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_UpdateDisplayTime) == 0x000008, "Wrong alignment on WBP_EventStatus_C_UpdateDisplayTime");
static_assert(sizeof(WBP_EventStatus_C_UpdateDisplayTime) == 0x000020, "Wrong size on WBP_EventStatus_C_UpdateDisplayTime");
static_assert(offsetof(WBP_EventStatus_C_UpdateDisplayTime, CallFunc_GetTimeInMinutesSecondFormatText_Result) == 0x000000, "Member 'WBP_EventStatus_C_UpdateDisplayTime::CallFunc_GetTimeInMinutesSecondFormatText_Result' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateDisplayTime, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'WBP_EventStatus_C_UpdateDisplayTime::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateDisplayTime, CallFunc_GetTimeInMinutesSecondFormatText_InSeconds_ImplicitCast) == 0x000018, "Member 'WBP_EventStatus_C_UpdateDisplayTime::CallFunc_GetTimeInMinutesSecondFormatText_InSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateDisplayTime, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x00001C, "Member 'WBP_EventStatus_C_UpdateDisplayTime::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.UpdateIconVisibility
// 0x0008 (0x0008 - 0x0000)
struct WBP_EventStatus_C_UpdateIconVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_UpdateIconVisibility) == 0x000001, "Wrong alignment on WBP_EventStatus_C_UpdateIconVisibility");
static_assert(sizeof(WBP_EventStatus_C_UpdateIconVisibility) == 0x000008, "Wrong size on WBP_EventStatus_C_UpdateIconVisibility");
static_assert(offsetof(WBP_EventStatus_C_UpdateIconVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_EventStatus_C_UpdateIconVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateIconVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_EventStatus_C_UpdateIconVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateIconVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_EventStatus_C_UpdateIconVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateIconVisibility, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_EventStatus_C_UpdateIconVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateIconVisibility, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_EventStatus_C_UpdateIconVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateIconVisibility, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_EventStatus_C_UpdateIconVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateIconVisibility, K2Node_Select_Default) == 0x000006, "Member 'WBP_EventStatus_C_UpdateIconVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateIconVisibility, K2Node_Select_Default_1) == 0x000007, "Member 'WBP_EventStatus_C_UpdateIconVisibility::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.UpdateProgressColor
// 0x0140 (0x0140 - 0x0000)
struct WBP_EventStatus_C_UpdateProgressColor final
{
public:
	struct FLinearColor                           BrushProgressColor;                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrushOutlineSettings             Oldoutline;                                        // 0x0010(0x0040)(Edit, BlueprintVisible)
	struct FSlateBrush                            OldBrash;                                          // 0x0050(0x00D0)(Edit, BlueprintVisible)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0120(0x0014)()
};
static_assert(alignof(WBP_EventStatus_C_UpdateProgressColor) == 0x000010, "Wrong alignment on WBP_EventStatus_C_UpdateProgressColor");
static_assert(sizeof(WBP_EventStatus_C_UpdateProgressColor) == 0x000140, "Wrong size on WBP_EventStatus_C_UpdateProgressColor");
static_assert(offsetof(WBP_EventStatus_C_UpdateProgressColor, BrushProgressColor) == 0x000000, "Member 'WBP_EventStatus_C_UpdateProgressColor::BrushProgressColor' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateProgressColor, Oldoutline) == 0x000010, "Member 'WBP_EventStatus_C_UpdateProgressColor::Oldoutline' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateProgressColor, OldBrash) == 0x000050, "Member 'WBP_EventStatus_C_UpdateProgressColor::OldBrash' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateProgressColor, K2Node_MakeStruct_SlateColor) == 0x000120, "Member 'WBP_EventStatus_C_UpdateProgressColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_EventStatus.WBP_EventStatus_C.UpdateTitle
// 0x0020 (0x0020 - 0x0000)
struct WBP_EventStatus_C_UpdateTitle final
{
public:
	bool                                          ForceHide;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AE3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Param_Name;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventStatus_C_UpdateTitle) == 0x000008, "Wrong alignment on WBP_EventStatus_C_UpdateTitle");
static_assert(sizeof(WBP_EventStatus_C_UpdateTitle) == 0x000020, "Wrong size on WBP_EventStatus_C_UpdateTitle");
static_assert(offsetof(WBP_EventStatus_C_UpdateTitle, ForceHide) == 0x000000, "Member 'WBP_EventStatus_C_UpdateTitle::ForceHide' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateTitle, Param_Name) == 0x000008, "Member 'WBP_EventStatus_C_UpdateTitle::Param_Name' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateTitle, Temp_byte_Variable) == 0x000018, "Member 'WBP_EventStatus_C_UpdateTitle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateTitle, Temp_byte_Variable_1) == 0x000019, "Member 'WBP_EventStatus_C_UpdateTitle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateTitle, Temp_bool_Variable) == 0x00001A, "Member 'WBP_EventStatus_C_UpdateTitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EventStatus_C_UpdateTitle, K2Node_Select_Default) == 0x00001B, "Member 'WBP_EventStatus_C_UpdateTitle::K2Node_Select_Default' has a wrong offset!");

}

