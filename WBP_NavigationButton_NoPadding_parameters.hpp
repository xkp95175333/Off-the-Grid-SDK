#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NavigationButton_NoPadding

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_NavigationButton_NoPadding.WBP_NavigationButton_NoPadding_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct WBP_NavigationButton_NoPadding_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_NavigationButton_NoPadding_C_SetText) == 0x000008, "Wrong alignment on WBP_NavigationButton_NoPadding_C_SetText");
static_assert(sizeof(WBP_NavigationButton_NoPadding_C_SetText) == 0x000010, "Wrong size on WBP_NavigationButton_NoPadding_C_SetText");
static_assert(offsetof(WBP_NavigationButton_NoPadding_C_SetText, InText) == 0x000000, "Member 'WBP_NavigationButton_NoPadding_C_SetText::InText' has a wrong offset!");

// Function WBP_NavigationButton_NoPadding.WBP_NavigationButton_NoPadding_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_NavigationButton_NoPadding_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NavigationButton_NoPadding_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_NavigationButton_NoPadding_C_PreConstruct");
static_assert(sizeof(WBP_NavigationButton_NoPadding_C_PreConstruct) == 0x000001, "Wrong size on WBP_NavigationButton_NoPadding_C_PreConstruct");
static_assert(offsetof(WBP_NavigationButton_NoPadding_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_NavigationButton_NoPadding_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_NavigationButton_NoPadding.WBP_NavigationButton_NoPadding_C.ExecuteUbergraph_WBP_NavigationButton_NoPadding
// 0x0018 (0x0018 - 0x0000)
struct WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60DE[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InText;                               // 0x0008(0x0010)(ConstParm)
};
static_assert(alignof(WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding) == 0x000008, "Wrong alignment on WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding");
static_assert(sizeof(WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding) == 0x000018, "Wrong size on WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding");
static_assert(offsetof(WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding, EntryPoint) == 0x000000, "Member 'WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding, K2Node_Event_InText) == 0x000008, "Member 'WBP_NavigationButton_NoPadding_C_ExecuteUbergraph_WBP_NavigationButton_NoPadding::K2Node_Event_InText' has a wrong offset!");

}

