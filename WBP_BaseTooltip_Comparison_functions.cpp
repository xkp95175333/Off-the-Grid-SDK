#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BaseTooltip_Comparison

#include "Basic.hpp"

#include "WBP_BaseTooltip_Comparison_classes.hpp"
#include "WBP_BaseTooltip_Comparison_parameters.hpp"


namespace SDK
{

// Function WBP_BaseTooltip_Comparison.WBP_BaseTooltip_Comparison_C.GetItemDataComparison
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGzItemData*                      Param_ItemData                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_BaseTooltip_Comparison_C::GetItemDataComparison(class UGzItemData** Param_ItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BaseTooltip_Comparison_C", "GetItemDataComparison");

	Params::WBP_BaseTooltip_Comparison_C_GetItemDataComparison Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ItemData != nullptr)
		*Param_ItemData = Parms.Param_ItemData;
}


// Function WBP_BaseTooltip_Comparison.WBP_BaseTooltip_Comparison_C.SetItemDataComparison
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzItemData*                      Param_ItemData                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreUpdate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_BaseTooltip_Comparison_C::SetItemDataComparison(class UGzItemData* Param_ItemData, bool IgnoreUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BaseTooltip_Comparison_C", "SetItemDataComparison");

	Params::WBP_BaseTooltip_Comparison_C_SetItemDataComparison Parms{};

	Parms.Param_ItemData = Param_ItemData;
	Parms.IgnoreUpdate = IgnoreUpdate;

	UObject::ProcessEvent(Func, &Parms);
}

}

