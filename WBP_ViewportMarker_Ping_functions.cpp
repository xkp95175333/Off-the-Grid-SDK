#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ViewportMarker_Ping

#include "Basic.hpp"

#include "WBP_ViewportMarker_Ping_classes.hpp"
#include "WBP_ViewportMarker_Ping_parameters.hpp"


namespace SDK
{

// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.CheckDisagree
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGzPlayerState*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Agree                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::CheckDisagree(class AGzPlayerState* PlayerState, bool Agree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "CheckDisagree");

	Params::WBP_ViewportMarker_Ping_C_CheckDisagree Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Agree = Agree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.CheckDistanceVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldShow                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::CheckDistanceVisibility(bool ShouldShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "CheckDistanceVisibility");

	Params::WBP_ViewportMarker_Ping_C_CheckDistanceVisibility Parms{};

	Parms.ShouldShow = ShouldShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.CheckEnemyPing
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnemyDetected                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::CheckEnemyPing(bool* EnemyDetected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "CheckEnemyPing");

	Params::WBP_ViewportMarker_Ping_C_CheckEnemyPing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EnemyDetected != nullptr)
		*EnemyDetected = Parms.EnemyDetected;
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ViewportMarker_Ping_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.ExecuteUbergraph_WBP_ViewportMarker_Ping
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::ExecuteUbergraph_WBP_ViewportMarker_Ping(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "ExecuteUbergraph_WBP_ViewportMarker_Ping");

	Params::WBP_ViewportMarker_Ping_C_ExecuteUbergraph_WBP_ViewportMarker_Ping Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.GetIndexInTeam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AGzTeam*                          Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::GetIndexInTeam(class AGzTeam* Team, class UObject* PlayerState, int32* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "GetIndexInTeam");

	Params::WBP_ViewportMarker_Ping_C_GetIndexInTeam Parms{};

	Parms.Team = Team;
	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.GetPositiveNegativePrompt
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGzPingData                      GzPingData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FText                             Ping_Prompts_Cancel                                    (Parm, OutParm)
// class FText                             Negative                                               (ConstParm, Parm, OutParm)
// class FText                             Positive                                               (ConstParm, Parm, OutParm)

void UWBP_ViewportMarker_Ping_C::GetPositiveNegativePrompt(const struct FGzPingData& GzPingData, class FText* Ping_Prompts_Cancel, const class FText* Negative, const class FText* Positive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "GetPositiveNegativePrompt");

	Params::WBP_ViewportMarker_Ping_C_GetPositiveNegativePrompt Parms{};

	Parms.GzPingData = std::move(GzPingData);

	UObject::ProcessEvent(Func, &Parms);

	if (Ping_Prompts_Cancel != nullptr)
		*Ping_Prompts_Cancel = std::move(Parms.Ping_Prompts_Cancel);

	if (Negative != nullptr)
		*Negative = std::move(Parms.Negative);

	if (Positive != nullptr)
		*Positive = std::move(Parms.Positive);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.Handle Item Data
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjectRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ValidItem                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::Handle_Item_Data(class UObject* ObjectRef, bool* ValidItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "Handle Item Data");

	Params::WBP_ViewportMarker_Ping_C_Handle_Item_Data Parms{};

	Parms.ObjectRef = ObjectRef;

	UObject::ProcessEvent(Func, &Parms);

	if (ValidItem != nullptr)
		*ValidItem = Parms.ValidItem;
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.IsItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsItem                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::IsItem(bool* Param_IsItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "IsItem");

	Params::WBP_ViewportMarker_Ping_C_IsItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsItem != nullptr)
		*Param_IsItem = Parms.Param_IsItem;
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.IsPinged
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_ViewportMarker_Ping_C::IsPinged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "IsPinged");

	Params::WBP_ViewportMarker_Ping_C_IsPinged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.OnMarkerFocusChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFocused                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::OnMarkerFocusChangedBP(bool bIsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "OnMarkerFocusChangedBP");

	Params::WBP_ViewportMarker_Ping_C_OnMarkerFocusChangedBP Parms{};

	Parms.bIsFocused = bIsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.OnPingAgreementChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGzPlayerState*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGzPingData                      Param_PingData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    bAgree                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::OnPingAgreementChanged(class AGzPlayerState* PlayerState, const struct FGzPingData& Param_PingData, bool bAgree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "OnPingAgreementChanged");

	Params::WBP_ViewportMarker_Ping_C_OnPingAgreementChanged Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Param_PingData = std::move(Param_PingData);
	Parms.bAgree = bAgree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.PromptVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInFocus                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::PromptVisibility(bool IsInFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "PromptVisibility");

	Params::WBP_ViewportMarker_Ping_C_PromptVisibility Parms{};

	Parms.IsInFocus = IsInFocus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.Set Background Color
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ViewportMarker_Ping_C::Set_Background_Color()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "Set Background Color");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.SetItemData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzItemData*                      ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::SetItemData(class UGzItemData* ItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "SetItemData");

	Params::WBP_ViewportMarker_Ping_C_SetItemData Parms{};

	Parms.ItemData = ItemData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.SetPingData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzPingData                      Param_PingData                                         (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::SetPingData(const struct FGzPingData& Param_PingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "SetPingData");

	Params::WBP_ViewportMarker_Ping_C_SetPingData Parms{};

	Parms.Param_PingData = std::move(Param_PingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.SetPingIcon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_PingContent                   PingContent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::SetPingIcon(const struct FS_PingContent& PingContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "SetPingIcon");

	Params::WBP_ViewportMarker_Ping_C_SetPingIcon Parms{};

	Parms.PingContent = std::move(PingContent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.UpdateDistance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::UpdateDistance(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "UpdateDistance");

	Params::WBP_ViewportMarker_Ping_C_UpdateDistance Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.UpdateDistanceToViewTarget
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::UpdateDistanceToViewTarget(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "UpdateDistanceToViewTarget");

	Params::WBP_ViewportMarker_Ping_C_UpdateDistanceToViewTarget Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.UpdateForPingableMarkerObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ViewportMarker_Ping_C::UpdateForPingableMarkerObject(bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "UpdateForPingableMarkerObject");

	Params::WBP_ViewportMarker_Ping_C_UpdateForPingableMarkerObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function WBP_ViewportMarker_Ping.WBP_ViewportMarker_Ping_C.UpdatePromptText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_ViewportMarker_Ping_C::UpdatePromptText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ViewportMarker_Ping_C", "UpdatePromptText");

	UObject::ProcessEvent(Func, nullptr);
}

}

