#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_UIHelper

#include "Basic.hpp"

#include "BPFL_UIHelper_classes.hpp"
#include "BPFL_UIHelper_parameters.hpp"


namespace SDK
{

// Function BPFL_UIHelper.BPFL_UIHelper_C.CurrencyTextFormat
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Result                                                 (Parm, OutParm)

void UBPFL_UIHelper_C::CurrencyTextFormat(int32 Amount, class UObject* __WorldContext, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "CurrencyTextFormat");

	Params::BPFL_UIHelper_C_CurrencyTextFormat Parms{};

	Parms.Amount = Amount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.CutEnumToEnumValue
// (Static, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EnumValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           EnumName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::CutEnumToEnumValue(const class FString& EnumValue, const class FString& EnumName, class UObject* __WorldContext, class FName* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "CutEnumToEnumValue");

	Params::BPFL_UIHelper_C_CutEnumToEnumValue Parms{};

	Parms.EnumValue = std::move(EnumValue);
	Parms.EnumName = std::move(EnumName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.CutText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   LenMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EndPrefix                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Result                                                 (Parm, OutParm)

void UBPFL_UIHelper_C::CutText(const class FText& InText, int32 LenMax, const class FString& EndPrefix, class UObject* __WorldContext, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "CutText");

	Params::BPFL_UIHelper_C_CutText Parms{};

	Parms.InText = std::move(InText);
	Parms.LenMax = LenMax;
	Parms.EndPrefix = std::move(EndPrefix);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetAmmoTypeImage
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGzWeaponResourceType                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UObject* UBPFL_UIHelper_C::GetAmmoTypeImage(EGzWeaponResourceType Param_Index, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetAmmoTypeImage");

	Params::BPFL_UIHelper_C_GetAmmoTypeImage Parms{};

	Parms.Param_Index = Param_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetCurrencyIcon
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       AsTexture_2D                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetCurrencyIcon(class UObject* __WorldContext, class UTexture2D** AsTexture_2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetCurrencyIcon");

	Params::BPFL_UIHelper_C_GetCurrencyIcon Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AsTexture_2D != nullptr)
		*AsTexture_2D = Parms.AsTexture_2D;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetFireModeIcon
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzWeaponMode                           Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UTexture2D* UBPFL_UIHelper_C::GetFireModeIcon(EGzWeaponMode Param_Index, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetFireModeIcon");

	Params::BPFL_UIHelper_C_GetFireModeIcon Parms{};

	Parms.Param_Index = Param_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetItemType
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGzItemData*                      ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_TooltipItemType                       Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetItemType(class UGzItemData* ItemData, class UObject* __WorldContext, E_TooltipItemType* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetItemType");

	Params::BPFL_UIHelper_C_GetItemType Parms{};

	Parms.ItemData = ItemData;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetLimbHealthAttribute
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGzLimbType                             LimbType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MaxAttribute                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayAttribute               Attribute                                              (Parm, OutParm, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetLimbHealthAttribute(EGzLimbType LimbType, bool MaxAttribute, class UObject* __WorldContext, struct FGameplayAttribute* Attribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetLimbHealthAttribute");

	Params::BPFL_UIHelper_C_GetLimbHealthAttribute Parms{};

	Parms.LimbType = LimbType;
	Parms.MaxAttribute = MaxAttribute;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Attribute != nullptr)
		*Attribute = std::move(Parms.Attribute);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetLimbIdentifier
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGzLimbType                             Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash)

TSoftObjectPtr<class UTexture2D> UBPFL_UIHelper_C::GetLimbIdentifier(EGzLimbType Param_Index, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetLimbIdentifier");

	Params::BPFL_UIHelper_C_GetLimbIdentifier Parms{};

	Parms.Param_Index = Param_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetNotificationColor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGzNotificationGroupType                NotifictionGroupType                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetNotificationColor(EGzNotificationGroupType NotifictionGroupType, class UObject* __WorldContext, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetNotificationColor");

	Params::BPFL_UIHelper_C_GetNotificationColor Parms{};

	Parms.NotifictionGroupType = NotifictionGroupType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetRarityColor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGzItemRarity                           Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UBPFL_UIHelper_C::GetRarityColor(EGzItemRarity Param_Index, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetRarityColor");

	Params::BPFL_UIHelper_C_GetRarityColor Parms{};

	Parms.Param_Index = Param_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetRarityIcon
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGzItemRarity                           Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UTexture2D* UBPFL_UIHelper_C::GetRarityIcon(EGzItemRarity Param_Index, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetRarityIcon");

	Params::BPFL_UIHelper_C_GetRarityIcon Parms{};

	Parms.Param_Index = Param_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetRarityName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGzItemRarity                           Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             RarityName                                             (Parm, OutParm)

void UBPFL_UIHelper_C::GetRarityName(EGzItemRarity Param_Index, class UObject* __WorldContext, class FText* RarityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetRarityName");

	Params::BPFL_UIHelper_C_GetRarityName Parms{};

	Parms.Param_Index = Param_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RarityName != nullptr)
		*RarityName = std::move(Parms.RarityName);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeamAttitudeColor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ETeamAttitude                           TeamAttitude                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetTeamAttitudeColor(ETeamAttitude TeamAttitude, class UObject* __WorldContext, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetTeamAttitudeColor");

	Params::BPFL_UIHelper_C_GetTeamAttitudeColor Parms{};

	Parms.TeamAttitude = TeamAttitude;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeammateASCIIColorFromIndex
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             ASCIIColor                                             (Parm, OutParm)

void UBPFL_UIHelper_C::GetTeammateASCIIColorFromIndex(int32 PlayerIndex, class UObject* __WorldContext, class FText* ASCIIColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetTeammateASCIIColorFromIndex");

	Params::BPFL_UIHelper_C_GetTeammateASCIIColorFromIndex Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ASCIIColor != nullptr)
		*ASCIIColor = std::move(Parms.ASCIIColor);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeammateASCIIShapeFromIndex
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             ShapeAsASCII                                           (Parm, OutParm)

void UBPFL_UIHelper_C::GetTeammateASCIIShapeFromIndex(int32 PlayerIndex, class UObject* __WorldContext, class FText* ShapeAsASCII)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetTeammateASCIIShapeFromIndex");

	Params::BPFL_UIHelper_C_GetTeammateASCIIShapeFromIndex Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ShapeAsASCII != nullptr)
		*ShapeAsASCII = std::move(Parms.ShapeAsASCII);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeammateColorFromIndex
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     OutPlayerColor                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetTeammateColorFromIndex(int32 InPlayerIndex, class UObject* __WorldContext, struct FLinearColor* OutPlayerColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetTeammateColorFromIndex");

	Params::BPFL_UIHelper_C_GetTeammateColorFromIndex Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutPlayerColor != nullptr)
		*OutPlayerColor = std::move(Parms.OutPlayerColor);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTeammateShapeFromIndex
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       NewParam                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetTeammateShapeFromIndex(int32 PlayerIndex, class UObject* __WorldContext, class UTexture2D** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetTeammateShapeFromIndex");

	Params::BPFL_UIHelper_C_GetTeammateShapeFromIndex Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTimeInMinutesSecondFormatText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   InSeconds                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Result                                                 (Parm, OutParm)

void UBPFL_UIHelper_C::GetTimeInMinutesSecondFormatText(float InSeconds, class UObject* __WorldContext, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetTimeInMinutesSecondFormatText");

	Params::BPFL_UIHelper_C_GetTimeInMinutesSecondFormatText Parms{};

	Parms.InSeconds = InSeconds;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetTimeInMinutesSecondToString
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   InSeconds                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           Minutes                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Seconds                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetTimeInMinutesSecondToString(float InSeconds, class UObject* __WorldContext, class FString* Minutes, class FString* Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetTimeInMinutesSecondToString");

	Params::BPFL_UIHelper_C_GetTimeInMinutesSecondToString Parms{};

	Parms.InSeconds = InSeconds;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Minutes != nullptr)
		*Minutes = std::move(Parms.Minutes);

	if (Seconds != nullptr)
		*Seconds = std::move(Parms.Seconds);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetWeaponDataInHand
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AGzCharacter*                     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzWeaponItemData*                CurrentWeaponData                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetWeaponDataInHand(class AGzCharacter* Character, class UObject* __WorldContext, class UGzWeaponItemData** CurrentWeaponData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetWeaponDataInHand");

	Params::BPFL_UIHelper_C_GetWeaponDataInHand Parms{};

	Parms.Character = Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CurrentWeaponData != nullptr)
		*CurrentWeaponData = Parms.CurrentWeaponData;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetWeaponTypeName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGzWeaponType                           WeaponType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Short                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             WeaponName                                             (Parm, OutParm)

void UBPFL_UIHelper_C::GetWeaponTypeName(EGzWeaponType WeaponType, bool Short, class UObject* __WorldContext, class FText* WeaponName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "GetWeaponTypeName");

	Params::BPFL_UIHelper_C_GetWeaponTypeName Parms{};

	Parms.WeaponType = WeaponType;
	Parms.Short = Short;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (WeaponName != nullptr)
		*WeaponName = std::move(Parms.WeaponName);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.IsSoloGamemode
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsSolos                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::IsSoloGamemode(const class APlayerController* PlayerController, class UObject* __WorldContext, bool* bIsSolos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "IsSoloGamemode");

	Params::BPFL_UIHelper_C_IsSoloGamemode Parms{};

	Parms.PlayerController = PlayerController;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bIsSolos != nullptr)
		*bIsSolos = Parms.bIsSolos;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.ScopeValuePerFOV
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  FieldOfView                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::ScopeValuePerFOV(double FieldOfView, class UObject* __WorldContext, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "ScopeValuePerFOV");

	Params::BPFL_UIHelper_C_ScopeValuePerFOV Parms{};

	Parms.FieldOfView = FieldOfView;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.Set Rarity Icon & Color
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EGzItemRarity                           Quality                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::Set_Rarity_Icon___Color(class UImage* Image, EGzItemRarity Quality, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "Set Rarity Icon & Color");

	Params::BPFL_UIHelper_C_Set_Rarity_Icon___Color Parms{};

	Parms.Image = Image;
	Parms.Quality = Quality;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.SetHexIconColored
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzItemRarity                           Quality                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UImage*                           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::SetHexIconColored(EGzItemRarity Quality, class UImage* Image, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UIHelper_C", "SetHexIconColored");

	Params::BPFL_UIHelper_C_SetHexIconColored Parms{};

	Parms.Quality = Quality;
	Parms.Image = Image;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.GetIndexInTeam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AGzPlayerState*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::GetIndexInTeam(class AGzPlayerState* PlayerState, class UObject* __WorldContext, int32* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFL_UIHelper_C", "GetIndexInTeam");

	Params::BPFL_UIHelper_C_GetIndexInTeam Parms{};

	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function BPFL_UIHelper.BPFL_UIHelper_C.IsEventActive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     Event                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ObjectReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ExpireTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UIHelper_C::IsEventActive(const struct FGameplayTag& Event, class UObject* ObjectReference, class UObject* __WorldContext, bool* IsActive, double* ExpireTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFL_UIHelper_C", "IsEventActive");

	Params::BPFL_UIHelper_C_IsEventActive Parms{};

	Parms.Event = std::move(Event);
	Parms.ObjectReference = ObjectReference;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;

	if (ExpireTime != nullptr)
		*ExpireTime = Parms.ExpireTime;
}

}

