#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CurrencyDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CurrencyDisplay.WBP_CurrencyDisplay_C
// 0x0028 (0x0388 - 0x0360)
class UWBP_CurrencyDisplay_C final : public UGzEquipmentPocketWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Hover;                                        // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                ColorBoder;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_Currency_Text;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_CurrencyDisplay_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_CurrencyDisplay_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void Construct();
	void ExecuteUbergraph_WBP_CurrencyDisplay(int32 EntryPoint);
	void OnPocketChanged_BP(const struct FGzInvItem& NewItem);
	void TryDropCurrency();
	void UpdateCurrencyDisplay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CurrencyDisplay_C">();
	}
	static class UWBP_CurrencyDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CurrencyDisplay_C>();
	}
};
static_assert(alignof(UWBP_CurrencyDisplay_C) == 0x000008, "Wrong alignment on UWBP_CurrencyDisplay_C");
static_assert(sizeof(UWBP_CurrencyDisplay_C) == 0x000388, "Wrong size on UWBP_CurrencyDisplay_C");
static_assert(offsetof(UWBP_CurrencyDisplay_C, UberGraphFrame) == 0x000360, "Member 'UWBP_CurrencyDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyDisplay_C, Anim_Hover) == 0x000368, "Member 'UWBP_CurrencyDisplay_C::Anim_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyDisplay_C, ColorBoder) == 0x000370, "Member 'UWBP_CurrencyDisplay_C::ColorBoder' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyDisplay_C, Gz_Currency_Text) == 0x000378, "Member 'UWBP_CurrencyDisplay_C::Gz_Currency_Text' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyDisplay_C, Quantity) == 0x000380, "Member 'UWBP_CurrencyDisplay_C::Quantity' has a wrong offset!");

}

