#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MakeNoiseComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MakeNoiseComponent.MakeNoiseComponent_C
// 0x0020 (0x00C8 - 0x00A8)
class UMakeNoiseComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           MakeNoiseTimer;                                    // 0x00B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CharacterRef;                                      // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        NoiseFrequency;                                    // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActorMakeNoise();
	void CharacterMakeNoise();
	void ExecuteUbergraph_MakeNoiseComponent(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MakeNoiseComponent_C">();
	}
	static class UMakeNoiseComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMakeNoiseComponent_C>();
	}
};
static_assert(alignof(UMakeNoiseComponent_C) == 0x000008, "Wrong alignment on UMakeNoiseComponent_C");
static_assert(sizeof(UMakeNoiseComponent_C) == 0x0000C8, "Wrong size on UMakeNoiseComponent_C");
static_assert(offsetof(UMakeNoiseComponent_C, UberGraphFrame) == 0x0000A8, "Member 'UMakeNoiseComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMakeNoiseComponent_C, MakeNoiseTimer) == 0x0000B0, "Member 'UMakeNoiseComponent_C::MakeNoiseTimer' has a wrong offset!");
static_assert(offsetof(UMakeNoiseComponent_C, CharacterRef) == 0x0000B8, "Member 'UMakeNoiseComponent_C::CharacterRef' has a wrong offset!");
static_assert(offsetof(UMakeNoiseComponent_C, NoiseFrequency) == 0x0000C0, "Member 'UMakeNoiseComponent_C::NoiseFrequency' has a wrong offset!");

}

