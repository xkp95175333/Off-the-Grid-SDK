#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KillZoneDeleter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KillZoneDeleter.BP_KillZoneDeleter_C
// 0x0040 (0x02E0 - 0x02A0)
class ABP_KillZoneDeleter_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         KillZonesArray;                                    // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          KillZonesDeleted;                                  // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_256D[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         TriggersToShoot;                                   // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)

public:
	void RemoveKillZones();
	void ReceiveBeginPlay();
	void OnGlobalOverloadActivated(bool bActivated);
	void ExecuteUbergraph_BP_KillZoneDeleter(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KillZoneDeleter_C">();
	}
	static class ABP_KillZoneDeleter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KillZoneDeleter_C>();
	}
};
static_assert(alignof(ABP_KillZoneDeleter_C) == 0x000008, "Wrong alignment on ABP_KillZoneDeleter_C");
static_assert(sizeof(ABP_KillZoneDeleter_C) == 0x0002E0, "Wrong size on ABP_KillZoneDeleter_C");
static_assert(offsetof(ABP_KillZoneDeleter_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_KillZoneDeleter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_KillZoneDeleter_C, Billboard) == 0x0002A8, "Member 'ABP_KillZoneDeleter_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_KillZoneDeleter_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_KillZoneDeleter_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_KillZoneDeleter_C, KillZonesArray) == 0x0002B8, "Member 'ABP_KillZoneDeleter_C::KillZonesArray' has a wrong offset!");
static_assert(offsetof(ABP_KillZoneDeleter_C, KillZonesDeleted) == 0x0002C8, "Member 'ABP_KillZoneDeleter_C::KillZonesDeleted' has a wrong offset!");
static_assert(offsetof(ABP_KillZoneDeleter_C, TriggersToShoot) == 0x0002D0, "Member 'ABP_KillZoneDeleter_C::TriggersToShoot' has a wrong offset!");

}

