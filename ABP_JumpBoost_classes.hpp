#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_JumpBoost

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_JumpBoost_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "Anim_ItemType_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_JumpBoost.ABP_JumpBoost_C
// 0x0730 (0x0FE0 - 0x08B0)
class UABP_JumpBoost_C final : public UGzAbilityAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_JumpBoost::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x08B8(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x08C0(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x08C8(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0970(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_21;                             // 0x0978(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_20;                             // 0x0998(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_19;                             // 0x09B8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_18;                             // 0x09D8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_17;                             // 0x09F8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0A18(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_16;                             // 0x0AD0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_15;                             // 0x0AF0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_14;                             // 0x0B10(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_13;                             // 0x0B30(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_12;                             // 0x0B50(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_11;                             // 0x0B70(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x0B90(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x0BB0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x0BD0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x0BF0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0C10(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x0CC8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x0CE8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0D08(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0D28(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0D48(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0D68(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0D88(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0DB0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0DF8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0E18(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0E60(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0E80(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0F48(0x0020)()
	EAnim_ItemType                                K2Node_PropertyAccess_7;                           // 0x0F68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6099[0x7];                                     // 0x0F69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          K2Node_PropertyAccess_3;                           // 0x0F70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_PropertyAccess_2;                           // 0x0F78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 K2Node_PropertyAccess_1;                           // 0x0F80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECardinalDirectionType                        SPX_Local_Velocity_Direction_No_Offset;            // 0x0F88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SPX_Anim_Ability_State_Is_Active;                  // 0x0F89(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609A[0x6];                                     // 0x0F8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EAnim_ItemType, class UAnimSequence*>    SPX_Jump_Fall_Loop;                                // 0x0F90(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Aiming_Correction(const struct FPoseLink& Aim_pose, struct FPoseLink* Param_Aiming_Correction);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void DamagedBody_CycleState(struct FPoseLink* Param_DamagedBody_CycleState);
	void DamagedBody_EnterState(struct FPoseLink* Param_DamagedBody_EnterState);
	void DamagedBody_ExitState(struct FPoseLink* Param_DamagedBody_ExitState);
	void DamagedBody_IdleState(struct FPoseLink* Param_DamagedBody_IdleState);
	void ExecuteUbergraph_ABP_JumpBoost(int32 EntryPoint);
	void Find_Exit_Animation(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void FullBody_Aiming(const struct FPoseLink& PreAimPose, double AimYaw, double AimPitch, struct FPoseLink* Param_FullBody_Aiming);
	void FullBody_AnimAbility(struct FPoseLink* Param_FullBody_AnimAbility);
	void FullBody_CycleState(struct FPoseLink* Param_FullBody_CycleState);
	void FullBody_FallLandState(struct FPoseLink* Param_FullBody_FallLandState);
	void FullBody_FallLoopState(struct FPoseLink* Param_FullBody_FallLoopState);
	void FullBody_IdleState(struct FPoseLink* Param_FullBody_IdleState);
	void FullBody_JumpApexState(struct FPoseLink* Param_FullBody_JumpApexState);
	void FullBody_JumpStartLoopState(struct FPoseLink* Param_FullBody_JumpStartLoopState);
	void FullBody_JumpStartState(struct FPoseLink* Param_FullBody_JumpStartState);
	void FullBody_PivotState(struct FPoseLink* Param_FullBody_PivotState);
	void FullBody_StartState(struct FPoseLink* Param_FullBody_StartState);
	void FullBody_StopState(struct FPoseLink* Param_FullBody_StopState);
	void FullBodyAdditives(struct FPoseLink* Param_FullBodyAdditives);
	void KneeSlide_State(struct FPoseLink* Param_KneeSlide_State);
	void Limbless_State(struct FPoseLink* Param_Limbless_State);
	void NPC_CoverState(struct FPoseLink* Param_NPC_CoverState);
	class UABP_Item_C* SPX_CastDataABP_Item();
	class UABP_Human_C* SPX_CastDataCacheOwner();
	class AGzPlayerCharacter* SPX_GetCharacterData();
	class UGzCharacterMovementComponent* SPX_GetOwnerMovements();
	void SPX_JumpBoostData();
	void SPX_SF_JumpBoost(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_JumpBoost_C">();
	}
	static class UABP_JumpBoost_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_JumpBoost_C>();
	}
};
static_assert(alignof(UABP_JumpBoost_C) == 0x000010, "Wrong alignment on UABP_JumpBoost_C");
static_assert(sizeof(UABP_JumpBoost_C) == 0x000FE0, "Wrong size on UABP_JumpBoost_C");
static_assert(offsetof(UABP_JumpBoost_C, UberGraphFrame) == 0x0008B0, "Member 'UABP_JumpBoost_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, __AnimBlueprintMutables) == 0x0008B8, "Member 'UABP_JumpBoost_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimBlueprintExtension_PropertyAccess) == 0x0008C0, "Member 'UABP_JumpBoost_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimBlueprintExtension_NodeRelevancy) == 0x0008C8, "Member 'UABP_JumpBoost_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimBlueprintExtension_Base) == 0x000970, "Member 'UABP_JumpBoost_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_21) == 0x000978, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_21' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_20) == 0x000998, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_20' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_19) == 0x0009B8, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_19' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_18) == 0x0009D8, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_18' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_17) == 0x0009F8, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_17' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_LinkedInputPose_1) == 0x000A18, "Member 'UABP_JumpBoost_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_16) == 0x000AD0, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_16' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_15) == 0x000AF0, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_15' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_14) == 0x000B10, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_14' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_13) == 0x000B30, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_13' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_12) == 0x000B50, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_12' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_11) == 0x000B70, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_11' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_10) == 0x000B90, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_9) == 0x000BB0, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_8) == 0x000BD0, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_7) == 0x000BF0, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_LinkedInputPose) == 0x000C10, "Member 'UABP_JumpBoost_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_6) == 0x000CC8, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_5) == 0x000CE8, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_4) == 0x000D08, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_3) == 0x000D28, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_2) == 0x000D48, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root_1) == 0x000D68, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_TransitionResult) == 0x000D88, "Member 'UABP_JumpBoost_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_SequencePlayer_1) == 0x000DB0, "Member 'UABP_JumpBoost_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_StateResult_1) == 0x000DF8, "Member 'UABP_JumpBoost_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_SequencePlayer) == 0x000E18, "Member 'UABP_JumpBoost_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_StateResult) == 0x000E60, "Member 'UABP_JumpBoost_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_StateMachine) == 0x000E80, "Member 'UABP_JumpBoost_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, AnimGraphNode_Root) == 0x000F48, "Member 'UABP_JumpBoost_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, K2Node_PropertyAccess_7) == 0x000F68, "Member 'UABP_JumpBoost_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, K2Node_PropertyAccess_3) == 0x000F70, "Member 'UABP_JumpBoost_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, K2Node_PropertyAccess_2) == 0x000F78, "Member 'UABP_JumpBoost_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, K2Node_PropertyAccess_1) == 0x000F80, "Member 'UABP_JumpBoost_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, SPX_Local_Velocity_Direction_No_Offset) == 0x000F88, "Member 'UABP_JumpBoost_C::SPX_Local_Velocity_Direction_No_Offset' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, SPX_Anim_Ability_State_Is_Active) == 0x000F89, "Member 'UABP_JumpBoost_C::SPX_Anim_Ability_State_Is_Active' has a wrong offset!");
static_assert(offsetof(UABP_JumpBoost_C, SPX_Jump_Fall_Loop) == 0x000F90, "Member 'UABP_JumpBoost_C::SPX_Jump_Fall_Loop' has a wrong offset!");

}

