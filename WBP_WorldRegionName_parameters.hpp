#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WorldRegionName

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_WorldRegionName.WBP_WorldRegionName_C.UpdateText
// 0x0020 (0x0020 - 0x0000)
struct WBP_WorldRegionName_C_UpdateText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0010(0x0010)()
};
static_assert(alignof(WBP_WorldRegionName_C_UpdateText) == 0x000008, "Wrong alignment on WBP_WorldRegionName_C_UpdateText");
static_assert(sizeof(WBP_WorldRegionName_C_UpdateText) == 0x000020, "Wrong size on WBP_WorldRegionName_C_UpdateText");
static_assert(offsetof(WBP_WorldRegionName_C_UpdateText, InText) == 0x000000, "Member 'WBP_WorldRegionName_C_UpdateText::InText' has a wrong offset!");
static_assert(offsetof(WBP_WorldRegionName_C_UpdateText, CallFunc_TextToUpper_ReturnValue) == 0x000010, "Member 'WBP_WorldRegionName_C_UpdateText::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WBP_WorldRegionName.WBP_WorldRegionName_C.Start Fade Out
// 0x0010 (0x0010 - 0x0000)
struct WBP_WorldRegionName_C_Start_Fade_Out final
{
public:
	float                                         PlaybackSpeed;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6592[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WorldRegionName_C_Start_Fade_Out) == 0x000008, "Wrong alignment on WBP_WorldRegionName_C_Start_Fade_Out");
static_assert(sizeof(WBP_WorldRegionName_C_Start_Fade_Out) == 0x000010, "Wrong size on WBP_WorldRegionName_C_Start_Fade_Out");
static_assert(offsetof(WBP_WorldRegionName_C_Start_Fade_Out, PlaybackSpeed) == 0x000000, "Member 'WBP_WorldRegionName_C_Start_Fade_Out::PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(WBP_WorldRegionName_C_Start_Fade_Out, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_WorldRegionName_C_Start_Fade_Out::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_WorldRegionName.WBP_WorldRegionName_C.ExecuteUbergraph_WBP_WorldRegionName
// 0x0004 (0x0004 - 0x0000)
struct WBP_WorldRegionName_C_ExecuteUbergraph_WBP_WorldRegionName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WorldRegionName_C_ExecuteUbergraph_WBP_WorldRegionName) == 0x000004, "Wrong alignment on WBP_WorldRegionName_C_ExecuteUbergraph_WBP_WorldRegionName");
static_assert(sizeof(WBP_WorldRegionName_C_ExecuteUbergraph_WBP_WorldRegionName) == 0x000004, "Wrong size on WBP_WorldRegionName_C_ExecuteUbergraph_WBP_WorldRegionName");
static_assert(offsetof(WBP_WorldRegionName_C_ExecuteUbergraph_WBP_WorldRegionName, EntryPoint) == 0x000000, "Member 'WBP_WorldRegionName_C_ExecuteUbergraph_WBP_WorldRegionName::EntryPoint' has a wrong offset!");

}

