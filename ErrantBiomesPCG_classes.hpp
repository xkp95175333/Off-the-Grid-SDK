#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ErrantBiomesPCG

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ErrantBiomesPCG_structs.hpp"
#include "PCG_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ErrantBiomesPCG.BiomesPCGComponentData
// 0x00B0 (0x00D8 - 0x0028)
class UBiomesPCGComponentData final : public UObject
{
public:
	uint32                                        BiomesSettingsHash;                                // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ComponentX;                                        // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ComponentY;                                        // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B0[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FBiomesPCGMaskSource, struct FBiomesPCGMaskData> MaskDataMap;                                       // 0x0038(0x0050)(Edit, EditConst, NativeAccessSpecifierPublic)
	TMap<struct FSoftObjectPath, struct FBiomesPCGSpeciesPointsData> SpeciesPointsDataMap;                              // 0x0088(0x0050)(Edit, EditConst, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BiomesPCGComponentData">();
	}
	static class UBiomesPCGComponentData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBiomesPCGComponentData>();
	}
};
static_assert(alignof(UBiomesPCGComponentData) == 0x000008, "Wrong alignment on UBiomesPCGComponentData");
static_assert(sizeof(UBiomesPCGComponentData) == 0x0000D8, "Wrong size on UBiomesPCGComponentData");
static_assert(offsetof(UBiomesPCGComponentData, BiomesSettingsHash) == 0x000028, "Member 'UBiomesPCGComponentData::BiomesSettingsHash' has a wrong offset!");
static_assert(offsetof(UBiomesPCGComponentData, ComponentX) == 0x00002C, "Member 'UBiomesPCGComponentData::ComponentX' has a wrong offset!");
static_assert(offsetof(UBiomesPCGComponentData, ComponentY) == 0x000030, "Member 'UBiomesPCGComponentData::ComponentY' has a wrong offset!");
static_assert(offsetof(UBiomesPCGComponentData, MaskDataMap) == 0x000038, "Member 'UBiomesPCGComponentData::MaskDataMap' has a wrong offset!");
static_assert(offsetof(UBiomesPCGComponentData, SpeciesPointsDataMap) == 0x000088, "Member 'UBiomesPCGComponentData::SpeciesPointsDataMap' has a wrong offset!");

// Class ErrantBiomesPCG.BiomesPCGMaskSettings
// 0x0030 (0x00D8 - 0x00A8)
class UBiomesPCGMaskSettings final : public UPCGSettings
{
public:
	EBiomesPCGMaskDataSource                      Mask;                                              // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B1[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        BiomesAsset;                                       // 0x00B0(0x0020)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FallbackValue;                                     // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B2[0x4];                                     // 0x00D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BiomesPCGMaskSettings">();
	}
	static class UBiomesPCGMaskSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBiomesPCGMaskSettings>();
	}
};
static_assert(alignof(UBiomesPCGMaskSettings) == 0x000008, "Wrong alignment on UBiomesPCGMaskSettings");
static_assert(sizeof(UBiomesPCGMaskSettings) == 0x0000D8, "Wrong size on UBiomesPCGMaskSettings");
static_assert(offsetof(UBiomesPCGMaskSettings, Mask) == 0x0000A8, "Member 'UBiomesPCGMaskSettings::Mask' has a wrong offset!");
static_assert(offsetof(UBiomesPCGMaskSettings, BiomesAsset) == 0x0000B0, "Member 'UBiomesPCGMaskSettings::BiomesAsset' has a wrong offset!");
static_assert(offsetof(UBiomesPCGMaskSettings, FallbackValue) == 0x0000D0, "Member 'UBiomesPCGMaskSettings::FallbackValue' has a wrong offset!");

// Class ErrantBiomesPCG.BiomesPCGSpeciesPointsSettings
// 0x0020 (0x00C8 - 0x00A8)
class UBiomesPCGSpeciesPointsSettings final : public UPCGSettings
{
public:
	struct FSoftObjectPath                        SpeciesAsset;                                      // 0x00A8(0x0020)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BiomesPCGSpeciesPointsSettings">();
	}
	static class UBiomesPCGSpeciesPointsSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBiomesPCGSpeciesPointsSettings>();
	}
};
static_assert(alignof(UBiomesPCGSpeciesPointsSettings) == 0x000008, "Wrong alignment on UBiomesPCGSpeciesPointsSettings");
static_assert(sizeof(UBiomesPCGSpeciesPointsSettings) == 0x0000C8, "Wrong size on UBiomesPCGSpeciesPointsSettings");
static_assert(offsetof(UBiomesPCGSpeciesPointsSettings, SpeciesAsset) == 0x0000A8, "Member 'UBiomesPCGSpeciesPointsSettings::SpeciesAsset' has a wrong offset!");

// Class ErrantBiomesPCG.BiomesPCGWorldSettings
// 0x0140 (0x03E0 - 0x02A0)
class ABiomesPCGWorldSettings final : public AActor
{
public:
	bool                                          bIsInitialized;                                    // 0x02A0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B3[0xF];                                     // 0x02A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                WorldToComponentTransforms;                        // 0x02B0(0x0080)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	EBiomesPCGLimit                               BiomesDataLimit;                                   // 0x0330(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B4[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<struct FSoftObjectPath>                  AllowedBiomesAssets;                               // 0x0338(0x0050)(Edit, NativeAccessSpecifierPublic)
	TSet<struct FSoftObjectPath>                  BlockedBiomesAssets;                               // 0x0388(0x0050)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B5[0x8];                                     // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BiomesPCGWorldSettings">();
	}
	static class ABiomesPCGWorldSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABiomesPCGWorldSettings>();
	}
};
static_assert(alignof(ABiomesPCGWorldSettings) == 0x000010, "Wrong alignment on ABiomesPCGWorldSettings");
static_assert(sizeof(ABiomesPCGWorldSettings) == 0x0003E0, "Wrong size on ABiomesPCGWorldSettings");
static_assert(offsetof(ABiomesPCGWorldSettings, bIsInitialized) == 0x0002A0, "Member 'ABiomesPCGWorldSettings::bIsInitialized' has a wrong offset!");
static_assert(offsetof(ABiomesPCGWorldSettings, WorldToComponentTransforms) == 0x0002B0, "Member 'ABiomesPCGWorldSettings::WorldToComponentTransforms' has a wrong offset!");
static_assert(offsetof(ABiomesPCGWorldSettings, BiomesDataLimit) == 0x000330, "Member 'ABiomesPCGWorldSettings::BiomesDataLimit' has a wrong offset!");
static_assert(offsetof(ABiomesPCGWorldSettings, AllowedBiomesAssets) == 0x000338, "Member 'ABiomesPCGWorldSettings::AllowedBiomesAssets' has a wrong offset!");
static_assert(offsetof(ABiomesPCGWorldSettings, BlockedBiomesAssets) == 0x000388, "Member 'ABiomesPCGWorldSettings::BlockedBiomesAssets' has a wrong offset!");

// Class ErrantBiomesPCG.BiomesPCGWorldSubsystem
// 0x00B0 (0x00E0 - 0x0030)
class UBiomesPCGWorldSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_26B6[0x58];                                    // 0x0030(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class ABiomesPCGWorldSettings*                BiomesPCGWorldSettings;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_26B7[0x50];                                    // 0x0090(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BiomesPCGWorldSubsystem">();
	}
	static class UBiomesPCGWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBiomesPCGWorldSubsystem>();
	}
};
static_assert(alignof(UBiomesPCGWorldSubsystem) == 0x000008, "Wrong alignment on UBiomesPCGWorldSubsystem");
static_assert(sizeof(UBiomesPCGWorldSubsystem) == 0x0000E0, "Wrong size on UBiomesPCGWorldSubsystem");
static_assert(offsetof(UBiomesPCGWorldSubsystem, BiomesPCGWorldSettings) == 0x000088, "Member 'UBiomesPCGWorldSubsystem::BiomesPCGWorldSettings' has a wrong offset!");

}

