#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LimbSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LimbSlot.WBP_LimbSlot_C
// 0x00E0 (0x0440 - 0x0360)
class UWBP_LimbSlot_C final : public UGzLimbPocketWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Hover;                                        // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_Charges_Text;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Limb_Image;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           LimbHealth_ProgressBar;                            // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QualityBar_Image_1;                                // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Master;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemIcon_C*                        WBP_ItemIcon;                                      // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemName_C*                        WBP_ItemName;                                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGameplayAttribute                     HealthAttribute;                                   // 0x03A8(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayAttribute                     MaxHealthAttribute;                                // 0x03E0(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	EGzLimbType                                   Cyber_Limb;                                        // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B48[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzInvItem                             Item;                                              // 0x0428(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FIntPoint                              BoxSize;                                           // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void Construct();
	void ExecuteUbergraph_WBP_LimbSlot(int32 EntryPoint);
	void GetLimbAbility(class UGzGA_BaseLimbAbility** Ability);
	void HandleEmptyItem();
	void HandleValidItem(const struct FGzInvItem& Param_Item);
	void InitAttributes();
	void OnAttributeChanged_439C44584D077F0BCBB5A9B27D97E385(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnInitialized();
	void OnPocketChanged_BP(const struct FGzInvItem& NewItem);
	void PreConstruct(bool IsDesignTime);
	void UpdateLimbHealth();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LimbSlot_C">();
	}
	static class UWBP_LimbSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LimbSlot_C>();
	}
};
static_assert(alignof(UWBP_LimbSlot_C) == 0x000008, "Wrong alignment on UWBP_LimbSlot_C");
static_assert(sizeof(UWBP_LimbSlot_C) == 0x000440, "Wrong size on UWBP_LimbSlot_C");
static_assert(offsetof(UWBP_LimbSlot_C, UberGraphFrame) == 0x000360, "Member 'UWBP_LimbSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, Anim_Hover) == 0x000368, "Member 'UWBP_LimbSlot_C::Anim_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, Gz_Charges_Text) == 0x000370, "Member 'UWBP_LimbSlot_C::Gz_Charges_Text' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, Limb_Image) == 0x000378, "Member 'UWBP_LimbSlot_C::Limb_Image' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, LimbHealth_ProgressBar) == 0x000380, "Member 'UWBP_LimbSlot_C::LimbHealth_ProgressBar' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, QualityBar_Image_1) == 0x000388, "Member 'UWBP_LimbSlot_C::QualityBar_Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, SizeBox_Master) == 0x000390, "Member 'UWBP_LimbSlot_C::SizeBox_Master' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, WBP_ItemIcon) == 0x000398, "Member 'UWBP_LimbSlot_C::WBP_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, WBP_ItemName) == 0x0003A0, "Member 'UWBP_LimbSlot_C::WBP_ItemName' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, HealthAttribute) == 0x0003A8, "Member 'UWBP_LimbSlot_C::HealthAttribute' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, MaxHealthAttribute) == 0x0003E0, "Member 'UWBP_LimbSlot_C::MaxHealthAttribute' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, Cyber_Limb) == 0x000418, "Member 'UWBP_LimbSlot_C::Cyber_Limb' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, AbilitySystemComponent) == 0x000420, "Member 'UWBP_LimbSlot_C::AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, Item) == 0x000428, "Member 'UWBP_LimbSlot_C::Item' has a wrong offset!");
static_assert(offsetof(UWBP_LimbSlot_C, BoxSize) == 0x000438, "Member 'UWBP_LimbSlot_C::BoxSize' has a wrong offset!");

}

