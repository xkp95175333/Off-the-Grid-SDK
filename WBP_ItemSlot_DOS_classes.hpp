#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemSlot_DOS

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "ItemSlotShowingState_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemSlot_DOS.WBP_ItemSlot_DOS_C
// 0x00A8 (0x03E8 - 0x0340)
class UWBP_ItemSlot_DOS_C final : public UGzHUDComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGzActionWidget*                        ActionWidget;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Count_Left_GzText;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Count_Right_GzText;                                // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Item_BG_Image;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Item_Image;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BackpackAbility_C*                 WBP_BackpackAbility_44;                            // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzItemData*                            Item;                                              // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemCount;                                         // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRightSide;                                       // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4835[0x3];                                     // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ItemSlot;                                          // 0x0398(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             EmptyImage;                                        // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGzPocketChangeHandle                  InventoryChangeHandle;                             // 0x03A8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4836[0x4];                                     // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerCharacter*                     Gz_Player_Character;                               // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UGzGameplayAbility*>             SlotAbilities;                                     // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	EItemSlotShowingState                         ShowingState;                                      // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4837[0x7];                                     // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskAttributeChanged*           AttributeChangeAsyncTask;                          // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           HealhAttributeChangeAsyncTask;                     // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ApplySlotState();
	void Are_Any_Granted_Abilities(bool* AreAny);
	void Check_for_Blocked_State();
	void CheckCanActivateSlotAbilities(bool* CanActivate);
	void Construct();
	void ExecuteUbergraph_WBP_ItemSlot_DOS(int32 EntryPoint);
	bool FilterDelegate(const struct FGzInvPocketDef& PocketDef, const struct FGzInvPocket& Pocket);
	void GetInventoryItemCount(int32* Result);
	void OnAttributeChanged_17AA1234425B0CE202B3A498FA7F18E6(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnAttributeChanged_2FA51DEA4EDC1E240C2DF99336D4F991(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnBlockedTagsChagned();
	void OnInitialized();
	void OnInventoryPocketChange(const struct FGzInvPocketChangeData& PocketChangeData);
	void OnViewTargetChanged(class APawn* ViewTarget);
	void ReceiveBindEvents(class APawn* NewViewTarget);
	void ReceiveUnbindEvents(class APawn* OldViewTarget);
	class FText Select_Counter_Text_Style(int32 Param_ItemCount);
	void Set_Slot_Abilities();
	void Set_Style_for_Sides();
	void SetActiveState(bool IsActive);
	void SetItemData();
	void SetState(EItemSlotShowingState TargetShowingState);
	void SubscribeToAbilities();
	void Update_Current_State();
	void UpdateCounter();
	void UpdateItemIcon();
	void UpdateKeyBinding();
	void UpdateSlotData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemSlot_DOS_C">();
	}
	static class UWBP_ItemSlot_DOS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemSlot_DOS_C>();
	}
};
static_assert(alignof(UWBP_ItemSlot_DOS_C) == 0x000008, "Wrong alignment on UWBP_ItemSlot_DOS_C");
static_assert(sizeof(UWBP_ItemSlot_DOS_C) == 0x0003E8, "Wrong size on UWBP_ItemSlot_DOS_C");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, UberGraphFrame) == 0x000340, "Member 'UWBP_ItemSlot_DOS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, ActionWidget) == 0x000348, "Member 'UWBP_ItemSlot_DOS_C::ActionWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, Count_Left_GzText) == 0x000350, "Member 'UWBP_ItemSlot_DOS_C::Count_Left_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, Count_Right_GzText) == 0x000358, "Member 'UWBP_ItemSlot_DOS_C::Count_Right_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, Item_BG_Image) == 0x000360, "Member 'UWBP_ItemSlot_DOS_C::Item_BG_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, Item_Image) == 0x000368, "Member 'UWBP_ItemSlot_DOS_C::Item_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, WBP_BackpackAbility_44) == 0x000370, "Member 'UWBP_ItemSlot_DOS_C::WBP_BackpackAbility_44' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, WidgetSwitcher) == 0x000378, "Member 'UWBP_ItemSlot_DOS_C::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, Item) == 0x000380, "Member 'UWBP_ItemSlot_DOS_C::Item' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, InputAction) == 0x000388, "Member 'UWBP_ItemSlot_DOS_C::InputAction' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, ItemCount) == 0x000390, "Member 'UWBP_ItemSlot_DOS_C::ItemCount' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, IsRightSide) == 0x000394, "Member 'UWBP_ItemSlot_DOS_C::IsRightSide' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, ItemSlot) == 0x000398, "Member 'UWBP_ItemSlot_DOS_C::ItemSlot' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, EmptyImage) == 0x0003A0, "Member 'UWBP_ItemSlot_DOS_C::EmptyImage' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, InventoryChangeHandle) == 0x0003A8, "Member 'UWBP_ItemSlot_DOS_C::InventoryChangeHandle' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, Gz_Player_Character) == 0x0003B8, "Member 'UWBP_ItemSlot_DOS_C::Gz_Player_Character' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, SlotAbilities) == 0x0003C0, "Member 'UWBP_ItemSlot_DOS_C::SlotAbilities' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, ShowingState) == 0x0003D0, "Member 'UWBP_ItemSlot_DOS_C::ShowingState' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, AttributeChangeAsyncTask) == 0x0003D8, "Member 'UWBP_ItemSlot_DOS_C::AttributeChangeAsyncTask' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSlot_DOS_C, HealhAttributeChangeAsyncTask) == 0x0003E0, "Member 'UWBP_ItemSlot_DOS_C::HealhAttributeChangeAsyncTask' has a wrong offset!");

}

