#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Construction_Set_01

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Construction_Set_01.BP_Construction_Set_01_C
// 0x0098 (0x0338 - 0x02A0)
class ABP_Construction_Set_01_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_Construction_Set_01_B5;                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_A5;                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_B4;                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_A4;                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_C5;                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_C4;                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_A3;                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_B3;                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_C3;                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_A2;                         // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_C2;                         // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_B2;                         // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_B1;                         // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_C1;                         // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_A1;                         // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_C;                          // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_B;                          // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Construction_Set_01_A;                          // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Construction_Set_01_C">();
	}
	static class ABP_Construction_Set_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Construction_Set_01_C>();
	}
};
static_assert(alignof(ABP_Construction_Set_01_C) == 0x000008, "Wrong alignment on ABP_Construction_Set_01_C");
static_assert(sizeof(ABP_Construction_Set_01_C) == 0x000338, "Wrong size on ABP_Construction_Set_01_C");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_B5) == 0x0002A0, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_B5' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_A5) == 0x0002A8, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_A5' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_B4) == 0x0002B0, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_B4' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_A4) == 0x0002B8, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_A4' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_C5) == 0x0002C0, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_C5' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_C4) == 0x0002C8, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_C4' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_A3) == 0x0002D0, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_A3' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_B3) == 0x0002D8, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_B3' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_C3) == 0x0002E0, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_C3' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_A2) == 0x0002E8, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_A2' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_C2) == 0x0002F0, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_C2' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_B2) == 0x0002F8, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_B2' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_B1) == 0x000300, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_B1' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_C1) == 0x000308, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_C1' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_A1) == 0x000310, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_A1' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_C) == 0x000318, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_C' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_B) == 0x000320, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_B' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, SM_Construction_Set_01_A) == 0x000328, "Member 'ABP_Construction_Set_01_C::SM_Construction_Set_01_A' has a wrong offset!");
static_assert(offsetof(ABP_Construction_Set_01_C, DefaultSceneRoot) == 0x000330, "Member 'ABP_Construction_Set_01_C::DefaultSceneRoot' has a wrong offset!");

}

