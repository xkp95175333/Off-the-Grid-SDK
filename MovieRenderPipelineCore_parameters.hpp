#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovieRenderPipelineCore

#include "Basic.hpp"

#include "MovieRenderPipelineCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MovieRenderPipelineCore.MovieGraphNode.TogglePromotePropertyToPin
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphNode_TogglePromotePropertyToPin final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphNode_TogglePromotePropertyToPin) == 0x000004, "Wrong alignment on MovieGraphNode_TogglePromotePropertyToPin");
static_assert(sizeof(MovieGraphNode_TogglePromotePropertyToPin) == 0x000008, "Wrong size on MovieGraphNode_TogglePromotePropertyToPin");
static_assert(offsetof(MovieGraphNode_TogglePromotePropertyToPin, PropertyName) == 0x000000, "Member 'MovieGraphNode_TogglePromotePropertyToPin::PropertyName' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphNode.GetExposedProperties
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphNode_GetExposedProperties final
{
public:
	TArray<struct FMovieGraphPropertyInfo>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphNode_GetExposedProperties) == 0x000008, "Wrong alignment on MovieGraphNode_GetExposedProperties");
static_assert(sizeof(MovieGraphNode_GetExposedProperties) == 0x000010, "Wrong size on MovieGraphNode_GetExposedProperties");
static_assert(offsetof(MovieGraphNode_GetExposedProperties, ReturnValue) == 0x000000, "Member 'MovieGraphNode_GetExposedProperties::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphNode.GetInputPin
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphNode_GetInputPin final
{
public:
	class FName                                   InPinLabel;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieGraphPinQueryRequirement                PinRequirement;                                    // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44A3[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovieGraphPin*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphNode_GetInputPin) == 0x000008, "Wrong alignment on MovieGraphNode_GetInputPin");
static_assert(sizeof(MovieGraphNode_GetInputPin) == 0x000018, "Wrong size on MovieGraphNode_GetInputPin");
static_assert(offsetof(MovieGraphNode_GetInputPin, InPinLabel) == 0x000000, "Member 'MovieGraphNode_GetInputPin::InPinLabel' has a wrong offset!");
static_assert(offsetof(MovieGraphNode_GetInputPin, PinRequirement) == 0x000008, "Member 'MovieGraphNode_GetInputPin::PinRequirement' has a wrong offset!");
static_assert(offsetof(MovieGraphNode_GetInputPin, ReturnValue) == 0x000010, "Member 'MovieGraphNode_GetInputPin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphNode.GetOutputPin
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphNode_GetOutputPin final
{
public:
	class FName                                   InPinLabel;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphPin*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphNode_GetOutputPin) == 0x000008, "Wrong alignment on MovieGraphNode_GetOutputPin");
static_assert(sizeof(MovieGraphNode_GetOutputPin) == 0x000010, "Wrong size on MovieGraphNode_GetOutputPin");
static_assert(offsetof(MovieGraphNode_GetOutputPin, InPinLabel) == 0x000000, "Member 'MovieGraphNode_GetOutputPin::InPinLabel' has a wrong offset!");
static_assert(offsetof(MovieGraphNode_GetOutputPin, ReturnValue) == 0x000008, "Member 'MovieGraphNode_GetOutputPin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCompletionPercentage
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCompletionPercentage final
{
public:
	const class UMovieGraphPipeline*              InPipeline;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44A7[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCompletionPercentage) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCompletionPercentage");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCompletionPercentage) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetCompletionPercentage");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCompletionPercentage, InPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCompletionPercentage::InPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCompletionPercentage, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCompletionPercentage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCurrentAperture
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCurrentAperture final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44A8[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCurrentAperture) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCurrentAperture");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCurrentAperture) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetCurrentAperture");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentAperture, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCurrentAperture::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentAperture, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCurrentAperture::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCurrentCineCamera
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCurrentCineCamera final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCineCameraComponent*                   ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCurrentCineCamera) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCurrentCineCamera");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCurrentCineCamera) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetCurrentCineCamera");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentCineCamera, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCurrentCineCamera::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentCineCamera, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCurrentCineCamera::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCurrentFocalLength
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCurrentFocalLength final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44A9[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCurrentFocalLength) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCurrentFocalLength");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCurrentFocalLength) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetCurrentFocalLength");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentFocalLength, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCurrentFocalLength::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentFocalLength, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCurrentFocalLength::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCurrentFocusDistance
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCurrentFocusDistance final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44AA[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCurrentFocusDistance) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCurrentFocusDistance");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCurrentFocusDistance) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetCurrentFocusDistance");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentFocusDistance, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCurrentFocusDistance::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentFocusDistance, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCurrentFocusDistance::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCurrentSegmentName
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCurrentSegmentName final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OutOuterName;                                      // 0x0008(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   OutInnerName;                                      // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCurrentSegmentName) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCurrentSegmentName");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCurrentSegmentName) == 0x000028, "Wrong size on MovieGraphBlueprintLibrary_GetCurrentSegmentName");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentSegmentName, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCurrentSegmentName::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentSegmentName, OutOuterName) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCurrentSegmentName::OutOuterName' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentSegmentName, OutInnerName) == 0x000018, "Member 'MovieGraphBlueprintLibrary_GetCurrentSegmentName::OutInnerName' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCurrentSegmentState
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCurrentSegmentState final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieRenderShotState                         ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44AB[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCurrentSegmentState) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCurrentSegmentState");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCurrentSegmentState) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetCurrentSegmentState");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentSegmentState, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCurrentSegmentState::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentSegmentState, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCurrentSegmentState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCurrentSegmentWorkMetrics
// 0x0030 (0x0030 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCurrentSegmentWorkMetrics final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMoviePipelineSegmentWorkMetrics       ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCurrentSegmentWorkMetrics) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCurrentSegmentWorkMetrics");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCurrentSegmentWorkMetrics) == 0x000030, "Wrong size on MovieGraphBlueprintLibrary_GetCurrentSegmentWorkMetrics");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentSegmentWorkMetrics, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCurrentSegmentWorkMetrics::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentSegmentWorkMetrics, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCurrentSegmentWorkMetrics::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCurrentShotFrameNumber
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCurrentShotFrameNumber final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44AC[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCurrentShotFrameNumber) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCurrentShotFrameNumber");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCurrentShotFrameNumber) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetCurrentShotFrameNumber");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentShotFrameNumber, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCurrentShotFrameNumber::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentShotFrameNumber, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCurrentShotFrameNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetCurrentShotTimecode
// 0x0020 (0x0020 - 0x0000)
struct MovieGraphBlueprintLibrary_GetCurrentShotTimecode final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimecode                              ReturnValue;                                       // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44AD[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetCurrentShotTimecode) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetCurrentShotTimecode");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetCurrentShotTimecode) == 0x000020, "Wrong size on MovieGraphBlueprintLibrary_GetCurrentShotTimecode");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentShotTimecode, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetCurrentShotTimecode::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetCurrentShotTimecode, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetCurrentShotTimecode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetEffectiveFrameRate
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphBlueprintLibrary_GetEffectiveFrameRate final
{
public:
	class UMovieGraphGlobalOutputSettingNode*     InNode;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameRate                             InDefaultRate;                                     // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameRate                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetEffectiveFrameRate");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate) == 0x000018, "Wrong size on MovieGraphBlueprintLibrary_GetEffectiveFrameRate");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate, InNode) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetEffectiveFrameRate::InNode' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate, InDefaultRate) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetEffectiveFrameRate::InDefaultRate' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate, ReturnValue) == 0x000010, "Member 'MovieGraphBlueprintLibrary_GetEffectiveFrameRate::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetEffectiveOutputResolution
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetEffectiveOutputResolution final
{
public:
	class UMovieGraphEvaluatedConfig*             InEvaluatedGraph;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetEffectiveOutputResolution) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetEffectiveOutputResolution");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetEffectiveOutputResolution) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetEffectiveOutputResolution");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveOutputResolution, InEvaluatedGraph) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetEffectiveOutputResolution::InEvaluatedGraph' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveOutputResolution, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetEffectiveOutputResolution::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetEstimatedTimeRemaining
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              OutEstimate;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44AE[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining) == 0x000018, "Wrong size on MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining, OutEstimate) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining::OutEstimate' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining, ReturnValue) == 0x000010, "Member 'MovieGraphBlueprintLibrary_GetEstimatedTimeRemaining::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetJobAuthor
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphBlueprintLibrary_GetJobAuthor final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetJobAuthor) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetJobAuthor");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetJobAuthor) == 0x000018, "Wrong size on MovieGraphBlueprintLibrary_GetJobAuthor");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetJobAuthor, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetJobAuthor::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetJobAuthor, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetJobAuthor::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetJobInitializationTime
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetJobInitializationTime final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetJobInitializationTime) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetJobInitializationTime");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetJobInitializationTime) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetJobInitializationTime");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetJobInitializationTime, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetJobInitializationTime::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetJobInitializationTime, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetJobInitializationTime::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetJobName
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphBlueprintLibrary_GetJobName final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetJobName) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetJobName");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetJobName) == 0x000018, "Wrong size on MovieGraphBlueprintLibrary_GetJobName");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetJobName, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetJobName::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetJobName, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetJobName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetOverallOutputFrames
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetOverallOutputFrames final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutCurrentIndex;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutTotalCount;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetOverallOutputFrames) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetOverallOutputFrames");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetOverallOutputFrames) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetOverallOutputFrames");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetOverallOutputFrames, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetOverallOutputFrames::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetOverallOutputFrames, OutCurrentIndex) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetOverallOutputFrames::OutCurrentIndex' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetOverallOutputFrames, OutTotalCount) == 0x00000C, "Member 'MovieGraphBlueprintLibrary_GetOverallOutputFrames::OutTotalCount' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetOverallSegmentCounts
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetOverallSegmentCounts final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutCurrentIndex;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutTotalCount;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetOverallSegmentCounts) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetOverallSegmentCounts");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetOverallSegmentCounts) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetOverallSegmentCounts");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetOverallSegmentCounts, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetOverallSegmentCounts::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetOverallSegmentCounts, OutCurrentIndex) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetOverallSegmentCounts::OutCurrentIndex' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetOverallSegmentCounts, OutTotalCount) == 0x00000C, "Member 'MovieGraphBlueprintLibrary_GetOverallSegmentCounts::OutTotalCount' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetPipelineState
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetPipelineState final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieRenderPipelineState                     ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44AF[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetPipelineState) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetPipelineState");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetPipelineState) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetPipelineState");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetPipelineState, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetPipelineState::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetPipelineState, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetPipelineState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetRootFrameNumber
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBlueprintLibrary_GetRootFrameNumber final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44B0[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetRootFrameNumber) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetRootFrameNumber");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetRootFrameNumber) == 0x000010, "Wrong size on MovieGraphBlueprintLibrary_GetRootFrameNumber");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetRootFrameNumber, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetRootFrameNumber::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetRootFrameNumber, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetRootFrameNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetRootTimecode
// 0x0020 (0x0020 - 0x0000)
struct MovieGraphBlueprintLibrary_GetRootTimecode final
{
public:
	const class UMovieGraphPipeline*              InMovieGraphPipeline;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimecode                              ReturnValue;                                       // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44B1[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetRootTimecode) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetRootTimecode");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetRootTimecode) == 0x000020, "Wrong size on MovieGraphBlueprintLibrary_GetRootTimecode");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetRootTimecode, InMovieGraphPipeline) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetRootTimecode::InMovieGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetRootTimecode, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetRootTimecode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.IsNamedResolutionValid
// 0x000C (0x000C - 0x0000)
struct MovieGraphBlueprintLibrary_IsNamedResolutionValid final
{
public:
	class FName                                   InResolutionProfileName;                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44B2[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_IsNamedResolutionValid) == 0x000004, "Wrong alignment on MovieGraphBlueprintLibrary_IsNamedResolutionValid");
static_assert(sizeof(MovieGraphBlueprintLibrary_IsNamedResolutionValid) == 0x00000C, "Wrong size on MovieGraphBlueprintLibrary_IsNamedResolutionValid");
static_assert(offsetof(MovieGraphBlueprintLibrary_IsNamedResolutionValid, InResolutionProfileName) == 0x000000, "Member 'MovieGraphBlueprintLibrary_IsNamedResolutionValid::InResolutionProfileName' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_IsNamedResolutionValid, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_IsNamedResolutionValid::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.NamedResolutionFromProfile
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphBlueprintLibrary_NamedResolutionFromProfile final
{
public:
	class FName                                   InResolutionProfileName;                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieGraphNamedResolution             ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_NamedResolutionFromProfile) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_NamedResolutionFromProfile");
static_assert(sizeof(MovieGraphBlueprintLibrary_NamedResolutionFromProfile) == 0x000028, "Wrong size on MovieGraphBlueprintLibrary_NamedResolutionFromProfile");
static_assert(offsetof(MovieGraphBlueprintLibrary_NamedResolutionFromProfile, InResolutionProfileName) == 0x000000, "Member 'MovieGraphBlueprintLibrary_NamedResolutionFromProfile::InResolutionProfileName' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_NamedResolutionFromProfile, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_NamedResolutionFromProfile::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.NamedResolutionFromSize
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphBlueprintLibrary_NamedResolutionFromSize final
{
public:
	int32                                         InResX;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InResY;                                            // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieGraphNamedResolution             ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_NamedResolutionFromSize) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_NamedResolutionFromSize");
static_assert(sizeof(MovieGraphBlueprintLibrary_NamedResolutionFromSize) == 0x000028, "Wrong size on MovieGraphBlueprintLibrary_NamedResolutionFromSize");
static_assert(offsetof(MovieGraphBlueprintLibrary_NamedResolutionFromSize, InResX) == 0x000000, "Member 'MovieGraphBlueprintLibrary_NamedResolutionFromSize::InResX' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_NamedResolutionFromSize, InResY) == 0x000004, "Member 'MovieGraphBlueprintLibrary_NamedResolutionFromSize::InResY' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_NamedResolutionFromSize, ReturnValue) == 0x000008, "Member 'MovieGraphBlueprintLibrary_NamedResolutionFromSize::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.ResolveFilenameFormatArguments
// 0x0218 (0x0218 - 0x0000)
struct MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments final
{
public:
	class FString                                 InFormatString;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieGraphFilenameResolveParams       InParams;                                          // 0x0010(0x0158)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FMovieGraphResolveArgs                 OutMergedFormatArgs;                               // 0x0168(0x00A0)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0208(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments");
static_assert(sizeof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments) == 0x000218, "Wrong size on MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments, InFormatString) == 0x000000, "Member 'MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments::InFormatString' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments, InParams) == 0x000010, "Member 'MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments::InParams' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments, OutMergedFormatArgs) == 0x000168, "Member 'MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments::OutMergedFormatArgs' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments, ReturnValue) == 0x000208, "Member 'MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.ResolveVersionNumber
// 0x0160 (0x0160 - 0x0000)
struct MovieGraphBlueprintLibrary_ResolveVersionNumber final
{
public:
	struct FMovieGraphFilenameResolveParams       InParams;                                          // 0x0000(0x0158)(Parm, NativeAccessSpecifierPublic)
	bool                                          bGetNextVersion;                                   // 0x0158(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44B3[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x015C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_ResolveVersionNumber) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_ResolveVersionNumber");
static_assert(sizeof(MovieGraphBlueprintLibrary_ResolveVersionNumber) == 0x000160, "Wrong size on MovieGraphBlueprintLibrary_ResolveVersionNumber");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveVersionNumber, InParams) == 0x000000, "Member 'MovieGraphBlueprintLibrary_ResolveVersionNumber::InParams' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveVersionNumber, bGetNextVersion) == 0x000158, "Member 'MovieGraphBlueprintLibrary_ResolveVersionNumber::bGetNextVersion' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveVersionNumber, ReturnValue) == 0x00015C, "Member 'MovieGraphBlueprintLibrary_ResolveVersionNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBurnInWidget.UpdateForGraph
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphBurnInWidget_UpdateForGraph final
{
public:
	class UMovieGraphPipeline*                    InGraphPipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphEvaluatedConfig*             InEvaluatedConfig;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBurnInWidget_UpdateForGraph) == 0x000008, "Wrong alignment on MovieGraphBurnInWidget_UpdateForGraph");
static_assert(sizeof(MovieGraphBurnInWidget_UpdateForGraph) == 0x000010, "Wrong size on MovieGraphBurnInWidget_UpdateForGraph");
static_assert(offsetof(MovieGraphBurnInWidget_UpdateForGraph, InGraphPipeline) == 0x000000, "Member 'MovieGraphBurnInWidget_UpdateForGraph::InGraphPipeline' has a wrong offset!");
static_assert(offsetof(MovieGraphBurnInWidget_UpdateForGraph, InEvaluatedConfig) == 0x000008, "Member 'MovieGraphBurnInWidget_UpdateForGraph::InEvaluatedConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueSerializedString
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_GetValueSerializedString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueSerializedString) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueSerializedString");
static_assert(sizeof(MovieGraphValueContainer_GetValueSerializedString) == 0x000010, "Wrong size on MovieGraphValueContainer_GetValueSerializedString");
static_assert(offsetof(MovieGraphValueContainer_GetValueSerializedString, ReturnValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueSerializedString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueBool
// 0x0002 (0x0002 - 0x0000)
struct MovieGraphValueContainer_SetValueBool final
{
public:
	bool                                          bInValue;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueBool) == 0x000001, "Wrong alignment on MovieGraphValueContainer_SetValueBool");
static_assert(sizeof(MovieGraphValueContainer_SetValueBool) == 0x000002, "Wrong size on MovieGraphValueContainer_SetValueBool");
static_assert(offsetof(MovieGraphValueContainer_SetValueBool, bInValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueBool::bInValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueBool, ReturnValue) == 0x000001, "Member 'MovieGraphValueContainer_SetValueBool::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueByte
// 0x0002 (0x0002 - 0x0000)
struct MovieGraphValueContainer_SetValueByte final
{
public:
	uint8                                         InValue;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueByte) == 0x000001, "Wrong alignment on MovieGraphValueContainer_SetValueByte");
static_assert(sizeof(MovieGraphValueContainer_SetValueByte) == 0x000002, "Wrong size on MovieGraphValueContainer_SetValueByte");
static_assert(offsetof(MovieGraphValueContainer_SetValueByte, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueByte::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueByte, ReturnValue) == 0x000001, "Member 'MovieGraphValueContainer_SetValueByte::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueClass
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueClass final
{
public:
	class UClass*                                 InValue;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44BC[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueClass) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueClass");
static_assert(sizeof(MovieGraphValueContainer_SetValueClass) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueClass");
static_assert(offsetof(MovieGraphValueContainer_SetValueClass, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueClass::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueClass, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_SetValueClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueContainerType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphValueContainer_SetValueContainerType final
{
public:
	EMovieGraphContainerType                      ContainerType;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueContainerType) == 0x000001, "Wrong alignment on MovieGraphValueContainer_SetValueContainerType");
static_assert(sizeof(MovieGraphValueContainer_SetValueContainerType) == 0x000001, "Wrong size on MovieGraphValueContainer_SetValueContainerType");
static_assert(offsetof(MovieGraphValueContainer_SetValueContainerType, ContainerType) == 0x000000, "Member 'MovieGraphValueContainer_SetValueContainerType::ContainerType' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueDouble
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueDouble final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44BD[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueDouble) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueDouble");
static_assert(sizeof(MovieGraphValueContainer_SetValueDouble) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueDouble");
static_assert(offsetof(MovieGraphValueContainer_SetValueDouble, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueDouble::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueDouble, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_SetValueDouble::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueEnum
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_SetValueEnum final
{
public:
	uint8                                         InValue;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44BE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UEnum*                            Enum;                                              // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44BF[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueEnum) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueEnum");
static_assert(sizeof(MovieGraphValueContainer_SetValueEnum) == 0x000018, "Wrong size on MovieGraphValueContainer_SetValueEnum");
static_assert(offsetof(MovieGraphValueContainer_SetValueEnum, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueEnum::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueEnum, Enum) == 0x000008, "Member 'MovieGraphValueContainer_SetValueEnum::Enum' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueEnum, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_SetValueEnum::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueFloat
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_SetValueFloat final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C0[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueFloat) == 0x000004, "Wrong alignment on MovieGraphValueContainer_SetValueFloat");
static_assert(sizeof(MovieGraphValueContainer_SetValueFloat) == 0x000008, "Wrong size on MovieGraphValueContainer_SetValueFloat");
static_assert(offsetof(MovieGraphValueContainer_SetValueFloat, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueFloat::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueFloat, ReturnValue) == 0x000004, "Member 'MovieGraphValueContainer_SetValueFloat::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueInt32
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_SetValueInt32 final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C1[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueInt32) == 0x000004, "Wrong alignment on MovieGraphValueContainer_SetValueInt32");
static_assert(sizeof(MovieGraphValueContainer_SetValueInt32) == 0x000008, "Wrong size on MovieGraphValueContainer_SetValueInt32");
static_assert(offsetof(MovieGraphValueContainer_SetValueInt32, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueInt32::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueInt32, ReturnValue) == 0x000004, "Member 'MovieGraphValueContainer_SetValueInt32::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueInt64
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueInt64 final
{
public:
	int64                                         InValue;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C2[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueInt64) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueInt64");
static_assert(sizeof(MovieGraphValueContainer_SetValueInt64) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueInt64");
static_assert(offsetof(MovieGraphValueContainer_SetValueInt64, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueInt64::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueInt64, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_SetValueInt64::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueName
// 0x000C (0x000C - 0x0000)
struct MovieGraphValueContainer_SetValueName final
{
public:
	class FName                                   InValue;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C3[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueName) == 0x000004, "Wrong alignment on MovieGraphValueContainer_SetValueName");
static_assert(sizeof(MovieGraphValueContainer_SetValueName) == 0x00000C, "Wrong size on MovieGraphValueContainer_SetValueName");
static_assert(offsetof(MovieGraphValueContainer_SetValueName, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueName::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueName, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_SetValueName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueObject
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueObject final
{
public:
	class UObject*                                InValue;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C4[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueObject) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueObject");
static_assert(sizeof(MovieGraphValueContainer_SetValueObject) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueObject");
static_assert(offsetof(MovieGraphValueContainer_SetValueObject, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueObject::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueObject, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_SetValueObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueSerializedString
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_SetValueSerializedString final
{
public:
	class FString                                 NewValue;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C5[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueSerializedString) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueSerializedString");
static_assert(sizeof(MovieGraphValueContainer_SetValueSerializedString) == 0x000018, "Wrong size on MovieGraphValueContainer_SetValueSerializedString");
static_assert(offsetof(MovieGraphValueContainer_SetValueSerializedString, NewValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueSerializedString::NewValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueSerializedString, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_SetValueSerializedString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueString
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_SetValueString final
{
public:
	class FString                                 InValue;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C6[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueString) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueString");
static_assert(sizeof(MovieGraphValueContainer_SetValueString) == 0x000018, "Wrong size on MovieGraphValueContainer_SetValueString");
static_assert(offsetof(MovieGraphValueContainer_SetValueString, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueString::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueString, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_SetValueString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueText
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_SetValueText final
{
public:
	class FText                                   InValue;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C7[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueText) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueText");
static_assert(sizeof(MovieGraphValueContainer_SetValueText) == 0x000018, "Wrong size on MovieGraphValueContainer_SetValueText");
static_assert(offsetof(MovieGraphValueContainer_SetValueText, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueText::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueText, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_SetValueText::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueType
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueType final
{
public:
	EMovieGraphValueType                          ValueType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                InValueTypeObject;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueType) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueType");
static_assert(sizeof(MovieGraphValueContainer_SetValueType) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueType");
static_assert(offsetof(MovieGraphValueContainer_SetValueType, ValueType) == 0x000000, "Member 'MovieGraphValueContainer_SetValueType::ValueType' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueType, InValueTypeObject) == 0x000008, "Member 'MovieGraphValueContainer_SetValueType::InValueTypeObject' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueTypeObject
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_SetValueTypeObject final
{
public:
	const class UObject*                          ValueTypeObject;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueTypeObject) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueTypeObject");
static_assert(sizeof(MovieGraphValueContainer_SetValueTypeObject) == 0x000008, "Wrong size on MovieGraphValueContainer_SetValueTypeObject");
static_assert(offsetof(MovieGraphValueContainer_SetValueTypeObject, ValueTypeObject) == 0x000000, "Member 'MovieGraphValueContainer_SetValueTypeObject::ValueTypeObject' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueBool
// 0x0002 (0x0002 - 0x0000)
struct MovieGraphValueContainer_GetValueBool final
{
public:
	bool                                          bOutValue;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueBool) == 0x000001, "Wrong alignment on MovieGraphValueContainer_GetValueBool");
static_assert(sizeof(MovieGraphValueContainer_GetValueBool) == 0x000002, "Wrong size on MovieGraphValueContainer_GetValueBool");
static_assert(offsetof(MovieGraphValueContainer_GetValueBool, bOutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueBool::bOutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueBool, ReturnValue) == 0x000001, "Member 'MovieGraphValueContainer_GetValueBool::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueByte
// 0x0002 (0x0002 - 0x0000)
struct MovieGraphValueContainer_GetValueByte final
{
public:
	uint8                                         OutValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueByte) == 0x000001, "Wrong alignment on MovieGraphValueContainer_GetValueByte");
static_assert(sizeof(MovieGraphValueContainer_GetValueByte) == 0x000002, "Wrong size on MovieGraphValueContainer_GetValueByte");
static_assert(offsetof(MovieGraphValueContainer_GetValueByte, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueByte::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueByte, ReturnValue) == 0x000001, "Member 'MovieGraphValueContainer_GetValueByte::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueClass
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_GetValueClass final
{
public:
	class UClass*                                 OutValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C9[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueClass) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueClass");
static_assert(sizeof(MovieGraphValueContainer_GetValueClass) == 0x000010, "Wrong size on MovieGraphValueContainer_GetValueClass");
static_assert(offsetof(MovieGraphValueContainer_GetValueClass, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueClass::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueClass, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_GetValueClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueContainerType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphValueContainer_GetValueContainerType final
{
public:
	EMovieGraphContainerType                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueContainerType) == 0x000001, "Wrong alignment on MovieGraphValueContainer_GetValueContainerType");
static_assert(sizeof(MovieGraphValueContainer_GetValueContainerType) == 0x000001, "Wrong size on MovieGraphValueContainer_GetValueContainerType");
static_assert(offsetof(MovieGraphValueContainer_GetValueContainerType, ReturnValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueContainerType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueDouble
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_GetValueDouble final
{
public:
	double                                        OutValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44CA[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueDouble) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueDouble");
static_assert(sizeof(MovieGraphValueContainer_GetValueDouble) == 0x000010, "Wrong size on MovieGraphValueContainer_GetValueDouble");
static_assert(offsetof(MovieGraphValueContainer_GetValueDouble, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueDouble::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueDouble, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_GetValueDouble::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueEnum
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_GetValueEnum final
{
public:
	uint8                                         OutValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44CB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UEnum*                            RequestedEnum;                                     // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44CC[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueEnum) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueEnum");
static_assert(sizeof(MovieGraphValueContainer_GetValueEnum) == 0x000018, "Wrong size on MovieGraphValueContainer_GetValueEnum");
static_assert(offsetof(MovieGraphValueContainer_GetValueEnum, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueEnum::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueEnum, RequestedEnum) == 0x000008, "Member 'MovieGraphValueContainer_GetValueEnum::RequestedEnum' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueEnum, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_GetValueEnum::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueFloat
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_GetValueFloat final
{
public:
	float                                         OutValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44CD[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueFloat) == 0x000004, "Wrong alignment on MovieGraphValueContainer_GetValueFloat");
static_assert(sizeof(MovieGraphValueContainer_GetValueFloat) == 0x000008, "Wrong size on MovieGraphValueContainer_GetValueFloat");
static_assert(offsetof(MovieGraphValueContainer_GetValueFloat, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueFloat::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueFloat, ReturnValue) == 0x000004, "Member 'MovieGraphValueContainer_GetValueFloat::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueInt32
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_GetValueInt32 final
{
public:
	int32                                         OutValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44CE[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueInt32) == 0x000004, "Wrong alignment on MovieGraphValueContainer_GetValueInt32");
static_assert(sizeof(MovieGraphValueContainer_GetValueInt32) == 0x000008, "Wrong size on MovieGraphValueContainer_GetValueInt32");
static_assert(offsetof(MovieGraphValueContainer_GetValueInt32, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueInt32::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueInt32, ReturnValue) == 0x000004, "Member 'MovieGraphValueContainer_GetValueInt32::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueInt64
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_GetValueInt64 final
{
public:
	int64                                         OutValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44CF[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueInt64) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueInt64");
static_assert(sizeof(MovieGraphValueContainer_GetValueInt64) == 0x000010, "Wrong size on MovieGraphValueContainer_GetValueInt64");
static_assert(offsetof(MovieGraphValueContainer_GetValueInt64, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueInt64::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueInt64, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_GetValueInt64::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueName
// 0x000C (0x000C - 0x0000)
struct MovieGraphValueContainer_GetValueName final
{
public:
	class FName                                   OutValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44D0[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueName) == 0x000004, "Wrong alignment on MovieGraphValueContainer_GetValueName");
static_assert(sizeof(MovieGraphValueContainer_GetValueName) == 0x00000C, "Wrong size on MovieGraphValueContainer_GetValueName");
static_assert(offsetof(MovieGraphValueContainer_GetValueName, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueName::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueName, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_GetValueName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueObject
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_GetValueObject final
{
public:
	class UObject*                                OutValue;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UClass*                           RequestedClass;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44D1[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueObject) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueObject");
static_assert(sizeof(MovieGraphValueContainer_GetValueObject) == 0x000018, "Wrong size on MovieGraphValueContainer_GetValueObject");
static_assert(offsetof(MovieGraphValueContainer_GetValueObject, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueObject::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueObject, RequestedClass) == 0x000008, "Member 'MovieGraphValueContainer_GetValueObject::RequestedClass' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueObject, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_GetValueObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueString
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_GetValueString final
{
public:
	class FString                                 OutValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44D2[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueString) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueString");
static_assert(sizeof(MovieGraphValueContainer_GetValueString) == 0x000018, "Wrong size on MovieGraphValueContainer_GetValueString");
static_assert(offsetof(MovieGraphValueContainer_GetValueString, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueString::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueString, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_GetValueString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueText
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_GetValueText final
{
public:
	class FText                                   OutValue;                                          // 0x0000(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44D3[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueText) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueText");
static_assert(sizeof(MovieGraphValueContainer_GetValueText) == 0x000018, "Wrong size on MovieGraphValueContainer_GetValueText");
static_assert(offsetof(MovieGraphValueContainer_GetValueText, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueText::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueText, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_GetValueText::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphValueContainer_GetValueType final
{
public:
	EMovieGraphValueType                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueType) == 0x000001, "Wrong alignment on MovieGraphValueContainer_GetValueType");
static_assert(sizeof(MovieGraphValueContainer_GetValueType) == 0x000001, "Wrong size on MovieGraphValueContainer_GetValueType");
static_assert(offsetof(MovieGraphValueContainer_GetValueType, ReturnValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueTypeObject
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_GetValueTypeObject final
{
public:
	const class UObject*                          ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueTypeObject) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueTypeObject");
static_assert(sizeof(MovieGraphValueContainer_GetValueTypeObject) == 0x000008, "Wrong size on MovieGraphValueContainer_GetValueTypeObject");
static_assert(offsetof(MovieGraphValueContainer_GetValueTypeObject, ReturnValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueTypeObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphMember.SetMemberName
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphMember_SetMemberName final
{
public:
	class FString                                 InNewName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44D5[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphMember_SetMemberName) == 0x000008, "Wrong alignment on MovieGraphMember_SetMemberName");
static_assert(sizeof(MovieGraphMember_SetMemberName) == 0x000018, "Wrong size on MovieGraphMember_SetMemberName");
static_assert(offsetof(MovieGraphMember_SetMemberName, InNewName) == 0x000000, "Member 'MovieGraphMember_SetMemberName::InNewName' has a wrong offset!");
static_assert(offsetof(MovieGraphMember_SetMemberName, ReturnValue) == 0x000010, "Member 'MovieGraphMember_SetMemberName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphMember.GetGuid
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphMember_GetGuid final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphMember_GetGuid) == 0x000004, "Wrong alignment on MovieGraphMember_GetGuid");
static_assert(sizeof(MovieGraphMember_GetGuid) == 0x000010, "Wrong size on MovieGraphMember_GetGuid");
static_assert(offsetof(MovieGraphMember_GetGuid, ReturnValue) == 0x000000, "Member 'MovieGraphMember_GetGuid::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphMember.GetMemberName
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphMember_GetMemberName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphMember_GetMemberName) == 0x000008, "Wrong alignment on MovieGraphMember_GetMemberName");
static_assert(sizeof(MovieGraphMember_GetMemberName) == 0x000010, "Wrong size on MovieGraphMember_GetMemberName");
static_assert(offsetof(MovieGraphMember_GetMemberName, ReturnValue) == 0x000000, "Member 'MovieGraphMember_GetMemberName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphEvaluatedConfig.GetBranchNames
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphEvaluatedConfig_GetBranchNames final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphEvaluatedConfig_GetBranchNames) == 0x000008, "Wrong alignment on MovieGraphEvaluatedConfig_GetBranchNames");
static_assert(sizeof(MovieGraphEvaluatedConfig_GetBranchNames) == 0x000010, "Wrong size on MovieGraphEvaluatedConfig_GetBranchNames");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetBranchNames, ReturnValue) == 0x000000, "Member 'MovieGraphEvaluatedConfig_GetBranchNames::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphEvaluatedConfig.GetSettingForBranch
// 0x0020 (0x0020 - 0x0000)
struct MovieGraphEvaluatedConfig_GetSettingForBranch final
{
public:
	class UClass*                                 InClass;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InBranchName;                                      // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeCDOs;                                      // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44D7[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovieGraphSettingNode*                 ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphEvaluatedConfig_GetSettingForBranch) == 0x000008, "Wrong alignment on MovieGraphEvaluatedConfig_GetSettingForBranch");
static_assert(sizeof(MovieGraphEvaluatedConfig_GetSettingForBranch) == 0x000020, "Wrong size on MovieGraphEvaluatedConfig_GetSettingForBranch");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingForBranch, InClass) == 0x000000, "Member 'MovieGraphEvaluatedConfig_GetSettingForBranch::InClass' has a wrong offset!");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingForBranch, InBranchName) == 0x000008, "Member 'MovieGraphEvaluatedConfig_GetSettingForBranch::InBranchName' has a wrong offset!");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingForBranch, bIncludeCDOs) == 0x000010, "Member 'MovieGraphEvaluatedConfig_GetSettingForBranch::bIncludeCDOs' has a wrong offset!");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingForBranch, bExactMatch) == 0x000011, "Member 'MovieGraphEvaluatedConfig_GetSettingForBranch::bExactMatch' has a wrong offset!");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingForBranch, ReturnValue) == 0x000018, "Member 'MovieGraphEvaluatedConfig_GetSettingForBranch::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphEvaluatedConfig.GetSettingsForBranch
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphEvaluatedConfig_GetSettingsForBranch final
{
public:
	class UClass*                                 InClass;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InBranchName;                                      // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeCDOs;                                      // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44D8[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieGraphSettingNode*>         ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphEvaluatedConfig_GetSettingsForBranch) == 0x000008, "Wrong alignment on MovieGraphEvaluatedConfig_GetSettingsForBranch");
static_assert(sizeof(MovieGraphEvaluatedConfig_GetSettingsForBranch) == 0x000028, "Wrong size on MovieGraphEvaluatedConfig_GetSettingsForBranch");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingsForBranch, InClass) == 0x000000, "Member 'MovieGraphEvaluatedConfig_GetSettingsForBranch::InClass' has a wrong offset!");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingsForBranch, InBranchName) == 0x000008, "Member 'MovieGraphEvaluatedConfig_GetSettingsForBranch::InBranchName' has a wrong offset!");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingsForBranch, bIncludeCDOs) == 0x000010, "Member 'MovieGraphEvaluatedConfig_GetSettingsForBranch::bIncludeCDOs' has a wrong offset!");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingsForBranch, bExactMatch) == 0x000011, "Member 'MovieGraphEvaluatedConfig_GetSettingsForBranch::bExactMatch' has a wrong offset!");
static_assert(offsetof(MovieGraphEvaluatedConfig_GetSettingsForBranch, ReturnValue) == 0x000018, "Member 'MovieGraphEvaluatedConfig_GetSettingsForBranch::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.AddInput
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphConfig_AddInput final
{
public:
	class UMovieGraphInput*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_AddInput) == 0x000008, "Wrong alignment on MovieGraphConfig_AddInput");
static_assert(sizeof(MovieGraphConfig_AddInput) == 0x000008, "Wrong size on MovieGraphConfig_AddInput");
static_assert(offsetof(MovieGraphConfig_AddInput, ReturnValue) == 0x000000, "Member 'MovieGraphConfig_AddInput::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.AddLabeledEdge
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphConfig_AddLabeledEdge final
{
public:
	class UMovieGraphNode*                        FromNode;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FromPinLabel;                                      // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphNode*                        ToNode;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ToPinLabel;                                        // 0x0018(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44D9[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConfig_AddLabeledEdge) == 0x000008, "Wrong alignment on MovieGraphConfig_AddLabeledEdge");
static_assert(sizeof(MovieGraphConfig_AddLabeledEdge) == 0x000028, "Wrong size on MovieGraphConfig_AddLabeledEdge");
static_assert(offsetof(MovieGraphConfig_AddLabeledEdge, FromNode) == 0x000000, "Member 'MovieGraphConfig_AddLabeledEdge::FromNode' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_AddLabeledEdge, FromPinLabel) == 0x000008, "Member 'MovieGraphConfig_AddLabeledEdge::FromPinLabel' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_AddLabeledEdge, ToNode) == 0x000010, "Member 'MovieGraphConfig_AddLabeledEdge::ToNode' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_AddLabeledEdge, ToPinLabel) == 0x000018, "Member 'MovieGraphConfig_AddLabeledEdge::ToPinLabel' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_AddLabeledEdge, ReturnValue) == 0x000020, "Member 'MovieGraphConfig_AddLabeledEdge::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.AddOutput
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphConfig_AddOutput final
{
public:
	class UMovieGraphOutput*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_AddOutput) == 0x000008, "Wrong alignment on MovieGraphConfig_AddOutput");
static_assert(sizeof(MovieGraphConfig_AddOutput) == 0x000008, "Wrong size on MovieGraphConfig_AddOutput");
static_assert(offsetof(MovieGraphConfig_AddOutput, ReturnValue) == 0x000000, "Member 'MovieGraphConfig_AddOutput::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.AddVariable
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConfig_AddVariable final
{
public:
	class FName                                   InCustomBaseName;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphVariable*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_AddVariable) == 0x000008, "Wrong alignment on MovieGraphConfig_AddVariable");
static_assert(sizeof(MovieGraphConfig_AddVariable) == 0x000010, "Wrong size on MovieGraphConfig_AddVariable");
static_assert(offsetof(MovieGraphConfig_AddVariable, InCustomBaseName) == 0x000000, "Member 'MovieGraphConfig_AddVariable::InCustomBaseName' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_AddVariable, ReturnValue) == 0x000008, "Member 'MovieGraphConfig_AddVariable::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.CreateFlattenedGraph
// 0x00E8 (0x00E8 - 0x0000)
struct MovieGraphConfig_CreateFlattenedGraph final
{
public:
	struct FMovieGraphTraversalContext            InContext;                                         // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 OutError;                                          // 0x00D0(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphEvaluatedConfig*             ReturnValue;                                       // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_CreateFlattenedGraph) == 0x000008, "Wrong alignment on MovieGraphConfig_CreateFlattenedGraph");
static_assert(sizeof(MovieGraphConfig_CreateFlattenedGraph) == 0x0000E8, "Wrong size on MovieGraphConfig_CreateFlattenedGraph");
static_assert(offsetof(MovieGraphConfig_CreateFlattenedGraph, InContext) == 0x000000, "Member 'MovieGraphConfig_CreateFlattenedGraph::InContext' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_CreateFlattenedGraph, OutError) == 0x0000D0, "Member 'MovieGraphConfig_CreateFlattenedGraph::OutError' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_CreateFlattenedGraph, ReturnValue) == 0x0000E0, "Member 'MovieGraphConfig_CreateFlattenedGraph::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.CreateNodeByClass
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConfig_CreateNodeByClass final
{
public:
	TSubclassOf<class UMovieGraphNode>            InClass;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphNode*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_CreateNodeByClass) == 0x000008, "Wrong alignment on MovieGraphConfig_CreateNodeByClass");
static_assert(sizeof(MovieGraphConfig_CreateNodeByClass) == 0x000010, "Wrong size on MovieGraphConfig_CreateNodeByClass");
static_assert(offsetof(MovieGraphConfig_CreateNodeByClass, InClass) == 0x000000, "Member 'MovieGraphConfig_CreateNodeByClass::InClass' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_CreateNodeByClass, ReturnValue) == 0x000008, "Member 'MovieGraphConfig_CreateNodeByClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.DeleteMember
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConfig_DeleteMember final
{
public:
	class UMovieGraphMember*                      MemberToDelete;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44DA[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConfig_DeleteMember) == 0x000008, "Wrong alignment on MovieGraphConfig_DeleteMember");
static_assert(sizeof(MovieGraphConfig_DeleteMember) == 0x000010, "Wrong size on MovieGraphConfig_DeleteMember");
static_assert(offsetof(MovieGraphConfig_DeleteMember, MemberToDelete) == 0x000000, "Member 'MovieGraphConfig_DeleteMember::MemberToDelete' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_DeleteMember, ReturnValue) == 0x000008, "Member 'MovieGraphConfig_DeleteMember::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.RemoveAllInboundEdges
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConfig_RemoveAllInboundEdges final
{
public:
	class UMovieGraphNode*                        InNode;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44DB[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConfig_RemoveAllInboundEdges) == 0x000008, "Wrong alignment on MovieGraphConfig_RemoveAllInboundEdges");
static_assert(sizeof(MovieGraphConfig_RemoveAllInboundEdges) == 0x000010, "Wrong size on MovieGraphConfig_RemoveAllInboundEdges");
static_assert(offsetof(MovieGraphConfig_RemoveAllInboundEdges, InNode) == 0x000000, "Member 'MovieGraphConfig_RemoveAllInboundEdges::InNode' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveAllInboundEdges, ReturnValue) == 0x000008, "Member 'MovieGraphConfig_RemoveAllInboundEdges::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.RemoveAllOutboundEdges
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConfig_RemoveAllOutboundEdges final
{
public:
	class UMovieGraphNode*                        InNode;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44DC[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConfig_RemoveAllOutboundEdges) == 0x000008, "Wrong alignment on MovieGraphConfig_RemoveAllOutboundEdges");
static_assert(sizeof(MovieGraphConfig_RemoveAllOutboundEdges) == 0x000010, "Wrong size on MovieGraphConfig_RemoveAllOutboundEdges");
static_assert(offsetof(MovieGraphConfig_RemoveAllOutboundEdges, InNode) == 0x000000, "Member 'MovieGraphConfig_RemoveAllOutboundEdges::InNode' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveAllOutboundEdges, ReturnValue) == 0x000008, "Member 'MovieGraphConfig_RemoveAllOutboundEdges::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.RemoveInboundEdges
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphConfig_RemoveInboundEdges final
{
public:
	class UMovieGraphNode*                        InNode;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InPinName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44DD[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConfig_RemoveInboundEdges) == 0x000008, "Wrong alignment on MovieGraphConfig_RemoveInboundEdges");
static_assert(sizeof(MovieGraphConfig_RemoveInboundEdges) == 0x000018, "Wrong size on MovieGraphConfig_RemoveInboundEdges");
static_assert(offsetof(MovieGraphConfig_RemoveInboundEdges, InNode) == 0x000000, "Member 'MovieGraphConfig_RemoveInboundEdges::InNode' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveInboundEdges, InPinName) == 0x000008, "Member 'MovieGraphConfig_RemoveInboundEdges::InPinName' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveInboundEdges, ReturnValue) == 0x000010, "Member 'MovieGraphConfig_RemoveInboundEdges::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.RemoveLabeledEdge
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphConfig_RemoveLabeledEdge final
{
public:
	class UMovieGraphNode*                        FromNode;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FromPinName;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphNode*                        ToNode;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ToPinName;                                         // 0x0018(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44DE[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConfig_RemoveLabeledEdge) == 0x000008, "Wrong alignment on MovieGraphConfig_RemoveLabeledEdge");
static_assert(sizeof(MovieGraphConfig_RemoveLabeledEdge) == 0x000028, "Wrong size on MovieGraphConfig_RemoveLabeledEdge");
static_assert(offsetof(MovieGraphConfig_RemoveLabeledEdge, FromNode) == 0x000000, "Member 'MovieGraphConfig_RemoveLabeledEdge::FromNode' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveLabeledEdge, FromPinName) == 0x000008, "Member 'MovieGraphConfig_RemoveLabeledEdge::FromPinName' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveLabeledEdge, ToNode) == 0x000010, "Member 'MovieGraphConfig_RemoveLabeledEdge::ToNode' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveLabeledEdge, ToPinName) == 0x000018, "Member 'MovieGraphConfig_RemoveLabeledEdge::ToPinName' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveLabeledEdge, ReturnValue) == 0x000020, "Member 'MovieGraphConfig_RemoveLabeledEdge::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.RemoveNode
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConfig_RemoveNode final
{
public:
	class UMovieGraphNode*                        InNode;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44DF[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConfig_RemoveNode) == 0x000008, "Wrong alignment on MovieGraphConfig_RemoveNode");
static_assert(sizeof(MovieGraphConfig_RemoveNode) == 0x000010, "Wrong size on MovieGraphConfig_RemoveNode");
static_assert(offsetof(MovieGraphConfig_RemoveNode, InNode) == 0x000000, "Member 'MovieGraphConfig_RemoveNode::InNode' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveNode, ReturnValue) == 0x000008, "Member 'MovieGraphConfig_RemoveNode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.RemoveNodes
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphConfig_RemoveNodes final
{
public:
	TArray<class UMovieGraphNode*>                InNodes;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44E0[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConfig_RemoveNodes) == 0x000008, "Wrong alignment on MovieGraphConfig_RemoveNodes");
static_assert(sizeof(MovieGraphConfig_RemoveNodes) == 0x000018, "Wrong size on MovieGraphConfig_RemoveNodes");
static_assert(offsetof(MovieGraphConfig_RemoveNodes, InNodes) == 0x000000, "Member 'MovieGraphConfig_RemoveNodes::InNodes' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveNodes, ReturnValue) == 0x000010, "Member 'MovieGraphConfig_RemoveNodes::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.RemoveOutboundEdges
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphConfig_RemoveOutboundEdges final
{
public:
	class UMovieGraphNode*                        InNode;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InPinName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44E1[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConfig_RemoveOutboundEdges) == 0x000008, "Wrong alignment on MovieGraphConfig_RemoveOutboundEdges");
static_assert(sizeof(MovieGraphConfig_RemoveOutboundEdges) == 0x000018, "Wrong size on MovieGraphConfig_RemoveOutboundEdges");
static_assert(offsetof(MovieGraphConfig_RemoveOutboundEdges, InNode) == 0x000000, "Member 'MovieGraphConfig_RemoveOutboundEdges::InNode' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveOutboundEdges, InPinName) == 0x000008, "Member 'MovieGraphConfig_RemoveOutboundEdges::InPinName' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_RemoveOutboundEdges, ReturnValue) == 0x000010, "Member 'MovieGraphConfig_RemoveOutboundEdges::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.UpdateGlobalVariableValues
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphConfig_UpdateGlobalVariableValues final
{
public:
	const class UMovieGraphPipeline*              InPipeline;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_UpdateGlobalVariableValues) == 0x000008, "Wrong alignment on MovieGraphConfig_UpdateGlobalVariableValues");
static_assert(sizeof(MovieGraphConfig_UpdateGlobalVariableValues) == 0x000008, "Wrong size on MovieGraphConfig_UpdateGlobalVariableValues");
static_assert(offsetof(MovieGraphConfig_UpdateGlobalVariableValues, InPipeline) == 0x000000, "Member 'MovieGraphConfig_UpdateGlobalVariableValues::InPipeline' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.GetInputNode
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphConfig_GetInputNode final
{
public:
	class UMovieGraphNode*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_GetInputNode) == 0x000008, "Wrong alignment on MovieGraphConfig_GetInputNode");
static_assert(sizeof(MovieGraphConfig_GetInputNode) == 0x000008, "Wrong size on MovieGraphConfig_GetInputNode");
static_assert(offsetof(MovieGraphConfig_GetInputNode, ReturnValue) == 0x000000, "Member 'MovieGraphConfig_GetInputNode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.GetInputs
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConfig_GetInputs final
{
public:
	TArray<class UMovieGraphInput*>               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_GetInputs) == 0x000008, "Wrong alignment on MovieGraphConfig_GetInputs");
static_assert(sizeof(MovieGraphConfig_GetInputs) == 0x000010, "Wrong size on MovieGraphConfig_GetInputs");
static_assert(offsetof(MovieGraphConfig_GetInputs, ReturnValue) == 0x000000, "Member 'MovieGraphConfig_GetInputs::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.GetOutputNode
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphConfig_GetOutputNode final
{
public:
	class UMovieGraphNode*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_GetOutputNode) == 0x000008, "Wrong alignment on MovieGraphConfig_GetOutputNode");
static_assert(sizeof(MovieGraphConfig_GetOutputNode) == 0x000008, "Wrong size on MovieGraphConfig_GetOutputNode");
static_assert(offsetof(MovieGraphConfig_GetOutputNode, ReturnValue) == 0x000000, "Member 'MovieGraphConfig_GetOutputNode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.GetOutputs
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConfig_GetOutputs final
{
public:
	TArray<class UMovieGraphOutput*>              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_GetOutputs) == 0x000008, "Wrong alignment on MovieGraphConfig_GetOutputs");
static_assert(sizeof(MovieGraphConfig_GetOutputs) == 0x000010, "Wrong size on MovieGraphConfig_GetOutputs");
static_assert(offsetof(MovieGraphConfig_GetOutputs, ReturnValue) == 0x000000, "Member 'MovieGraphConfig_GetOutputs::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.GetVariables
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphConfig_GetVariables final
{
public:
	bool                                          bIncludeGlobal;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44E2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieGraphVariable*>            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_GetVariables) == 0x000008, "Wrong alignment on MovieGraphConfig_GetVariables");
static_assert(sizeof(MovieGraphConfig_GetVariables) == 0x000018, "Wrong size on MovieGraphConfig_GetVariables");
static_assert(offsetof(MovieGraphConfig_GetVariables, bIncludeGlobal) == 0x000000, "Member 'MovieGraphConfig_GetVariables::bIncludeGlobal' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_GetVariables, ReturnValue) == 0x000008, "Member 'MovieGraphConfig_GetVariables::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphTimeStepBase.GetCalculatedTimeData
// 0x0068 (0x0068 - 0x0000)
struct MovieGraphTimeStepBase_GetCalculatedTimeData final
{
public:
	struct FMovieGraphTimeStepData                ReturnValue;                                       // 0x0000(0x0068)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphTimeStepBase_GetCalculatedTimeData) == 0x000008, "Wrong alignment on MovieGraphTimeStepBase_GetCalculatedTimeData");
static_assert(sizeof(MovieGraphTimeStepBase_GetCalculatedTimeData) == 0x000068, "Wrong size on MovieGraphTimeStepBase_GetCalculatedTimeData");
static_assert(offsetof(MovieGraphTimeStepBase_GetCalculatedTimeData, ReturnValue) == 0x000000, "Member 'MovieGraphTimeStepBase_GetCalculatedTimeData::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRendererBase.GetPreviewData
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphRendererBase_GetPreviewData final
{
public:
	TArray<struct FMovieGraphImagePreviewData>    ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRendererBase_GetPreviewData) == 0x000008, "Wrong alignment on MovieGraphRendererBase_GetPreviewData");
static_assert(sizeof(MovieGraphRendererBase_GetPreviewData) == 0x000010, "Wrong size on MovieGraphRendererBase_GetPreviewData");
static_assert(offsetof(MovieGraphRendererBase_GetPreviewData, ReturnValue) == 0x000000, "Member 'MovieGraphRendererBase_GetPreviewData::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphScriptBase.OnJobFinished
// 0x0040 (0x0040 - 0x0000)
struct MovieGraphScriptBase_OnJobFinished final
{
public:
	class UMoviePipelineExecutorJob*              InJobCopy;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMoviePipelineOutputData               InOutputData;                                      // 0x0008(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphScriptBase_OnJobFinished) == 0x000008, "Wrong alignment on MovieGraphScriptBase_OnJobFinished");
static_assert(sizeof(MovieGraphScriptBase_OnJobFinished) == 0x000040, "Wrong size on MovieGraphScriptBase_OnJobFinished");
static_assert(offsetof(MovieGraphScriptBase_OnJobFinished, InJobCopy) == 0x000000, "Member 'MovieGraphScriptBase_OnJobFinished::InJobCopy' has a wrong offset!");
static_assert(offsetof(MovieGraphScriptBase_OnJobFinished, InOutputData) == 0x000008, "Member 'MovieGraphScriptBase_OnJobFinished::InOutputData' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphScriptBase.OnJobStart
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphScriptBase_OnJobStart final
{
public:
	class UMoviePipelineExecutorJob*              InJobCopy;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphScriptBase_OnJobStart) == 0x000008, "Wrong alignment on MovieGraphScriptBase_OnJobStart");
static_assert(sizeof(MovieGraphScriptBase_OnJobStart) == 0x000008, "Wrong size on MovieGraphScriptBase_OnJobStart");
static_assert(offsetof(MovieGraphScriptBase_OnJobStart, InJobCopy) == 0x000000, "Member 'MovieGraphScriptBase_OnJobStart::InJobCopy' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphScriptBase.OnShotFinished
// 0x0048 (0x0048 - 0x0000)
struct MovieGraphScriptBase_OnShotFinished final
{
public:
	class UMoviePipelineExecutorJob*              InJobCopy;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorShot*             InShotCopy;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMoviePipelineOutputData               OutputData;                                        // 0x0010(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphScriptBase_OnShotFinished) == 0x000008, "Wrong alignment on MovieGraphScriptBase_OnShotFinished");
static_assert(sizeof(MovieGraphScriptBase_OnShotFinished) == 0x000048, "Wrong size on MovieGraphScriptBase_OnShotFinished");
static_assert(offsetof(MovieGraphScriptBase_OnShotFinished, InJobCopy) == 0x000000, "Member 'MovieGraphScriptBase_OnShotFinished::InJobCopy' has a wrong offset!");
static_assert(offsetof(MovieGraphScriptBase_OnShotFinished, InShotCopy) == 0x000008, "Member 'MovieGraphScriptBase_OnShotFinished::InShotCopy' has a wrong offset!");
static_assert(offsetof(MovieGraphScriptBase_OnShotFinished, OutputData) == 0x000010, "Member 'MovieGraphScriptBase_OnShotFinished::OutputData' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphScriptBase.OnShotStart
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphScriptBase_OnShotStart final
{
public:
	class UMoviePipelineExecutorJob*              InJobCopy;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorShot*             InShotCopy;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphScriptBase_OnShotStart) == 0x000008, "Wrong alignment on MovieGraphScriptBase_OnShotStart");
static_assert(sizeof(MovieGraphScriptBase_OnShotStart) == 0x000010, "Wrong size on MovieGraphScriptBase_OnShotStart");
static_assert(offsetof(MovieGraphScriptBase_OnShotStart, InJobCopy) == 0x000000, "Member 'MovieGraphScriptBase_OnShotStart::InJobCopy' has a wrong offset!");
static_assert(offsetof(MovieGraphScriptBase_OnShotStart, InShotCopy) == 0x000008, "Member 'MovieGraphScriptBase_OnShotStart::InShotCopy' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphScriptBase.IsPerShotCallbackNeeded
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphScriptBase_IsPerShotCallbackNeeded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphScriptBase_IsPerShotCallbackNeeded) == 0x000001, "Wrong alignment on MovieGraphScriptBase_IsPerShotCallbackNeeded");
static_assert(sizeof(MovieGraphScriptBase_IsPerShotCallbackNeeded) == 0x000001, "Wrong size on MovieGraphScriptBase_IsPerShotCallbackNeeded");
static_assert(offsetof(MovieGraphScriptBase_IsPerShotCallbackNeeded, ReturnValue) == 0x000000, "Member 'MovieGraphScriptBase_IsPerShotCallbackNeeded::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphModifierNode.AddCollection
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphModifierNode_AddCollection final
{
public:
	class FName                                   InCollectionName;                                  // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphModifierNode_AddCollection) == 0x000004, "Wrong alignment on MovieGraphModifierNode_AddCollection");
static_assert(sizeof(MovieGraphModifierNode_AddCollection) == 0x000008, "Wrong size on MovieGraphModifierNode_AddCollection");
static_assert(offsetof(MovieGraphModifierNode_AddCollection, InCollectionName) == 0x000000, "Member 'MovieGraphModifierNode_AddCollection::InCollectionName' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphModifierNode.AddModifier
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphModifierNode_AddModifier final
{
public:
	TSubclassOf<class UMovieGraphCollectionModifier> ModifierType;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphCollectionModifier*          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphModifierNode_AddModifier) == 0x000008, "Wrong alignment on MovieGraphModifierNode_AddModifier");
static_assert(sizeof(MovieGraphModifierNode_AddModifier) == 0x000010, "Wrong size on MovieGraphModifierNode_AddModifier");
static_assert(offsetof(MovieGraphModifierNode_AddModifier, ModifierType) == 0x000000, "Member 'MovieGraphModifierNode_AddModifier::ModifierType' has a wrong offset!");
static_assert(offsetof(MovieGraphModifierNode_AddModifier, ReturnValue) == 0x000008, "Member 'MovieGraphModifierNode_AddModifier::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphModifierNode.RemoveCollection
// 0x000C (0x000C - 0x0000)
struct MovieGraphModifierNode_RemoveCollection final
{
public:
	class FName                                   InCollectionName;                                  // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44F2[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphModifierNode_RemoveCollection) == 0x000004, "Wrong alignment on MovieGraphModifierNode_RemoveCollection");
static_assert(sizeof(MovieGraphModifierNode_RemoveCollection) == 0x00000C, "Wrong size on MovieGraphModifierNode_RemoveCollection");
static_assert(offsetof(MovieGraphModifierNode_RemoveCollection, InCollectionName) == 0x000000, "Member 'MovieGraphModifierNode_RemoveCollection::InCollectionName' has a wrong offset!");
static_assert(offsetof(MovieGraphModifierNode_RemoveCollection, ReturnValue) == 0x000008, "Member 'MovieGraphModifierNode_RemoveCollection::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphModifierNode.RemoveModifier
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphModifierNode_RemoveModifier final
{
public:
	TSubclassOf<class UMovieGraphCollectionModifier> ModifierType;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44F3[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphModifierNode_RemoveModifier) == 0x000008, "Wrong alignment on MovieGraphModifierNode_RemoveModifier");
static_assert(sizeof(MovieGraphModifierNode_RemoveModifier) == 0x000010, "Wrong size on MovieGraphModifierNode_RemoveModifier");
static_assert(offsetof(MovieGraphModifierNode_RemoveModifier, ModifierType) == 0x000000, "Member 'MovieGraphModifierNode_RemoveModifier::ModifierType' has a wrong offset!");
static_assert(offsetof(MovieGraphModifierNode_RemoveModifier, ReturnValue) == 0x000008, "Member 'MovieGraphModifierNode_RemoveModifier::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphModifierNode.GetCollections
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphModifierNode_GetCollections final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphModifierNode_GetCollections) == 0x000008, "Wrong alignment on MovieGraphModifierNode_GetCollections");
static_assert(sizeof(MovieGraphModifierNode_GetCollections) == 0x000010, "Wrong size on MovieGraphModifierNode_GetCollections");
static_assert(offsetof(MovieGraphModifierNode_GetCollections, ReturnValue) == 0x000000, "Member 'MovieGraphModifierNode_GetCollections::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphModifierNode.GetModifier
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphModifierNode_GetModifier final
{
public:
	TSubclassOf<class UMovieGraphCollectionModifier> ModifierType;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphCollectionModifier*          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphModifierNode_GetModifier) == 0x000008, "Wrong alignment on MovieGraphModifierNode_GetModifier");
static_assert(sizeof(MovieGraphModifierNode_GetModifier) == 0x000010, "Wrong size on MovieGraphModifierNode_GetModifier");
static_assert(offsetof(MovieGraphModifierNode_GetModifier, ModifierType) == 0x000000, "Member 'MovieGraphModifierNode_GetModifier::ModifierType' has a wrong offset!");
static_assert(offsetof(MovieGraphModifierNode_GetModifier, ReturnValue) == 0x000008, "Member 'MovieGraphModifierNode_GetModifier::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphModifierNode.GetModifiers
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphModifierNode_GetModifiers final
{
public:
	TArray<class UMovieGraphCollectionModifier*>  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphModifierNode_GetModifiers) == 0x000008, "Wrong alignment on MovieGraphModifierNode_GetModifiers");
static_assert(sizeof(MovieGraphModifierNode_GetModifiers) == 0x000010, "Wrong size on MovieGraphModifierNode_GetModifiers");
static_assert(offsetof(MovieGraphModifierNode_GetModifiers, ReturnValue) == 0x000000, "Member 'MovieGraphModifierNode_GetModifiers::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPin.GetConnectedNodes
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphPin_GetConnectedNodes final
{
public:
	TArray<class UMovieGraphNode*>                ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPin_GetConnectedNodes) == 0x000008, "Wrong alignment on MovieGraphPin_GetConnectedNodes");
static_assert(sizeof(MovieGraphPin_GetConnectedNodes) == 0x000010, "Wrong size on MovieGraphPin_GetConnectedNodes");
static_assert(offsetof(MovieGraphPin_GetConnectedNodes, ReturnValue) == 0x000000, "Member 'MovieGraphPin_GetConnectedNodes::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBase.RequestShutdown
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineBase_RequestShutdown final
{
public:
	bool                                          bIsError;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBase_RequestShutdown) == 0x000001, "Wrong alignment on MoviePipelineBase_RequestShutdown");
static_assert(sizeof(MoviePipelineBase_RequestShutdown) == 0x000001, "Wrong size on MoviePipelineBase_RequestShutdown");
static_assert(offsetof(MoviePipelineBase_RequestShutdown, bIsError) == 0x000000, "Member 'MoviePipelineBase_RequestShutdown::bIsError' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBase.Shutdown
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineBase_Shutdown final
{
public:
	bool                                          bIsError;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBase_Shutdown) == 0x000001, "Wrong alignment on MoviePipelineBase_Shutdown");
static_assert(sizeof(MoviePipelineBase_Shutdown) == 0x000001, "Wrong size on MoviePipelineBase_Shutdown");
static_assert(offsetof(MoviePipelineBase_Shutdown, bIsError) == 0x000000, "Member 'MoviePipelineBase_Shutdown::bIsError' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBase.GetPipelineState
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineBase_GetPipelineState final
{
public:
	EMovieRenderPipelineState                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBase_GetPipelineState) == 0x000001, "Wrong alignment on MoviePipelineBase_GetPipelineState");
static_assert(sizeof(MoviePipelineBase_GetPipelineState) == 0x000001, "Wrong size on MoviePipelineBase_GetPipelineState");
static_assert(offsetof(MoviePipelineBase_GetPipelineState, ReturnValue) == 0x000000, "Member 'MoviePipelineBase_GetPipelineState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBase.IsShutdownRequested
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineBase_IsShutdownRequested final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBase_IsShutdownRequested) == 0x000001, "Wrong alignment on MoviePipelineBase_IsShutdownRequested");
static_assert(sizeof(MoviePipelineBase_IsShutdownRequested) == 0x000001, "Wrong size on MoviePipelineBase_IsShutdownRequested");
static_assert(offsetof(MoviePipelineBase_IsShutdownRequested, ReturnValue) == 0x000000, "Member 'MoviePipelineBase_IsShutdownRequested::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.Initialize
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphPipeline_Initialize final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieGraphInitConfig                  InitConfig;                                        // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_Initialize) == 0x000008, "Wrong alignment on MovieGraphPipeline_Initialize");
static_assert(sizeof(MovieGraphPipeline_Initialize) == 0x000028, "Wrong size on MovieGraphPipeline_Initialize");
static_assert(offsetof(MovieGraphPipeline_Initialize, InJob) == 0x000000, "Member 'MovieGraphPipeline_Initialize::InJob' has a wrong offset!");
static_assert(offsetof(MovieGraphPipeline_Initialize, InitConfig) == 0x000008, "Member 'MovieGraphPipeline_Initialize::InitConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.SetInitializationTime
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphPipeline_SetInitializationTime final
{
public:
	struct FDateTime                              InDateTime;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_SetInitializationTime) == 0x000008, "Wrong alignment on MovieGraphPipeline_SetInitializationTime");
static_assert(sizeof(MovieGraphPipeline_SetInitializationTime) == 0x000008, "Wrong size on MovieGraphPipeline_SetInitializationTime");
static_assert(offsetof(MovieGraphPipeline_SetInitializationTime, InDateTime) == 0x000000, "Member 'MovieGraphPipeline_SetInitializationTime::InDateTime' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.GetCurrentJob
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphPipeline_GetCurrentJob final
{
public:
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_GetCurrentJob) == 0x000008, "Wrong alignment on MovieGraphPipeline_GetCurrentJob");
static_assert(sizeof(MovieGraphPipeline_GetCurrentJob) == 0x000008, "Wrong size on MovieGraphPipeline_GetCurrentJob");
static_assert(offsetof(MovieGraphPipeline_GetCurrentJob, ReturnValue) == 0x000000, "Member 'MovieGraphPipeline_GetCurrentJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.GetCurrentTraversalContext
// 0x00D8 (0x00D8 - 0x0000)
struct MovieGraphPipeline_GetCurrentTraversalContext final
{
public:
	bool                                          bForShot;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44F6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieGraphTraversalContext            ReturnValue;                                       // 0x0008(0x00D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_GetCurrentTraversalContext) == 0x000008, "Wrong alignment on MovieGraphPipeline_GetCurrentTraversalContext");
static_assert(sizeof(MovieGraphPipeline_GetCurrentTraversalContext) == 0x0000D8, "Wrong size on MovieGraphPipeline_GetCurrentTraversalContext");
static_assert(offsetof(MovieGraphPipeline_GetCurrentTraversalContext, bForShot) == 0x000000, "Member 'MovieGraphPipeline_GetCurrentTraversalContext::bForShot' has a wrong offset!");
static_assert(offsetof(MovieGraphPipeline_GetCurrentTraversalContext, ReturnValue) == 0x000008, "Member 'MovieGraphPipeline_GetCurrentTraversalContext::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.GetInitializationTime
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphPipeline_GetInitializationTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_GetInitializationTime) == 0x000008, "Wrong alignment on MovieGraphPipeline_GetInitializationTime");
static_assert(sizeof(MovieGraphPipeline_GetInitializationTime) == 0x000008, "Wrong size on MovieGraphPipeline_GetInitializationTime");
static_assert(offsetof(MovieGraphPipeline_GetInitializationTime, ReturnValue) == 0x000000, "Member 'MovieGraphPipeline_GetInitializationTime::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.GetInitializationTimeOffset
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphPipeline_GetInitializationTimeOffset final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_GetInitializationTimeOffset) == 0x000008, "Wrong alignment on MovieGraphPipeline_GetInitializationTimeOffset");
static_assert(sizeof(MovieGraphPipeline_GetInitializationTimeOffset) == 0x000008, "Wrong size on MovieGraphPipeline_GetInitializationTimeOffset");
static_assert(offsetof(MovieGraphPipeline_GetInitializationTimeOffset, ReturnValue) == 0x000000, "Member 'MovieGraphPipeline_GetInitializationTimeOffset::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.GetRendererInstance
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphPipeline_GetRendererInstance final
{
public:
	class UMovieGraphRendererBase*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_GetRendererInstance) == 0x000008, "Wrong alignment on MovieGraphPipeline_GetRendererInstance");
static_assert(sizeof(MovieGraphPipeline_GetRendererInstance) == 0x000008, "Wrong size on MovieGraphPipeline_GetRendererInstance");
static_assert(offsetof(MovieGraphPipeline_GetRendererInstance, ReturnValue) == 0x000000, "Member 'MovieGraphPipeline_GetRendererInstance::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.GetTimeStepInstance
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphPipeline_GetTimeStepInstance final
{
public:
	class UMovieGraphTimeStepBase*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_GetTimeStepInstance) == 0x000008, "Wrong alignment on MovieGraphPipeline_GetTimeStepInstance");
static_assert(sizeof(MovieGraphPipeline_GetTimeStepInstance) == 0x000008, "Wrong size on MovieGraphPipeline_GetTimeStepInstance");
static_assert(offsetof(MovieGraphPipeline_GetTimeStepInstance, ReturnValue) == 0x000000, "Member 'MovieGraphPipeline_GetTimeStepInstance::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroupQueryBase.SetEnabled
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroupQueryBase_SetEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroupQueryBase_SetEnabled) == 0x000001, "Wrong alignment on MovieGraphConditionGroupQueryBase_SetEnabled");
static_assert(sizeof(MovieGraphConditionGroupQueryBase_SetEnabled) == 0x000001, "Wrong size on MovieGraphConditionGroupQueryBase_SetEnabled");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_SetEnabled, bEnabled) == 0x000000, "Member 'MovieGraphConditionGroupQueryBase_SetEnabled::bEnabled' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroupQueryBase.SetOperationType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroupQueryBase_SetOperationType final
{
public:
	EMovieGraphConditionGroupQueryOpType          OperationType;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroupQueryBase_SetOperationType) == 0x000001, "Wrong alignment on MovieGraphConditionGroupQueryBase_SetOperationType");
static_assert(sizeof(MovieGraphConditionGroupQueryBase_SetOperationType) == 0x000001, "Wrong size on MovieGraphConditionGroupQueryBase_SetOperationType");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_SetOperationType, OperationType) == 0x000000, "Member 'MovieGraphConditionGroupQueryBase_SetOperationType::OperationType' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroupQueryBase.Evaluate
// 0x0068 (0x0068 - 0x0000)
struct MovieGraphConditionGroupQueryBase_Evaluate final
{
public:
	TArray<class AActor*>                         InActorsToQuery;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	const class UWorld*                           InWorld;                                           // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class AActor*>                           OutMatchingActors;                                 // 0x0018(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroupQueryBase_Evaluate) == 0x000008, "Wrong alignment on MovieGraphConditionGroupQueryBase_Evaluate");
static_assert(sizeof(MovieGraphConditionGroupQueryBase_Evaluate) == 0x000068, "Wrong size on MovieGraphConditionGroupQueryBase_Evaluate");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_Evaluate, InActorsToQuery) == 0x000000, "Member 'MovieGraphConditionGroupQueryBase_Evaluate::InActorsToQuery' has a wrong offset!");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_Evaluate, InWorld) == 0x000010, "Member 'MovieGraphConditionGroupQueryBase_Evaluate::InWorld' has a wrong offset!");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_Evaluate, OutMatchingActors) == 0x000018, "Member 'MovieGraphConditionGroupQueryBase_Evaluate::OutMatchingActors' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroupQueryBase.GetOperationType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroupQueryBase_GetOperationType final
{
public:
	EMovieGraphConditionGroupQueryOpType          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroupQueryBase_GetOperationType) == 0x000001, "Wrong alignment on MovieGraphConditionGroupQueryBase_GetOperationType");
static_assert(sizeof(MovieGraphConditionGroupQueryBase_GetOperationType) == 0x000001, "Wrong size on MovieGraphConditionGroupQueryBase_GetOperationType");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_GetOperationType, ReturnValue) == 0x000000, "Member 'MovieGraphConditionGroupQueryBase_GetOperationType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroupQueryBase.IsEditorOnlyQuery
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroupQueryBase_IsEditorOnlyQuery final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroupQueryBase_IsEditorOnlyQuery) == 0x000001, "Wrong alignment on MovieGraphConditionGroupQueryBase_IsEditorOnlyQuery");
static_assert(sizeof(MovieGraphConditionGroupQueryBase_IsEditorOnlyQuery) == 0x000001, "Wrong size on MovieGraphConditionGroupQueryBase_IsEditorOnlyQuery");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_IsEditorOnlyQuery, ReturnValue) == 0x000000, "Member 'MovieGraphConditionGroupQueryBase_IsEditorOnlyQuery::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroupQueryBase.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroupQueryBase_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroupQueryBase_IsEnabled) == 0x000001, "Wrong alignment on MovieGraphConditionGroupQueryBase_IsEnabled");
static_assert(sizeof(MovieGraphConditionGroupQueryBase_IsEnabled) == 0x000001, "Wrong size on MovieGraphConditionGroupQueryBase_IsEnabled");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_IsEnabled, ReturnValue) == 0x000000, "Member 'MovieGraphConditionGroupQueryBase_IsEnabled::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroupQueryBase.IsFirstConditionGroupQuery
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroupQueryBase_IsFirstConditionGroupQuery final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroupQueryBase_IsFirstConditionGroupQuery) == 0x000001, "Wrong alignment on MovieGraphConditionGroupQueryBase_IsFirstConditionGroupQuery");
static_assert(sizeof(MovieGraphConditionGroupQueryBase_IsFirstConditionGroupQuery) == 0x000001, "Wrong size on MovieGraphConditionGroupQueryBase_IsFirstConditionGroupQuery");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_IsFirstConditionGroupQuery, ReturnValue) == 0x000000, "Member 'MovieGraphConditionGroupQueryBase_IsFirstConditionGroupQuery::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroupQueryBase.ShouldHidePropertyNames
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroupQueryBase_ShouldHidePropertyNames final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroupQueryBase_ShouldHidePropertyNames) == 0x000001, "Wrong alignment on MovieGraphConditionGroupQueryBase_ShouldHidePropertyNames");
static_assert(sizeof(MovieGraphConditionGroupQueryBase_ShouldHidePropertyNames) == 0x000001, "Wrong size on MovieGraphConditionGroupQueryBase_ShouldHidePropertyNames");
static_assert(offsetof(MovieGraphConditionGroupQueryBase_ShouldHidePropertyNames, ReturnValue) == 0x000000, "Member 'MovieGraphConditionGroupQueryBase_ShouldHidePropertyNames::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroup.AddQuery
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphConditionGroup_AddQuery final
{
public:
	TSubclassOf<class UMovieGraphConditionGroupQueryBase> InQueryType;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InsertIndex;                                       // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44FC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovieGraphConditionGroupQueryBase*     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroup_AddQuery) == 0x000008, "Wrong alignment on MovieGraphConditionGroup_AddQuery");
static_assert(sizeof(MovieGraphConditionGroup_AddQuery) == 0x000018, "Wrong size on MovieGraphConditionGroup_AddQuery");
static_assert(offsetof(MovieGraphConditionGroup_AddQuery, InQueryType) == 0x000000, "Member 'MovieGraphConditionGroup_AddQuery::InQueryType' has a wrong offset!");
static_assert(offsetof(MovieGraphConditionGroup_AddQuery, InsertIndex) == 0x000008, "Member 'MovieGraphConditionGroup_AddQuery::InsertIndex' has a wrong offset!");
static_assert(offsetof(MovieGraphConditionGroup_AddQuery, ReturnValue) == 0x000010, "Member 'MovieGraphConditionGroup_AddQuery::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroup.MoveQueryToIndex
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConditionGroup_MoveQueryToIndex final
{
public:
	class UMovieGraphConditionGroupQueryBase*     InQuery;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewIndex;                                          // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44FD[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConditionGroup_MoveQueryToIndex) == 0x000008, "Wrong alignment on MovieGraphConditionGroup_MoveQueryToIndex");
static_assert(sizeof(MovieGraphConditionGroup_MoveQueryToIndex) == 0x000010, "Wrong size on MovieGraphConditionGroup_MoveQueryToIndex");
static_assert(offsetof(MovieGraphConditionGroup_MoveQueryToIndex, InQuery) == 0x000000, "Member 'MovieGraphConditionGroup_MoveQueryToIndex::InQuery' has a wrong offset!");
static_assert(offsetof(MovieGraphConditionGroup_MoveQueryToIndex, NewIndex) == 0x000008, "Member 'MovieGraphConditionGroup_MoveQueryToIndex::NewIndex' has a wrong offset!");
static_assert(offsetof(MovieGraphConditionGroup_MoveQueryToIndex, ReturnValue) == 0x00000C, "Member 'MovieGraphConditionGroup_MoveQueryToIndex::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroup.RemoveQuery
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConditionGroup_RemoveQuery final
{
public:
	class UMovieGraphConditionGroupQueryBase*     InQuery;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44FE[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphConditionGroup_RemoveQuery) == 0x000008, "Wrong alignment on MovieGraphConditionGroup_RemoveQuery");
static_assert(sizeof(MovieGraphConditionGroup_RemoveQuery) == 0x000010, "Wrong size on MovieGraphConditionGroup_RemoveQuery");
static_assert(offsetof(MovieGraphConditionGroup_RemoveQuery, InQuery) == 0x000000, "Member 'MovieGraphConditionGroup_RemoveQuery::InQuery' has a wrong offset!");
static_assert(offsetof(MovieGraphConditionGroup_RemoveQuery, ReturnValue) == 0x000008, "Member 'MovieGraphConditionGroup_RemoveQuery::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroup.SetOperationType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroup_SetOperationType final
{
public:
	EMovieGraphConditionGroupOpType               OperationType;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroup_SetOperationType) == 0x000001, "Wrong alignment on MovieGraphConditionGroup_SetOperationType");
static_assert(sizeof(MovieGraphConditionGroup_SetOperationType) == 0x000001, "Wrong size on MovieGraphConditionGroup_SetOperationType");
static_assert(offsetof(MovieGraphConditionGroup_SetOperationType, OperationType) == 0x000000, "Member 'MovieGraphConditionGroup_SetOperationType::OperationType' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroup.Evaluate
// 0x0058 (0x0058 - 0x0000)
struct MovieGraphConditionGroup_Evaluate final
{
public:
	const class UWorld*                           InWorld;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class AActor*>                           ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroup_Evaluate) == 0x000008, "Wrong alignment on MovieGraphConditionGroup_Evaluate");
static_assert(sizeof(MovieGraphConditionGroup_Evaluate) == 0x000058, "Wrong size on MovieGraphConditionGroup_Evaluate");
static_assert(offsetof(MovieGraphConditionGroup_Evaluate, InWorld) == 0x000000, "Member 'MovieGraphConditionGroup_Evaluate::InWorld' has a wrong offset!");
static_assert(offsetof(MovieGraphConditionGroup_Evaluate, ReturnValue) == 0x000008, "Member 'MovieGraphConditionGroup_Evaluate::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroup.GetOperationType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroup_GetOperationType final
{
public:
	EMovieGraphConditionGroupOpType               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroup_GetOperationType) == 0x000001, "Wrong alignment on MovieGraphConditionGroup_GetOperationType");
static_assert(sizeof(MovieGraphConditionGroup_GetOperationType) == 0x000001, "Wrong size on MovieGraphConditionGroup_GetOperationType");
static_assert(offsetof(MovieGraphConditionGroup_GetOperationType, ReturnValue) == 0x000000, "Member 'MovieGraphConditionGroup_GetOperationType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroup.GetQueries
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphConditionGroup_GetQueries final
{
public:
	TArray<class UMovieGraphConditionGroupQueryBase*> ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroup_GetQueries) == 0x000008, "Wrong alignment on MovieGraphConditionGroup_GetQueries");
static_assert(sizeof(MovieGraphConditionGroup_GetQueries) == 0x000010, "Wrong size on MovieGraphConditionGroup_GetQueries");
static_assert(offsetof(MovieGraphConditionGroup_GetQueries, ReturnValue) == 0x000000, "Member 'MovieGraphConditionGroup_GetQueries::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConditionGroup.IsFirstConditionGroup
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphConditionGroup_IsFirstConditionGroup final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConditionGroup_IsFirstConditionGroup) == 0x000001, "Wrong alignment on MovieGraphConditionGroup_IsFirstConditionGroup");
static_assert(sizeof(MovieGraphConditionGroup_IsFirstConditionGroup) == 0x000001, "Wrong size on MovieGraphConditionGroup_IsFirstConditionGroup");
static_assert(offsetof(MovieGraphConditionGroup_IsFirstConditionGroup, ReturnValue) == 0x000000, "Member 'MovieGraphConditionGroup_IsFirstConditionGroup::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollection.AddConditionGroup
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphCollection_AddConditionGroup final
{
public:
	class UMovieGraphConditionGroup*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphCollection_AddConditionGroup) == 0x000008, "Wrong alignment on MovieGraphCollection_AddConditionGroup");
static_assert(sizeof(MovieGraphCollection_AddConditionGroup) == 0x000008, "Wrong size on MovieGraphCollection_AddConditionGroup");
static_assert(offsetof(MovieGraphCollection_AddConditionGroup, ReturnValue) == 0x000000, "Member 'MovieGraphCollection_AddConditionGroup::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollection.MoveConditionGroupToIndex
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphCollection_MoveConditionGroupToIndex final
{
public:
	class UMovieGraphConditionGroup*              InConditionGroup;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewIndex;                                          // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44FF[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphCollection_MoveConditionGroupToIndex) == 0x000008, "Wrong alignment on MovieGraphCollection_MoveConditionGroupToIndex");
static_assert(sizeof(MovieGraphCollection_MoveConditionGroupToIndex) == 0x000010, "Wrong size on MovieGraphCollection_MoveConditionGroupToIndex");
static_assert(offsetof(MovieGraphCollection_MoveConditionGroupToIndex, InConditionGroup) == 0x000000, "Member 'MovieGraphCollection_MoveConditionGroupToIndex::InConditionGroup' has a wrong offset!");
static_assert(offsetof(MovieGraphCollection_MoveConditionGroupToIndex, NewIndex) == 0x000008, "Member 'MovieGraphCollection_MoveConditionGroupToIndex::NewIndex' has a wrong offset!");
static_assert(offsetof(MovieGraphCollection_MoveConditionGroupToIndex, ReturnValue) == 0x00000C, "Member 'MovieGraphCollection_MoveConditionGroupToIndex::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollection.RemoveConditionGroup
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphCollection_RemoveConditionGroup final
{
public:
	class UMovieGraphConditionGroup*              InConditionGroup;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4500[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphCollection_RemoveConditionGroup) == 0x000008, "Wrong alignment on MovieGraphCollection_RemoveConditionGroup");
static_assert(sizeof(MovieGraphCollection_RemoveConditionGroup) == 0x000010, "Wrong size on MovieGraphCollection_RemoveConditionGroup");
static_assert(offsetof(MovieGraphCollection_RemoveConditionGroup, InConditionGroup) == 0x000000, "Member 'MovieGraphCollection_RemoveConditionGroup::InConditionGroup' has a wrong offset!");
static_assert(offsetof(MovieGraphCollection_RemoveConditionGroup, ReturnValue) == 0x000008, "Member 'MovieGraphCollection_RemoveConditionGroup::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollection.SetCollectionName
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphCollection_SetCollectionName final
{
public:
	class FString                                 InName;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphCollection_SetCollectionName) == 0x000008, "Wrong alignment on MovieGraphCollection_SetCollectionName");
static_assert(sizeof(MovieGraphCollection_SetCollectionName) == 0x000010, "Wrong size on MovieGraphCollection_SetCollectionName");
static_assert(offsetof(MovieGraphCollection_SetCollectionName, InName) == 0x000000, "Member 'MovieGraphCollection_SetCollectionName::InName' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollection.Evaluate
// 0x0058 (0x0058 - 0x0000)
struct MovieGraphCollection_Evaluate final
{
public:
	const class UWorld*                           InWorld;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class AActor*>                           ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphCollection_Evaluate) == 0x000008, "Wrong alignment on MovieGraphCollection_Evaluate");
static_assert(sizeof(MovieGraphCollection_Evaluate) == 0x000058, "Wrong size on MovieGraphCollection_Evaluate");
static_assert(offsetof(MovieGraphCollection_Evaluate, InWorld) == 0x000000, "Member 'MovieGraphCollection_Evaluate::InWorld' has a wrong offset!");
static_assert(offsetof(MovieGraphCollection_Evaluate, ReturnValue) == 0x000008, "Member 'MovieGraphCollection_Evaluate::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollection.GetCollectionName
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphCollection_GetCollectionName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphCollection_GetCollectionName) == 0x000008, "Wrong alignment on MovieGraphCollection_GetCollectionName");
static_assert(sizeof(MovieGraphCollection_GetCollectionName) == 0x000010, "Wrong size on MovieGraphCollection_GetCollectionName");
static_assert(offsetof(MovieGraphCollection_GetCollectionName, ReturnValue) == 0x000000, "Member 'MovieGraphCollection_GetCollectionName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollection.GetConditionGroups
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphCollection_GetConditionGroups final
{
public:
	TArray<class UMovieGraphConditionGroup*>      ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphCollection_GetConditionGroups) == 0x000008, "Wrong alignment on MovieGraphCollection_GetConditionGroups");
static_assert(sizeof(MovieGraphCollection_GetConditionGroups) == 0x000010, "Wrong size on MovieGraphCollection_GetConditionGroups");
static_assert(offsetof(MovieGraphCollection_GetConditionGroups, ReturnValue) == 0x000000, "Member 'MovieGraphCollection_GetConditionGroups::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollectionModifier.AddCollection
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphCollectionModifier_AddCollection final
{
public:
	class UMovieGraphCollection*                  Collection;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphCollectionModifier_AddCollection) == 0x000008, "Wrong alignment on MovieGraphCollectionModifier_AddCollection");
static_assert(sizeof(MovieGraphCollectionModifier_AddCollection) == 0x000008, "Wrong size on MovieGraphCollectionModifier_AddCollection");
static_assert(offsetof(MovieGraphCollectionModifier_AddCollection, Collection) == 0x000000, "Member 'MovieGraphCollectionModifier_AddCollection::Collection' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollectionModifier.SetCollections
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphCollectionModifier_SetCollections final
{
public:
	TArray<class UMovieGraphCollection*>          InCollections;                                     // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphCollectionModifier_SetCollections) == 0x000008, "Wrong alignment on MovieGraphCollectionModifier_SetCollections");
static_assert(sizeof(MovieGraphCollectionModifier_SetCollections) == 0x000010, "Wrong size on MovieGraphCollectionModifier_SetCollections");
static_assert(offsetof(MovieGraphCollectionModifier_SetCollections, InCollections) == 0x000000, "Member 'MovieGraphCollectionModifier_SetCollections::InCollections' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphCollectionModifier.GetCollections
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphCollectionModifier_GetCollections final
{
public:
	TArray<class UMovieGraphCollection*>          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphCollectionModifier_GetCollections) == 0x000008, "Wrong alignment on MovieGraphCollectionModifier_GetCollections");
static_assert(sizeof(MovieGraphCollectionModifier_GetCollections) == 0x000010, "Wrong size on MovieGraphCollectionModifier_GetCollections");
static_assert(offsetof(MovieGraphCollectionModifier_GetCollections, ReturnValue) == 0x000000, "Member 'MovieGraphCollectionModifier_GetCollections::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphMaterialModifier.ApplyModifier
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphMaterialModifier_ApplyModifier final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphMaterialModifier_ApplyModifier) == 0x000008, "Wrong alignment on MovieGraphMaterialModifier_ApplyModifier");
static_assert(sizeof(MovieGraphMaterialModifier_ApplyModifier) == 0x000008, "Wrong size on MovieGraphMaterialModifier_ApplyModifier");
static_assert(offsetof(MovieGraphMaterialModifier_ApplyModifier, World) == 0x000000, "Member 'MovieGraphMaterialModifier_ApplyModifier::World' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphMaterialModifier.SetMaterial
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphMaterialModifier_SetMaterial final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      InMaterial;                                        // 0x0000(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphMaterialModifier_SetMaterial) == 0x000008, "Wrong alignment on MovieGraphMaterialModifier_SetMaterial");
static_assert(sizeof(MovieGraphMaterialModifier_SetMaterial) == 0x000028, "Wrong size on MovieGraphMaterialModifier_SetMaterial");
static_assert(offsetof(MovieGraphMaterialModifier_SetMaterial, InMaterial) == 0x000000, "Member 'MovieGraphMaterialModifier_SetMaterial::InMaterial' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderPropertyModifier.ApplyModifier
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderPropertyModifier_ApplyModifier final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderPropertyModifier_ApplyModifier) == 0x000008, "Wrong alignment on MovieGraphRenderPropertyModifier_ApplyModifier");
static_assert(sizeof(MovieGraphRenderPropertyModifier_ApplyModifier) == 0x000008, "Wrong size on MovieGraphRenderPropertyModifier_ApplyModifier");
static_assert(offsetof(MovieGraphRenderPropertyModifier_ApplyModifier, World) == 0x000000, "Member 'MovieGraphRenderPropertyModifier_ApplyModifier::World' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderPropertyModifier.SetHidden
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphRenderPropertyModifier_SetHidden final
{
public:
	bool                                          bInIsHidden;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderPropertyModifier_SetHidden) == 0x000001, "Wrong alignment on MovieGraphRenderPropertyModifier_SetHidden");
static_assert(sizeof(MovieGraphRenderPropertyModifier_SetHidden) == 0x000001, "Wrong size on MovieGraphRenderPropertyModifier_SetHidden");
static_assert(offsetof(MovieGraphRenderPropertyModifier_SetHidden, bInIsHidden) == 0x000000, "Member 'MovieGraphRenderPropertyModifier_SetHidden::bInIsHidden' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderPropertyModifier.IsHidden
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphRenderPropertyModifier_IsHidden final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderPropertyModifier_IsHidden) == 0x000001, "Wrong alignment on MovieGraphRenderPropertyModifier_IsHidden");
static_assert(sizeof(MovieGraphRenderPropertyModifier_IsHidden) == 0x000001, "Wrong size on MovieGraphRenderPropertyModifier_IsHidden");
static_assert(offsetof(MovieGraphRenderPropertyModifier_IsHidden, ReturnValue) == 0x000000, "Member 'MovieGraphRenderPropertyModifier_IsHidden::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayer.AddModifier
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderLayer_AddModifier final
{
public:
	class UMovieGraphCollectionModifier*          Modifier;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayer_AddModifier) == 0x000008, "Wrong alignment on MovieGraphRenderLayer_AddModifier");
static_assert(sizeof(MovieGraphRenderLayer_AddModifier) == 0x000008, "Wrong size on MovieGraphRenderLayer_AddModifier");
static_assert(offsetof(MovieGraphRenderLayer_AddModifier, Modifier) == 0x000000, "Member 'MovieGraphRenderLayer_AddModifier::Modifier' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayer.Apply
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderLayer_Apply final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayer_Apply) == 0x000008, "Wrong alignment on MovieGraphRenderLayer_Apply");
static_assert(sizeof(MovieGraphRenderLayer_Apply) == 0x000008, "Wrong size on MovieGraphRenderLayer_Apply");
static_assert(offsetof(MovieGraphRenderLayer_Apply, World) == 0x000000, "Member 'MovieGraphRenderLayer_Apply::World' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayer.RemoveModifier
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderLayer_RemoveModifier final
{
public:
	class UMovieGraphCollectionModifier*          Modifier;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayer_RemoveModifier) == 0x000008, "Wrong alignment on MovieGraphRenderLayer_RemoveModifier");
static_assert(sizeof(MovieGraphRenderLayer_RemoveModifier) == 0x000008, "Wrong size on MovieGraphRenderLayer_RemoveModifier");
static_assert(offsetof(MovieGraphRenderLayer_RemoveModifier, Modifier) == 0x000000, "Member 'MovieGraphRenderLayer_RemoveModifier::Modifier' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayer.SetRenderLayerName
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderLayer_SetRenderLayerName final
{
public:
	class FName                                   NewName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayer_SetRenderLayerName) == 0x000004, "Wrong alignment on MovieGraphRenderLayer_SetRenderLayerName");
static_assert(sizeof(MovieGraphRenderLayer_SetRenderLayerName) == 0x000008, "Wrong size on MovieGraphRenderLayer_SetRenderLayerName");
static_assert(offsetof(MovieGraphRenderLayer_SetRenderLayerName, NewName) == 0x000000, "Member 'MovieGraphRenderLayer_SetRenderLayerName::NewName' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayer.GetCollectionByName
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphRenderLayer_GetCollectionByName final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphCollection*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayer_GetCollectionByName) == 0x000008, "Wrong alignment on MovieGraphRenderLayer_GetCollectionByName");
static_assert(sizeof(MovieGraphRenderLayer_GetCollectionByName) == 0x000018, "Wrong size on MovieGraphRenderLayer_GetCollectionByName");
static_assert(offsetof(MovieGraphRenderLayer_GetCollectionByName, Param_Name) == 0x000000, "Member 'MovieGraphRenderLayer_GetCollectionByName::Param_Name' has a wrong offset!");
static_assert(offsetof(MovieGraphRenderLayer_GetCollectionByName, ReturnValue) == 0x000010, "Member 'MovieGraphRenderLayer_GetCollectionByName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayer.GetModifiers
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphRenderLayer_GetModifiers final
{
public:
	TArray<class UMovieGraphCollectionModifier*>  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayer_GetModifiers) == 0x000008, "Wrong alignment on MovieGraphRenderLayer_GetModifiers");
static_assert(sizeof(MovieGraphRenderLayer_GetModifiers) == 0x000010, "Wrong size on MovieGraphRenderLayer_GetModifiers");
static_assert(offsetof(MovieGraphRenderLayer_GetModifiers, ReturnValue) == 0x000000, "Member 'MovieGraphRenderLayer_GetModifiers::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayer.GetRenderLayerName
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderLayer_GetRenderLayerName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayer_GetRenderLayerName) == 0x000004, "Wrong alignment on MovieGraphRenderLayer_GetRenderLayerName");
static_assert(sizeof(MovieGraphRenderLayer_GetRenderLayerName) == 0x000008, "Wrong size on MovieGraphRenderLayer_GetRenderLayerName");
static_assert(offsetof(MovieGraphRenderLayer_GetRenderLayerName, ReturnValue) == 0x000000, "Member 'MovieGraphRenderLayer_GetRenderLayerName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayerSubsystem.GetFromWorld
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphRenderLayerSubsystem_GetFromWorld final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieGraphRenderLayerSubsystem*        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayerSubsystem_GetFromWorld) == 0x000008, "Wrong alignment on MovieGraphRenderLayerSubsystem_GetFromWorld");
static_assert(sizeof(MovieGraphRenderLayerSubsystem_GetFromWorld) == 0x000010, "Wrong size on MovieGraphRenderLayerSubsystem_GetFromWorld");
static_assert(offsetof(MovieGraphRenderLayerSubsystem_GetFromWorld, World) == 0x000000, "Member 'MovieGraphRenderLayerSubsystem_GetFromWorld::World' has a wrong offset!");
static_assert(offsetof(MovieGraphRenderLayerSubsystem_GetFromWorld, ReturnValue) == 0x000008, "Member 'MovieGraphRenderLayerSubsystem_GetFromWorld::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayerSubsystem.AddRenderLayer
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphRenderLayerSubsystem_AddRenderLayer final
{
public:
	class UMovieGraphRenderLayer*                 RenderLayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4505[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphRenderLayerSubsystem_AddRenderLayer) == 0x000008, "Wrong alignment on MovieGraphRenderLayerSubsystem_AddRenderLayer");
static_assert(sizeof(MovieGraphRenderLayerSubsystem_AddRenderLayer) == 0x000010, "Wrong size on MovieGraphRenderLayerSubsystem_AddRenderLayer");
static_assert(offsetof(MovieGraphRenderLayerSubsystem_AddRenderLayer, RenderLayer) == 0x000000, "Member 'MovieGraphRenderLayerSubsystem_AddRenderLayer::RenderLayer' has a wrong offset!");
static_assert(offsetof(MovieGraphRenderLayerSubsystem_AddRenderLayer, ReturnValue) == 0x000008, "Member 'MovieGraphRenderLayerSubsystem_AddRenderLayer::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayerSubsystem.GetRenderLayers
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphRenderLayerSubsystem_GetRenderLayers final
{
public:
	TArray<class UMovieGraphRenderLayer*>         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayerSubsystem_GetRenderLayers) == 0x000008, "Wrong alignment on MovieGraphRenderLayerSubsystem_GetRenderLayers");
static_assert(sizeof(MovieGraphRenderLayerSubsystem_GetRenderLayers) == 0x000010, "Wrong size on MovieGraphRenderLayerSubsystem_GetRenderLayers");
static_assert(offsetof(MovieGraphRenderLayerSubsystem_GetRenderLayers, ReturnValue) == 0x000000, "Member 'MovieGraphRenderLayerSubsystem_GetRenderLayers::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayerSubsystem.RemoveRenderLayer
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphRenderLayerSubsystem_RemoveRenderLayer final
{
public:
	class FString                                 RenderLayerName;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayerSubsystem_RemoveRenderLayer) == 0x000008, "Wrong alignment on MovieGraphRenderLayerSubsystem_RemoveRenderLayer");
static_assert(sizeof(MovieGraphRenderLayerSubsystem_RemoveRenderLayer) == 0x000010, "Wrong size on MovieGraphRenderLayerSubsystem_RemoveRenderLayer");
static_assert(offsetof(MovieGraphRenderLayerSubsystem_RemoveRenderLayer, RenderLayerName) == 0x000000, "Member 'MovieGraphRenderLayerSubsystem_RemoveRenderLayer::RenderLayerName' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayerSubsystem.SetActiveRenderLayerByName
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByName final
{
public:
	class FName                                   RenderLayerName;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByName) == 0x000004, "Wrong alignment on MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByName");
static_assert(sizeof(MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByName) == 0x000008, "Wrong size on MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByName");
static_assert(offsetof(MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByName, RenderLayerName) == 0x000000, "Member 'MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByName::RenderLayerName' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayerSubsystem.SetActiveRenderLayerByObj
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByObj final
{
public:
	class UMovieGraphRenderLayer*                 RenderLayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByObj) == 0x000008, "Wrong alignment on MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByObj");
static_assert(sizeof(MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByObj) == 0x000008, "Wrong size on MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByObj");
static_assert(offsetof(MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByObj, RenderLayer) == 0x000000, "Member 'MovieGraphRenderLayerSubsystem_SetActiveRenderLayerByObj::RenderLayer' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderLayerSubsystem.GetActiveRenderLayer
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderLayerSubsystem_GetActiveRenderLayer final
{
public:
	class UMovieGraphRenderLayer*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderLayerSubsystem_GetActiveRenderLayer) == 0x000008, "Wrong alignment on MovieGraphRenderLayerSubsystem_GetActiveRenderLayer");
static_assert(sizeof(MovieGraphRenderLayerSubsystem_GetActiveRenderLayer) == 0x000008, "Wrong size on MovieGraphRenderLayerSubsystem_GetActiveRenderLayer");
static_assert(offsetof(MovieGraphRenderLayerSubsystem_GetActiveRenderLayer, ReturnValue) == 0x000000, "Member 'MovieGraphRenderLayerSubsystem_GetActiveRenderLayer::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphSubgraphNode.SetSubGraphAsset
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphSubgraphNode_SetSubGraphAsset final
{
public:
	TSoftObjectPtr<class UMovieGraphConfig>       InSubgraphAsset;                                   // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphSubgraphNode_SetSubGraphAsset) == 0x000008, "Wrong alignment on MovieGraphSubgraphNode_SetSubGraphAsset");
static_assert(sizeof(MovieGraphSubgraphNode_SetSubGraphAsset) == 0x000028, "Wrong size on MovieGraphSubgraphNode_SetSubGraphAsset");
static_assert(offsetof(MovieGraphSubgraphNode_SetSubGraphAsset, InSubgraphAsset) == 0x000000, "Member 'MovieGraphSubgraphNode_SetSubGraphAsset::InSubgraphAsset' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphSubgraphNode.GetSubgraphAsset
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphSubgraphNode_GetSubgraphAsset final
{
public:
	class UMovieGraphConfig*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphSubgraphNode_GetSubgraphAsset) == 0x000008, "Wrong alignment on MovieGraphSubgraphNode_GetSubgraphAsset");
static_assert(sizeof(MovieGraphSubgraphNode_GetSubgraphAsset) == 0x000008, "Wrong size on MovieGraphSubgraphNode_GetSubgraphAsset");
static_assert(offsetof(MovieGraphSubgraphNode_GetSubgraphAsset, ReturnValue) == 0x000000, "Member 'MovieGraphSubgraphNode_GetSubgraphAsset::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphVariableNode.SetVariable
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphVariableNode_SetVariable final
{
public:
	class UMovieGraphVariable*                    InVariable;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphVariableNode_SetVariable) == 0x000008, "Wrong alignment on MovieGraphVariableNode_SetVariable");
static_assert(sizeof(MovieGraphVariableNode_SetVariable) == 0x000008, "Wrong size on MovieGraphVariableNode_SetVariable");
static_assert(offsetof(MovieGraphVariableNode_SetVariable, InVariable) == 0x000000, "Member 'MovieGraphVariableNode_SetVariable::InVariable' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphVariableNode.GetVariable
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphVariableNode_GetVariable final
{
public:
	class UMovieGraphVariable*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphVariableNode_GetVariable) == 0x000008, "Wrong alignment on MovieGraphVariableNode_GetVariable");
static_assert(sizeof(MovieGraphVariableNode_GetVariable) == 0x000008, "Wrong size on MovieGraphVariableNode_GetVariable");
static_assert(offsetof(MovieGraphVariableNode_GetVariable, ReturnValue) == 0x000000, "Member 'MovieGraphVariableNode_GetVariable::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueSerializedString
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueSerializedString final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueSerializedString) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueSerializedString");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueSerializedString) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_GetValueSerializedString");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueSerializedString, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueSerializedString::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueSerializedString, ReturnValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueSerializedString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetVariableAssignmentEnableState
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutIsEnabled;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_450F[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState, bOutIsEnabled) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState::bOutIsEnabled' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState, ReturnValue) == 0x000009, "Member 'MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetGraphConfig
// 0x0028 (0x0028 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetGraphConfig final
{
public:
	TSoftObjectPtr<class UMovieGraphConfig>       InGraphConfig;                                     // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetGraphConfig) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetGraphConfig");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetGraphConfig) == 0x000028, "Wrong size on MovieJobVariableAssignmentContainer_SetGraphConfig");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetGraphConfig, InGraphConfig) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetGraphConfig::InGraphConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueBool
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueBool final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInValue;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4510[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueBool) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueBool");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueBool) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_SetValueBool");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueBool, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueBool::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueBool, bInValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueBool::bInValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueBool, ReturnValue) == 0x000009, "Member 'MovieJobVariableAssignmentContainer_SetValueBool::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueByte
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueByte final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         InValue;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4511[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueByte) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueByte");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueByte) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_SetValueByte");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueByte, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueByte::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueByte, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueByte::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueByte, ReturnValue) == 0x000009, "Member 'MovieJobVariableAssignmentContainer_SetValueByte::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueClass
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueClass final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 InValue;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4512[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueClass) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueClass");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueClass) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_SetValueClass");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueClass, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueClass::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueClass, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueClass::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueClass, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueDouble
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueDouble final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        InValue;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4513[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueDouble) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueDouble");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueDouble) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_SetValueDouble");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueDouble, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueDouble::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueDouble, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueDouble::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueDouble, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueDouble::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueEnum
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueEnum final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         InValue;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4514[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UEnum*                            Enum;                                              // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4515[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueEnum) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueEnum");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueEnum) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_SetValueEnum");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueEnum, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueEnum::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueEnum, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueEnum::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueEnum, Enum) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueEnum::Enum' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueEnum, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueEnum::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueFloat
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueFloat final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InValue;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4516[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueFloat) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueFloat");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueFloat) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_SetValueFloat");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueFloat, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueFloat::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueFloat, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueFloat::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueFloat, ReturnValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_SetValueFloat::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueInt32
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueInt32 final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InValue;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4517[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueInt32) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueInt32");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueInt32) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_SetValueInt32");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt32, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueInt32::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt32, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueInt32::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt32, ReturnValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_SetValueInt32::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueInt64
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueInt64 final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         InValue;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4518[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueInt64) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueInt64");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueInt64) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_SetValueInt64");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt64, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueInt64::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt64, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueInt64::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt64, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueInt64::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueName
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueName final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InValue;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4519[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueName) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueName");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueName) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_SetValueName");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueName, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueName::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueName, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueName::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueName, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueObject
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueObject final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                InValue;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_451A[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueObject) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueObject");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueObject) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_SetValueObject");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueObject, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueObject::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueObject, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueObject::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueObject, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueSerializedString
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueSerializedString final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewValue;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_451B[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueSerializedString) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueSerializedString");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueSerializedString) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_SetValueSerializedString");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueSerializedString, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueSerializedString::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueSerializedString, NewValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueSerializedString::NewValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueSerializedString, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueSerializedString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueString
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueString final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InValue;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_451C[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueString) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueString");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueString) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_SetValueString");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueString, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueString::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueString, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueString::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueString, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueText
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueText final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   InValue;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_451D[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueText) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueText");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueText) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_SetValueText");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueText, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueText::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueText, InValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetValueText::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueText, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueText::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetVariableAssignmentEnableState
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEnabled;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_451E[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState, bIsEnabled) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState::bIsEnabled' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState, ReturnValue) == 0x000009, "Member 'MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueBool
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueBool final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutValue;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_451F[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueBool) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueBool");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueBool) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueBool");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueBool, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueBool::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueBool, bOutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueBool::bOutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueBool, ReturnValue) == 0x000009, "Member 'MovieJobVariableAssignmentContainer_GetValueBool::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueByte
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueByte final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         OutValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4520[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueByte) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueByte");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueByte) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueByte");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueByte, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueByte::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueByte, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueByte::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueByte, ReturnValue) == 0x000009, "Member 'MovieJobVariableAssignmentContainer_GetValueByte::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueClass
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueClass final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 OutValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4521[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueClass) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueClass");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueClass) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_GetValueClass");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueClass, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueClass::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueClass, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueClass::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueClass, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueContainerType
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueContainerType final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieGraphContainerType                      ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4522[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueContainerType) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueContainerType");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueContainerType) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueContainerType");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueContainerType, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueContainerType::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueContainerType, ReturnValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueContainerType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueDouble
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueDouble final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        OutValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4523[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueDouble) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueDouble");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueDouble) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_GetValueDouble");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueDouble, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueDouble::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueDouble, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueDouble::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueDouble, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueDouble::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueEnum
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueEnum final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         OutValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4524[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UEnum*                            RequestedEnum;                                     // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4525[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueEnum) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueEnum");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueEnum) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_GetValueEnum");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueEnum, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueEnum::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueEnum, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueEnum::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueEnum, RequestedEnum) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueEnum::RequestedEnum' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueEnum, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueEnum::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueFloat
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueFloat final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4526[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueFloat) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueFloat");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueFloat) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueFloat");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueFloat, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueFloat::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueFloat, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueFloat::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueFloat, ReturnValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueFloat::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueInt32
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueInt32 final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4527[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueInt32) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueInt32");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueInt32) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueInt32");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt32, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueInt32::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt32, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueInt32::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt32, ReturnValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueInt32::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueInt64
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueInt64 final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         OutValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4528[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueInt64) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueInt64");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueInt64) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_GetValueInt64");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt64, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueInt64::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt64, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueInt64::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt64, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueInt64::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueName
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueName final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OutValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4529[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueName) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueName");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueName) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_GetValueName");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueName, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueName::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueName, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueName::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueName, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueObject
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueObject final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                OutValue;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UClass*                           RequestedClass;                                    // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_452A[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueObject) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueObject");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueObject) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_GetValueObject");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueObject, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueObject::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueObject, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueObject::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueObject, RequestedClass) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueObject::RequestedClass' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueObject, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueString
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueString final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutValue;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_452B[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueString) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueString");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueString) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_GetValueString");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueString, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueString::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueString, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueString::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueString, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueText
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueText final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OutValue;                                          // 0x0008(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_452C[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueText) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueText");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueText) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_GetValueText");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueText, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueText::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueText, OutValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueText::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueText, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueText::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueType
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueType final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieGraphValueType                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_452D[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueType) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueType");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueType) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueType");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueType, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueType::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueType, ReturnValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueTypeObject
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueTypeObject final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueTypeObject) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueTypeObject");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueTypeObject) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueTypeObject");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueTypeObject, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueTypeObject::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueTypeObject, ReturnValue) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetValueTypeObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting.SetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineSetting_SetIsEnabled final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_SetIsEnabled) == 0x000001, "Wrong alignment on MoviePipelineSetting_SetIsEnabled");
static_assert(sizeof(MoviePipelineSetting_SetIsEnabled) == 0x000001, "Wrong size on MoviePipelineSetting_SetIsEnabled");
static_assert(offsetof(MoviePipelineSetting_SetIsEnabled, bInEnabled) == 0x000000, "Member 'MoviePipelineSetting_SetIsEnabled::bInEnabled' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting.BuildNewProcessCommandLine
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineSetting_BuildNewProcessCommandLine final
{
public:
	class FString                                 InOutUnrealURLParams;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InOutCommandLineArgs;                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BuildNewProcessCommandLine) == 0x000008, "Wrong alignment on MoviePipelineSetting_BuildNewProcessCommandLine");
static_assert(sizeof(MoviePipelineSetting_BuildNewProcessCommandLine) == 0x000020, "Wrong size on MoviePipelineSetting_BuildNewProcessCommandLine");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLine, InOutUnrealURLParams) == 0x000000, "Member 'MoviePipelineSetting_BuildNewProcessCommandLine::InOutUnrealURLParams' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLine, InOutCommandLineArgs) == 0x000010, "Member 'MoviePipelineSetting_BuildNewProcessCommandLine::InOutCommandLineArgs' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting.BuildNewProcessCommandLineArgs
// 0x0040 (0x0040 - 0x0000)
struct MoviePipelineSetting_BuildNewProcessCommandLineArgs final
{
public:
	TArray<class FString>                         InOutUnrealURLParams;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         InOutCommandLineArgs;                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         InOutDeviceProfileCvars;                           // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         InOutExecCmds;                                     // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BuildNewProcessCommandLineArgs) == 0x000008, "Wrong alignment on MoviePipelineSetting_BuildNewProcessCommandLineArgs");
static_assert(sizeof(MoviePipelineSetting_BuildNewProcessCommandLineArgs) == 0x000040, "Wrong size on MoviePipelineSetting_BuildNewProcessCommandLineArgs");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLineArgs, InOutUnrealURLParams) == 0x000000, "Member 'MoviePipelineSetting_BuildNewProcessCommandLineArgs::InOutUnrealURLParams' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLineArgs, InOutCommandLineArgs) == 0x000010, "Member 'MoviePipelineSetting_BuildNewProcessCommandLineArgs::InOutCommandLineArgs' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLineArgs, InOutDeviceProfileCvars) == 0x000020, "Member 'MoviePipelineSetting_BuildNewProcessCommandLineArgs::InOutDeviceProfileCvars' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLineArgs, InOutExecCmds) == 0x000030, "Member 'MoviePipelineSetting_BuildNewProcessCommandLineArgs::InOutExecCmds' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineSetting_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_IsEnabled) == 0x000001, "Wrong alignment on MoviePipelineSetting_IsEnabled");
static_assert(sizeof(MoviePipelineSetting_IsEnabled) == 0x000001, "Wrong size on MoviePipelineSetting_IsEnabled");
static_assert(offsetof(MoviePipelineSetting_IsEnabled, ReturnValue) == 0x000000, "Member 'MoviePipelineSetting_IsEnabled::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveSetupForPipelineImpl
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl final
{
public:
	class UMoviePipeline*                         InPipeline;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl) == 0x000008, "Wrong alignment on MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl");
static_assert(sizeof(MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl) == 0x000008, "Wrong size on MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl");
static_assert(offsetof(MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl, InPipeline) == 0x000000, "Member 'MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl::InPipeline' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveTeardownForPipelineImpl
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl final
{
public:
	class UMoviePipeline*                         InPipeline;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl) == 0x000008, "Wrong alignment on MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl");
static_assert(sizeof(MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl) == 0x000008, "Wrong size on MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl");
static_assert(offsetof(MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl, InPipeline) == 0x000000, "Member 'MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl::InPipeline' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveGetFormatArguments
// 0x0150 (0x0150 - 0x0000)
struct MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments final
{
public:
	struct FMoviePipelineFormatArgs               InOutFormatArgs;                                   // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FMoviePipelineFormatArgs               ReturnValue;                                       // 0x00A8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments) == 0x000008, "Wrong alignment on MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments");
static_assert(sizeof(MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments) == 0x000150, "Wrong size on MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments");
static_assert(offsetof(MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments, InOutFormatArgs) == 0x000000, "Member 'MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments::InOutFormatArgs' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments, ReturnValue) == 0x0000A8, "Member 'MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieRenderDebugWidget.OnInitializedForPipeline
// 0x0008 (0x0008 - 0x0000)
struct MovieRenderDebugWidget_OnInitializedForPipeline final
{
public:
	class UMoviePipeline*                         ForPipeline;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieRenderDebugWidget_OnInitializedForPipeline) == 0x000008, "Wrong alignment on MovieRenderDebugWidget_OnInitializedForPipeline");
static_assert(sizeof(MovieRenderDebugWidget_OnInitializedForPipeline) == 0x000008, "Wrong size on MovieRenderDebugWidget_OnInitializedForPipeline");
static_assert(offsetof(MovieRenderDebugWidget_OnInitializedForPipeline, ForPipeline) == 0x000000, "Member 'MovieRenderDebugWidget_OnInitializedForPipeline::ForPipeline' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphRenderPreviewWidget.OnInitializedForPipeline
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphRenderPreviewWidget_OnInitializedForPipeline final
{
public:
	class UMovieGraphPipeline*                    InPipeline;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphRenderPreviewWidget_OnInitializedForPipeline) == 0x000008, "Wrong alignment on MovieGraphRenderPreviewWidget_OnInitializedForPipeline");
static_assert(sizeof(MovieGraphRenderPreviewWidget_OnInitializedForPipeline) == 0x000008, "Wrong size on MovieGraphRenderPreviewWidget_OnInitializedForPipeline");
static_assert(offsetof(MovieGraphRenderPreviewWidget_OnInitializedForPipeline, InPipeline) == 0x000000, "Member 'MovieGraphRenderPreviewWidget_OnInitializedForPipeline::InPipeline' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.Initialize
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_Initialize final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_Initialize) == 0x000008, "Wrong alignment on MoviePipeline_Initialize");
static_assert(sizeof(MoviePipeline_Initialize) == 0x000008, "Wrong size on MoviePipeline_Initialize");
static_assert(offsetof(MoviePipeline_Initialize, InJob) == 0x000000, "Member 'MoviePipeline_Initialize::InJob' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.SetInitializationTime
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_SetInitializationTime final
{
public:
	struct FDateTime                              InDateTime;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_SetInitializationTime) == 0x000008, "Wrong alignment on MoviePipeline_SetInitializationTime");
static_assert(sizeof(MoviePipeline_SetInitializationTime) == 0x000008, "Wrong size on MoviePipeline_SetInitializationTime");
static_assert(offsetof(MoviePipeline_SetInitializationTime, InDateTime) == 0x000000, "Member 'MoviePipeline_SetInitializationTime::InDateTime' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetCurrentJob
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetCurrentJob final
{
public:
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetCurrentJob) == 0x000008, "Wrong alignment on MoviePipeline_GetCurrentJob");
static_assert(sizeof(MoviePipeline_GetCurrentJob) == 0x000008, "Wrong size on MoviePipeline_GetCurrentJob");
static_assert(offsetof(MoviePipeline_GetCurrentJob, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetCurrentJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetInitializationTime
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetInitializationTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetInitializationTime) == 0x000008, "Wrong alignment on MoviePipeline_GetInitializationTime");
static_assert(sizeof(MoviePipeline_GetInitializationTime) == 0x000008, "Wrong size on MoviePipeline_GetInitializationTime");
static_assert(offsetof(MoviePipeline_GetInitializationTime, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetInitializationTime::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetInitializationTimeOffset
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetInitializationTimeOffset final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetInitializationTimeOffset) == 0x000008, "Wrong alignment on MoviePipeline_GetInitializationTimeOffset");
static_assert(sizeof(MoviePipeline_GetInitializationTimeOffset) == 0x000008, "Wrong size on MoviePipeline_GetInitializationTimeOffset");
static_assert(offsetof(MoviePipeline_GetInitializationTimeOffset, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetInitializationTimeOffset::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetPipelineMasterConfig
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetPipelineMasterConfig final
{
public:
	class UMoviePipelinePrimaryConfig*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetPipelineMasterConfig) == 0x000008, "Wrong alignment on MoviePipeline_GetPipelineMasterConfig");
static_assert(sizeof(MoviePipeline_GetPipelineMasterConfig) == 0x000008, "Wrong size on MoviePipeline_GetPipelineMasterConfig");
static_assert(offsetof(MoviePipeline_GetPipelineMasterConfig, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetPipelineMasterConfig::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetPipelinePrimaryConfig
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetPipelinePrimaryConfig final
{
public:
	class UMoviePipelinePrimaryConfig*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetPipelinePrimaryConfig) == 0x000008, "Wrong alignment on MoviePipeline_GetPipelinePrimaryConfig");
static_assert(sizeof(MoviePipeline_GetPipelinePrimaryConfig) == 0x000008, "Wrong size on MoviePipeline_GetPipelinePrimaryConfig");
static_assert(offsetof(MoviePipeline_GetPipelinePrimaryConfig, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetPipelinePrimaryConfig::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetPreviewTexture
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetPreviewTexture final
{
public:
	class UTexture*                               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetPreviewTexture) == 0x000008, "Wrong alignment on MoviePipeline_GetPreviewTexture");
static_assert(sizeof(MoviePipeline_GetPreviewTexture) == 0x000008, "Wrong size on MoviePipeline_GetPreviewTexture");
static_assert(offsetof(MoviePipeline_GetPreviewTexture, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetPreviewTexture::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.DuplicateSequence
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_DuplicateSequence final
{
public:
	class UObject*                                Param_Outer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieSceneSequence*                    InSequence;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieSceneSequence*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_DuplicateSequence) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_DuplicateSequence");
static_assert(sizeof(MoviePipelineBlueprintLibrary_DuplicateSequence) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_DuplicateSequence");
static_assert(offsetof(MoviePipelineBlueprintLibrary_DuplicateSequence, Param_Outer) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_DuplicateSequence::Param_Outer' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_DuplicateSequence, InSequence) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_DuplicateSequence::InSequence' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_DuplicateSequence, ReturnValue) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_DuplicateSequence::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.FindOrGetDefaultSettingForShot
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot final
{
public:
	TSubclassOf<class UMoviePipelineSetting>      InSettingType;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UMoviePipelinePrimaryConfig*      InPrimaryConfig;                                   // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UMoviePipelineExecutorShot*       InShot;                                            // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineSetting*                  ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot");
static_assert(sizeof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot");
static_assert(offsetof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot, InSettingType) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot::InSettingType' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot, InPrimaryConfig) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot::InPrimaryConfig' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot, InShot) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot::InShot' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot, ReturnValue) == 0x000018, "Member 'MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCompletionPercentage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCompletionPercentage final
{
public:
	const class UMoviePipeline*                   InPipeline;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_453E[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCompletionPercentage) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCompletionPercentage");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCompletionPercentage) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCompletionPercentage");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCompletionPercentage, InPipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCompletionPercentage::InPipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCompletionPercentage, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCompletionPercentage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentAperture
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentAperture final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_453F[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentAperture) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentAperture");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentAperture) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentAperture");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentAperture, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentAperture::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentAperture, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentAperture::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentExecutorShot
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentExecutorShot final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorShot*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentExecutorShot) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentExecutorShot");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentExecutorShot) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentExecutorShot");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentExecutorShot, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentExecutorShot::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentExecutorShot, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentExecutorShot::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentFocalLength
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentFocalLength final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4540[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentFocalLength) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentFocalLength");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentFocalLength) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentFocalLength");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentFocalLength, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentFocalLength::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentFocalLength, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentFocalLength::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentFocusDistance
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentFocusDistance final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4541[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentFocusDistance) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentFocusDistance");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentFocusDistance) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentFocusDistance");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentFocusDistance, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentFocusDistance::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentFocusDistance, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentFocusDistance::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentName
// 0x0028 (0x0028 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentSegmentName final
{
public:
	class UMoviePipeline*                         InMoviePipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OutOuterName;                                      // 0x0008(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   OutInnerName;                                      // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentSegmentName");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName) == 0x000028, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentSegmentName");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentName::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName, OutOuterName) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentName::OutOuterName' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName, OutInnerName) == 0x000018, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentName::OutInnerName' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentState
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentSegmentState final
{
public:
	class UMoviePipeline*                         InMoviePipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieRenderShotState                         ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4542[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentSegmentState) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentSegmentState");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentSegmentState) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentSegmentState");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentState, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentState::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentState, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentWorkMetrics
// 0x0030 (0x0030 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMoviePipelineSegmentWorkMetrics       ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics) == 0x000030, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSequence
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentSequence final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentSequence) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentSequence");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentSequence) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentSequence");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSequence, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSequence::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSequence, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSequence::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentShotFrameNumber
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4543[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentShotTimecode
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentShotTimecode final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimecode                              ReturnValue;                                       // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4544[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentShotTimecode) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentShotTimecode");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentShotTimecode) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentShotTimecode");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentShotTimecode, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentShotTimecode::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentShotTimecode, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentShotTimecode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetEffectiveOutputResolution
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution final
{
public:
	class UMoviePipelinePrimaryConfig*            InPrimaryConfig;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorShot*             InPipelineExecutorShot;                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution, InPrimaryConfig) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution::InPrimaryConfig' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution, InPipelineExecutorShot) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution::InPipelineExecutorShot' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution, ReturnValue) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetEstimatedTimeRemaining
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining final
{
public:
	const class UMoviePipeline*                   InPipeline;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              OutEstimate;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4545[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining, InPipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining::InPipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining, OutEstimate) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining::OutEstimate' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining, ReturnValue) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobAuthor
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetJobAuthor final
{
public:
	class UMoviePipeline*                         InMoviePipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetJobAuthor) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetJobAuthor");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetJobAuthor) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_GetJobAuthor");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobAuthor, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetJobAuthor::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobAuthor, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetJobAuthor::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobInitializationTime
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetJobInitializationTime final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetJobInitializationTime) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetJobInitializationTime");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetJobInitializationTime) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetJobInitializationTime");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobInitializationTime, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetJobInitializationTime::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobInitializationTime, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetJobInitializationTime::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobName
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetJobName final
{
public:
	class UMoviePipeline*                         InMoviePipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetJobName) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetJobName");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetJobName) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_GetJobName");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobName, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetJobName::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobName, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetJobName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMapPackageName
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetMapPackageName final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetMapPackageName) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetMapPackageName");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetMapPackageName) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_GetMapPackageName");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMapPackageName, InJob) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetMapPackageName::InJob' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMapPackageName, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetMapPackageName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMasterFrameNumber
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetMasterFrameNumber final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4546[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetMasterFrameNumber) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetMasterFrameNumber");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetMasterFrameNumber) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetMasterFrameNumber");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMasterFrameNumber, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetMasterFrameNumber::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMasterFrameNumber, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetMasterFrameNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMasterTimecode
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetMasterTimecode final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimecode                              ReturnValue;                                       // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4547[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetMasterTimecode) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetMasterTimecode");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetMasterTimecode) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_GetMasterTimecode");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMasterTimecode, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetMasterTimecode::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMasterTimecode, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetMasterTimecode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMoviePipelineEngineChangelistLabel
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetOverallOutputFrames
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetOverallOutputFrames final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutCurrentIndex;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutTotalCount;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetOverallOutputFrames");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetOverallOutputFrames");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetOverallOutputFrames::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames, OutCurrentIndex) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetOverallOutputFrames::OutCurrentIndex' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames, OutTotalCount) == 0x00000C, "Member 'MoviePipelineBlueprintLibrary_GetOverallOutputFrames::OutTotalCount' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetOverallSegmentCounts
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetOverallSegmentCounts final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutCurrentIndex;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutTotalCount;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetOverallSegmentCounts");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetOverallSegmentCounts");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetOverallSegmentCounts::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts, OutCurrentIndex) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetOverallSegmentCounts::OutCurrentIndex' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts, OutTotalCount) == 0x00000C, "Member 'MoviePipelineBlueprintLibrary_GetOverallSegmentCounts::OutTotalCount' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetPipelineState
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetPipelineState final
{
public:
	const class UMoviePipeline*                   InPipeline;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieRenderPipelineState                     ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4548[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetPipelineState) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetPipelineState");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetPipelineState) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetPipelineState");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetPipelineState, InPipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetPipelineState::InPipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetPipelineState, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetPipelineState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetRootFrameNumber
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetRootFrameNumber final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4549[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetRootFrameNumber) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetRootFrameNumber");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetRootFrameNumber) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetRootFrameNumber");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetRootFrameNumber, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetRootFrameNumber::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetRootFrameNumber, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetRootFrameNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetRootTimecode
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetRootTimecode final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimecode                              ReturnValue;                                       // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_454A[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetRootTimecode) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetRootTimecode");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetRootTimecode) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_GetRootTimecode");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetRootTimecode, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetRootTimecode::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetRootTimecode, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetRootTimecode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.LoadManifestFileFromString
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_LoadManifestFileFromString final
{
public:
	class FString                                 InManifestFilePath;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineQueue*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_LoadManifestFileFromString) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_LoadManifestFileFromString");
static_assert(sizeof(MoviePipelineBlueprintLibrary_LoadManifestFileFromString) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_LoadManifestFileFromString");
static_assert(offsetof(MoviePipelineBlueprintLibrary_LoadManifestFileFromString, InManifestFilePath) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_LoadManifestFileFromString::InManifestFilePath' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_LoadManifestFileFromString, ReturnValue) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_LoadManifestFileFromString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.ResolveFilenameFormatArguments
// 0x01E8 (0x01E8 - 0x0000)
struct MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments final
{
public:
	class FString                                 InFormatString;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMoviePipelineFilenameResolveParams    InParams;                                          // 0x0010(0x0120)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 OutFinalPath;                                      // 0x0130(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMoviePipelineFormatArgs               OutMergedFormatArgs;                               // 0x0140(0x00A8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments");
static_assert(sizeof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments) == 0x0001E8, "Wrong size on MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments, InFormatString) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments::InFormatString' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments, InParams) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments::InParams' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments, OutFinalPath) == 0x000130, "Member 'MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments::OutFinalPath' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments, OutMergedFormatArgs) == 0x000140, "Member 'MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments::OutMergedFormatArgs' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.ResolveVersionNumber
// 0x0128 (0x0128 - 0x0000)
struct MoviePipelineBlueprintLibrary_ResolveVersionNumber final
{
public:
	struct FMoviePipelineFilenameResolveParams    InParams;                                          // 0x0000(0x0120)(Parm, NativeAccessSpecifierPublic)
	bool                                          bGetNextVersion;                                   // 0x0120(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_454B[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0124(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_ResolveVersionNumber) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_ResolveVersionNumber");
static_assert(sizeof(MoviePipelineBlueprintLibrary_ResolveVersionNumber) == 0x000128, "Wrong size on MoviePipelineBlueprintLibrary_ResolveVersionNumber");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveVersionNumber, InParams) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_ResolveVersionNumber::InParams' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveVersionNumber, bGetNextVersion) == 0x000120, "Member 'MoviePipelineBlueprintLibrary_ResolveVersionNumber::bGetNextVersion' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveVersionNumber, ReturnValue) == 0x000124, "Member 'MoviePipelineBlueprintLibrary_ResolveVersionNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.UpdateJobShotListFromSequence
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence final
{
public:
	class ULevelSequence*                         InSequence;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShotsChanged;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_454C[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence");
static_assert(sizeof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence");
static_assert(offsetof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence, InSequence) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence::InSequence' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence, InJob) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence::InJob' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence, bShotsChanged) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence::bShotsChanged' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.CopyFrom
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineConfigBase_CopyFrom final
{
public:
	class UMoviePipelineConfigBase*               InConfig;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_CopyFrom) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_CopyFrom");
static_assert(sizeof(MoviePipelineConfigBase_CopyFrom) == 0x000008, "Wrong size on MoviePipelineConfigBase_CopyFrom");
static_assert(offsetof(MoviePipelineConfigBase_CopyFrom, InConfig) == 0x000000, "Member 'MoviePipelineConfigBase_CopyFrom::InConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.FindOrAddSettingByClass
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineConfigBase_FindOrAddSettingByClass final
{
public:
	TSubclassOf<class UMoviePipelineSetting>      InClass;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeDisabledSettings;                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4551[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMoviePipelineSetting*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_FindOrAddSettingByClass) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_FindOrAddSettingByClass");
static_assert(sizeof(MoviePipelineConfigBase_FindOrAddSettingByClass) == 0x000018, "Wrong size on MoviePipelineConfigBase_FindOrAddSettingByClass");
static_assert(offsetof(MoviePipelineConfigBase_FindOrAddSettingByClass, InClass) == 0x000000, "Member 'MoviePipelineConfigBase_FindOrAddSettingByClass::InClass' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindOrAddSettingByClass, bIncludeDisabledSettings) == 0x000008, "Member 'MoviePipelineConfigBase_FindOrAddSettingByClass::bIncludeDisabledSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindOrAddSettingByClass, bExactMatch) == 0x000009, "Member 'MoviePipelineConfigBase_FindOrAddSettingByClass::bExactMatch' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindOrAddSettingByClass, ReturnValue) == 0x000010, "Member 'MoviePipelineConfigBase_FindOrAddSettingByClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.RemoveSetting
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineConfigBase_RemoveSetting final
{
public:
	class UMoviePipelineSetting*                  InSetting;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_RemoveSetting) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_RemoveSetting");
static_assert(sizeof(MoviePipelineConfigBase_RemoveSetting) == 0x000008, "Wrong size on MoviePipelineConfigBase_RemoveSetting");
static_assert(offsetof(MoviePipelineConfigBase_RemoveSetting, InSetting) == 0x000000, "Member 'MoviePipelineConfigBase_RemoveSetting::InSetting' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.SetConfigOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineConfigBase_SetConfigOrigin final
{
public:
	class UMoviePipelineConfigBase*               InConfig;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_SetConfigOrigin) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_SetConfigOrigin");
static_assert(sizeof(MoviePipelineConfigBase_SetConfigOrigin) == 0x000008, "Wrong size on MoviePipelineConfigBase_SetConfigOrigin");
static_assert(offsetof(MoviePipelineConfigBase_SetConfigOrigin, InConfig) == 0x000000, "Member 'MoviePipelineConfigBase_SetConfigOrigin::InConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.FindSettingByClass
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineConfigBase_FindSettingByClass final
{
public:
	TSubclassOf<class UMoviePipelineSetting>      InClass;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeDisabledSettings;                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4552[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMoviePipelineSetting*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_FindSettingByClass) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_FindSettingByClass");
static_assert(sizeof(MoviePipelineConfigBase_FindSettingByClass) == 0x000018, "Wrong size on MoviePipelineConfigBase_FindSettingByClass");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingByClass, InClass) == 0x000000, "Member 'MoviePipelineConfigBase_FindSettingByClass::InClass' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingByClass, bIncludeDisabledSettings) == 0x000008, "Member 'MoviePipelineConfigBase_FindSettingByClass::bIncludeDisabledSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingByClass, bExactMatch) == 0x000009, "Member 'MoviePipelineConfigBase_FindSettingByClass::bExactMatch' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingByClass, ReturnValue) == 0x000010, "Member 'MoviePipelineConfigBase_FindSettingByClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.FindSettingsByClass
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineConfigBase_FindSettingsByClass final
{
public:
	TSubclassOf<class UMoviePipelineSetting>      InClass;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeDisabledSettings;                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4553[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMoviePipelineSetting*>          ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_FindSettingsByClass) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_FindSettingsByClass");
static_assert(sizeof(MoviePipelineConfigBase_FindSettingsByClass) == 0x000020, "Wrong size on MoviePipelineConfigBase_FindSettingsByClass");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingsByClass, InClass) == 0x000000, "Member 'MoviePipelineConfigBase_FindSettingsByClass::InClass' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingsByClass, bIncludeDisabledSettings) == 0x000008, "Member 'MoviePipelineConfigBase_FindSettingsByClass::bIncludeDisabledSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingsByClass, bExactMatch) == 0x000009, "Member 'MoviePipelineConfigBase_FindSettingsByClass::bExactMatch' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingsByClass, ReturnValue) == 0x000010, "Member 'MoviePipelineConfigBase_FindSettingsByClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.GetConfigOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineConfigBase_GetConfigOrigin final
{
public:
	class UMoviePipelineConfigBase*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_GetConfigOrigin) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_GetConfigOrigin");
static_assert(sizeof(MoviePipelineConfigBase_GetConfigOrigin) == 0x000008, "Wrong size on MoviePipelineConfigBase_GetConfigOrigin");
static_assert(offsetof(MoviePipelineConfigBase_GetConfigOrigin, ReturnValue) == 0x000000, "Member 'MoviePipelineConfigBase_GetConfigOrigin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.GetUserSettings
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineConfigBase_GetUserSettings final
{
public:
	TArray<class UMoviePipelineSetting*>          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_GetUserSettings) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_GetUserSettings");
static_assert(sizeof(MoviePipelineConfigBase_GetUserSettings) == 0x000010, "Wrong size on MoviePipelineConfigBase_GetUserSettings");
static_assert(offsetof(MoviePipelineConfigBase_GetUserSettings, ReturnValue) == 0x000000, "Member 'MoviePipelineConfigBase_GetUserSettings::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.ConnectSocket
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineExecutorBase_ConnectSocket final
{
public:
	class FString                                 InHostName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InPort;                                            // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_455A[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineExecutorBase_ConnectSocket) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_ConnectSocket");
static_assert(sizeof(MoviePipelineExecutorBase_ConnectSocket) == 0x000018, "Wrong size on MoviePipelineExecutorBase_ConnectSocket");
static_assert(offsetof(MoviePipelineExecutorBase_ConnectSocket, InHostName) == 0x000000, "Member 'MoviePipelineExecutorBase_ConnectSocket::InHostName' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_ConnectSocket, InPort) == 0x000010, "Member 'MoviePipelineExecutorBase_ConnectSocket::InPort' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_ConnectSocket, ReturnValue) == 0x000014, "Member 'MoviePipelineExecutorBase_ConnectSocket::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.Execute
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorBase_Execute final
{
public:
	class UMoviePipelineQueue*                    InPipelineQueue;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_Execute) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_Execute");
static_assert(sizeof(MoviePipelineExecutorBase_Execute) == 0x000008, "Wrong size on MoviePipelineExecutorBase_Execute");
static_assert(offsetof(MoviePipelineExecutorBase_Execute, InPipelineQueue) == 0x000000, "Member 'MoviePipelineExecutorBase_Execute::InPipelineQueue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.OnExecutorErroredImpl
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineExecutorBase_OnExecutorErroredImpl final
{
public:
	class UMoviePipeline*                         ErroredPipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFatal;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_455B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ErrorReason;                                       // 0x0010(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_OnExecutorErroredImpl) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_OnExecutorErroredImpl");
static_assert(sizeof(MoviePipelineExecutorBase_OnExecutorErroredImpl) == 0x000020, "Wrong size on MoviePipelineExecutorBase_OnExecutorErroredImpl");
static_assert(offsetof(MoviePipelineExecutorBase_OnExecutorErroredImpl, ErroredPipeline) == 0x000000, "Member 'MoviePipelineExecutorBase_OnExecutorErroredImpl::ErroredPipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_OnExecutorErroredImpl, bFatal) == 0x000008, "Member 'MoviePipelineExecutorBase_OnExecutorErroredImpl::bFatal' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_OnExecutorErroredImpl, ErrorReason) == 0x000010, "Member 'MoviePipelineExecutorBase_OnExecutorErroredImpl::ErrorReason' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SendHTTPRequest
// 0x0088 (0x0088 - 0x0000)
struct MoviePipelineExecutorBase_SendHTTPRequest final
{
public:
	class FString                                 InURL;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InVerb;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InMessage;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            InHeaders;                                         // 0x0030(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0080(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_455C[0x4];                                     // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineExecutorBase_SendHTTPRequest) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_SendHTTPRequest");
static_assert(sizeof(MoviePipelineExecutorBase_SendHTTPRequest) == 0x000088, "Wrong size on MoviePipelineExecutorBase_SendHTTPRequest");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, InURL) == 0x000000, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::InURL' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, InVerb) == 0x000010, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::InVerb' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, InMessage) == 0x000020, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::InMessage' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, InHeaders) == 0x000030, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::InHeaders' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, ReturnValue) == 0x000080, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SendSocketMessage
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineExecutorBase_SendSocketMessage final
{
public:
	class FString                                 InMessage;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_455D[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineExecutorBase_SendSocketMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_SendSocketMessage");
static_assert(sizeof(MoviePipelineExecutorBase_SendSocketMessage) == 0x000018, "Wrong size on MoviePipelineExecutorBase_SendSocketMessage");
static_assert(offsetof(MoviePipelineExecutorBase_SendSocketMessage, InMessage) == 0x000000, "Member 'MoviePipelineExecutorBase_SendSocketMessage::InMessage' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendSocketMessage, ReturnValue) == 0x000010, "Member 'MoviePipelineExecutorBase_SendSocketMessage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SetMoviePipelineClass
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorBase_SetMoviePipelineClass final
{
public:
	class UClass*                                 InPipelineClass;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_SetMoviePipelineClass) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_SetMoviePipelineClass");
static_assert(sizeof(MoviePipelineExecutorBase_SetMoviePipelineClass) == 0x000008, "Wrong size on MoviePipelineExecutorBase_SetMoviePipelineClass");
static_assert(offsetof(MoviePipelineExecutorBase_SetMoviePipelineClass, InPipelineClass) == 0x000000, "Member 'MoviePipelineExecutorBase_SetMoviePipelineClass::InPipelineClass' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorBase_SetStatusMessage final
{
public:
	class FString                                 InStatus;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_SetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_SetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorBase_SetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorBase_SetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorBase_SetStatusMessage, InStatus) == 0x000000, "Member 'MoviePipelineExecutorBase_SetStatusMessage::InStatus' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorBase_SetStatusProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_SetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorBase_SetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorBase_SetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorBase_SetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorBase_SetStatusProgress, InProgress) == 0x000000, "Member 'MoviePipelineExecutorBase_SetStatusProgress::InProgress' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.GetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorBase_GetStatusMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_GetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_GetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorBase_GetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorBase_GetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorBase_GetStatusMessage, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorBase_GetStatusMessage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.GetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorBase_GetStatusProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_GetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorBase_GetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorBase_GetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorBase_GetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorBase_GetStatusProgress, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorBase_GetStatusProgress::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.IsRendering
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorBase_IsRendering final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_IsRendering) == 0x000001, "Wrong alignment on MoviePipelineExecutorBase_IsRendering");
static_assert(sizeof(MoviePipelineExecutorBase_IsRendering) == 0x000001, "Wrong size on MoviePipelineExecutorBase_IsRendering");
static_assert(offsetof(MoviePipelineExecutorBase_IsRendering, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorBase_IsRendering::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.IsSocketConnected
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorBase_IsSocketConnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_IsSocketConnected) == 0x000001, "Wrong alignment on MoviePipelineExecutorBase_IsSocketConnected");
static_assert(sizeof(MoviePipelineExecutorBase_IsSocketConnected) == 0x000001, "Wrong size on MoviePipelineExecutorBase_IsSocketConnected");
static_assert(offsetof(MoviePipelineExecutorBase_IsSocketConnected, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorBase_IsSocketConnected::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetAllSettings
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelinePrimaryConfig_GetAllSettings final
{
public:
	bool                                          bIncludeDisabledSettings;                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeTransientSettings;                         // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_456C[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMoviePipelineSetting*>          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePrimaryConfig_GetAllSettings) == 0x000008, "Wrong alignment on MoviePipelinePrimaryConfig_GetAllSettings");
static_assert(sizeof(MoviePipelinePrimaryConfig_GetAllSettings) == 0x000018, "Wrong size on MoviePipelinePrimaryConfig_GetAllSettings");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetAllSettings, bIncludeDisabledSettings) == 0x000000, "Member 'MoviePipelinePrimaryConfig_GetAllSettings::bIncludeDisabledSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetAllSettings, bIncludeTransientSettings) == 0x000001, "Member 'MoviePipelinePrimaryConfig_GetAllSettings::bIncludeTransientSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetAllSettings, ReturnValue) == 0x000008, "Member 'MoviePipelinePrimaryConfig_GetAllSettings::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetEffectiveFrameRate
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelinePrimaryConfig_GetEffectiveFrameRate final
{
public:
	const class ULevelSequence*                   InSequence;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameRate                             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePrimaryConfig_GetEffectiveFrameRate) == 0x000008, "Wrong alignment on MoviePipelinePrimaryConfig_GetEffectiveFrameRate");
static_assert(sizeof(MoviePipelinePrimaryConfig_GetEffectiveFrameRate) == 0x000010, "Wrong size on MoviePipelinePrimaryConfig_GetEffectiveFrameRate");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetEffectiveFrameRate, InSequence) == 0x000000, "Member 'MoviePipelinePrimaryConfig_GetEffectiveFrameRate::InSequence' has a wrong offset!");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetEffectiveFrameRate, ReturnValue) == 0x000008, "Member 'MoviePipelinePrimaryConfig_GetEffectiveFrameRate::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetTransientSettings
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelinePrimaryConfig_GetTransientSettings final
{
public:
	TArray<class UMoviePipelineSetting*>          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePrimaryConfig_GetTransientSettings) == 0x000008, "Wrong alignment on MoviePipelinePrimaryConfig_GetTransientSettings");
static_assert(sizeof(MoviePipelinePrimaryConfig_GetTransientSettings) == 0x000010, "Wrong size on MoviePipelinePrimaryConfig_GetTransientSettings");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetTransientSettings, ReturnValue) == 0x000000, "Member 'MoviePipelinePrimaryConfig_GetTransientSettings::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.ExecuteDelayed
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelinePythonHostExecutor_ExecuteDelayed final
{
public:
	class UMoviePipelineQueue*                    InPipelineQueue;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePythonHostExecutor_ExecuteDelayed) == 0x000008, "Wrong alignment on MoviePipelinePythonHostExecutor_ExecuteDelayed");
static_assert(sizeof(MoviePipelinePythonHostExecutor_ExecuteDelayed) == 0x000008, "Wrong size on MoviePipelinePythonHostExecutor_ExecuteDelayed");
static_assert(offsetof(MoviePipelinePythonHostExecutor_ExecuteDelayed, InPipelineQueue) == 0x000000, "Member 'MoviePipelinePythonHostExecutor_ExecuteDelayed::InPipelineQueue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.OnMapLoad
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelinePythonHostExecutor_OnMapLoad final
{
public:
	class UWorld*                                 InWorld;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePythonHostExecutor_OnMapLoad) == 0x000008, "Wrong alignment on MoviePipelinePythonHostExecutor_OnMapLoad");
static_assert(sizeof(MoviePipelinePythonHostExecutor_OnMapLoad) == 0x000008, "Wrong size on MoviePipelinePythonHostExecutor_OnMapLoad");
static_assert(offsetof(MoviePipelinePythonHostExecutor_OnMapLoad, InWorld) == 0x000000, "Member 'MoviePipelinePythonHostExecutor_OnMapLoad::InWorld' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.GetLastLoadedWorld
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelinePythonHostExecutor_GetLastLoadedWorld final
{
public:
	class UWorld*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePythonHostExecutor_GetLastLoadedWorld) == 0x000008, "Wrong alignment on MoviePipelinePythonHostExecutor_GetLastLoadedWorld");
static_assert(sizeof(MoviePipelinePythonHostExecutor_GetLastLoadedWorld) == 0x000008, "Wrong size on MoviePipelinePythonHostExecutor_GetLastLoadedWorld");
static_assert(offsetof(MoviePipelinePythonHostExecutor_GetLastLoadedWorld, ReturnValue) == 0x000000, "Member 'MoviePipelinePythonHostExecutor_GetLastLoadedWorld::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.AllocateNewShotOverrideConfig
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorShot_AllocateNewShotOverrideConfig final
{
public:
	TSubclassOf<class UMoviePipelineShotConfig>   InConfigType;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineShotConfig*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_AllocateNewShotOverrideConfig) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_AllocateNewShotOverrideConfig");
static_assert(sizeof(MoviePipelineExecutorShot_AllocateNewShotOverrideConfig) == 0x000010, "Wrong size on MoviePipelineExecutorShot_AllocateNewShotOverrideConfig");
static_assert(offsetof(MoviePipelineExecutorShot_AllocateNewShotOverrideConfig, InConfigType) == 0x000000, "Member 'MoviePipelineExecutorShot_AllocateNewShotOverrideConfig::InConfigType' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorShot_AllocateNewShotOverrideConfig, ReturnValue) == 0x000008, "Member 'MoviePipelineExecutorShot_AllocateNewShotOverrideConfig::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetOrCreateJobVariableAssignmentsForGraph
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph final
{
public:
	const class UMovieGraphConfig*                InGraph;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsForPrimaryOverrides;                            // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4570[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovieJobVariableAssignmentContainer*   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph");
static_assert(sizeof(MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph) == 0x000018, "Wrong size on MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph");
static_assert(offsetof(MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph, InGraph) == 0x000000, "Member 'MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph::InGraph' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph, bIsForPrimaryOverrides) == 0x000008, "Member 'MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph::bIsForPrimaryOverrides' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph, ReturnValue) == 0x000010, "Member 'MoviePipelineExecutorShot_GetOrCreateJobVariableAssignmentsForGraph::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetGraphPreset
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorShot_SetGraphPreset final
{
public:
	const class UMovieGraphConfig*                InGraphPreset;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateVariableAssignments;                        // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4571[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineExecutorShot_SetGraphPreset) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_SetGraphPreset");
static_assert(sizeof(MoviePipelineExecutorShot_SetGraphPreset) == 0x000010, "Wrong size on MoviePipelineExecutorShot_SetGraphPreset");
static_assert(offsetof(MoviePipelineExecutorShot_SetGraphPreset, InGraphPreset) == 0x000000, "Member 'MoviePipelineExecutorShot_SetGraphPreset::InGraphPreset' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorShot_SetGraphPreset, bUpdateVariableAssignments) == 0x000008, "Member 'MoviePipelineExecutorShot_SetGraphPreset::bUpdateVariableAssignments' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetShotOverrideConfiguration
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_SetShotOverrideConfiguration final
{
public:
	class UMoviePipelineShotConfig*               InPreset;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetShotOverrideConfiguration) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_SetShotOverrideConfiguration");
static_assert(sizeof(MoviePipelineExecutorShot_SetShotOverrideConfiguration) == 0x000008, "Wrong size on MoviePipelineExecutorShot_SetShotOverrideConfiguration");
static_assert(offsetof(MoviePipelineExecutorShot_SetShotOverrideConfiguration, InPreset) == 0x000000, "Member 'MoviePipelineExecutorShot_SetShotOverrideConfiguration::InPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetShotOverridePresetOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_SetShotOverridePresetOrigin final
{
public:
	class UMoviePipelineShotConfig*               InPreset;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetShotOverridePresetOrigin) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_SetShotOverridePresetOrigin");
static_assert(sizeof(MoviePipelineExecutorShot_SetShotOverridePresetOrigin) == 0x000008, "Wrong size on MoviePipelineExecutorShot_SetShotOverridePresetOrigin");
static_assert(offsetof(MoviePipelineExecutorShot_SetShotOverridePresetOrigin, InPreset) == 0x000000, "Member 'MoviePipelineExecutorShot_SetShotOverridePresetOrigin::InPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorShot_SetStatusMessage final
{
public:
	class FString                                 InStatus;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_SetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorShot_SetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorShot_SetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorShot_SetStatusMessage, InStatus) == 0x000000, "Member 'MoviePipelineExecutorShot_SetStatusMessage::InStatus' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorShot_SetStatusProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorShot_SetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorShot_SetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorShot_SetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorShot_SetStatusProgress, InProgress) == 0x000000, "Member 'MoviePipelineExecutorShot_SetStatusProgress::InProgress' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetCameraName
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineExecutorShot_GetCameraName final
{
public:
	int32                                         InCameraIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4572[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetCameraName) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetCameraName");
static_assert(sizeof(MoviePipelineExecutorShot_GetCameraName) == 0x000018, "Wrong size on MoviePipelineExecutorShot_GetCameraName");
static_assert(offsetof(MoviePipelineExecutorShot_GetCameraName, InCameraIndex) == 0x000000, "Member 'MoviePipelineExecutorShot_GetCameraName::InCameraIndex' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorShot_GetCameraName, ReturnValue) == 0x000008, "Member 'MoviePipelineExecutorShot_GetCameraName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetGraphPreset
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_GetGraphPreset final
{
public:
	class UMovieGraphConfig*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetGraphPreset) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetGraphPreset");
static_assert(sizeof(MoviePipelineExecutorShot_GetGraphPreset) == 0x000008, "Wrong size on MoviePipelineExecutorShot_GetGraphPreset");
static_assert(offsetof(MoviePipelineExecutorShot_GetGraphPreset, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetGraphPreset::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetShotOverrideConfiguration
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_GetShotOverrideConfiguration final
{
public:
	class UMoviePipelineShotConfig*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetShotOverrideConfiguration) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetShotOverrideConfiguration");
static_assert(sizeof(MoviePipelineExecutorShot_GetShotOverrideConfiguration) == 0x000008, "Wrong size on MoviePipelineExecutorShot_GetShotOverrideConfiguration");
static_assert(offsetof(MoviePipelineExecutorShot_GetShotOverrideConfiguration, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetShotOverrideConfiguration::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetShotOverridePresetOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_GetShotOverridePresetOrigin final
{
public:
	class UMoviePipelineShotConfig*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetShotOverridePresetOrigin) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetShotOverridePresetOrigin");
static_assert(sizeof(MoviePipelineExecutorShot_GetShotOverridePresetOrigin) == 0x000008, "Wrong size on MoviePipelineExecutorShot_GetShotOverridePresetOrigin");
static_assert(offsetof(MoviePipelineExecutorShot_GetShotOverridePresetOrigin, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetShotOverridePresetOrigin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorShot_GetStatusMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorShot_GetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorShot_GetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorShot_GetStatusMessage, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetStatusMessage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorShot_GetStatusProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorShot_GetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorShot_GetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorShot_GetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorShot_GetStatusProgress, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetStatusProgress::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.IsUsingGraphConfiguration
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorShot_IsUsingGraphConfiguration final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_IsUsingGraphConfiguration) == 0x000001, "Wrong alignment on MoviePipelineExecutorShot_IsUsingGraphConfiguration");
static_assert(sizeof(MoviePipelineExecutorShot_IsUsingGraphConfiguration) == 0x000001, "Wrong size on MoviePipelineExecutorShot_IsUsingGraphConfiguration");
static_assert(offsetof(MoviePipelineExecutorShot_IsUsingGraphConfiguration, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_IsUsingGraphConfiguration::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.ShouldRender
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorShot_ShouldRender final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_ShouldRender) == 0x000001, "Wrong alignment on MoviePipelineExecutorShot_ShouldRender");
static_assert(sizeof(MoviePipelineExecutorShot_ShouldRender) == 0x000001, "Wrong size on MoviePipelineExecutorShot_ShouldRender");
static_assert(offsetof(MoviePipelineExecutorShot_ShouldRender, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_ShouldRender::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetOrCreateJobVariableAssignmentsForGraph
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorJob_GetOrCreateJobVariableAssignmentsForGraph final
{
public:
	const class UMovieGraphConfig*                InGraph;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieJobVariableAssignmentContainer*   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetOrCreateJobVariableAssignmentsForGraph) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetOrCreateJobVariableAssignmentsForGraph");
static_assert(sizeof(MoviePipelineExecutorJob_GetOrCreateJobVariableAssignmentsForGraph) == 0x000010, "Wrong size on MoviePipelineExecutorJob_GetOrCreateJobVariableAssignmentsForGraph");
static_assert(offsetof(MoviePipelineExecutorJob_GetOrCreateJobVariableAssignmentsForGraph, InGraph) == 0x000000, "Member 'MoviePipelineExecutorJob_GetOrCreateJobVariableAssignmentsForGraph::InGraph' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorJob_GetOrCreateJobVariableAssignmentsForGraph, ReturnValue) == 0x000008, "Member 'MoviePipelineExecutorJob_GetOrCreateJobVariableAssignmentsForGraph::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetConfiguration
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_SetConfiguration final
{
public:
	class UMoviePipelinePrimaryConfig*            InPreset;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetConfiguration) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetConfiguration");
static_assert(sizeof(MoviePipelineExecutorJob_SetConfiguration) == 0x000008, "Wrong size on MoviePipelineExecutorJob_SetConfiguration");
static_assert(offsetof(MoviePipelineExecutorJob_SetConfiguration, InPreset) == 0x000000, "Member 'MoviePipelineExecutorJob_SetConfiguration::InPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetConsumed
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_SetConsumed final
{
public:
	bool                                          bInConsumed;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetConsumed) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_SetConsumed");
static_assert(sizeof(MoviePipelineExecutorJob_SetConsumed) == 0x000001, "Wrong size on MoviePipelineExecutorJob_SetConsumed");
static_assert(offsetof(MoviePipelineExecutorJob_SetConsumed, bInConsumed) == 0x000000, "Member 'MoviePipelineExecutorJob_SetConsumed::bInConsumed' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetGraphPreset
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorJob_SetGraphPreset final
{
public:
	const class UMovieGraphConfig*                InGraphPreset;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateVariableAssignments;                        // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4576[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineExecutorJob_SetGraphPreset) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetGraphPreset");
static_assert(sizeof(MoviePipelineExecutorJob_SetGraphPreset) == 0x000010, "Wrong size on MoviePipelineExecutorJob_SetGraphPreset");
static_assert(offsetof(MoviePipelineExecutorJob_SetGraphPreset, InGraphPreset) == 0x000000, "Member 'MoviePipelineExecutorJob_SetGraphPreset::InGraphPreset' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorJob_SetGraphPreset, bUpdateVariableAssignments) == 0x000008, "Member 'MoviePipelineExecutorJob_SetGraphPreset::bUpdateVariableAssignments' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_SetIsEnabled final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetIsEnabled) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_SetIsEnabled");
static_assert(sizeof(MoviePipelineExecutorJob_SetIsEnabled) == 0x000001, "Wrong size on MoviePipelineExecutorJob_SetIsEnabled");
static_assert(offsetof(MoviePipelineExecutorJob_SetIsEnabled, bInEnabled) == 0x000000, "Member 'MoviePipelineExecutorJob_SetIsEnabled::bInEnabled' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetPresetOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_SetPresetOrigin final
{
public:
	class UMoviePipelinePrimaryConfig*            InPreset;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetPresetOrigin) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetPresetOrigin");
static_assert(sizeof(MoviePipelineExecutorJob_SetPresetOrigin) == 0x000008, "Wrong size on MoviePipelineExecutorJob_SetPresetOrigin");
static_assert(offsetof(MoviePipelineExecutorJob_SetPresetOrigin, InPreset) == 0x000000, "Member 'MoviePipelineExecutorJob_SetPresetOrigin::InPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetSequence
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineExecutorJob_SetSequence final
{
public:
	struct FSoftObjectPath                        InSequence;                                        // 0x0000(0x0020)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetSequence) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetSequence");
static_assert(sizeof(MoviePipelineExecutorJob_SetSequence) == 0x000020, "Wrong size on MoviePipelineExecutorJob_SetSequence");
static_assert(offsetof(MoviePipelineExecutorJob_SetSequence, InSequence) == 0x000000, "Member 'MoviePipelineExecutorJob_SetSequence::InSequence' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorJob_SetStatusMessage final
{
public:
	class FString                                 InStatus;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorJob_SetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorJob_SetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorJob_SetStatusMessage, InStatus) == 0x000000, "Member 'MoviePipelineExecutorJob_SetStatusMessage::InStatus' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorJob_SetStatusProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorJob_SetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorJob_SetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorJob_SetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorJob_SetStatusProgress, InProgress) == 0x000000, "Member 'MoviePipelineExecutorJob_SetStatusProgress::InProgress' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetConfiguration
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_GetConfiguration final
{
public:
	class UMoviePipelinePrimaryConfig*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetConfiguration) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetConfiguration");
static_assert(sizeof(MoviePipelineExecutorJob_GetConfiguration) == 0x000008, "Wrong size on MoviePipelineExecutorJob_GetConfiguration");
static_assert(offsetof(MoviePipelineExecutorJob_GetConfiguration, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetConfiguration::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetGraphPreset
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_GetGraphPreset final
{
public:
	class UMovieGraphConfig*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetGraphPreset) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetGraphPreset");
static_assert(sizeof(MoviePipelineExecutorJob_GetGraphPreset) == 0x000008, "Wrong size on MoviePipelineExecutorJob_GetGraphPreset");
static_assert(offsetof(MoviePipelineExecutorJob_GetGraphPreset, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetGraphPreset::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetPresetOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_GetPresetOrigin final
{
public:
	class UMoviePipelinePrimaryConfig*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetPresetOrigin) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetPresetOrigin");
static_assert(sizeof(MoviePipelineExecutorJob_GetPresetOrigin) == 0x000008, "Wrong size on MoviePipelineExecutorJob_GetPresetOrigin");
static_assert(offsetof(MoviePipelineExecutorJob_GetPresetOrigin, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetPresetOrigin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorJob_GetStatusMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorJob_GetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorJob_GetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorJob_GetStatusMessage, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetStatusMessage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorJob_GetStatusProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorJob_GetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorJob_GetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorJob_GetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorJob_GetStatusProgress, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetStatusProgress::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.IsConsumed
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_IsConsumed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_IsConsumed) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_IsConsumed");
static_assert(sizeof(MoviePipelineExecutorJob_IsConsumed) == 0x000001, "Wrong size on MoviePipelineExecutorJob_IsConsumed");
static_assert(offsetof(MoviePipelineExecutorJob_IsConsumed, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_IsConsumed::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_IsEnabled) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_IsEnabled");
static_assert(sizeof(MoviePipelineExecutorJob_IsEnabled) == 0x000001, "Wrong size on MoviePipelineExecutorJob_IsEnabled");
static_assert(offsetof(MoviePipelineExecutorJob_IsEnabled, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_IsEnabled::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.IsUsingGraphConfiguration
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_IsUsingGraphConfiguration final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_IsUsingGraphConfiguration) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_IsUsingGraphConfiguration");
static_assert(sizeof(MoviePipelineExecutorJob_IsUsingGraphConfiguration) == 0x000001, "Wrong size on MoviePipelineExecutorJob_IsUsingGraphConfiguration");
static_assert(offsetof(MoviePipelineExecutorJob_IsUsingGraphConfiguration, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_IsUsingGraphConfiguration::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.AllocateNewJob
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueue_AllocateNewJob final
{
public:
	TSubclassOf<class UMoviePipelineExecutorJob>  InJobType;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_AllocateNewJob) == 0x000008, "Wrong alignment on MoviePipelineQueue_AllocateNewJob");
static_assert(sizeof(MoviePipelineQueue_AllocateNewJob) == 0x000010, "Wrong size on MoviePipelineQueue_AllocateNewJob");
static_assert(offsetof(MoviePipelineQueue_AllocateNewJob, InJobType) == 0x000000, "Member 'MoviePipelineQueue_AllocateNewJob::InJobType' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueue_AllocateNewJob, ReturnValue) == 0x000008, "Member 'MoviePipelineQueue_AllocateNewJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.CopyFrom
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueue_CopyFrom final
{
public:
	class UMoviePipelineQueue*                    InQueue;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_CopyFrom) == 0x000008, "Wrong alignment on MoviePipelineQueue_CopyFrom");
static_assert(sizeof(MoviePipelineQueue_CopyFrom) == 0x000008, "Wrong size on MoviePipelineQueue_CopyFrom");
static_assert(offsetof(MoviePipelineQueue_CopyFrom, InQueue) == 0x000000, "Member 'MoviePipelineQueue_CopyFrom::InQueue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.DeleteJob
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueue_DeleteJob final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_DeleteJob) == 0x000008, "Wrong alignment on MoviePipelineQueue_DeleteJob");
static_assert(sizeof(MoviePipelineQueue_DeleteJob) == 0x000008, "Wrong size on MoviePipelineQueue_DeleteJob");
static_assert(offsetof(MoviePipelineQueue_DeleteJob, InJob) == 0x000000, "Member 'MoviePipelineQueue_DeleteJob::InJob' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.DuplicateJob
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueue_DuplicateJob final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_DuplicateJob) == 0x000008, "Wrong alignment on MoviePipelineQueue_DuplicateJob");
static_assert(sizeof(MoviePipelineQueue_DuplicateJob) == 0x000010, "Wrong size on MoviePipelineQueue_DuplicateJob");
static_assert(offsetof(MoviePipelineQueue_DuplicateJob, InJob) == 0x000000, "Member 'MoviePipelineQueue_DuplicateJob::InJob' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueue_DuplicateJob, ReturnValue) == 0x000008, "Member 'MoviePipelineQueue_DuplicateJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.SetJobIndex
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueue_SetJobIndex final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4578[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineQueue_SetJobIndex) == 0x000008, "Wrong alignment on MoviePipelineQueue_SetJobIndex");
static_assert(sizeof(MoviePipelineQueue_SetJobIndex) == 0x000010, "Wrong size on MoviePipelineQueue_SetJobIndex");
static_assert(offsetof(MoviePipelineQueue_SetJobIndex, InJob) == 0x000000, "Member 'MoviePipelineQueue_SetJobIndex::InJob' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueue_SetJobIndex, Param_Index) == 0x000008, "Member 'MoviePipelineQueue_SetJobIndex::Param_Index' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.SetQueueOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueue_SetQueueOrigin final
{
public:
	class UMoviePipelineQueue*                    InConfig;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_SetQueueOrigin) == 0x000008, "Wrong alignment on MoviePipelineQueue_SetQueueOrigin");
static_assert(sizeof(MoviePipelineQueue_SetQueueOrigin) == 0x000008, "Wrong size on MoviePipelineQueue_SetQueueOrigin");
static_assert(offsetof(MoviePipelineQueue_SetQueueOrigin, InConfig) == 0x000000, "Member 'MoviePipelineQueue_SetQueueOrigin::InConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.GetJobs
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueue_GetJobs final
{
public:
	TArray<class UMoviePipelineExecutorJob*>      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_GetJobs) == 0x000008, "Wrong alignment on MoviePipelineQueue_GetJobs");
static_assert(sizeof(MoviePipelineQueue_GetJobs) == 0x000010, "Wrong size on MoviePipelineQueue_GetJobs");
static_assert(offsetof(MoviePipelineQueue_GetJobs, ReturnValue) == 0x000000, "Member 'MoviePipelineQueue_GetJobs::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.GetQueueOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueue_GetQueueOrigin final
{
public:
	class UMoviePipelineQueue*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_GetQueueOrigin) == 0x000008, "Wrong alignment on MoviePipelineQueue_GetQueueOrigin");
static_assert(sizeof(MoviePipelineQueue_GetQueueOrigin) == 0x000008, "Wrong size on MoviePipelineQueue_GetQueueOrigin");
static_assert(offsetof(MoviePipelineQueue_GetQueueOrigin, ReturnValue) == 0x000000, "Member 'MoviePipelineQueue_GetQueueOrigin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.AllocateJob
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_AllocateJob final
{
public:
	class ULevelSequence*                         InSequence;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_AllocateJob) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_AllocateJob");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_AllocateJob) == 0x000010, "Wrong size on MoviePipelineQueueEngineSubsystem_AllocateJob");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_AllocateJob, InSequence) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_AllocateJob::InSequence' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_AllocateJob, ReturnValue) == 0x000008, "Member 'MoviePipelineQueueEngineSubsystem_AllocateJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderJob
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_RenderJob final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_RenderJob) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_RenderJob");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_RenderJob) == 0x000008, "Wrong size on MoviePipelineQueueEngineSubsystem_RenderJob");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_RenderJob, InJob) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_RenderJob::InJob' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderQueueWithExecutor
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor final
{
public:
	TSubclassOf<class UMoviePipelineExecutorBase> InExecutorType;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorBase*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor) == 0x000010, "Wrong size on MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor, InExecutorType) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor::InExecutorType' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor, ReturnValue) == 0x000008, "Member 'MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderQueueWithExecutorInstance
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance final
{
public:
	class UMoviePipelineExecutorBase*             InExecutor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance) == 0x000008, "Wrong size on MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance, InExecutor) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance::InExecutor' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.SetConfiguration
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_SetConfiguration final
{
public:
	TSubclassOf<class UMovieRenderDebugWidget>    InProgressWidgetClass;                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRenderPlayerViewport;                             // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_457A[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_SetConfiguration) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_SetConfiguration");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_SetConfiguration) == 0x000010, "Wrong size on MoviePipelineQueueEngineSubsystem_SetConfiguration");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_SetConfiguration, InProgressWidgetClass) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_SetConfiguration::InProgressWidgetClass' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_SetConfiguration, bRenderPlayerViewport) == 0x000008, "Member 'MoviePipelineQueueEngineSubsystem_SetConfiguration::bRenderPlayerViewport' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.GetActiveExecutor
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_GetActiveExecutor final
{
public:
	class UMoviePipelineExecutorBase*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_GetActiveExecutor) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_GetActiveExecutor");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_GetActiveExecutor) == 0x000008, "Wrong size on MoviePipelineQueueEngineSubsystem_GetActiveExecutor");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_GetActiveExecutor, ReturnValue) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_GetActiveExecutor::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.GetQueue
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_GetQueue final
{
public:
	class UMoviePipelineQueue*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_GetQueue) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_GetQueue");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_GetQueue) == 0x000008, "Wrong size on MoviePipelineQueueEngineSubsystem_GetQueue");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_GetQueue, ReturnValue) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_GetQueue::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.IsRendering
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_IsRendering final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_IsRendering) == 0x000001, "Wrong alignment on MoviePipelineQueueEngineSubsystem_IsRendering");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_IsRendering) == 0x000001, "Wrong size on MoviePipelineQueueEngineSubsystem_IsRendering");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_IsRendering, ReturnValue) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_IsRendering::ReturnValue' has a wrong offset!");

}

