#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_FindNextPatrolPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTTask_FindNextPatrolPoint.BTTask_FindNextPatrolPoint_C
// 0x0018 (0x00C0 - 0x00A8)
class UBTTask_FindNextPatrolPoint_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   KeyNamePatrolPointLoc;                             // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   KeyNamePatrolPointObject;                          // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetNextPatrolPoint(class AAIController* AIController, class ABP_NPC_PatrolPoint_C* NextPatrolPoint, bool* Return);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_BTTask_FindNextPatrolPoint(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTTask_FindNextPatrolPoint_C">();
	}
	static class UBTTask_FindNextPatrolPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_FindNextPatrolPoint_C>();
	}
};
static_assert(alignof(UBTTask_FindNextPatrolPoint_C) == 0x000008, "Wrong alignment on UBTTask_FindNextPatrolPoint_C");
static_assert(sizeof(UBTTask_FindNextPatrolPoint_C) == 0x0000C0, "Wrong size on UBTTask_FindNextPatrolPoint_C");
static_assert(offsetof(UBTTask_FindNextPatrolPoint_C, UberGraphFrame) == 0x0000A8, "Member 'UBTTask_FindNextPatrolPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTTask_FindNextPatrolPoint_C, KeyNamePatrolPointLoc) == 0x0000B0, "Member 'UBTTask_FindNextPatrolPoint_C::KeyNamePatrolPointLoc' has a wrong offset!");
static_assert(offsetof(UBTTask_FindNextPatrolPoint_C, KeyNamePatrolPointObject) == 0x0000B8, "Member 'UBTTask_FindNextPatrolPoint_C::KeyNamePatrolPointObject' has a wrong offset!");

}

