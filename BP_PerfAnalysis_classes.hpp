#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PerfAnalysis

#include "Basic.hpp"

#include "PerfCameraStruct_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PerfAnalysis.BP_PerfAnalysis_C
// 0x0270 (0x0510 - 0x02A0)
class ABP_PerfAnalysis_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FString                                 Debugcmd;                                          // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Locationcmd;                                       // 0x02C0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TMap<class FName, bool>                       LocationsList;                                     // 0x02D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, struct FPerfCameraStruct> LocationCamerasList;                               // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         FinalCameras;                                      // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FName                                   PerfCamTag;                                        // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CameraIndex;                                       // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SettleTime;                                        // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceTime;                                         // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartDuration;                                     // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPerfSetupDone_;                                   // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted_;                                     // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_688D[0x6];                                     // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentCamName;                                    // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	EGzBattleRoyaleMatchState                     Match_State;                                       // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_688E[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CmdArray;                                          // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 bugItVal;                                          // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           TmCheckPlayer;                                     // 0x03D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundCommands;                                     // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_688F[0x7];                                     // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         AllTagCameras;                                     // 0x03E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         NeededCams;                                        // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TSet<class AActor*>                           FinalCameraSet;                                    // 0x0408(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TSet<class AActor*>                           AllTagCameraSet;                                   // 0x0458(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	uint8                                         Pad_6890[0x8];                                     // 0x04A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GoToLocation;                                      // 0x04B0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckPlayerState();
	void ChkplayerTimer();
	void ClampCameraIndex(int32 Value);
	void DoPerfTest(bool bUseCameraList_);
	void EndPerfTest();
	void ExecuteUbergraph_BP_PerfAnalysis(int32 EntryPoint);
	void GetCMDValue(const class FString& CmdName, class FString* CmdValue);
	int32 GetIDFromCamName(class AActor* PerfCam);
	void InpActEvt_Add_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Alt_X_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_Divide_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Multiply_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_NumPadZero_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_Subtract_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void MakeCamName(int32 Param_Index);
	void NextCam(bool bUseCameraList_);
	void PrevCam(bool bUseCameraList_);
	void ReadCommandParams(bool bDebugCommand_);
	void ReceiveBeginPlay();
	void SetupPerf();
	void SortCamByNum(TArray<class AActor*>& Array, TArray<class AActor*>* OutputPin);
	void SplitArraysAndSort(TArray<class AActor*>& Array);
	void StartAutoTest();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PerfAnalysis_C">();
	}
	static class ABP_PerfAnalysis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PerfAnalysis_C>();
	}
};
static_assert(alignof(ABP_PerfAnalysis_C) == 0x000010, "Wrong alignment on ABP_PerfAnalysis_C");
static_assert(sizeof(ABP_PerfAnalysis_C) == 0x000510, "Wrong size on ABP_PerfAnalysis_C");
static_assert(offsetof(ABP_PerfAnalysis_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_PerfAnalysis_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_PerfAnalysis_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, Debugcmd) == 0x0002B0, "Member 'ABP_PerfAnalysis_C::Debugcmd' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, Locationcmd) == 0x0002C0, "Member 'ABP_PerfAnalysis_C::Locationcmd' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, LocationsList) == 0x0002D0, "Member 'ABP_PerfAnalysis_C::LocationsList' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, LocationCamerasList) == 0x000320, "Member 'ABP_PerfAnalysis_C::LocationCamerasList' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, FinalCameras) == 0x000370, "Member 'ABP_PerfAnalysis_C::FinalCameras' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, PerfCamTag) == 0x000380, "Member 'ABP_PerfAnalysis_C::PerfCamTag' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, CameraIndex) == 0x000388, "Member 'ABP_PerfAnalysis_C::CameraIndex' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, SettleTime) == 0x00038C, "Member 'ABP_PerfAnalysis_C::SettleTime' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, TraceTime) == 0x000390, "Member 'ABP_PerfAnalysis_C::TraceTime' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, StartDuration) == 0x000394, "Member 'ABP_PerfAnalysis_C::StartDuration' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, bPerfSetupDone_) == 0x000398, "Member 'ABP_PerfAnalysis_C::bPerfSetupDone_' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, bInterrupted_) == 0x000399, "Member 'ABP_PerfAnalysis_C::bInterrupted_' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, CurrentCamName) == 0x0003A0, "Member 'ABP_PerfAnalysis_C::CurrentCamName' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, Match_State) == 0x0003B0, "Member 'ABP_PerfAnalysis_C::Match_State' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, CmdArray) == 0x0003B8, "Member 'ABP_PerfAnalysis_C::CmdArray' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, bugItVal) == 0x0003C8, "Member 'ABP_PerfAnalysis_C::bugItVal' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, TmCheckPlayer) == 0x0003D8, "Member 'ABP_PerfAnalysis_C::TmCheckPlayer' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, FoundCommands) == 0x0003E0, "Member 'ABP_PerfAnalysis_C::FoundCommands' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, AllTagCameras) == 0x0003E8, "Member 'ABP_PerfAnalysis_C::AllTagCameras' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, NeededCams) == 0x0003F8, "Member 'ABP_PerfAnalysis_C::NeededCams' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, FinalCameraSet) == 0x000408, "Member 'ABP_PerfAnalysis_C::FinalCameraSet' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, AllTagCameraSet) == 0x000458, "Member 'ABP_PerfAnalysis_C::AllTagCameraSet' has a wrong offset!");
static_assert(offsetof(ABP_PerfAnalysis_C, GoToLocation) == 0x0004B0, "Member 'ABP_PerfAnalysis_C::GoToLocation' has a wrong offset!");

}

