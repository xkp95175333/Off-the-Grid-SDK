#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SquadInfoInventory

#include "Basic.hpp"

#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_SquadInfoInventory.WBP_SquadInfoInventory_C.ExecuteUbergraph_WBP_SquadInfoInventory
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B95[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B96[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B97[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SquadInfoInventorySlot_C*          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzInvPocketChangeData& PocketChangeData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_SquadInfoInventorySlot_C*>  K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B98[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzInvPocketDef& PocketDef, struct FGzInvPocket& Pocket)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Player;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewPawn;                        // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_OldPawn;                        // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_SquadInfoInventorySlot_C*          CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory) == 0x000008, "Wrong alignment on WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory");
static_assert(sizeof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory) == 0x0000B8, "Wrong size on WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, EntryPoint) == 0x000000, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_GetPawn_ReturnValue) == 0x000008, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, K2Node_DynamicCast_AsGz_Character) == 0x000020, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_GetInventoryComponent_ReturnValue) == 0x000030, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, K2Node_MakeArray_Array) == 0x000068, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, K2Node_CreateDelegate_OutputDelegate_2) == 0x000080, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, K2Node_CustomEvent_Player) == 0x000090, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, K2Node_CustomEvent_NewPawn) == 0x000098, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::K2Node_CustomEvent_NewPawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, K2Node_CustomEvent_OldPawn) == 0x0000A0, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::K2Node_CustomEvent_OldPawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B4, "Member 'WBP_SquadInfoInventory_C_ExecuteUbergraph_WBP_SquadInfoInventory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_SquadInfoInventory.WBP_SquadInfoInventory_C.InventoryChanged
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_SquadInfoInventory_C_InventoryChanged final
{
public:
	struct FGzInvPocketChangeData                 PocketChangeData;                                  // 0x0000(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_SquadInfoInventorySlot_C*          CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadInfoInventory_C_InventoryChanged) == 0x000008, "Wrong alignment on WBP_SquadInfoInventory_C_InventoryChanged");
static_assert(sizeof(WBP_SquadInfoInventory_C_InventoryChanged) == 0x0000A0, "Wrong size on WBP_SquadInfoInventory_C_InventoryChanged");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryChanged, PocketChangeData) == 0x000000, "Member 'WBP_SquadInfoInventory_C_InventoryChanged::PocketChangeData' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryChanged, Temp_int_Array_Index_Variable) == 0x000080, "Member 'WBP_SquadInfoInventory_C_InventoryChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryChanged, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'WBP_SquadInfoInventory_C_InventoryChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'WBP_SquadInfoInventory_C_InventoryChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryChanged, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'WBP_SquadInfoInventory_C_InventoryChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryChanged, CallFunc_Array_Get_Item) == 0x000090, "Member 'WBP_SquadInfoInventory_C_InventoryChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'WBP_SquadInfoInventory_C_InventoryChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_SquadInfoInventory.WBP_SquadInfoInventory_C.InventoryFilter
// 0x0090 (0x0090 - 0x0000)
struct WBP_SquadInfoInventory_C_InventoryFilter final
{
public:
	struct FGzInvPocketDef                        PocketDef;                                         // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGzInvPocket                           Pocket;                                            // 0x0060(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadInfoInventory_C_InventoryFilter) == 0x000008, "Wrong alignment on WBP_SquadInfoInventory_C_InventoryFilter");
static_assert(sizeof(WBP_SquadInfoInventory_C_InventoryFilter) == 0x000090, "Wrong size on WBP_SquadInfoInventory_C_InventoryFilter");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryFilter, PocketDef) == 0x000000, "Member 'WBP_SquadInfoInventory_C_InventoryFilter::PocketDef' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryFilter, Pocket) == 0x000060, "Member 'WBP_SquadInfoInventory_C_InventoryFilter::Pocket' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryFilter, ReturnValue) == 0x000088, "Member 'WBP_SquadInfoInventory_C_InventoryFilter::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_InventoryFilter, CallFunc_MatchesAnyTags_ReturnValue) == 0x000089, "Member 'WBP_SquadInfoInventory_C_InventoryFilter::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");

// Function WBP_SquadInfoInventory.WBP_SquadInfoInventory_C.OnPawnSet_Event
// 0x0018 (0x0018 - 0x0000)
struct WBP_SquadInfoInventory_C_OnPawnSet_Event final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  OldPawn;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SquadInfoInventory_C_OnPawnSet_Event) == 0x000008, "Wrong alignment on WBP_SquadInfoInventory_C_OnPawnSet_Event");
static_assert(sizeof(WBP_SquadInfoInventory_C_OnPawnSet_Event) == 0x000018, "Wrong size on WBP_SquadInfoInventory_C_OnPawnSet_Event");
static_assert(offsetof(WBP_SquadInfoInventory_C_OnPawnSet_Event, Player) == 0x000000, "Member 'WBP_SquadInfoInventory_C_OnPawnSet_Event::Player' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_OnPawnSet_Event, NewPawn) == 0x000008, "Member 'WBP_SquadInfoInventory_C_OnPawnSet_Event::NewPawn' has a wrong offset!");
static_assert(offsetof(WBP_SquadInfoInventory_C_OnPawnSet_Event, OldPawn) == 0x000010, "Member 'WBP_SquadInfoInventory_C_OnPawnSet_Event::OldPawn' has a wrong offset!");

}

