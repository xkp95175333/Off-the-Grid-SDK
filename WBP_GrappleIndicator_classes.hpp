#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GrappleIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GrappleIndicator.WBP_GrappleIndicator_C
// 0x0030 (0x0370 - 0x0340)
class UWBP_GrappleIndicator_C final : public UGzHUDComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Indicator;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bCanHook;                                          // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BEE[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGzGA_GrappleHook*>              ActiveGrappleAbilities;                            // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AGzPlayerCharacter*                     PlayerCharacter;                                   // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_GrappleIndicator(int32 EntryPoint);
	void InitGrappleAbilities(class AGzCharacter* Param_PlayerCharacter);
	void On_Abilities_Updated();
	void ReceiveBindEvents(class APawn* NewViewTarget);
	void ReceiveUnbindEvents(class APawn* OldViewTarget);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GrappleIndicator_C">();
	}
	static class UWBP_GrappleIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GrappleIndicator_C>();
	}
};
static_assert(alignof(UWBP_GrappleIndicator_C) == 0x000008, "Wrong alignment on UWBP_GrappleIndicator_C");
static_assert(sizeof(UWBP_GrappleIndicator_C) == 0x000370, "Wrong size on UWBP_GrappleIndicator_C");
static_assert(offsetof(UWBP_GrappleIndicator_C, UberGraphFrame) == 0x000340, "Member 'UWBP_GrappleIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GrappleIndicator_C, Indicator) == 0x000348, "Member 'UWBP_GrappleIndicator_C::Indicator' has a wrong offset!");
static_assert(offsetof(UWBP_GrappleIndicator_C, bCanHook) == 0x000350, "Member 'UWBP_GrappleIndicator_C::bCanHook' has a wrong offset!");
static_assert(offsetof(UWBP_GrappleIndicator_C, ActiveGrappleAbilities) == 0x000358, "Member 'UWBP_GrappleIndicator_C::ActiveGrappleAbilities' has a wrong offset!");
static_assert(offsetof(UWBP_GrappleIndicator_C, PlayerCharacter) == 0x000368, "Member 'UWBP_GrappleIndicator_C::PlayerCharacter' has a wrong offset!");

}

