#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_Tether

#include "Basic.hpp"

#include "BPFL_Tether_classes.hpp"
#include "BPFL_Tether_parameters.hpp"


namespace SDK
{

// Function BPFL_Tether.BPFL_Tether_C.Is Tether LinkConnectionPossible
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          StartNormal                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NormalExtrudeDistance                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   IgnoredActors                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    LinkConnectionPossible                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBPFL_Tether_C::Is_Tether_LinkConnectionPossible(class AActor* Instigator, const struct FVector& StartLocation, const struct FVector& StartNormal, const struct FVector& EndLocation, const struct FVector& EndNormal, double NormalExtrudeDistance, TArray<class AActor*>& IgnoredActors, class UObject* __WorldContext, bool* LinkConnectionPossible, struct FHitResult* HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Tether_C", "Is Tether LinkConnectionPossible");

	Params::BPFL_Tether_C_Is_Tether_LinkConnectionPossible Parms{};

	Parms.Instigator = Instigator;
	Parms.StartLocation = std::move(StartLocation);
	Parms.StartNormal = std::move(StartNormal);
	Parms.EndLocation = std::move(EndLocation);
	Parms.EndNormal = std::move(EndNormal);
	Parms.NormalExtrudeDistance = NormalExtrudeDistance;
	Parms.IgnoredActors = std::move(IgnoredActors);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	IgnoredActors = std::move(Parms.IgnoredActors);

	if (LinkConnectionPossible != nullptr)
		*LinkConnectionPossible = Parms.LinkConnectionPossible;

	if (HitResult != nullptr)
		*HitResult = std::move(Parms.HitResult);
}

}

