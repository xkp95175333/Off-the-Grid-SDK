#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapScreen

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CommonInput_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_MapScreen.WBP_MapScreen_C.EnablePlayerTracking
// 0x0010 (0x0010 - 0x0000)
struct WBP_MapScreen_C_EnablePlayerTracking final
{
public:
	class AActor*                                 CallFunc_GetLocalViewTarget_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapScreen_C_EnablePlayerTracking) == 0x000008, "Wrong alignment on WBP_MapScreen_C_EnablePlayerTracking");
static_assert(sizeof(WBP_MapScreen_C_EnablePlayerTracking) == 0x000010, "Wrong size on WBP_MapScreen_C_EnablePlayerTracking");
static_assert(offsetof(WBP_MapScreen_C_EnablePlayerTracking, CallFunc_GetLocalViewTarget_ReturnValue) == 0x000000, "Member 'WBP_MapScreen_C_EnablePlayerTracking::CallFunc_GetLocalViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_EnablePlayerTracking, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_MapScreen_C_EnablePlayerTracking::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MapScreen.WBP_MapScreen_C.ExecuteUbergraph_WBP_MapScreen
// 0x0160 (0x0160 - 0x0000)
struct WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1C[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FVector2D& ScreenPosition, struct FVector2D& WorldPos, struct FKey& Key)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzNavigationRoot*                      CallFunc_GetNavigationRoot_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1D[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzNavigationRoot*                      CallFunc_GetNavigationRoot_ReturnValue_1;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzWE_PlayerDeathAware*                 CallFunc_AddExtension_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1E[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FullMapController_C*                CallFunc_CreateControllerForMap_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0090(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x00B8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B20[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B21[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_ScreenPosition;                 // 0x0120(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_WorldPos;                       // 0x0130(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_CustomEvent_Key;                            // 0x0140(0x0018)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen) == 0x000008, "Wrong alignment on WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen");
static_assert(sizeof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen) == 0x000160, "Wrong size on WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, EntryPoint) == 0x000000, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_object_Variable) == 0x000008, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_real_Variable) == 0x000010, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_real_Variable_1) == 0x000018, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_bool_Variable) == 0x000020, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_byte_Variable) == 0x000021, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_bool_Variable_1) == 0x000022, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_bool_Variable_2) == 0x000023, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_bool_Variable_3) == 0x000024, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000038, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_GetNavigationRoot_ReturnValue) == 0x000040, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_GetNavigationRoot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_GetCurrentInputType_ReturnValue) == 0x000048, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_GetNavigationRoot_ReturnValue_1) == 0x000050, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_GetNavigationRoot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_AddExtension_ReturnValue) == 0x000058, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_AddExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_CreateControllerForMap_ReturnValue) == 0x000068, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_CreateControllerForMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000070, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000090, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x0000B0, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x0000B4, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_EnhancedInputActionEvent_SourceAction) == 0x0000B8, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000C0, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_real_Variable_0) == 0x0000D0, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, Temp_real_Variable_1_0) == 0x0000D8, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x0000E0, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000E8, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_GetViewTarget_ReturnValue) == 0x0000F0, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_GetSpectatorPawn_ReturnValue) == 0x0000F8, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_GetTeamAttitude_ReturnValue) == 0x000100, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_IsValid_ReturnValue_1) == 0x000101, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_Select_Default) == 0x000102, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x000104, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000118, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_CustomEvent_ScreenPosition) == 0x000120, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_CustomEvent_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_CustomEvent_WorldPos) == 0x000130, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_CustomEvent_WorldPos' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, K2Node_CustomEvent_Key) == 0x000140, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen, CallFunc_IsValid_ReturnValue_2) == 0x000158, "Member 'WBP_MapScreen_C_ExecuteUbergraph_WBP_MapScreen::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WBP_MapScreen.WBP_MapScreen_C.InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'WBP_MapScreen_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function WBP_MapScreen.WBP_MapScreen_C.On Geom Update
// 0x0038 (0x0038 - 0x0000)
struct WBP_MapScreen_C_On_Geom_Update final
{
public:
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0000(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_MapScreen_C_On_Geom_Update) == 0x000004, "Wrong alignment on WBP_MapScreen_C_On_Geom_Update");
static_assert(sizeof(WBP_MapScreen_C_On_Geom_Update) == 0x000038, "Wrong size on WBP_MapScreen_C_On_Geom_Update");
static_assert(offsetof(WBP_MapScreen_C_On_Geom_Update, CallFunc_GetCachedGeometry_ReturnValue) == 0x000000, "Member 'WBP_MapScreen_C_On_Geom_Update::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");

// Function WBP_MapScreen.WBP_MapScreen_C.OnMapClickDelegate_Event
// 0x0038 (0x0038 - 0x0000)
struct WBP_MapScreen_C_OnMapClickDelegate_Event final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              WorldPos;                                          // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapScreen_C_OnMapClickDelegate_Event) == 0x000008, "Wrong alignment on WBP_MapScreen_C_OnMapClickDelegate_Event");
static_assert(sizeof(WBP_MapScreen_C_OnMapClickDelegate_Event) == 0x000038, "Wrong size on WBP_MapScreen_C_OnMapClickDelegate_Event");
static_assert(offsetof(WBP_MapScreen_C_OnMapClickDelegate_Event, ScreenPosition) == 0x000000, "Member 'WBP_MapScreen_C_OnMapClickDelegate_Event::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_OnMapClickDelegate_Event, WorldPos) == 0x000010, "Member 'WBP_MapScreen_C_OnMapClickDelegate_Event::WorldPos' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_OnMapClickDelegate_Event, Key) == 0x000020, "Member 'WBP_MapScreen_C_OnMapClickDelegate_Event::Key' has a wrong offset!");

// Function WBP_MapScreen.WBP_MapScreen_C.RegisterBindingsAndHints
// 0x0050 (0x0050 - 0x0000)
struct WBP_MapScreen_C_RegisterBindingsAndHints final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGzInputActionBindingHandle            CallFunc_RegisterBinding_BindingHandle;            // 0x0020(0x0004)(NoDestructor)
	struct FGzInputActionBindingHandle            CallFunc_RegisterBinding_BindingHandle_1;          // 0x0024(0x0004)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGzInputActionBindingHandle            CallFunc_RegisterBinding_BindingHandle_2;          // 0x0048(0x0004)(NoDestructor)
	struct FGzInputActionBindingHandle            CallFunc_RegisterBinding_BindingHandle_3;          // 0x004C(0x0004)(NoDestructor)
};
static_assert(alignof(WBP_MapScreen_C_RegisterBindingsAndHints) == 0x000004, "Wrong alignment on WBP_MapScreen_C_RegisterBindingsAndHints");
static_assert(sizeof(WBP_MapScreen_C_RegisterBindingsAndHints) == 0x000050, "Wrong size on WBP_MapScreen_C_RegisterBindingsAndHints");
static_assert(offsetof(WBP_MapScreen_C_RegisterBindingsAndHints, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MapScreen_C_RegisterBindingsAndHints::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_RegisterBindingsAndHints, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WBP_MapScreen_C_RegisterBindingsAndHints::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_RegisterBindingsAndHints, CallFunc_RegisterBinding_BindingHandle) == 0x000020, "Member 'WBP_MapScreen_C_RegisterBindingsAndHints::CallFunc_RegisterBinding_BindingHandle' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_RegisterBindingsAndHints, CallFunc_RegisterBinding_BindingHandle_1) == 0x000024, "Member 'WBP_MapScreen_C_RegisterBindingsAndHints::CallFunc_RegisterBinding_BindingHandle_1' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_RegisterBindingsAndHints, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'WBP_MapScreen_C_RegisterBindingsAndHints::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_RegisterBindingsAndHints, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'WBP_MapScreen_C_RegisterBindingsAndHints::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_RegisterBindingsAndHints, CallFunc_RegisterBinding_BindingHandle_2) == 0x000048, "Member 'WBP_MapScreen_C_RegisterBindingsAndHints::CallFunc_RegisterBinding_BindingHandle_2' has a wrong offset!");
static_assert(offsetof(WBP_MapScreen_C_RegisterBindingsAndHints, CallFunc_RegisterBinding_BindingHandle_3) == 0x00004C, "Member 'WBP_MapScreen_C_RegisterBindingsAndHints::CallFunc_RegisterBinding_BindingHandle_3' has a wrong offset!");

}

