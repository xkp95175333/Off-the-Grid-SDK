#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Authentication

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum Authentication.EAuthenticationStates
// NumValues: 0x0006
enum class EAuthenticationStates : uint8
{
	SignedOut                                = 0,
	SigningIn                                = 1,
	Authorized                               = 2,
	Refreshing                               = 3,
	Expired                                  = 4,
	EAuthenticationStates_MAX                = 5,
};

// Enum Authentication.EAuthenticationErrorCodes
// NumValues: 0x000D
enum class EAuthenticationErrorCodes : uint8
{
	MinValue                                 = 100,
	ClientInvalidUserState                   = 101,
	ClientNoActiveSession                    = 102,
	InvalidParameters                        = 103,
	AccountAlreadyLinked                     = 104,
	AccountLinkLimitExceeded                 = 105,
	ClientUnlinkExternalIdNotFound           = 106,
	ClientInvalidProfile                     = 107,
	InvalidSessionToken                      = 108,
	ClientDeleteInvalidProfile               = 109,
	ClientDeleteDefaultProfile               = 110,
	ClientProcessingRequest                  = 111,
	EAuthenticationErrorCodes_MAX            = 112,
};

// ScriptStruct Authentication.AuthenticationLinkOptions
// 0x0001 (0x0001 - 0x0000)
struct FAuthenticationLinkOptions final
{
public:
	bool                                          bForceLink;                                        // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAuthenticationLinkOptions) == 0x000001, "Wrong alignment on FAuthenticationLinkOptions");
static_assert(sizeof(FAuthenticationLinkOptions) == 0x000001, "Wrong size on FAuthenticationLinkOptions");
static_assert(offsetof(FAuthenticationLinkOptions, bForceLink) == 0x000000, "Member 'FAuthenticationLinkOptions::bForceLink' has a wrong offset!");

// ScriptStruct Authentication.ExternalId
// 0x0020 (0x0020 - 0x0000)
struct FExternalId final
{
public:
	class FString                                 ExternalId;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProviderId;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FExternalId) == 0x000008, "Wrong alignment on FExternalId");
static_assert(sizeof(FExternalId) == 0x000020, "Wrong size on FExternalId");
static_assert(offsetof(FExternalId, ExternalId) == 0x000000, "Member 'FExternalId::ExternalId' has a wrong offset!");
static_assert(offsetof(FExternalId, ProviderId) == 0x000010, "Member 'FExternalId::ProviderId' has a wrong offset!");

// ScriptStruct Authentication.AuthenticationUserResponse
// 0x0038 (0x0038 - 0x0000)
struct FAuthenticationUserResponse final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisabled;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2441[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ID;                                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              CreatedAt;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              LastLoginAt;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FExternalId>                    ExternalIds;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAuthenticationUserResponse) == 0x000008, "Wrong alignment on FAuthenticationUserResponse");
static_assert(sizeof(FAuthenticationUserResponse) == 0x000038, "Wrong size on FAuthenticationUserResponse");
static_assert(offsetof(FAuthenticationUserResponse, bWasSuccessful) == 0x000000, "Member 'FAuthenticationUserResponse::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FAuthenticationUserResponse, bDisabled) == 0x000001, "Member 'FAuthenticationUserResponse::bDisabled' has a wrong offset!");
static_assert(offsetof(FAuthenticationUserResponse, ID) == 0x000008, "Member 'FAuthenticationUserResponse::ID' has a wrong offset!");
static_assert(offsetof(FAuthenticationUserResponse, CreatedAt) == 0x000018, "Member 'FAuthenticationUserResponse::CreatedAt' has a wrong offset!");
static_assert(offsetof(FAuthenticationUserResponse, LastLoginAt) == 0x000020, "Member 'FAuthenticationUserResponse::LastLoginAt' has a wrong offset!");
static_assert(offsetof(FAuthenticationUserResponse, ExternalIds) == 0x000028, "Member 'FAuthenticationUserResponse::ExternalIds' has a wrong offset!");

// ScriptStruct Authentication.AuthenticationSignInOptions
// 0x0018 (0x0018 - 0x0000)
struct FAuthenticationSignInOptions final
{
public:
	class FString                                 Nonce;                                             // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreateAccount;                                    // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2442[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAuthenticationSignInOptions) == 0x000008, "Wrong alignment on FAuthenticationSignInOptions");
static_assert(sizeof(FAuthenticationSignInOptions) == 0x000018, "Wrong size on FAuthenticationSignInOptions");
static_assert(offsetof(FAuthenticationSignInOptions, Nonce) == 0x000000, "Member 'FAuthenticationSignInOptions::Nonce' has a wrong offset!");
static_assert(offsetof(FAuthenticationSignInOptions, bCreateAccount) == 0x000010, "Member 'FAuthenticationSignInOptions::bCreateAccount' has a wrong offset!");

// ScriptStruct Authentication.AuthenticationStateChangedResponse
// 0x0002 (0x0002 - 0x0000)
struct FAuthenticationStateChangedResponse final
{
public:
	EAuthenticationStates                         OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAuthenticationStates                         NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAuthenticationStateChangedResponse) == 0x000001, "Wrong alignment on FAuthenticationStateChangedResponse");
static_assert(sizeof(FAuthenticationStateChangedResponse) == 0x000002, "Wrong size on FAuthenticationStateChangedResponse");
static_assert(offsetof(FAuthenticationStateChangedResponse, OldState) == 0x000000, "Member 'FAuthenticationStateChangedResponse::OldState' has a wrong offset!");
static_assert(offsetof(FAuthenticationStateChangedResponse, NewState) == 0x000001, "Member 'FAuthenticationStateChangedResponse::NewState' has a wrong offset!");

// ScriptStruct Authentication.AuthenticationPlayerProfileChangedResponse
// 0x0040 (0x0040 - 0x0000)
struct FAuthenticationPlayerProfileChangedResponse final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2443[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OldProfileName;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewProfileName;                                    // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ErrorCode;                                         // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2444[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorDetails;                                      // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAuthenticationPlayerProfileChangedResponse) == 0x000008, "Wrong alignment on FAuthenticationPlayerProfileChangedResponse");
static_assert(sizeof(FAuthenticationPlayerProfileChangedResponse) == 0x000040, "Wrong size on FAuthenticationPlayerProfileChangedResponse");
static_assert(offsetof(FAuthenticationPlayerProfileChangedResponse, bWasSuccessful) == 0x000000, "Member 'FAuthenticationPlayerProfileChangedResponse::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FAuthenticationPlayerProfileChangedResponse, OldProfileName) == 0x000008, "Member 'FAuthenticationPlayerProfileChangedResponse::OldProfileName' has a wrong offset!");
static_assert(offsetof(FAuthenticationPlayerProfileChangedResponse, NewProfileName) == 0x000018, "Member 'FAuthenticationPlayerProfileChangedResponse::NewProfileName' has a wrong offset!");
static_assert(offsetof(FAuthenticationPlayerProfileChangedResponse, ErrorCode) == 0x000028, "Member 'FAuthenticationPlayerProfileChangedResponse::ErrorCode' has a wrong offset!");
static_assert(offsetof(FAuthenticationPlayerProfileChangedResponse, ErrorDetails) == 0x000030, "Member 'FAuthenticationPlayerProfileChangedResponse::ErrorDetails' has a wrong offset!");

// ScriptStruct Authentication.AuthenticationPlayerProfileDeletedResponse
// 0x0030 (0x0030 - 0x0000)
struct FAuthenticationPlayerProfileDeletedResponse final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2445[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProfileName;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ErrorCode;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2446[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorDetails;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAuthenticationPlayerProfileDeletedResponse) == 0x000008, "Wrong alignment on FAuthenticationPlayerProfileDeletedResponse");
static_assert(sizeof(FAuthenticationPlayerProfileDeletedResponse) == 0x000030, "Wrong size on FAuthenticationPlayerProfileDeletedResponse");
static_assert(offsetof(FAuthenticationPlayerProfileDeletedResponse, bWasSuccessful) == 0x000000, "Member 'FAuthenticationPlayerProfileDeletedResponse::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FAuthenticationPlayerProfileDeletedResponse, ProfileName) == 0x000008, "Member 'FAuthenticationPlayerProfileDeletedResponse::ProfileName' has a wrong offset!");
static_assert(offsetof(FAuthenticationPlayerProfileDeletedResponse, ErrorCode) == 0x000018, "Member 'FAuthenticationPlayerProfileDeletedResponse::ErrorCode' has a wrong offset!");
static_assert(offsetof(FAuthenticationPlayerProfileDeletedResponse, ErrorDetails) == 0x000020, "Member 'FAuthenticationPlayerProfileDeletedResponse::ErrorDetails' has a wrong offset!");

// ScriptStruct Authentication.AuthenticationResponse
// 0x0048 (0x0048 - 0x0000)
struct FAuthenticationResponse final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2447[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserId;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AccessToken;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SessionToken;                                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              AuthorizedTime;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExpiresIn;                                         // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2448[0x4];                                     // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAuthenticationResponse) == 0x000008, "Wrong alignment on FAuthenticationResponse");
static_assert(sizeof(FAuthenticationResponse) == 0x000048, "Wrong size on FAuthenticationResponse");
static_assert(offsetof(FAuthenticationResponse, bWasSuccessful) == 0x000000, "Member 'FAuthenticationResponse::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(FAuthenticationResponse, UserId) == 0x000008, "Member 'FAuthenticationResponse::UserId' has a wrong offset!");
static_assert(offsetof(FAuthenticationResponse, AccessToken) == 0x000018, "Member 'FAuthenticationResponse::AccessToken' has a wrong offset!");
static_assert(offsetof(FAuthenticationResponse, SessionToken) == 0x000028, "Member 'FAuthenticationResponse::SessionToken' has a wrong offset!");
static_assert(offsetof(FAuthenticationResponse, AuthorizedTime) == 0x000038, "Member 'FAuthenticationResponse::AuthorizedTime' has a wrong offset!");
static_assert(offsetof(FAuthenticationResponse, ExpiresIn) == 0x000040, "Member 'FAuthenticationResponse::ExpiresIn' has a wrong offset!");

}

