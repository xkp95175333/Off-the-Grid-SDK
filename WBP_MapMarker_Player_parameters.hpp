#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapMarker_Player

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "G01_structs.hpp"
#include "UMG_structs.hpp"
#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.BeingRevived
// 0x0140 (0x0140 - 0x0000)
struct WBP_MapMarker_Player_C_BeingRevived final
{
public:
	bool                                          bWasAdded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EFD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGzInteractionData                     CallFunc_FindInteractionDataByTag_OutInteractionData; // 0x0020(0x00F8)(ContainsInstancedReference)
	bool                                          CallFunc_FindInteractionDataByTag_ReturnValue;     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EFE[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LastProgress_ImplicitCast;      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EFF[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_BeingRevived) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_BeingRevived");
static_assert(sizeof(WBP_MapMarker_Player_C_BeingRevived) == 0x000140, "Wrong size on WBP_MapMarker_Player_C_BeingRevived");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, bWasAdded) == 0x000000, "Member 'WBP_MapMarker_Player_C_BeingRevived::bWasAdded' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_Player_C_BeingRevived::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_Player_C_BeingRevived::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000018, "Member 'WBP_MapMarker_Player_C_BeingRevived::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, CallFunc_FindInteractionDataByTag_OutInteractionData) == 0x000020, "Member 'WBP_MapMarker_Player_C_BeingRevived::CallFunc_FindInteractionDataByTag_OutInteractionData' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, CallFunc_FindInteractionDataByTag_ReturnValue) == 0x000118, "Member 'WBP_MapMarker_Player_C_BeingRevived::CallFunc_FindInteractionDataByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000120, "Member 'WBP_MapMarker_Player_C_BeingRevived::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000128, "Member 'WBP_MapMarker_Player_C_BeingRevived::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, K2Node_VariableSet_LastProgress_ImplicitCast) == 0x000130, "Member 'WBP_MapMarker_Player_C_BeingRevived::K2Node_VariableSet_LastProgress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_BeingRevived, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000138, "Member 'WBP_MapMarker_Player_C_BeingRevived::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.ExecuteUbergraph_WBP_MapMarker_Player
// 0x0270 (0x0270 - 0x0000)
struct WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F00[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x0008(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0050(0x0038)(HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_5;                          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_4;                          // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_3;                          // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_2;                          // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_1;                          // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0134(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzWorldVisibilityState                       K2Node_CustomEvent_NewState;                       // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F01[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCharacterWorldVisibilityComponent*   CallFunc_GetWorldVisibilityComp_ReturnValue;       // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzCharacterWorldVisibilityComponent*   CallFunc_GetWorldVisibilityComp_ReturnValue_1;     // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F02[0x6];                                     // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MortarLegsMap_C*                   K2Node_DynamicCast_AsWBP_Mortar_Legs_Map;          // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMinimap_ReturnValue;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F03[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    K2Node_DynamicCast_AsGz_Player_Controller;         // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F04[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue;     // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F05[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_3;  // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2; // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F06[0x2];                                     // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate_7;            // 0x01E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGzWorldVisibilityState NewState)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x01F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F07[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F08[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0214(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F09[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MortarLegsMap_C*                   K2Node_DynamicCast_AsWBP_Mortar_Legs_Map_1;        // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F0A[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetCurrentHoldTime_DeltaTime_ImplicitCast; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player");
static_assert(sizeof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player) == 0x000270, "Wrong size on WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, EntryPoint) == 0x000000, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_Attribute) == 0x000008, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_NewValue) == 0x000040, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_OldValue) == 0x000044, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, Temp_real_Variable) == 0x000048, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, Temp_real_Variable_1) == 0x00004C, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, Temp_struct_Variable) == 0x000050, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_Tag_5) == 0x000098, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_Tag_5' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_Tag_4) == 0x0000A0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_Tag_4' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A8, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, Temp_struct_Variable_1) == 0x0000B8, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_Tag_3) == 0x0000D0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_Tag_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_Tag_2) == 0x0000D8, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_Tag_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000E0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, Temp_struct_Variable_2) == 0x0000F0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000F8, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_Tag_1) == 0x000108, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_Tag) == 0x000110, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CreateDelegate_OutputDelegate_5) == 0x000118, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, Temp_struct_Variable_3) == 0x000128, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue_1) == 0x000131, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue_2) == 0x000132, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue_3) == 0x000133, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CreateDelegate_OutputDelegate_6) == 0x000134, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_NewState) == 0x000144, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_GetWorldVisibilityComp_ReturnValue) == 0x000148, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_GetWorldVisibilityComp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_GetWorldVisibilityComp_ReturnValue_1) == 0x000150, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_GetWorldVisibilityComp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue_4) == 0x000158, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue_5) == 0x000159, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_PlayAnimation_ReturnValue) == 0x000160, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_DynamicCast_AsWBP_Mortar_Legs_Map) == 0x000168, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_DynamicCast_AsWBP_Mortar_Legs_Map' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsMinimap_ReturnValue) == 0x000171, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsMinimap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_GetOwningPlayer_ReturnValue) == 0x000178, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_DynamicCast_AsGz_Player_Controller) == 0x000180, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_DynamicCast_AsGz_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CustomEvent_Pawn) == 0x000190, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000198, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x0001A0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_ListenForAttributeChange_ReturnValue) == 0x0001A8, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_ListenForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue) == 0x0001B0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue_6) == 0x0001B8, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue_7) == 0x0001B9, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x0001C0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1) == 0x0001C8, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_GetAbilitySystemComponent_ReturnValue_3) == 0x0001D0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_GetAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2) == 0x0001D8, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue_8) == 0x0001E0, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_IsValid_ReturnValue_9) == 0x0001E1, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001E4, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001F4, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_PlayAnimation_ReturnValue_1) == 0x000208, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_BooleanOR_ReturnValue) == 0x000210, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_Event_MyGeometry) == 0x000214, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_Event_InDeltaTime) == 0x00024C, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_BooleanOR_ReturnValue_1) == 0x000250, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_DynamicCast_AsWBP_Mortar_Legs_Map_1) == 0x000258, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_DynamicCast_AsWBP_Mortar_Legs_Map_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, K2Node_DynamicCast_bSuccess_2) == 0x000260, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player, CallFunc_SetCurrentHoldTime_DeltaTime_ImplicitCast) == 0x000268, "Member 'WBP_MapMarker_Player_C_ExecuteUbergraph_WBP_MapMarker_Player::CallFunc_SetCurrentHoldTime_DeltaTime_ImplicitCast' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.GetWorldVisibilityComp
// 0x0020 (0x0020 - 0x0000)
struct WBP_MapMarker_Player_C_GetWorldVisibilityComp final
{
public:
	class UGzCharacterWorldVisibilityComponent*   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F0B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCharacterWorldVisibilityComponent*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_GetWorldVisibilityComp) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_GetWorldVisibilityComp");
static_assert(sizeof(WBP_MapMarker_Player_C_GetWorldVisibilityComp) == 0x000020, "Wrong size on WBP_MapMarker_Player_C_GetWorldVisibilityComp");
static_assert(offsetof(WBP_MapMarker_Player_C_GetWorldVisibilityComp, ReturnValue) == 0x000000, "Member 'WBP_MapMarker_Player_C_GetWorldVisibilityComp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_GetWorldVisibilityComp, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_Player_C_GetWorldVisibilityComp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_GetWorldVisibilityComp, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_Player_C_GetWorldVisibilityComp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_GetWorldVisibilityComp, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'WBP_MapMarker_Player_C_GetWorldVisibilityComp::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.IsPrematch
// 0x0068 (0x0068 - 0x0000)
struct WBP_MapMarker_Player_C_IsPrematch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F0C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   LoadoutSelectionTags;                              // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiStageGameState*                 K2Node_DynamicCast_AsGz_Multi_Stage_Game_State;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F0D[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetActiveStageTags_ReturnValue;           // 0x0040(0x0020)(ConstParm)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_IsPrematch) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_IsPrematch");
static_assert(sizeof(WBP_MapMarker_Player_C_IsPrematch) == 0x000068, "Wrong size on WBP_MapMarker_Player_C_IsPrematch");
static_assert(offsetof(WBP_MapMarker_Player_C_IsPrematch, ReturnValue) == 0x000000, "Member 'WBP_MapMarker_Player_C_IsPrematch::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_IsPrematch, LoadoutSelectionTags) == 0x000008, "Member 'WBP_MapMarker_Player_C_IsPrematch::LoadoutSelectionTags' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_IsPrematch, K2Node_MakeArray_Array) == 0x000018, "Member 'WBP_MapMarker_Player_C_IsPrematch::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_IsPrematch, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'WBP_MapMarker_Player_C_IsPrematch::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_IsPrematch, K2Node_DynamicCast_AsGz_Multi_Stage_Game_State) == 0x000030, "Member 'WBP_MapMarker_Player_C_IsPrematch::K2Node_DynamicCast_AsGz_Multi_Stage_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_IsPrematch, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_MapMarker_Player_C_IsPrematch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_IsPrematch, CallFunc_GetActiveStageTags_ReturnValue) == 0x000040, "Member 'WBP_MapMarker_Player_C_IsPrematch::CallFunc_GetActiveStageTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_IsPrematch, CallFunc_HasTag_ReturnValue) == 0x000060, "Member 'WBP_MapMarker_Player_C_IsPrematch::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3
// 0x0040 (0x0040 - 0x0000)
struct WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3");
static_assert(sizeof(WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3) == 0x000040, "Wrong size on WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3");
static_assert(offsetof(WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3, Attribute) == 0x000000, "Member 'WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3, NewValue) == 0x000038, "Member 'WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3, OldValue) == 0x00003C, "Member 'WBP_MapMarker_Player_C_OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3::OldValue' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.OnPawnChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_Player_C_OnPawnChanged final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_OnPawnChanged) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_OnPawnChanged");
static_assert(sizeof(WBP_MapMarker_Player_C_OnPawnChanged) == 0x000008, "Wrong size on WBP_MapMarker_Player_C_OnPawnChanged");
static_assert(offsetof(WBP_MapMarker_Player_C_OnPawnChanged, Pawn) == 0x000000, "Member 'WBP_MapMarker_Player_C_OnPawnChanged::Pawn' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.OnTagAdded_0BDDFB7342FBE89CA626A69F5123709C
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_Player_C_OnTagAdded_0BDDFB7342FBE89CA626A69F5123709C final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_OnTagAdded_0BDDFB7342FBE89CA626A69F5123709C) == 0x000004, "Wrong alignment on WBP_MapMarker_Player_C_OnTagAdded_0BDDFB7342FBE89CA626A69F5123709C");
static_assert(sizeof(WBP_MapMarker_Player_C_OnTagAdded_0BDDFB7342FBE89CA626A69F5123709C) == 0x000008, "Wrong size on WBP_MapMarker_Player_C_OnTagAdded_0BDDFB7342FBE89CA626A69F5123709C");
static_assert(offsetof(WBP_MapMarker_Player_C_OnTagAdded_0BDDFB7342FBE89CA626A69F5123709C, Tag) == 0x000000, "Member 'WBP_MapMarker_Player_C_OnTagAdded_0BDDFB7342FBE89CA626A69F5123709C::Tag' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.OnTagAdded_42802B0B4A2033D3C2D544AB093D39CC
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_Player_C_OnTagAdded_42802B0B4A2033D3C2D544AB093D39CC final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_OnTagAdded_42802B0B4A2033D3C2D544AB093D39CC) == 0x000004, "Wrong alignment on WBP_MapMarker_Player_C_OnTagAdded_42802B0B4A2033D3C2D544AB093D39CC");
static_assert(sizeof(WBP_MapMarker_Player_C_OnTagAdded_42802B0B4A2033D3C2D544AB093D39CC) == 0x000008, "Wrong size on WBP_MapMarker_Player_C_OnTagAdded_42802B0B4A2033D3C2D544AB093D39CC");
static_assert(offsetof(WBP_MapMarker_Player_C_OnTagAdded_42802B0B4A2033D3C2D544AB093D39CC, Tag) == 0x000000, "Member 'WBP_MapMarker_Player_C_OnTagAdded_42802B0B4A2033D3C2D544AB093D39CC::Tag' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.OnTagAdded_64436D1A492487F931FF378AEB5F8C44
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_Player_C_OnTagAdded_64436D1A492487F931FF378AEB5F8C44 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_OnTagAdded_64436D1A492487F931FF378AEB5F8C44) == 0x000004, "Wrong alignment on WBP_MapMarker_Player_C_OnTagAdded_64436D1A492487F931FF378AEB5F8C44");
static_assert(sizeof(WBP_MapMarker_Player_C_OnTagAdded_64436D1A492487F931FF378AEB5F8C44) == 0x000008, "Wrong size on WBP_MapMarker_Player_C_OnTagAdded_64436D1A492487F931FF378AEB5F8C44");
static_assert(offsetof(WBP_MapMarker_Player_C_OnTagAdded_64436D1A492487F931FF378AEB5F8C44, Tag) == 0x000000, "Member 'WBP_MapMarker_Player_C_OnTagAdded_64436D1A492487F931FF378AEB5F8C44::Tag' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.OnTagRemoved_0BDDFB7342FBE89CA626A69F5123709C
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_Player_C_OnTagRemoved_0BDDFB7342FBE89CA626A69F5123709C final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_OnTagRemoved_0BDDFB7342FBE89CA626A69F5123709C) == 0x000004, "Wrong alignment on WBP_MapMarker_Player_C_OnTagRemoved_0BDDFB7342FBE89CA626A69F5123709C");
static_assert(sizeof(WBP_MapMarker_Player_C_OnTagRemoved_0BDDFB7342FBE89CA626A69F5123709C) == 0x000008, "Wrong size on WBP_MapMarker_Player_C_OnTagRemoved_0BDDFB7342FBE89CA626A69F5123709C");
static_assert(offsetof(WBP_MapMarker_Player_C_OnTagRemoved_0BDDFB7342FBE89CA626A69F5123709C, Tag) == 0x000000, "Member 'WBP_MapMarker_Player_C_OnTagRemoved_0BDDFB7342FBE89CA626A69F5123709C::Tag' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.OnTagRemoved_42802B0B4A2033D3C2D544AB093D39CC
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_Player_C_OnTagRemoved_42802B0B4A2033D3C2D544AB093D39CC final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_OnTagRemoved_42802B0B4A2033D3C2D544AB093D39CC) == 0x000004, "Wrong alignment on WBP_MapMarker_Player_C_OnTagRemoved_42802B0B4A2033D3C2D544AB093D39CC");
static_assert(sizeof(WBP_MapMarker_Player_C_OnTagRemoved_42802B0B4A2033D3C2D544AB093D39CC) == 0x000008, "Wrong size on WBP_MapMarker_Player_C_OnTagRemoved_42802B0B4A2033D3C2D544AB093D39CC");
static_assert(offsetof(WBP_MapMarker_Player_C_OnTagRemoved_42802B0B4A2033D3C2D544AB093D39CC, Tag) == 0x000000, "Member 'WBP_MapMarker_Player_C_OnTagRemoved_42802B0B4A2033D3C2D544AB093D39CC::Tag' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.OnTagRemoved_64436D1A492487F931FF378AEB5F8C44
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_Player_C_OnTagRemoved_64436D1A492487F931FF378AEB5F8C44 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_OnTagRemoved_64436D1A492487F931FF378AEB5F8C44) == 0x000004, "Wrong alignment on WBP_MapMarker_Player_C_OnTagRemoved_64436D1A492487F931FF378AEB5F8C44");
static_assert(sizeof(WBP_MapMarker_Player_C_OnTagRemoved_64436D1A492487F931FF378AEB5F8C44) == 0x000008, "Wrong size on WBP_MapMarker_Player_C_OnTagRemoved_64436D1A492487F931FF378AEB5F8C44");
static_assert(offsetof(WBP_MapMarker_Player_C_OnTagRemoved_64436D1A492487F931FF378AEB5F8C44, Tag) == 0x000000, "Member 'WBP_MapMarker_Player_C_OnTagRemoved_64436D1A492487F931FF378AEB5F8C44::Tag' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.OnVisibilityStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapMarker_Player_C_OnVisibilityStateChanged final
{
public:
	EGzWorldVisibilityState                       NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_OnVisibilityStateChanged) == 0x000001, "Wrong alignment on WBP_MapMarker_Player_C_OnVisibilityStateChanged");
static_assert(sizeof(WBP_MapMarker_Player_C_OnVisibilityStateChanged) == 0x000001, "Wrong size on WBP_MapMarker_Player_C_OnVisibilityStateChanged");
static_assert(offsetof(WBP_MapMarker_Player_C_OnVisibilityStateChanged, NewState) == 0x000000, "Member 'WBP_MapMarker_Player_C_OnVisibilityStateChanged::NewState' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.Refresh Attitude
// 0x0058 (0x0058 - 0x0000)
struct WBP_MapMarker_Player_C_Refresh_Attitude final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F0E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F0F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F10[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character_1;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalViewTarget_ReturnValue;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F11[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         CallFunc_GetPersistentPlayerState_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F12[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIndexInTeam_OutputPin;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_Refresh_Attitude) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_Refresh_Attitude");
static_assert(sizeof(WBP_MapMarker_Player_C_Refresh_Attitude) == 0x000058, "Wrong size on WBP_MapMarker_Player_C_Refresh_Attitude");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_GetViewTarget_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, K2Node_DynamicCast_AsGz_Character) == 0x000020, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, K2Node_DynamicCast_AsGz_Character_1) == 0x000038, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::K2Node_DynamicCast_AsGz_Character_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_IsLocalViewTarget_ReturnValue) == 0x000042, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_IsLocalViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_GetTeamAttitude_ReturnValue) == 0x000043, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_GetPersistentPlayerState_ReturnValue) == 0x000048, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_GetPersistentPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Refresh_Attitude, CallFunc_GetIndexInTeam_OutputPin) == 0x000054, "Member 'WBP_MapMarker_Player_C_Refresh_Attitude::CallFunc_GetIndexInTeam_OutputPin' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.SetCurrentHoldTime
// 0x0020 (0x0020 - 0x0000)
struct WBP_MapMarker_Player_C_SetCurrentHoldTime final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_SetCurrentHoldTime) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_SetCurrentHoldTime");
static_assert(sizeof(WBP_MapMarker_Player_C_SetCurrentHoldTime) == 0x000020, "Wrong size on WBP_MapMarker_Player_C_SetCurrentHoldTime");
static_assert(offsetof(WBP_MapMarker_Player_C_SetCurrentHoldTime, DeltaTime) == 0x000000, "Member 'WBP_MapMarker_Player_C_SetCurrentHoldTime::DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_SetCurrentHoldTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_Player_C_SetCurrentHoldTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_SetCurrentHoldTime, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_Player_C_SetCurrentHoldTime::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_SetCurrentHoldTime, CallFunc_FClamp_Max_ImplicitCast) == 0x000018, "Member 'WBP_MapMarker_Player_C_SetCurrentHoldTime::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_MapMarker_Player_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_Tick) == 0x000004, "Wrong alignment on WBP_MapMarker_Player_C_Tick");
static_assert(sizeof(WBP_MapMarker_Player_C_Tick) == 0x00003C, "Wrong size on WBP_MapMarker_Player_C_Tick");
static_assert(offsetof(WBP_MapMarker_Player_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_MapMarker_Player_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_MapMarker_Player_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.Update Progress
// 0x0098 (0x0098 - 0x0000)
struct WBP_MapMarker_Player_C_Update_Progress final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F13[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGzHealthInterface>    CallFunc_GetMaxHealth_self_CastInput;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F14[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGzHealthInterface>    CallFunc_GetHealth_self_CastInput;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F15[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F16[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_RangeMax_ImplicitCast;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F17[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast_1; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_Update_Progress) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_Update_Progress");
static_assert(sizeof(WBP_MapMarker_Player_C_Update_Progress) == 0x000098, "Wrong size on WBP_MapMarker_Player_C_Update_Progress");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_NormalizeToRange_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_GetMaxHealth_self_CastInput) == 0x000010, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_GetMaxHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_GetMaxHealth_ReturnValue) == 0x000020, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_GetHealth_self_CastInput) == 0x000030, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_GetHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_GetHealth_ReturnValue) == 0x000040, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_SafeDivide_ReturnValue) == 0x000048, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000050, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000058, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000068, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_NormalizeToRange_RangeMax_ImplicitCast) == 0x000070, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_NormalizeToRange_RangeMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_SafeDivide_B_ImplicitCast) == 0x000078, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast) == 0x000080, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_SafeDivide_A_ImplicitCast) == 0x000088, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_Update_Progress, CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast_1) == 0x000090, "Member 'WBP_MapMarker_Player_C_Update_Progress::CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast_1' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.UpdateKnockDownIndication
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_Player_C_UpdateKnockDownIndication final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F18[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_UpdateKnockDownIndication) == 0x000004, "Wrong alignment on WBP_MapMarker_Player_C_UpdateKnockDownIndication");
static_assert(sizeof(WBP_MapMarker_Player_C_UpdateKnockDownIndication) == 0x000008, "Wrong size on WBP_MapMarker_Player_C_UpdateKnockDownIndication");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateKnockDownIndication, Condition) == 0x000000, "Member 'WBP_MapMarker_Player_C_UpdateKnockDownIndication::Condition' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateKnockDownIndication, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_MapMarker_Player_C_UpdateKnockDownIndication::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateKnockDownIndication, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'WBP_MapMarker_Player_C_UpdateKnockDownIndication::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.UpdateStyle
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_MapMarker_Player_C_UpdateStyle final
{
public:
	ETeamAttitude                                 PlayerAttitude;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalPlayer;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F19[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HostileColor;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalPlayer_0;                                   // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 PlayerAttitude_0;                                  // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1A[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzTeam*                                CallFunc_GetTeamFromPlayerId_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 Temp_byte_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1B[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1C[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeammateColorFromIndex_OutPlayerColor; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalViewTarget_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1D[0x1];                                     // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetTeammateColorFromIndex_OutPlayerColor_1; // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPrematch_ReturnValue;                   // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1E[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1F[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetTeammateColorFromIndex_OutPlayerColor_2; // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F20[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_UpdateStyle) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_UpdateStyle");
static_assert(sizeof(WBP_MapMarker_Player_C_UpdateStyle) == 0x0000E8, "Wrong size on WBP_MapMarker_Player_C_UpdateStyle");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, PlayerAttitude) == 0x000000, "Member 'WBP_MapMarker_Player_C_UpdateStyle::PlayerAttitude' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, IsLocalPlayer) == 0x000001, "Member 'WBP_MapMarker_Player_C_UpdateStyle::IsLocalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, PlayerId) == 0x000004, "Member 'WBP_MapMarker_Player_C_UpdateStyle::PlayerId' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, HostileColor) == 0x000008, "Member 'WBP_MapMarker_Player_C_UpdateStyle::HostileColor' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, IsLocalPlayer_0) == 0x000018, "Member 'WBP_MapMarker_Player_C_UpdateStyle::IsLocalPlayer_0' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, PlayerAttitude_0) == 0x000019, "Member 'WBP_MapMarker_Player_C_UpdateStyle::PlayerAttitude_0' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, Temp_byte_Variable) == 0x00001A, "Member 'WBP_MapMarker_Player_C_UpdateStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_GetTeamFromPlayerId_ReturnValue) == 0x000020, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_GetTeamFromPlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, Temp_struct_Variable) == 0x000028, "Member 'WBP_MapMarker_Player_C_UpdateStyle::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, Temp_byte_Variable_1) == 0x00003A, "Member 'WBP_MapMarker_Player_C_UpdateStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, Temp_struct_Variable_1) == 0x00003C, "Member 'WBP_MapMarker_Player_C_UpdateStyle::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, Temp_bool_Variable) == 0x00004C, "Member 'WBP_MapMarker_Player_C_UpdateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, Temp_object_Variable) == 0x000050, "Member 'WBP_MapMarker_Player_C_UpdateStyle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, Temp_object_Variable_1) == 0x000058, "Member 'WBP_MapMarker_Player_C_UpdateStyle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_GetTeammateColorFromIndex_OutPlayerColor) == 0x000060, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_GetTeammateColorFromIndex_OutPlayerColor' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, K2Node_DynamicCast_AsGz_Character) == 0x000078, "Member 'WBP_MapMarker_Player_C_UpdateStyle::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_MapMarker_Player_C_UpdateStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_IsLocalViewTarget_ReturnValue) == 0x000081, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_IsLocalViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, Temp_bool_Variable_1) == 0x000082, "Member 'WBP_MapMarker_Player_C_UpdateStyle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_GetTeammateColorFromIndex_OutPlayerColor_1) == 0x000084, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_GetTeammateColorFromIndex_OutPlayerColor_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_IsPrematch_ReturnValue) == 0x000094, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_IsPrematch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, K2Node_Select_Default) == 0x000098, "Member 'WBP_MapMarker_Player_C_UpdateStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, CallFunc_GetTeammateColorFromIndex_OutPlayerColor_2) == 0x0000AC, "Member 'WBP_MapMarker_Player_C_UpdateStyle::CallFunc_GetTeammateColorFromIndex_OutPlayerColor_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, K2Node_Select_Default_1) == 0x0000C0, "Member 'WBP_MapMarker_Player_C_UpdateStyle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, K2Node_Select_Default_2) == 0x0000C8, "Member 'WBP_MapMarker_Player_C_UpdateStyle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UpdateStyle, K2Node_Select_Default_3) == 0x0000D8, "Member 'WBP_MapMarker_Player_C_UpdateStyle::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.UsingSelfReviveKit
// 0x0038 (0x0038 - 0x0000)
struct WBP_MapMarker_Player_C_UsingSelfReviveKit final
{
public:
	bool                                          bWasAdded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F21[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LastProgress_ImplicitCast;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_UsingSelfReviveKit) == 0x000008, "Wrong alignment on WBP_MapMarker_Player_C_UsingSelfReviveKit");
static_assert(sizeof(WBP_MapMarker_Player_C_UsingSelfReviveKit) == 0x000038, "Wrong size on WBP_MapMarker_Player_C_UsingSelfReviveKit");
static_assert(offsetof(WBP_MapMarker_Player_C_UsingSelfReviveKit, bWasAdded) == 0x000000, "Member 'WBP_MapMarker_Player_C_UsingSelfReviveKit::bWasAdded' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UsingSelfReviveKit, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_Player_C_UsingSelfReviveKit::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UsingSelfReviveKit, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_Player_C_UsingSelfReviveKit::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UsingSelfReviveKit, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'WBP_MapMarker_Player_C_UsingSelfReviveKit::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UsingSelfReviveKit, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'WBP_MapMarker_Player_C_UsingSelfReviveKit::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UsingSelfReviveKit, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'WBP_MapMarker_Player_C_UsingSelfReviveKit::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Player_C_UsingSelfReviveKit, K2Node_VariableSet_LastProgress_ImplicitCast) == 0x000030, "Member 'WBP_MapMarker_Player_C_UsingSelfReviveKit::K2Node_VariableSet_LastProgress_ImplicitCast' has a wrong offset!");

// Function WBP_MapMarker_Player.WBP_MapMarker_Player_C.GetShowVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapMarker_Player_C_GetShowVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Player_C_GetShowVisibility) == 0x000001, "Wrong alignment on WBP_MapMarker_Player_C_GetShowVisibility");
static_assert(sizeof(WBP_MapMarker_Player_C_GetShowVisibility) == 0x000001, "Wrong size on WBP_MapMarker_Player_C_GetShowVisibility");
static_assert(offsetof(WBP_MapMarker_Player_C_GetShowVisibility, ReturnValue) == 0x000000, "Member 'WBP_MapMarker_Player_C_GetShowVisibility::ReturnValue' has a wrong offset!");

}

