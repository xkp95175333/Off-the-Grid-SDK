#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapMarker_Opportunity_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_MapMarker_Opportunity_Base.WBP_MapMarker_Opportunity_Base_C.ExecuteUbergraph_WBP_MapMarker_Opportunity_Base
// 0x0018 (0x0018 - 0x0000)
struct WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6960[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorById_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base) == 0x000004, "Wrong alignment on WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base");
static_assert(sizeof(WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base) == 0x000018, "Wrong size on WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base");
static_assert(offsetof(WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base, EntryPoint) == 0x000000, "Member 'WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base, CallFunc_GetColorById_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_Opportunity_Base_C_ExecuteUbergraph_WBP_MapMarker_Opportunity_Base::CallFunc_GetColorById_ReturnValue' has a wrong offset!");

// Function WBP_MapMarker_Opportunity_Base.WBP_MapMarker_Opportunity_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapMarker_Opportunity_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_Opportunity_Base_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MapMarker_Opportunity_Base_C_PreConstruct");
static_assert(sizeof(WBP_MapMarker_Opportunity_Base_C_PreConstruct) == 0x000001, "Wrong size on WBP_MapMarker_Opportunity_Base_C_PreConstruct");
static_assert(offsetof(WBP_MapMarker_Opportunity_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MapMarker_Opportunity_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

