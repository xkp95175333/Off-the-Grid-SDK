#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Cyberlimb_Spawner_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "BP_LootContainer_TemplateV2_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Cyberlimb_Spawner_Base.BP_Cyberlimb_Spawner_Base_C
// 0x0050 (0x03B0 - 0x0360)
class ABP_Cyberlimb_Spawner_Base_C final : public ABP_LootContainer_TemplateV2_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Cyberlimb_Spawner_Base_C;        // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Military_Lootbox_D_lid_01;                      // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Military_Lootbox_D;                             // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzGridLootSpawnerComponent*            GzGridLootSpawner;                                 // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzTableLootChooserComponent*           GzTableLootChooser;                                // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzStreamableComponent*                 GzStreamable;                                      // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnLooted;                                          // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMaterialInterface*                     MaterialOff;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialOn;                                        // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Cyberlimb_Spawner_Base(int32 EntryPoint);
	void BndEvt__BP_Cyberlimb_Spawner_Base_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable);
	void SetOpenedMaterials();
	void SetInActiveMaterials();
	void SetActiveMaterials();
	void SetActive(bool bActive, class UMissionObjective* Objective);
	void ReceiveBeginPlay();
	void OnLooted__DelegateSignature();

	EGzDefilerTargetType GetDefilerTargetType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Cyberlimb_Spawner_Base_C">();
	}
	static class ABP_Cyberlimb_Spawner_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Cyberlimb_Spawner_Base_C>();
	}
};
static_assert(alignof(ABP_Cyberlimb_Spawner_Base_C) == 0x000008, "Wrong alignment on ABP_Cyberlimb_Spawner_Base_C");
static_assert(sizeof(ABP_Cyberlimb_Spawner_Base_C) == 0x0003B0, "Wrong size on ABP_Cyberlimb_Spawner_Base_C");
static_assert(offsetof(ABP_Cyberlimb_Spawner_Base_C, UberGraphFrame_BP_Cyberlimb_Spawner_Base_C) == 0x000360, "Member 'ABP_Cyberlimb_Spawner_Base_C::UberGraphFrame_BP_Cyberlimb_Spawner_Base_C' has a wrong offset!");
static_assert(offsetof(ABP_Cyberlimb_Spawner_Base_C, SM_Military_Lootbox_D_lid_01) == 0x000368, "Member 'ABP_Cyberlimb_Spawner_Base_C::SM_Military_Lootbox_D_lid_01' has a wrong offset!");
static_assert(offsetof(ABP_Cyberlimb_Spawner_Base_C, SM_Military_Lootbox_D) == 0x000370, "Member 'ABP_Cyberlimb_Spawner_Base_C::SM_Military_Lootbox_D' has a wrong offset!");
static_assert(offsetof(ABP_Cyberlimb_Spawner_Base_C, GzGridLootSpawner) == 0x000378, "Member 'ABP_Cyberlimb_Spawner_Base_C::GzGridLootSpawner' has a wrong offset!");
static_assert(offsetof(ABP_Cyberlimb_Spawner_Base_C, GzTableLootChooser) == 0x000380, "Member 'ABP_Cyberlimb_Spawner_Base_C::GzTableLootChooser' has a wrong offset!");
static_assert(offsetof(ABP_Cyberlimb_Spawner_Base_C, GzStreamable) == 0x000388, "Member 'ABP_Cyberlimb_Spawner_Base_C::GzStreamable' has a wrong offset!");
static_assert(offsetof(ABP_Cyberlimb_Spawner_Base_C, OnLooted) == 0x000390, "Member 'ABP_Cyberlimb_Spawner_Base_C::OnLooted' has a wrong offset!");
static_assert(offsetof(ABP_Cyberlimb_Spawner_Base_C, MaterialOff) == 0x0003A0, "Member 'ABP_Cyberlimb_Spawner_Base_C::MaterialOff' has a wrong offset!");
static_assert(offsetof(ABP_Cyberlimb_Spawner_Base_C, MaterialOn) == 0x0003A8, "Member 'ABP_Cyberlimb_Spawner_Base_C::MaterialOn' has a wrong offset!");

}

