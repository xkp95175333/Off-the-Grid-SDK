#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MicroMissilesComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MicroMissilesComponent.BP_MicroMissilesComponent_C
// 0x0018 (0x0440 - 0x0428)
class UBP_MicroMissilesComponent_C final : public UGzMicroMissilesComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0428(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkAudioEvent*                          LockOnExpiredAudioEvent;                           // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          LockOnSuccessAudioEvent;                           // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CREATEDELEGATE_PROXYFUNCTION_0(const struct FGzMicroMissiles_LockOnTarget& TargetData);
	void CREATEDELEGATE_PROXYFUNCTION_1(const struct FGzMicroMissiles_LockOnTarget& TargetData);
	void CREATEDELEGATE_PROXYFUNCTION_2(const struct FGzMicroMissiles_LockOnTarget& TargetData);
	void ExecuteUbergraph_BP_MicroMissilesComponent(int32 EntryPoint);
	void LockOnExpired(const struct FGzMicroMissiles_LockOnTarget& TargetData);
	void LockOnFailed(const struct FGzMicroMissiles_LockOnTarget& TargetData);
	void LockOnInterrupted(const struct FGzMicroMissiles_LockOnTarget& TargetData);
	void LockOnStarted(const struct FGzMicroMissiles_LockOnTarget& TargetData);
	void LockOnSuccess(const struct FGzMicroMissiles_LockOnTarget& TargetData);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MicroMissilesComponent_C">();
	}
	static class UBP_MicroMissilesComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MicroMissilesComponent_C>();
	}
};
static_assert(alignof(UBP_MicroMissilesComponent_C) == 0x000008, "Wrong alignment on UBP_MicroMissilesComponent_C");
static_assert(sizeof(UBP_MicroMissilesComponent_C) == 0x000440, "Wrong size on UBP_MicroMissilesComponent_C");
static_assert(offsetof(UBP_MicroMissilesComponent_C, UberGraphFrame) == 0x000428, "Member 'UBP_MicroMissilesComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MicroMissilesComponent_C, LockOnExpiredAudioEvent) == 0x000430, "Member 'UBP_MicroMissilesComponent_C::LockOnExpiredAudioEvent' has a wrong offset!");
static_assert(offsetof(UBP_MicroMissilesComponent_C, LockOnSuccessAudioEvent) == 0x000438, "Member 'UBP_MicroMissilesComponent_C::LockOnSuccessAudioEvent' has a wrong offset!");

}

