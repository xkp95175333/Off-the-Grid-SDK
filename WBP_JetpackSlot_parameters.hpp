#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_JetpackSlot

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_JetpackSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JetpackSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_JetpackSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_JetpackSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_JetpackSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_JetpackSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_JetpackSlot_C_BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.ExecuteUbergraph_WBP_JetpackSlot
// 0x0248 (0x0248 - 0x0000)
struct WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B33[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x0008(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0060(0x0038)(HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B34[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue;     // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B35[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1; // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B36[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B37[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzInvItem                             K2Node_Event_NewItem;                              // 0x00E8(0x0010)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00F8(0x0078)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0170(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x01A8(0x0078)(ConstParm)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot) == 0x000008, "Wrong alignment on WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot");
static_assert(sizeof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot) == 0x000248, "Wrong size on WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, EntryPoint) == 0x000000, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_CustomEvent_Attribute) == 0x000008, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_CustomEvent_NewValue) == 0x000040, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_CustomEvent_OldValue) == 0x000044, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, Temp_real_Variable) == 0x000058, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, Temp_real_Variable_1) == 0x00005C, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, Temp_struct_Variable) == 0x000060, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000098, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_DynamicCast_AsGz_Player_Character) == 0x0000A0, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0000B0, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_ListenForAttributeChange_ReturnValue) == 0x0000B8, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_ListenForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x0000C0, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x0000C4, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1) == 0x0000C9, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1) == 0x0000CC, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_SafeDivide_ReturnValue) == 0x0000D8, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_ComponentBoundEvent_Button) == 0x0000E0, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_Event_NewItem) == 0x0000E8, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_Event_NewItem' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_Event_MouseEvent_1) == 0x0000F8, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_Event_MyGeometry) == 0x000170, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, K2Node_Event_MouseEvent) == 0x0001A8, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_SafeDivide_A_ImplicitCast) == 0x000220, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000228, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_SafeDivide_B_ImplicitCast) == 0x000230, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000238, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000240, "Member 'WBP_JetpackSlot_C_ExecuteUbergraph_WBP_JetpackSlot::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.HandleValidItem
// 0x0010 (0x0010 - 0x0000)
struct WBP_JetpackSlot_C_HandleValidItem final
{
public:
	struct FGzInvItem                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_JetpackSlot_C_HandleValidItem) == 0x000008, "Wrong alignment on WBP_JetpackSlot_C_HandleValidItem");
static_assert(sizeof(WBP_JetpackSlot_C_HandleValidItem) == 0x000010, "Wrong size on WBP_JetpackSlot_C_HandleValidItem");
static_assert(offsetof(WBP_JetpackSlot_C_HandleValidItem, Item) == 0x000000, "Member 'WBP_JetpackSlot_C_HandleValidItem::Item' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.IsJetpackEnabled
// 0x0038 (0x0038 - 0x0000)
struct WBP_JetpackSlot_C_IsJetpackEnabled final
{
public:
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B38[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B39[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B3A[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JetpackSlot_C_IsJetpackEnabled) == 0x000008, "Wrong alignment on WBP_JetpackSlot_C_IsJetpackEnabled");
static_assert(sizeof(WBP_JetpackSlot_C_IsJetpackEnabled) == 0x000038, "Wrong size on WBP_JetpackSlot_C_IsJetpackEnabled");
static_assert(offsetof(WBP_JetpackSlot_C_IsJetpackEnabled, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000000, "Member 'WBP_JetpackSlot_C_IsJetpackEnabled::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_IsJetpackEnabled, K2Node_DynamicCast_AsGz_Player_Character) == 0x000008, "Member 'WBP_JetpackSlot_C_IsJetpackEnabled::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_IsJetpackEnabled, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_JetpackSlot_C_IsJetpackEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_IsJetpackEnabled, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'WBP_JetpackSlot_C_IsJetpackEnabled::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_IsJetpackEnabled, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000020, "Member 'WBP_JetpackSlot_C_IsJetpackEnabled::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_IsJetpackEnabled, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000024, "Member 'WBP_JetpackSlot_C_IsJetpackEnabled::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_IsJetpackEnabled, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_JetpackSlot_C_IsJetpackEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_IsJetpackEnabled, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000029, "Member 'WBP_JetpackSlot_C_IsJetpackEnabled::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_IsJetpackEnabled, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'WBP_JetpackSlot_C_IsJetpackEnabled::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.OnAttributeChanged_A3668B97403E351343CA609917C1CE33
// 0x0040 (0x0040 - 0x0000)
struct WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33) == 0x000008, "Wrong alignment on WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33");
static_assert(sizeof(WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33) == 0x000040, "Wrong size on WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33");
static_assert(offsetof(WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33, Attribute) == 0x000000, "Member 'WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33, NewValue) == 0x000038, "Member 'WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33, OldValue) == 0x00003C, "Member 'WBP_JetpackSlot_C_OnAttributeChanged_A3668B97403E351343CA609917C1CE33::OldValue' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.OnHovered_Jetpack__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_JetpackSlot_C_OnHovered_Jetpack__DelegateSignature final
{
public:
	bool                                          ToShow;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JetpackSlot_C_OnHovered_Jetpack__DelegateSignature) == 0x000001, "Wrong alignment on WBP_JetpackSlot_C_OnHovered_Jetpack__DelegateSignature");
static_assert(sizeof(WBP_JetpackSlot_C_OnHovered_Jetpack__DelegateSignature) == 0x000001, "Wrong size on WBP_JetpackSlot_C_OnHovered_Jetpack__DelegateSignature");
static_assert(offsetof(WBP_JetpackSlot_C_OnHovered_Jetpack__DelegateSignature, ToShow) == 0x000000, "Member 'WBP_JetpackSlot_C_OnHovered_Jetpack__DelegateSignature::ToShow' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.OnJetpackStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_JetpackSlot_C_OnJetpackStateChanged__DelegateSignature final
{
public:
	bool                                          StateBroken;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JetpackSlot_C_OnJetpackStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_JetpackSlot_C_OnJetpackStateChanged__DelegateSignature");
static_assert(sizeof(WBP_JetpackSlot_C_OnJetpackStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_JetpackSlot_C_OnJetpackStateChanged__DelegateSignature");
static_assert(offsetof(WBP_JetpackSlot_C_OnJetpackStateChanged__DelegateSignature, StateBroken) == 0x000000, "Member 'WBP_JetpackSlot_C_OnJetpackStateChanged__DelegateSignature::StateBroken' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_JetpackSlot_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_JetpackSlot_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_JetpackSlot_C_OnMouseEnter");
static_assert(sizeof(WBP_JetpackSlot_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_JetpackSlot_C_OnMouseEnter");
static_assert(offsetof(WBP_JetpackSlot_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_JetpackSlot_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_JetpackSlot_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_JetpackSlot_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_JetpackSlot_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_JetpackSlot_C_OnMouseLeave");
static_assert(sizeof(WBP_JetpackSlot_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_JetpackSlot_C_OnMouseLeave");
static_assert(offsetof(WBP_JetpackSlot_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_JetpackSlot_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.OnPocketChanged_BP
// 0x0010 (0x0010 - 0x0000)
struct WBP_JetpackSlot_C_OnPocketChanged_BP final
{
public:
	struct FGzInvItem                             NewItem;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_JetpackSlot_C_OnPocketChanged_BP) == 0x000008, "Wrong alignment on WBP_JetpackSlot_C_OnPocketChanged_BP");
static_assert(sizeof(WBP_JetpackSlot_C_OnPocketChanged_BP) == 0x000010, "Wrong size on WBP_JetpackSlot_C_OnPocketChanged_BP");
static_assert(offsetof(WBP_JetpackSlot_C_OnPocketChanged_BP, NewItem) == 0x000000, "Member 'WBP_JetpackSlot_C_OnPocketChanged_BP::NewItem' has a wrong offset!");

// Function WBP_JetpackSlot.WBP_JetpackSlot_C.UpdateJetpackState
// 0x0008 (0x0008 - 0x0000)
struct WBP_JetpackSlot_C_UpdateJetpackState final
{
public:
	bool                                          Param_IsJetpackBroken;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B3B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InOpacity;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JetpackSlot_C_UpdateJetpackState) == 0x000004, "Wrong alignment on WBP_JetpackSlot_C_UpdateJetpackState");
static_assert(sizeof(WBP_JetpackSlot_C_UpdateJetpackState) == 0x000008, "Wrong size on WBP_JetpackSlot_C_UpdateJetpackState");
static_assert(offsetof(WBP_JetpackSlot_C_UpdateJetpackState, Param_IsJetpackBroken) == 0x000000, "Member 'WBP_JetpackSlot_C_UpdateJetpackState::Param_IsJetpackBroken' has a wrong offset!");
static_assert(offsetof(WBP_JetpackSlot_C_UpdateJetpackState, InOpacity) == 0x000004, "Member 'WBP_JetpackSlot_C_UpdateJetpackState::InOpacity' has a wrong offset!");

}

