#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_MicroMissile_LocksContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Crosshair_MicroMissile_LocksContainer.WBP_Crosshair_MicroMissile_LocksContainer_C
// 0x0078 (0x0358 - 0x02E0)
class UWBP_Crosshair_MicroMissile_LocksContainer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         LocksContainer;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         PreviewWidgetsCount;                               // 0x02F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                ChildsPadding;                                     // 0x02F4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B1[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UGzTargetableComponent*, int32>    BookedLocks;                                       // 0x0308(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_WBP_Crosshair_MicroMissile_LocksContainer(int32 EntryPoint);
	void Initialize(int32 InMaxLocksCount, double TimeToLockOn, double LockOnDuration);
	void NotifyLockingStatusChanged(struct FGzMicroMissiles_LockOnTarget& TargetData);
	void NotifyLockInterrupted(struct FGzMicroMissiles_LockOnTarget& TargetData);
	void NotifyLockSucceed(struct FGzMicroMissiles_LockOnTarget& TargetData);
	void NotifyTargetingStopped();
	void PreConstruct(bool IsDesignTime);
	void ResetContainer();
	void SpawnEntry(double InTimeToLockOn, double InLockOnDuration, class UWBP_Crosshair_MicroMissile_Lock_C** Entry);
	void StartLockOnTarget(struct FGzMicroMissiles_LockOnTarget& TargetData);

	void FindFreeIndex(int32* OutIndex) const;
	void GetEntry(class UGzTargetableComponent* TargetableComp, class UWBP_Crosshair_MicroMissile_Lock_C** OutEntry) const;
	void IsInitialized(bool* bIsInitialized) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Crosshair_MicroMissile_LocksContainer_C">();
	}
	static class UWBP_Crosshair_MicroMissile_LocksContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Crosshair_MicroMissile_LocksContainer_C>();
	}
};
static_assert(alignof(UWBP_Crosshair_MicroMissile_LocksContainer_C) == 0x000008, "Wrong alignment on UWBP_Crosshair_MicroMissile_LocksContainer_C");
static_assert(sizeof(UWBP_Crosshair_MicroMissile_LocksContainer_C) == 0x000358, "Wrong size on UWBP_Crosshair_MicroMissile_LocksContainer_C");
static_assert(offsetof(UWBP_Crosshair_MicroMissile_LocksContainer_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Crosshair_MicroMissile_LocksContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_MicroMissile_LocksContainer_C, LocksContainer) == 0x0002E8, "Member 'UWBP_Crosshair_MicroMissile_LocksContainer_C::LocksContainer' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_MicroMissile_LocksContainer_C, PreviewWidgetsCount) == 0x0002F0, "Member 'UWBP_Crosshair_MicroMissile_LocksContainer_C::PreviewWidgetsCount' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_MicroMissile_LocksContainer_C, ChildsPadding) == 0x0002F4, "Member 'UWBP_Crosshair_MicroMissile_LocksContainer_C::ChildsPadding' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_MicroMissile_LocksContainer_C, BookedLocks) == 0x000308, "Member 'UWBP_Crosshair_MicroMissile_LocksContainer_C::BookedLocks' has a wrong offset!");

}

