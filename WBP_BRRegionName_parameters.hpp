#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BRRegionName

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_BRRegionName.WBP_BRRegionName_C.ExecuteUbergraph_WBP_BRRegionName
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1367[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMission*                             K2Node_CustomEvent_Mission;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InText;                               // 0x0010(0x0010)(ConstParm)
	class UGzWorldZonesSubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzWorldZoneRegionMetadata*             CallFunc_GetMetaDataByClass_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumActorsInWorldZone_ReturnValue;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1368[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1369[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
};
static_assert(alignof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName) == 0x000008, "Wrong alignment on WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName");
static_assert(sizeof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName) == 0x0000B0, "Wrong size on WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, EntryPoint) == 0x000000, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, K2Node_CustomEvent_Mission) == 0x000008, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::K2Node_CustomEvent_Mission' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, K2Node_Event_InText) == 0x000010, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::K2Node_Event_InText' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000020, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, CallFunc_GetMetaDataByClass_ReturnValue) == 0x000028, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::CallFunc_GetMetaDataByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, CallFunc_GetNumActorsInWorldZone_ReturnValue) == 0x000030, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::CallFunc_GetNumActorsInWorldZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000098, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'WBP_BRRegionName_C_ExecuteUbergraph_WBP_BRRegionName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_BRRegionName.WBP_BRRegionName_C.OnTextSet
// 0x0010 (0x0010 - 0x0000)
struct WBP_BRRegionName_C_OnTextSet final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_BRRegionName_C_OnTextSet) == 0x000008, "Wrong alignment on WBP_BRRegionName_C_OnTextSet");
static_assert(sizeof(WBP_BRRegionName_C_OnTextSet) == 0x000010, "Wrong size on WBP_BRRegionName_C_OnTextSet");
static_assert(offsetof(WBP_BRRegionName_C_OnTextSet, InText) == 0x000000, "Member 'WBP_BRRegionName_C_OnTextSet::InText' has a wrong offset!");

// Function WBP_BRRegionName.WBP_BRRegionName_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_BRRegionName_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BRRegionName_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_BRRegionName_C_PreConstruct");
static_assert(sizeof(WBP_BRRegionName_C_PreConstruct) == 0x000001, "Wrong size on WBP_BRRegionName_C_PreConstruct");
static_assert(offsetof(WBP_BRRegionName_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_BRRegionName_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_BRRegionName.WBP_BRRegionName_C.UpdateCounter
// 0x0008 (0x0008 - 0x0000)
struct WBP_BRRegionName_C_UpdateCounter final
{
public:
	class AGzMission*                             Mission;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BRRegionName_C_UpdateCounter) == 0x000008, "Wrong alignment on WBP_BRRegionName_C_UpdateCounter");
static_assert(sizeof(WBP_BRRegionName_C_UpdateCounter) == 0x000008, "Wrong size on WBP_BRRegionName_C_UpdateCounter");
static_assert(offsetof(WBP_BRRegionName_C_UpdateCounter, Mission) == 0x000000, "Member 'WBP_BRRegionName_C_UpdateCounter::Mission' has a wrong offset!");

}

