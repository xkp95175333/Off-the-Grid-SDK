#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_L_Lobby_Podium

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_LED_Diode_03_structs.hpp"
#include "S_Light_Fitting_Mesh_Settings_structs.hpp"
#include "S_PodiumBulb_01_Settings_structs.hpp"
#include "S_LED_Diode_01_structs.hpp"
#include "S_Bulb_Light_01_Settings_structs.hpp"
#include "S_PodiumBulb_02_Settings_structs.hpp"
#include "S_Bulb_Light_02_Settings_structs.hpp"
#include "S_Bulb_Light_01_Emissive_Settings_structs.hpp"
#include "S_Main_Throw_Light_01_Settings_structs.hpp"
#include "S_LED_Diode_02_structs.hpp"
#include "S_Bulb_Light_02_Emissive_Settings_structs.hpp"
#include "S_PodiumBulb_03_Settings_structs.hpp"
#include "S_Bulb_Light_03_Emissive_Settings_structs.hpp"
#include "S_Bulb_Light_03_Settings_structs.hpp"
#include "S_Light_Presets_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_L_Lobby_Podium.BP_L_Lobby_Podium_C
// 0x0C50 (0x0EF0 - 0x02A0)
class ABP_L_Lobby_Podium_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       Spline;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F28[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Light_Fitting_Mesh_Settings         Light_Fitting_Mesh_Settings;                       // 0x02C0(0x0120)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_PodiumBulb_01_Settings              Podium_Bulb_01_Settings;                           // 0x03E0(0x00C0)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_LED_Diode_01                        LED_Diode_01_Settings;                             // 0x04A0(0x0070)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_01_Emissive_Settings     Bulb_Light_01_Emissive_Settings;                   // 0x0510(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_01_Settings              Bulb_Light_01_Settings;                            // 0x0530(0x0140)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_Main_Throw_Light_01_Settings        Main_Throw_Light_01_Settings;                      // 0x0670(0x01E0)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_PodiumBulb_02_Settings              PodiumBulb_02_Settings;                            // 0x0850(0x00C0)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_LED_Diode_02                        LED_Diode_02_Settings;                             // 0x0910(0x0070)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_02_Emissive_Settings     Bulb_Light_02_Emissive_Settings;                   // 0x0980(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_02_Settings              Bulb_Light_02_Settings;                            // 0x09A0(0x0140)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_PodiumBulb_03_Settings              Podium_Bulb_03_Settings;                           // 0x0AE0(0x00C0)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_LED_Diode_03                        LED_Diode_03_Settings;                             // 0x0BA0(0x0070)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_03_Emissive_Settings     Bulb_Light_03_Emissive_Settings;                   // 0x0C10(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_03_Settings              Bulb_Light_03_Settings;                            // 0x0C30(0x0140)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_Light_Presets                       Light_Presets;                                     // 0x0D70(0x0003)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F29[0x5];                                     // 0x0D73(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Bulb01_Final_Lumen_Int;                            // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb01_Final_Emissive_Int;                         // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb02_Final_Lumen_Int;                            // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb02_Final_Emissive_Int;                         // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb03_Final_Lumen_Int;                            // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb03_Final_Emissive_Int;                         // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bulb01_Final_Colour;                               // 0x0DA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bulb02_Final_Colour;                               // 0x0DC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bulb03_Final_Colour;                               // 0x0DD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb01_Mesh_Ref;                                   // 0x0DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb02_Mesh_Ref;                                   // 0x0DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb03_Mesh_Ref;                                   // 0x0E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LockedProp;                                        // 0x0E08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LockedAnchor;                                      // 0x0E20(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreProp;                                           // 0x0E38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreAnchor;                                         // 0x0E50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        PrevSplinePoint1;                                  // 0x0E68(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        PrevSplinePoint0;                                  // 0x0E78(0x0010)(Edit, BlueprintVisible)
	struct FVector                                SplineLocation;                                    // 0x0E88(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb01_On_Intensity;                               // 0x0EA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb02_On_Intensity;                               // 0x0EA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb03_On_Intensity;                               // 0x0EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULightComponent*>                Bulb_Light_01_Ref;                                 // 0x0EB8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class ULightComponent*>                Bulb_Light_02_Ref;                                 // 0x0EC8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class ULightComponent*>                Bulb_Light_03_Ref;                                 // 0x0ED8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsMainPlatform;                                    // 0x0EE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddSuspensionCable();
	void CalculateSuspensionDefaultPos();
	void ExecuteUbergraph_BP_L_Lobby_Podium(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Set_Lights_To_Off();
	void Set_Lights_To_On();
	void Store_On_Values();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_L_Lobby_Podium_C">();
	}
	static class ABP_L_Lobby_Podium_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_L_Lobby_Podium_C>();
	}
};
static_assert(alignof(ABP_L_Lobby_Podium_C) == 0x000010, "Wrong alignment on ABP_L_Lobby_Podium_C");
static_assert(sizeof(ABP_L_Lobby_Podium_C) == 0x000EF0, "Wrong size on ABP_L_Lobby_Podium_C");
static_assert(offsetof(ABP_L_Lobby_Podium_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_L_Lobby_Podium_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Spline) == 0x0002A8, "Member 'ABP_L_Lobby_Podium_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_L_Lobby_Podium_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Light_Fitting_Mesh_Settings) == 0x0002C0, "Member 'ABP_L_Lobby_Podium_C::Light_Fitting_Mesh_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Podium_Bulb_01_Settings) == 0x0003E0, "Member 'ABP_L_Lobby_Podium_C::Podium_Bulb_01_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, LED_Diode_01_Settings) == 0x0004A0, "Member 'ABP_L_Lobby_Podium_C::LED_Diode_01_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb_Light_01_Emissive_Settings) == 0x000510, "Member 'ABP_L_Lobby_Podium_C::Bulb_Light_01_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb_Light_01_Settings) == 0x000530, "Member 'ABP_L_Lobby_Podium_C::Bulb_Light_01_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Main_Throw_Light_01_Settings) == 0x000670, "Member 'ABP_L_Lobby_Podium_C::Main_Throw_Light_01_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, PodiumBulb_02_Settings) == 0x000850, "Member 'ABP_L_Lobby_Podium_C::PodiumBulb_02_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, LED_Diode_02_Settings) == 0x000910, "Member 'ABP_L_Lobby_Podium_C::LED_Diode_02_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb_Light_02_Emissive_Settings) == 0x000980, "Member 'ABP_L_Lobby_Podium_C::Bulb_Light_02_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb_Light_02_Settings) == 0x0009A0, "Member 'ABP_L_Lobby_Podium_C::Bulb_Light_02_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Podium_Bulb_03_Settings) == 0x000AE0, "Member 'ABP_L_Lobby_Podium_C::Podium_Bulb_03_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, LED_Diode_03_Settings) == 0x000BA0, "Member 'ABP_L_Lobby_Podium_C::LED_Diode_03_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb_Light_03_Emissive_Settings) == 0x000C10, "Member 'ABP_L_Lobby_Podium_C::Bulb_Light_03_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb_Light_03_Settings) == 0x000C30, "Member 'ABP_L_Lobby_Podium_C::Bulb_Light_03_Settings' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Light_Presets) == 0x000D70, "Member 'ABP_L_Lobby_Podium_C::Light_Presets' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb01_Final_Lumen_Int) == 0x000D78, "Member 'ABP_L_Lobby_Podium_C::Bulb01_Final_Lumen_Int' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb01_Final_Emissive_Int) == 0x000D80, "Member 'ABP_L_Lobby_Podium_C::Bulb01_Final_Emissive_Int' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb02_Final_Lumen_Int) == 0x000D88, "Member 'ABP_L_Lobby_Podium_C::Bulb02_Final_Lumen_Int' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb02_Final_Emissive_Int) == 0x000D90, "Member 'ABP_L_Lobby_Podium_C::Bulb02_Final_Emissive_Int' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb03_Final_Lumen_Int) == 0x000D98, "Member 'ABP_L_Lobby_Podium_C::Bulb03_Final_Lumen_Int' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb03_Final_Emissive_Int) == 0x000DA0, "Member 'ABP_L_Lobby_Podium_C::Bulb03_Final_Emissive_Int' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb01_Final_Colour) == 0x000DA8, "Member 'ABP_L_Lobby_Podium_C::Bulb01_Final_Colour' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb02_Final_Colour) == 0x000DC0, "Member 'ABP_L_Lobby_Podium_C::Bulb02_Final_Colour' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb03_Final_Colour) == 0x000DD8, "Member 'ABP_L_Lobby_Podium_C::Bulb03_Final_Colour' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb01_Mesh_Ref) == 0x000DF0, "Member 'ABP_L_Lobby_Podium_C::Bulb01_Mesh_Ref' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb02_Mesh_Ref) == 0x000DF8, "Member 'ABP_L_Lobby_Podium_C::Bulb02_Mesh_Ref' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb03_Mesh_Ref) == 0x000E00, "Member 'ABP_L_Lobby_Podium_C::Bulb03_Mesh_Ref' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, LockedProp) == 0x000E08, "Member 'ABP_L_Lobby_Podium_C::LockedProp' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, LockedAnchor) == 0x000E20, "Member 'ABP_L_Lobby_Podium_C::LockedAnchor' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, PreProp) == 0x000E38, "Member 'ABP_L_Lobby_Podium_C::PreProp' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, PreAnchor) == 0x000E50, "Member 'ABP_L_Lobby_Podium_C::PreAnchor' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, PrevSplinePoint1) == 0x000E68, "Member 'ABP_L_Lobby_Podium_C::PrevSplinePoint1' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, PrevSplinePoint0) == 0x000E78, "Member 'ABP_L_Lobby_Podium_C::PrevSplinePoint0' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, SplineLocation) == 0x000E88, "Member 'ABP_L_Lobby_Podium_C::SplineLocation' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb01_On_Intensity) == 0x000EA0, "Member 'ABP_L_Lobby_Podium_C::Bulb01_On_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb02_On_Intensity) == 0x000EA8, "Member 'ABP_L_Lobby_Podium_C::Bulb02_On_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb03_On_Intensity) == 0x000EB0, "Member 'ABP_L_Lobby_Podium_C::Bulb03_On_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb_Light_01_Ref) == 0x000EB8, "Member 'ABP_L_Lobby_Podium_C::Bulb_Light_01_Ref' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb_Light_02_Ref) == 0x000EC8, "Member 'ABP_L_Lobby_Podium_C::Bulb_Light_02_Ref' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, Bulb_Light_03_Ref) == 0x000ED8, "Member 'ABP_L_Lobby_Podium_C::Bulb_Light_03_Ref' has a wrong offset!");
static_assert(offsetof(ABP_L_Lobby_Podium_C, IsMainPlatform) == 0x000EE8, "Member 'ABP_L_Lobby_Podium_C::IsMainPlatform' has a wrong offset!");

}

