#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TTR_Cash_Collected

#include "Basic.hpp"

#include "TTR_Cash_Collected_classes.hpp"
#include "TTR_Cash_Collected_parameters.hpp"


namespace SDK
{

// Function TTR_Cash_Collected.TTR_Cash_Collected_C.ExecuteUbergraph_TTR_Cash_Collected
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTTR_Cash_Collected_C::ExecuteUbergraph_TTR_Cash_Collected(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_Cash_Collected_C", "ExecuteUbergraph_TTR_Cash_Collected");

	Params::TTR_Cash_Collected_C_ExecuteUbergraph_TTR_Cash_Collected Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TTR_Cash_Collected.TTR_Cash_Collected_C.IsMoneyChangeEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzInvItem                       Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EGzInvChangeEvent                       ChangeEvent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UTTR_Cash_Collected_C::IsMoneyChangeEvent(const struct FGzInvItem& Item, EGzInvChangeEvent ChangeEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_Cash_Collected_C", "IsMoneyChangeEvent");

	Params::TTR_Cash_Collected_C_IsMoneyChangeEvent Parms{};

	Parms.Item = std::move(Item);
	Parms.ChangeEvent = ChangeEvent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TTR_Cash_Collected.TTR_Cash_Collected_C.OnCurrencyAdded
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzInvItem                       ItemDelta                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EGzInvChangeEvent                       Event                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTTR_Cash_Collected_C::OnCurrencyAdded(const struct FGzInvItem& ItemDelta, EGzInvChangeEvent Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_Cash_Collected_C", "OnCurrencyAdded");

	Params::TTR_Cash_Collected_C_OnCurrencyAdded Parms{};

	Parms.ItemDelta = std::move(ItemDelta);
	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TTR_Cash_Collected.TTR_Cash_Collected_C.OnTrackingStarted
// (Event, Protected, BlueprintEvent)

void UTTR_Cash_Collected_C::OnTrackingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_Cash_Collected_C", "OnTrackingStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TTR_Cash_Collected.TTR_Cash_Collected_C.SubscribeToInventory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            NewPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            OldPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UTTR_Cash_Collected_C::SubscribeToInventory(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_Cash_Collected_C", "SubscribeToInventory");

	Params::TTR_Cash_Collected_C_SubscribeToInventory Parms{};

	Parms.Player = Player;
	Parms.NewPawn = NewPawn;
	Parms.OldPawn = OldPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TTR_Cash_Collected.TTR_Cash_Collected_C.SubscribeToPawnChange
// (Public, BlueprintCallable, BlueprintEvent)

void UTTR_Cash_Collected_C::SubscribeToPawnChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_Cash_Collected_C", "SubscribeToPawnChange");

	UObject::ProcessEvent(Func, nullptr);
}

}

