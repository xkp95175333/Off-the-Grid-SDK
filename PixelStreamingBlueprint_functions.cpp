#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PixelStreamingBlueprint

#include "Basic.hpp"

#include "PixelStreamingBlueprint_classes.hpp"
#include "PixelStreamingBlueprint_parameters.hpp"


namespace SDK
{

// Function PixelStreamingBlueprint.PixelStreamingStreamerComponent.ForceKeyFrame
// (Final, Native, Public, BlueprintCallable)

void UPixelStreamingStreamerComponent::ForceKeyFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PixelStreamingStreamerComponent", "ForceKeyFrame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PixelStreamingBlueprint.PixelStreamingStreamerComponent.FreezeStream
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPixelStreamingStreamerComponent::FreezeStream(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PixelStreamingStreamerComponent", "FreezeStream");

	Params::PixelStreamingStreamerComponent_FreezeStream Parms{};

	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PixelStreamingBlueprint.PixelStreamingStreamerComponent.GetId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPixelStreamingStreamerComponent::GetId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PixelStreamingStreamerComponent", "GetId");

	Params::PixelStreamingStreamerComponent_GetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PixelStreamingBlueprint.PixelStreamingStreamerComponent.IsSignallingConnected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPixelStreamingStreamerComponent::IsSignallingConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PixelStreamingStreamerComponent", "IsSignallingConnected");

	Params::PixelStreamingStreamerComponent_IsSignallingConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PixelStreamingBlueprint.PixelStreamingStreamerComponent.IsStreaming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPixelStreamingStreamerComponent::IsStreaming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PixelStreamingStreamerComponent", "IsStreaming");

	Params::PixelStreamingStreamerComponent_IsStreaming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PixelStreamingBlueprint.PixelStreamingStreamerComponent.SendPlayerMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Descriptor                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPixelStreamingStreamerComponent::SendPlayerMessage(uint8 Type, const class FString& Descriptor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PixelStreamingStreamerComponent", "SendPlayerMessage");

	Params::PixelStreamingStreamerComponent_SendPlayerMessage Parms{};

	Parms.Type = Type;
	Parms.Descriptor = std::move(Descriptor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PixelStreamingBlueprint.PixelStreamingStreamerComponent.StartStreaming
// (Final, Native, Public, BlueprintCallable)

void UPixelStreamingStreamerComponent::StartStreaming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PixelStreamingStreamerComponent", "StartStreaming");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PixelStreamingBlueprint.PixelStreamingStreamerComponent.StopStreaming
// (Final, Native, Public, BlueprintCallable)

void UPixelStreamingStreamerComponent::StopStreaming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PixelStreamingStreamerComponent", "StopStreaming");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PixelStreamingBlueprint.PixelStreamingStreamerComponent.UnfreezeStream
// (Final, Native, Public, BlueprintCallable)

void UPixelStreamingStreamerComponent::UnfreezeStream()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PixelStreamingStreamerComponent", "UnfreezeStream");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

