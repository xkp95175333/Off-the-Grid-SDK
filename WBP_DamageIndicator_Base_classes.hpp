#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DamageIndicator_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DamageIndicator_Base.WBP_DamageIndicator_Base_C
// 0x0088 (0x03C0 - 0x0338)
class UWBP_DamageIndicator_Base_C : public UGzDamageIndicator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FadeTimer;                                         // 0x0348(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToFade;                                        // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFading;                                           // 0x0354(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D54[0x3];                                     // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DamageColor_Flyby;                                 // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DamageColorDefault;                                // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DamageColorCrit;                                   // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRotate;                                      // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D55[0x7];                                     // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzDamageDirectionData                 MyDamageData;                                      // 0x0390(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void CheckForRepeat(bool* ShouldRepeat);
	void ExecuteUbergraph_WBP_DamageIndicator_Base(int32 EntryPoint);
	void Finished_47B7304F4EC10CA858D1B19F1F0E38FB();
	void GetFadeAnimation(class UWidgetAnimation** FadeAnimation);
	void OnDirectionAngleChanged(float NewDirectionAngle);
	void OnFadeEnd();
	void OnInit();
	void OnRepeat();
	void OnStartFading();
	void ResetAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DamageIndicator_Base_C">();
	}
	static class UWBP_DamageIndicator_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DamageIndicator_Base_C>();
	}
};
static_assert(alignof(UWBP_DamageIndicator_Base_C) == 0x000008, "Wrong alignment on UWBP_DamageIndicator_Base_C");
static_assert(sizeof(UWBP_DamageIndicator_Base_C) == 0x0003C0, "Wrong size on UWBP_DamageIndicator_Base_C");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, UberGraphFrame) == 0x000338, "Member 'UWBP_DamageIndicator_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, FadeOut) == 0x000340, "Member 'UWBP_DamageIndicator_Base_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, FadeTimer) == 0x000348, "Member 'UWBP_DamageIndicator_Base_C::FadeTimer' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, TimeToFade) == 0x000350, "Member 'UWBP_DamageIndicator_Base_C::TimeToFade' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, bFading) == 0x000354, "Member 'UWBP_DamageIndicator_Base_C::bFading' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, DamageColor_Flyby) == 0x000358, "Member 'UWBP_DamageIndicator_Base_C::DamageColor_Flyby' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, DamageColorDefault) == 0x000368, "Member 'UWBP_DamageIndicator_Base_C::DamageColorDefault' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, DamageColorCrit) == 0x000378, "Member 'UWBP_DamageIndicator_Base_C::DamageColorCrit' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, ShouldRotate) == 0x000388, "Member 'UWBP_DamageIndicator_Base_C::ShouldRotate' has a wrong offset!");
static_assert(offsetof(UWBP_DamageIndicator_Base_C, MyDamageData) == 0x000390, "Member 'UWBP_DamageIndicator_Base_C::MyDamageData' has a wrong offset!");

}

