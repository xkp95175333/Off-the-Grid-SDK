#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaLogin

#include "Basic.hpp"


namespace SDK
{

// Enum XsollaLogin.EXsollaFriendsType
// NumValues: 0x0006
enum class EXsollaFriendsType : uint8
{
	Friends                                  = 0,
	Friend_requested                         = 1,
	Friend_requested_by                      = 2,
	blocked                                  = 3,
	blocked_by                               = 4,
	EXsollaFriendsType_MAX                   = 5,
};

// Enum XsollaLogin.EXsollaSessionType
// NumValues: 0x0003
enum class EXsollaSessionType : uint8
{
	All                                      = 0,
	Sso                                      = 1,
	EXsollaSessionType_MAX                   = 2,
};

// Enum XsollaLogin.EXsollaUsersSortCriteria
// NumValues: 0x0003
enum class EXsollaUsersSortCriteria : uint8
{
	by_nickname                              = 0,
	by_update                                = 1,
	by_MAX                                   = 2,
};

// Enum XsollaLogin.EXsollaUsersSortOrder
// NumValues: 0x0003
enum class EXsollaUsersSortOrder : uint8
{
	Asc                                      = 0,
	Desc                                     = 1,
	EXsollaUsersSortOrder_MAX                = 2,
};

// Enum XsollaLogin.EXsollaFriendAction
// NumValues: 0x0008
enum class EXsollaFriendAction : uint8
{
	Friend_request_add                       = 0,
	Friend_request_cancel                    = 1,
	Friend_request_approve                   = 2,
	Friend_request_deny                      = 3,
	Friend_remove                            = 4,
	block                                    = 5,
	Unblock                                  = 6,
	EXsollaFriendAction_MAX                  = 7,
};

// ScriptStruct XsollaLogin.XsollaAuthToken
// 0x0030 (0x0030 - 0x0000)
struct FXsollaAuthToken final
{
public:
	class FString                                 JWT;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ExpiresAt;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsVerified;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2828[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RefreshToken;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaAuthToken) == 0x000008, "Wrong alignment on FXsollaAuthToken");
static_assert(sizeof(FXsollaAuthToken) == 0x000030, "Wrong size on FXsollaAuthToken");
static_assert(offsetof(FXsollaAuthToken, JWT) == 0x000000, "Member 'FXsollaAuthToken::JWT' has a wrong offset!");
static_assert(offsetof(FXsollaAuthToken, ExpiresAt) == 0x000010, "Member 'FXsollaAuthToken::ExpiresAt' has a wrong offset!");
static_assert(offsetof(FXsollaAuthToken, bIsVerified) == 0x000018, "Member 'FXsollaAuthToken::bIsVerified' has a wrong offset!");
static_assert(offsetof(FXsollaAuthToken, RefreshToken) == 0x000020, "Member 'FXsollaAuthToken::RefreshToken' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaLoginData
// 0x0058 (0x0058 - 0x0000)
struct FXsollaLoginData final
{
public:
	struct FXsollaAuthToken                       AuthToken;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                 Username;                                          // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRememberMe;                                       // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEncrypted;                                        // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2829[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FXsollaLoginData) == 0x000008, "Wrong alignment on FXsollaLoginData");
static_assert(sizeof(FXsollaLoginData) == 0x000058, "Wrong size on FXsollaLoginData");
static_assert(offsetof(FXsollaLoginData, AuthToken) == 0x000000, "Member 'FXsollaLoginData::AuthToken' has a wrong offset!");
static_assert(offsetof(FXsollaLoginData, Username) == 0x000030, "Member 'FXsollaLoginData::Username' has a wrong offset!");
static_assert(offsetof(FXsollaLoginData, Password) == 0x000040, "Member 'FXsollaLoginData::Password' has a wrong offset!");
static_assert(offsetof(FXsollaLoginData, bRememberMe) == 0x000050, "Member 'FXsollaLoginData::bRememberMe' has a wrong offset!");
static_assert(offsetof(FXsollaLoginData, bEncrypted) == 0x000051, "Member 'FXsollaLoginData::bEncrypted' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaUserGroup
// 0x0018 (0x0018 - 0x0000)
struct FXsollaUserGroup final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_default;                                        // 0x0004(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_deletable;                                      // 0x0005(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282A[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0008(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaUserGroup) == 0x000008, "Wrong alignment on FXsollaUserGroup");
static_assert(sizeof(FXsollaUserGroup) == 0x000018, "Wrong size on FXsollaUserGroup");
static_assert(offsetof(FXsollaUserGroup, ID) == 0x000000, "Member 'FXsollaUserGroup::ID' has a wrong offset!");
static_assert(offsetof(FXsollaUserGroup, Is_default) == 0x000004, "Member 'FXsollaUserGroup::Is_default' has a wrong offset!");
static_assert(offsetof(FXsollaUserGroup, Is_deletable) == 0x000005, "Member 'FXsollaUserGroup::Is_deletable' has a wrong offset!");
static_assert(offsetof(FXsollaUserGroup, Name) == 0x000008, "Member 'FXsollaUserGroup::Name' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaPublicProfile
// 0x0068 (0x0068 - 0x0000)
struct FXsollaPublicProfile final
{
public:
	class FString                                 Avatar;                                            // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_me;                                             // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Last_login;                                        // 0x0018(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nickname;                                          // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Tag;                                               // 0x0038(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Registered;                                        // 0x0048(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 User_id;                                           // 0x0058(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaPublicProfile) == 0x000008, "Wrong alignment on FXsollaPublicProfile");
static_assert(sizeof(FXsollaPublicProfile) == 0x000068, "Wrong size on FXsollaPublicProfile");
static_assert(offsetof(FXsollaPublicProfile, Avatar) == 0x000000, "Member 'FXsollaPublicProfile::Avatar' has a wrong offset!");
static_assert(offsetof(FXsollaPublicProfile, Is_me) == 0x000010, "Member 'FXsollaPublicProfile::Is_me' has a wrong offset!");
static_assert(offsetof(FXsollaPublicProfile, Last_login) == 0x000018, "Member 'FXsollaPublicProfile::Last_login' has a wrong offset!");
static_assert(offsetof(FXsollaPublicProfile, Nickname) == 0x000028, "Member 'FXsollaPublicProfile::Nickname' has a wrong offset!");
static_assert(offsetof(FXsollaPublicProfile, Tag) == 0x000038, "Member 'FXsollaPublicProfile::Tag' has a wrong offset!");
static_assert(offsetof(FXsollaPublicProfile, Registered) == 0x000048, "Member 'FXsollaPublicProfile::Registered' has a wrong offset!");
static_assert(offsetof(FXsollaPublicProfile, User_id) == 0x000058, "Member 'FXsollaPublicProfile::User_id' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaSocialAuthLink
// 0x0020 (0x0020 - 0x0000)
struct FXsollaSocialAuthLink final
{
public:
	class FString                                 Auth_url;                                          // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Provider;                                          // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaSocialAuthLink) == 0x000008, "Wrong alignment on FXsollaSocialAuthLink");
static_assert(sizeof(FXsollaSocialAuthLink) == 0x000020, "Wrong size on FXsollaSocialAuthLink");
static_assert(offsetof(FXsollaSocialAuthLink, Auth_url) == 0x000000, "Member 'FXsollaSocialAuthLink::Auth_url' has a wrong offset!");
static_assert(offsetof(FXsollaSocialAuthLink, Provider) == 0x000010, "Member 'FXsollaSocialAuthLink::Provider' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaCheckUserAgeResult
// 0x0001 (0x0001 - 0x0000)
struct FXsollaCheckUserAgeResult final
{
public:
	bool                                          Accepted;                                          // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaCheckUserAgeResult) == 0x000001, "Wrong alignment on FXsollaCheckUserAgeResult");
static_assert(sizeof(FXsollaCheckUserAgeResult) == 0x000001, "Wrong size on FXsollaCheckUserAgeResult");
static_assert(offsetof(FXsollaCheckUserAgeResult, Accepted) == 0x000000, "Member 'FXsollaCheckUserAgeResult::Accepted' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaLinkedSocialNetworkData
// 0x0050 (0x0050 - 0x0000)
struct FXsollaLinkedSocialNetworkData final
{
public:
	class FString                                 Full_name;                                         // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nickname;                                          // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Picture;                                           // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Provider;                                          // 0x0030(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Social_id;                                         // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaLinkedSocialNetworkData) == 0x000008, "Wrong alignment on FXsollaLinkedSocialNetworkData");
static_assert(sizeof(FXsollaLinkedSocialNetworkData) == 0x000050, "Wrong size on FXsollaLinkedSocialNetworkData");
static_assert(offsetof(FXsollaLinkedSocialNetworkData, Full_name) == 0x000000, "Member 'FXsollaLinkedSocialNetworkData::Full_name' has a wrong offset!");
static_assert(offsetof(FXsollaLinkedSocialNetworkData, Nickname) == 0x000010, "Member 'FXsollaLinkedSocialNetworkData::Nickname' has a wrong offset!");
static_assert(offsetof(FXsollaLinkedSocialNetworkData, Picture) == 0x000020, "Member 'FXsollaLinkedSocialNetworkData::Picture' has a wrong offset!");
static_assert(offsetof(FXsollaLinkedSocialNetworkData, Provider) == 0x000030, "Member 'FXsollaLinkedSocialNetworkData::Provider' has a wrong offset!");
static_assert(offsetof(FXsollaLinkedSocialNetworkData, Social_id) == 0x000040, "Member 'FXsollaLinkedSocialNetworkData::Social_id' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaSocialFriend
// 0x0060 (0x0060 - 0x0000)
struct FXsollaSocialFriend final
{
public:
	class FString                                 Avatar;                                            // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Tag;                                               // 0x0030(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 User_id;                                           // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Xl_uid;                                            // 0x0050(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaSocialFriend) == 0x000008, "Wrong alignment on FXsollaSocialFriend");
static_assert(sizeof(FXsollaSocialFriend) == 0x000060, "Wrong size on FXsollaSocialFriend");
static_assert(offsetof(FXsollaSocialFriend, Avatar) == 0x000000, "Member 'FXsollaSocialFriend::Avatar' has a wrong offset!");
static_assert(offsetof(FXsollaSocialFriend, Name) == 0x000010, "Member 'FXsollaSocialFriend::Name' has a wrong offset!");
static_assert(offsetof(FXsollaSocialFriend, Platform) == 0x000020, "Member 'FXsollaSocialFriend::Platform' has a wrong offset!");
static_assert(offsetof(FXsollaSocialFriend, Tag) == 0x000030, "Member 'FXsollaSocialFriend::Tag' has a wrong offset!");
static_assert(offsetof(FXsollaSocialFriend, User_id) == 0x000040, "Member 'FXsollaSocialFriend::User_id' has a wrong offset!");
static_assert(offsetof(FXsollaSocialFriend, Xl_uid) == 0x000050, "Member 'FXsollaSocialFriend::Xl_uid' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaSocialFriendsData
// 0x0030 (0x0030 - 0x0000)
struct FXsollaSocialFriendsData final
{
public:
	TArray<struct FXsollaSocialFriend>            Data;                                              // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         Limit;                                             // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Offset;                                            // 0x0014(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x0018(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Total_count;                                       // 0x0028(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282C[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FXsollaSocialFriendsData) == 0x000008, "Wrong alignment on FXsollaSocialFriendsData");
static_assert(sizeof(FXsollaSocialFriendsData) == 0x000030, "Wrong size on FXsollaSocialFriendsData");
static_assert(offsetof(FXsollaSocialFriendsData, Data) == 0x000000, "Member 'FXsollaSocialFriendsData::Data' has a wrong offset!");
static_assert(offsetof(FXsollaSocialFriendsData, Limit) == 0x000010, "Member 'FXsollaSocialFriendsData::Limit' has a wrong offset!");
static_assert(offsetof(FXsollaSocialFriendsData, Offset) == 0x000014, "Member 'FXsollaSocialFriendsData::Offset' has a wrong offset!");
static_assert(offsetof(FXsollaSocialFriendsData, Platform) == 0x000018, "Member 'FXsollaSocialFriendsData::Platform' has a wrong offset!");
static_assert(offsetof(FXsollaSocialFriendsData, Total_count) == 0x000028, "Member 'FXsollaSocialFriendsData::Total_count' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaUserAttribute
// 0x0030 (0x0030 - 0x0000)
struct FXsollaUserAttribute final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Permission;                                        // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaUserAttribute) == 0x000008, "Wrong alignment on FXsollaUserAttribute");
static_assert(sizeof(FXsollaUserAttribute) == 0x000030, "Wrong size on FXsollaUserAttribute");
static_assert(offsetof(FXsollaUserAttribute, Key) == 0x000000, "Member 'FXsollaUserAttribute::Key' has a wrong offset!");
static_assert(offsetof(FXsollaUserAttribute, Permission) == 0x000010, "Member 'FXsollaUserAttribute::Permission' has a wrong offset!");
static_assert(offsetof(FXsollaUserAttribute, Value) == 0x000020, "Member 'FXsollaUserAttribute::Value' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaUserBan
// 0x0030 (0x0030 - 0x0000)
struct FXsollaUserBan final
{
public:
	class FString                                 Date_from;                                         // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Date_to;                                           // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Reason;                                            // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaUserBan) == 0x000008, "Wrong alignment on FXsollaUserBan");
static_assert(sizeof(FXsollaUserBan) == 0x000030, "Wrong size on FXsollaUserBan");
static_assert(offsetof(FXsollaUserBan, Date_from) == 0x000000, "Member 'FXsollaUserBan::Date_from' has a wrong offset!");
static_assert(offsetof(FXsollaUserBan, Date_to) == 0x000010, "Member 'FXsollaUserBan::Date_to' has a wrong offset!");
static_assert(offsetof(FXsollaUserBan, Reason) == 0x000020, "Member 'FXsollaUserBan::Reason' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaUserDetails
// 0x0158 (0x0158 - 0x0000)
struct FXsollaUserDetails final
{
public:
	struct FXsollaUserBan                         ban;                                               // 0x0000(0x0030)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 birthday;                                          // 0x0030(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Connection_information;                            // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Country;                                           // 0x0050(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0060(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 External_id;                                       // 0x0070(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 First_name;                                        // 0x0080(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Gender;                                            // 0x0090(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FXsollaUserGroup>               Groups;                                            // 0x00A0(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 ID;                                                // 0x00B0(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_anonymous;                                      // 0x00C0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282D[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Last_login;                                        // 0x00C8(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Last_name;                                         // 0x00D8(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x00E8(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nickname;                                          // 0x00F8(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Tag;                                               // 0x0108(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Phone;                                             // 0x0118(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Picture;                                           // 0x0128(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Registered;                                        // 0x0138(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Presence;                                          // 0x0148(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaUserDetails) == 0x000008, "Wrong alignment on FXsollaUserDetails");
static_assert(sizeof(FXsollaUserDetails) == 0x000158, "Wrong size on FXsollaUserDetails");
static_assert(offsetof(FXsollaUserDetails, ban) == 0x000000, "Member 'FXsollaUserDetails::ban' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, birthday) == 0x000030, "Member 'FXsollaUserDetails::birthday' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Connection_information) == 0x000040, "Member 'FXsollaUserDetails::Connection_information' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Country) == 0x000050, "Member 'FXsollaUserDetails::Country' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Email) == 0x000060, "Member 'FXsollaUserDetails::Email' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, External_id) == 0x000070, "Member 'FXsollaUserDetails::External_id' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, First_name) == 0x000080, "Member 'FXsollaUserDetails::First_name' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Gender) == 0x000090, "Member 'FXsollaUserDetails::Gender' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Groups) == 0x0000A0, "Member 'FXsollaUserDetails::Groups' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, ID) == 0x0000B0, "Member 'FXsollaUserDetails::ID' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Is_anonymous) == 0x0000C0, "Member 'FXsollaUserDetails::Is_anonymous' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Last_login) == 0x0000C8, "Member 'FXsollaUserDetails::Last_login' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Last_name) == 0x0000D8, "Member 'FXsollaUserDetails::Last_name' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Name) == 0x0000E8, "Member 'FXsollaUserDetails::Name' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Nickname) == 0x0000F8, "Member 'FXsollaUserDetails::Nickname' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Tag) == 0x000108, "Member 'FXsollaUserDetails::Tag' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Phone) == 0x000118, "Member 'FXsollaUserDetails::Phone' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Picture) == 0x000128, "Member 'FXsollaUserDetails::Picture' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Registered) == 0x000138, "Member 'FXsollaUserDetails::Registered' has a wrong offset!");
static_assert(offsetof(FXsollaUserDetails, Presence) == 0x000148, "Member 'FXsollaUserDetails::Presence' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaUserDevice
// 0x0038 (0x0038 - 0x0000)
struct FXsollaUserDevice final
{
public:
	class FString                                 Device;                                            // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ID;                                                // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Last_used_at;                                      // 0x0018(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Type;                                              // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaUserDevice) == 0x000008, "Wrong alignment on FXsollaUserDevice");
static_assert(sizeof(FXsollaUserDevice) == 0x000038, "Wrong size on FXsollaUserDevice");
static_assert(offsetof(FXsollaUserDevice, Device) == 0x000000, "Member 'FXsollaUserDevice::Device' has a wrong offset!");
static_assert(offsetof(FXsollaUserDevice, ID) == 0x000010, "Member 'FXsollaUserDevice::ID' has a wrong offset!");
static_assert(offsetof(FXsollaUserDevice, Last_used_at) == 0x000018, "Member 'FXsollaUserDevice::Last_used_at' has a wrong offset!");
static_assert(offsetof(FXsollaUserDevice, Type) == 0x000028, "Member 'FXsollaUserDevice::Type' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaFriendDetails
// 0x0180 (0x0180 - 0x0000)
struct FXsollaFriendDetails final
{
public:
	class FString                                 Status_incoming;                                   // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Status_outgoing;                                   // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Updated;                                           // 0x0020(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FXsollaUserDetails                     User;                                              // 0x0028(0x0158)(BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaFriendDetails) == 0x000008, "Wrong alignment on FXsollaFriendDetails");
static_assert(sizeof(FXsollaFriendDetails) == 0x000180, "Wrong size on FXsollaFriendDetails");
static_assert(offsetof(FXsollaFriendDetails, Status_incoming) == 0x000000, "Member 'FXsollaFriendDetails::Status_incoming' has a wrong offset!");
static_assert(offsetof(FXsollaFriendDetails, Status_outgoing) == 0x000010, "Member 'FXsollaFriendDetails::Status_outgoing' has a wrong offset!");
static_assert(offsetof(FXsollaFriendDetails, Updated) == 0x000020, "Member 'FXsollaFriendDetails::Updated' has a wrong offset!");
static_assert(offsetof(FXsollaFriendDetails, User) == 0x000028, "Member 'FXsollaFriendDetails::User' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaFriendsData
// 0x0030 (0x0030 - 0x0000)
struct FXsollaFriendsData final
{
public:
	class FString                                 Next_after;                                        // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Next_url;                                          // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FXsollaFriendDetails>           Relationships;                                     // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaFriendsData) == 0x000008, "Wrong alignment on FXsollaFriendsData");
static_assert(sizeof(FXsollaFriendsData) == 0x000030, "Wrong size on FXsollaFriendsData");
static_assert(offsetof(FXsollaFriendsData, Next_after) == 0x000000, "Member 'FXsollaFriendsData::Next_after' has a wrong offset!");
static_assert(offsetof(FXsollaFriendsData, Next_url) == 0x000010, "Member 'FXsollaFriendsData::Next_url' has a wrong offset!");
static_assert(offsetof(FXsollaFriendsData, Relationships) == 0x000020, "Member 'FXsollaFriendsData::Relationships' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaUserSearchResult
// 0x0018 (0x0018 - 0x0000)
struct FXsollaUserSearchResult final
{
public:
	int32                                         Offset;                                            // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Total_count;                                       // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FXsollaPublicProfile>           Users;                                             // 0x0008(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaUserSearchResult) == 0x000008, "Wrong alignment on FXsollaUserSearchResult");
static_assert(sizeof(FXsollaUserSearchResult) == 0x000018, "Wrong size on FXsollaUserSearchResult");
static_assert(offsetof(FXsollaUserSearchResult, Offset) == 0x000000, "Member 'FXsollaUserSearchResult::Offset' has a wrong offset!");
static_assert(offsetof(FXsollaUserSearchResult, Total_count) == 0x000004, "Member 'FXsollaUserSearchResult::Total_count' has a wrong offset!");
static_assert(offsetof(FXsollaUserSearchResult, Users) == 0x000008, "Member 'FXsollaUserSearchResult::Users' has a wrong offset!");

// ScriptStruct XsollaLogin.XsollaProviderToken
// 0x0038 (0x0038 - 0x0000)
struct FXsollaProviderToken final
{
public:
	class FString                                 Access_token;                                      // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Expires_in;                                        // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Refresh_token;                                     // 0x0018(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token_type;                                        // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXsollaProviderToken) == 0x000008, "Wrong alignment on FXsollaProviderToken");
static_assert(sizeof(FXsollaProviderToken) == 0x000038, "Wrong size on FXsollaProviderToken");
static_assert(offsetof(FXsollaProviderToken, Access_token) == 0x000000, "Member 'FXsollaProviderToken::Access_token' has a wrong offset!");
static_assert(offsetof(FXsollaProviderToken, Expires_in) == 0x000010, "Member 'FXsollaProviderToken::Expires_in' has a wrong offset!");
static_assert(offsetof(FXsollaProviderToken, Refresh_token) == 0x000018, "Member 'FXsollaProviderToken::Refresh_token' has a wrong offset!");
static_assert(offsetof(FXsollaProviderToken, Token_type) == 0x000028, "Member 'FXsollaProviderToken::Token_type' has a wrong offset!");

}

