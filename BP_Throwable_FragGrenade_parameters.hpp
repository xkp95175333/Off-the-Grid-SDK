#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Throwable_FragGrenade

#include "Basic.hpp"

#include "G01_structs.hpp"


namespace SDK::Params
{

// Function BP_Throwable_FragGrenade.BP_Throwable_FragGrenade_C.ExecuteUbergraph_BP_Throwable_FragGrenade
// 0x0270 (0x0270 - 0x0000)
struct BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGzDamageableComponent* Receiver, struct FGzMultiHitDamage& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGzDamageableComponent* Receiver, struct FGzSingleHitDamage& Hit)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E52[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzDamageableComponent*                 K2Node_CustomEvent_Receiver_1;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzMultiHitDamage                      K2Node_CustomEvent_Hit_1;                          // 0x0030(0x0048)(ConstParm, ContainsInstancedReference)
	class UGzDamageableComponent*                 K2Node_CustomEvent_Receiver;                       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzSingleHitDamage                     K2Node_CustomEvent_Hit;                            // 0x0080(0x01F0)(ConstParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade) == 0x000008, "Wrong alignment on BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade");
static_assert(sizeof(BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade) == 0x000270, "Wrong size on BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade");
static_assert(offsetof(BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade, EntryPoint) == 0x000000, "Member 'BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade, K2Node_CustomEvent_Receiver_1) == 0x000028, "Member 'BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade::K2Node_CustomEvent_Receiver_1' has a wrong offset!");
static_assert(offsetof(BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade, K2Node_CustomEvent_Hit_1) == 0x000030, "Member 'BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade::K2Node_CustomEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade, K2Node_CustomEvent_Receiver) == 0x000078, "Member 'BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade::K2Node_CustomEvent_Receiver' has a wrong offset!");
static_assert(offsetof(BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade, K2Node_CustomEvent_Hit) == 0x000080, "Member 'BP_Throwable_FragGrenade_C_ExecuteUbergraph_BP_Throwable_FragGrenade::K2Node_CustomEvent_Hit' has a wrong offset!");

// Function BP_Throwable_FragGrenade.BP_Throwable_FragGrenade_C.OnDeath
// 0x0050 (0x0050 - 0x0000)
struct BP_Throwable_FragGrenade_C_OnDeath final
{
public:
	class UGzDamageableComponent*                 Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzMultiHitDamage                      Hit;                                               // 0x0008(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Throwable_FragGrenade_C_OnDeath) == 0x000008, "Wrong alignment on BP_Throwable_FragGrenade_C_OnDeath");
static_assert(sizeof(BP_Throwable_FragGrenade_C_OnDeath) == 0x000050, "Wrong size on BP_Throwable_FragGrenade_C_OnDeath");
static_assert(offsetof(BP_Throwable_FragGrenade_C_OnDeath, Receiver) == 0x000000, "Member 'BP_Throwable_FragGrenade_C_OnDeath::Receiver' has a wrong offset!");
static_assert(offsetof(BP_Throwable_FragGrenade_C_OnDeath, Hit) == 0x000008, "Member 'BP_Throwable_FragGrenade_C_OnDeath::Hit' has a wrong offset!");

// Function BP_Throwable_FragGrenade.BP_Throwable_FragGrenade_C.OnDeath2
// 0x01F8 (0x01F8 - 0x0000)
struct BP_Throwable_FragGrenade_C_OnDeath2 final
{
public:
	class UGzDamageableComponent*                 Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzSingleHitDamage                     Hit;                                               // 0x0008(0x01F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Throwable_FragGrenade_C_OnDeath2) == 0x000008, "Wrong alignment on BP_Throwable_FragGrenade_C_OnDeath2");
static_assert(sizeof(BP_Throwable_FragGrenade_C_OnDeath2) == 0x0001F8, "Wrong size on BP_Throwable_FragGrenade_C_OnDeath2");
static_assert(offsetof(BP_Throwable_FragGrenade_C_OnDeath2, Receiver) == 0x000000, "Member 'BP_Throwable_FragGrenade_C_OnDeath2::Receiver' has a wrong offset!");
static_assert(offsetof(BP_Throwable_FragGrenade_C_OnDeath2, Hit) == 0x000008, "Member 'BP_Throwable_FragGrenade_C_OnDeath2::Hit' has a wrong offset!");

}

