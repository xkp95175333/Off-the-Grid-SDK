#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_Jetpack_VerE

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_classes.hpp"


namespace SDK
{

// RigVMBlueprintGeneratedClass CR_Jetpack_VerE.CR_Jetpack_VerE_C
// 0x0068 (0x0B10 - 0x0AA8)
class UCR_Jetpack_VerE_C final : public UControlRig
{
public:
	float                                         LeaningAdditive;                                   // 0x0AA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         UpDown_Pelvis_Data;                                // 0x0AAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        UpDown_Data;                                       // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AlphaLeaningWeight;                                // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_14C1[0x4];                                     // 0x0ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TurbulenceValue;                                   // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Enable_Turbulence;                                 // 0x0AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Enable_AdditiveLeaning;                            // 0x0AC9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Enable_ProcedureWavy;                              // 0x0ACA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_14C2[0x5];                                     // 0x0ACB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Turbulence;                                        // 0x0AD0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurbulenceMultiplier;                              // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurbulenceStrengthAlpha;                           // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LimbsSwayAdditive;                                 // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LimbsSwayStrengthAlpha;                            // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_ProcedureLimbSway;                          // 0x0B08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_Jetpack_VerE_C">();
	}
	static class UCR_Jetpack_VerE_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_Jetpack_VerE_C>();
	}
};
static_assert(alignof(UCR_Jetpack_VerE_C) == 0x000008, "Wrong alignment on UCR_Jetpack_VerE_C");
static_assert(sizeof(UCR_Jetpack_VerE_C) == 0x000B10, "Wrong size on UCR_Jetpack_VerE_C");
static_assert(offsetof(UCR_Jetpack_VerE_C, LeaningAdditive) == 0x000AA8, "Member 'UCR_Jetpack_VerE_C::LeaningAdditive' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, UpDown_Pelvis_Data) == 0x000AAC, "Member 'UCR_Jetpack_VerE_C::UpDown_Pelvis_Data' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, UpDown_Data) == 0x000AB0, "Member 'UCR_Jetpack_VerE_C::UpDown_Data' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, AlphaLeaningWeight) == 0x000AB8, "Member 'UCR_Jetpack_VerE_C::AlphaLeaningWeight' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, TurbulenceValue) == 0x000AC0, "Member 'UCR_Jetpack_VerE_C::TurbulenceValue' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, Enable_Turbulence) == 0x000AC8, "Member 'UCR_Jetpack_VerE_C::Enable_Turbulence' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, Enable_AdditiveLeaning) == 0x000AC9, "Member 'UCR_Jetpack_VerE_C::Enable_AdditiveLeaning' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, Enable_ProcedureWavy) == 0x000ACA, "Member 'UCR_Jetpack_VerE_C::Enable_ProcedureWavy' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, Turbulence) == 0x000AD0, "Member 'UCR_Jetpack_VerE_C::Turbulence' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, TurbulenceMultiplier) == 0x000AE8, "Member 'UCR_Jetpack_VerE_C::TurbulenceMultiplier' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, TurbulenceStrengthAlpha) == 0x000AF0, "Member 'UCR_Jetpack_VerE_C::TurbulenceStrengthAlpha' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, LimbsSwayAdditive) == 0x000AF8, "Member 'UCR_Jetpack_VerE_C::LimbsSwayAdditive' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, LimbsSwayStrengthAlpha) == 0x000B00, "Member 'UCR_Jetpack_VerE_C::LimbsSwayStrengthAlpha' has a wrong offset!");
static_assert(offsetof(UCR_Jetpack_VerE_C, Enable_ProcedureLimbSway) == 0x000B08, "Member 'UCR_Jetpack_VerE_C::Enable_ProcedureLimbSway' has a wrong offset!");

}

