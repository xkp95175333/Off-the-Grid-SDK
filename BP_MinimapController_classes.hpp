#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MinimapController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MinimapController.BP_MinimapController_C
// 0x0038 (0x0090 - 0x0058)
class UBP_MinimapController_C final : public UGzMapController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0058(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bTrackRotation;                                    // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A66[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DesiredWidth;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMapInitialized;                                   // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A67[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  ObservedPlayer;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PlayerLocation;                                    // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MinimapController(int32 EntryPoint);
	void InitZoom();
	void OnMapReady();
	void OnSettingsApplied();
	void OnTick(float DeltaTime);
	void UpdateMapTransform();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MinimapController_C">();
	}
	static class UBP_MinimapController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MinimapController_C>();
	}
};
static_assert(alignof(UBP_MinimapController_C) == 0x000008, "Wrong alignment on UBP_MinimapController_C");
static_assert(sizeof(UBP_MinimapController_C) == 0x000090, "Wrong size on UBP_MinimapController_C");
static_assert(offsetof(UBP_MinimapController_C, UberGraphFrame) == 0x000058, "Member 'UBP_MinimapController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MinimapController_C, bTrackRotation) == 0x000060, "Member 'UBP_MinimapController_C::bTrackRotation' has a wrong offset!");
static_assert(offsetof(UBP_MinimapController_C, DesiredWidth) == 0x000068, "Member 'UBP_MinimapController_C::DesiredWidth' has a wrong offset!");
static_assert(offsetof(UBP_MinimapController_C, bMapInitialized) == 0x000070, "Member 'UBP_MinimapController_C::bMapInitialized' has a wrong offset!");
static_assert(offsetof(UBP_MinimapController_C, ObservedPlayer) == 0x000078, "Member 'UBP_MinimapController_C::ObservedPlayer' has a wrong offset!");
static_assert(offsetof(UBP_MinimapController_C, PlayerLocation) == 0x000080, "Member 'UBP_MinimapController_C::PlayerLocation' has a wrong offset!");

}

