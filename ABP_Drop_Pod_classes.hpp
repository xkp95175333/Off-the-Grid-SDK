#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Drop_Pod

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Drop_Pod.ABP_Drop_Pod_C
// 0x05A0 (0x0910 - 0x0370)
class UABP_Drop_Pod_C final : public UAnimInstance
{
public:
	uint8                                         Pad_6845[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x03A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x03D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0420(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0448(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0498(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x04C0(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_6;                 // 0x04E8(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0528(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_5;                 // 0x0548(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0588(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x05A8(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x05E8(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x0608(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0648(0x0020)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0668(0x00C8)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x0730(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x0770(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x07B0(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x07D0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0810(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0830(0x00C8)()
	bool                                          IsLanding;                                         // 0x08F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6846[0x7];                                     // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeliveryTransport_DropPod_C*        DropPod;                                           // 0x0900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFlyBack;                                         // 0x0908(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6847[0x3];                                     // 0x0909(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ContainerToOpen;                                   // 0x090C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Drop_Pod_AnimGraphNode_TransitionResult_79CE17A74847E5AA7CD99CAAE142B913();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Drop_Pod_AnimGraphNode_TransitionResult_C98F87F341CA1CFB9AFDB59D4F31392C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Drop_Pod_AnimGraphNode_TransitionResult_DE7BA3C9481AE18F1397329F33A47B81();
	void ExecuteUbergraph_ABP_Drop_Pod(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Drop_Pod_C">();
	}
	static class UABP_Drop_Pod_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Drop_Pod_C>();
	}
};
static_assert(alignof(UABP_Drop_Pod_C) == 0x000010, "Wrong alignment on UABP_Drop_Pod_C");
static_assert(sizeof(UABP_Drop_Pod_C) == 0x000910, "Wrong size on UABP_Drop_Pod_C");
static_assert(offsetof(UABP_Drop_Pod_C, UberGraphFrame) == 0x000370, "Member 'UABP_Drop_Pod_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_Drop_Pod_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_Drop_Pod_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_Drop_Pod_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_TransitionResult_7) == 0x0003A8, "Member 'UABP_Drop_Pod_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_TransitionResult_6) == 0x0003D0, "Member 'UABP_Drop_Pod_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_TransitionResult_5) == 0x0003F8, "Member 'UABP_Drop_Pod_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_TransitionResult_4) == 0x000420, "Member 'UABP_Drop_Pod_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_TransitionResult_3) == 0x000448, "Member 'UABP_Drop_Pod_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_TransitionResult_2) == 0x000470, "Member 'UABP_Drop_Pod_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_TransitionResult_1) == 0x000498, "Member 'UABP_Drop_Pod_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_TransitionResult) == 0x0004C0, "Member 'UABP_Drop_Pod_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_SequenceEvaluator_6) == 0x0004E8, "Member 'UABP_Drop_Pod_C::AnimGraphNode_SequenceEvaluator_6' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_StateResult_5) == 0x000528, "Member 'UABP_Drop_Pod_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_SequenceEvaluator_5) == 0x000548, "Member 'UABP_Drop_Pod_C::AnimGraphNode_SequenceEvaluator_5' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_StateResult_4) == 0x000588, "Member 'UABP_Drop_Pod_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_SequenceEvaluator_4) == 0x0005A8, "Member 'UABP_Drop_Pod_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_StateResult_3) == 0x0005E8, "Member 'UABP_Drop_Pod_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_SequenceEvaluator_3) == 0x000608, "Member 'UABP_Drop_Pod_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_StateResult_2) == 0x000648, "Member 'UABP_Drop_Pod_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_TwoWayBlend) == 0x000668, "Member 'UABP_Drop_Pod_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_SequenceEvaluator_2) == 0x000730, "Member 'UABP_Drop_Pod_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_SequenceEvaluator_1) == 0x000770, "Member 'UABP_Drop_Pod_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_StateResult_1) == 0x0007B0, "Member 'UABP_Drop_Pod_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_SequenceEvaluator) == 0x0007D0, "Member 'UABP_Drop_Pod_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_StateResult) == 0x000810, "Member 'UABP_Drop_Pod_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, AnimGraphNode_StateMachine) == 0x000830, "Member 'UABP_Drop_Pod_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, IsLanding) == 0x0008F8, "Member 'UABP_Drop_Pod_C::IsLanding' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, DropPod) == 0x000900, "Member 'UABP_Drop_Pod_C::DropPod' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, IsFlyBack) == 0x000908, "Member 'UABP_Drop_Pod_C::IsFlyBack' has a wrong offset!");
static_assert(offsetof(UABP_Drop_Pod_C, ContainerToOpen) == 0x00090C, "Member 'UABP_Drop_Pod_C::ContainerToOpen' has a wrong offset!");

}

