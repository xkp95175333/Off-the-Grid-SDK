#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_PatrolPoint

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_NPC_PatrolPoint.BP_NPC_PatrolPoint_C.UserConstructionScript
// 0x0048 (0x0048 - 0x0000)
struct BP_NPC_PatrolPoint_C_UserConstructionScript final
{
public:
	TDelegate<void(class AActor* NextPoint)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* NextPoint)>      K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5142[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* NextPoint)>      K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* NextPoint)>      K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_PatrolPoint_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_NPC_PatrolPoint_C_UserConstructionScript");
static_assert(sizeof(BP_NPC_PatrolPoint_C_UserConstructionScript) == 0x000048, "Wrong size on BP_NPC_PatrolPoint_C_UserConstructionScript");
static_assert(offsetof(BP_NPC_PatrolPoint_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_NPC_PatrolPoint_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPC_PatrolPoint_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_NPC_PatrolPoint_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_PatrolPoint_C_UserConstructionScript, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_NPC_PatrolPoint_C_UserConstructionScript::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_PatrolPoint_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'BP_NPC_PatrolPoint_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_PatrolPoint_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'BP_NPC_PatrolPoint_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_PatrolPoint_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_NPC_PatrolPoint_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPC_PatrolPoint.BP_NPC_PatrolPoint_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_PatrolPoint_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_PatrolPoint_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_NPC_PatrolPoint_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_NPC_PatrolPoint_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_NPC_PatrolPoint_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_NPC_PatrolPoint_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_NPC_PatrolPoint_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_NPC_PatrolPoint.BP_NPC_PatrolPoint_C.ExecuteUbergraph_BP_NPC_PatrolPoint
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_PatrolPoint_C_ExecuteUbergraph_BP_NPC_PatrolPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5143[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_PatrolPoint_C_ExecuteUbergraph_BP_NPC_PatrolPoint) == 0x000008, "Wrong alignment on BP_NPC_PatrolPoint_C_ExecuteUbergraph_BP_NPC_PatrolPoint");
static_assert(sizeof(BP_NPC_PatrolPoint_C_ExecuteUbergraph_BP_NPC_PatrolPoint) == 0x000010, "Wrong size on BP_NPC_PatrolPoint_C_ExecuteUbergraph_BP_NPC_PatrolPoint");
static_assert(offsetof(BP_NPC_PatrolPoint_C_ExecuteUbergraph_BP_NPC_PatrolPoint, EntryPoint) == 0x000000, "Member 'BP_NPC_PatrolPoint_C_ExecuteUbergraph_BP_NPC_PatrolPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_PatrolPoint_C_ExecuteUbergraph_BP_NPC_PatrolPoint, K2Node_Event_OtherActor) == 0x000008, "Member 'BP_NPC_PatrolPoint_C_ExecuteUbergraph_BP_NPC_PatrolPoint::K2Node_Event_OtherActor' has a wrong offset!");

// Function BP_NPC_PatrolPoint.BP_NPC_PatrolPoint_C.Event_PointMoved__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_PatrolPoint_C_Event_PointMoved__DelegateSignature final
{
public:
	class AActor*                                 NextPoint;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_PatrolPoint_C_Event_PointMoved__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_PatrolPoint_C_Event_PointMoved__DelegateSignature");
static_assert(sizeof(BP_NPC_PatrolPoint_C_Event_PointMoved__DelegateSignature) == 0x000008, "Wrong size on BP_NPC_PatrolPoint_C_Event_PointMoved__DelegateSignature");
static_assert(offsetof(BP_NPC_PatrolPoint_C_Event_PointMoved__DelegateSignature, NextPoint) == 0x000000, "Member 'BP_NPC_PatrolPoint_C_Event_PointMoved__DelegateSignature::NextPoint' has a wrong offset!");

}

