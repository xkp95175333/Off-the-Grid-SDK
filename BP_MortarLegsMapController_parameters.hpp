#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MortarLegsMapController

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MortarLegsMapController.BP_MortarLegsMapController_C.AddMapIndicator
// 0x0030 (0x0030 - 0x0000)
struct BP_MortarLegsMapController_C_AddMapIndicator final
{
public:
	struct FVector2D                              WorldPos;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MapMarker_Location_MortarTablet_C* CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MortarLegsMapController_C_AddMapIndicator) == 0x000008, "Wrong alignment on BP_MortarLegsMapController_C_AddMapIndicator");
static_assert(sizeof(BP_MortarLegsMapController_C_AddMapIndicator) == 0x000030, "Wrong size on BP_MortarLegsMapController_C_AddMapIndicator");
static_assert(offsetof(BP_MortarLegsMapController_C_AddMapIndicator, WorldPos) == 0x000000, "Member 'BP_MortarLegsMapController_C_AddMapIndicator::WorldPos' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_AddMapIndicator, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'BP_MortarLegsMapController_C_AddMapIndicator::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_AddMapIndicator, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_MortarLegsMapController_C_AddMapIndicator::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_AddMapIndicator, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'BP_MortarLegsMapController_C_AddMapIndicator::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_AddMapIndicator, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_MortarLegsMapController_C_AddMapIndicator::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_MortarLegsMapController.BP_MortarLegsMapController_C.ClearMapIndicators
// 0x0020 (0x0020 - 0x0000)
struct BP_MortarLegsMapController_C_ClearMapIndicators final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F0C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MortarLegsMapController_C_ClearMapIndicators) == 0x000008, "Wrong alignment on BP_MortarLegsMapController_C_ClearMapIndicators");
static_assert(sizeof(BP_MortarLegsMapController_C_ClearMapIndicators) == 0x000020, "Wrong size on BP_MortarLegsMapController_C_ClearMapIndicators");
static_assert(offsetof(BP_MortarLegsMapController_C_ClearMapIndicators, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MortarLegsMapController_C_ClearMapIndicators::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ClearMapIndicators, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MortarLegsMapController_C_ClearMapIndicators::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ClearMapIndicators, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MortarLegsMapController_C_ClearMapIndicators::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ClearMapIndicators, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_MortarLegsMapController_C_ClearMapIndicators::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ClearMapIndicators, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_MortarLegsMapController_C_ClearMapIndicators::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ClearMapIndicators, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_MortarLegsMapController_C_ClearMapIndicators::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MortarLegsMapController.BP_MortarLegsMapController_C.ExecuteUbergraph_BP_MortarLegsMapController
// 0x0140 (0x0140 - 0x0000)
struct BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MortarLegs_MapScreen_C*            K2Node_DynamicCast_AsWBP_Mortar_Legs_Map_Screen;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F0D[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F0E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F0F[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_ScreenPosition;                       // 0x0100(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_WorldPos;                             // 0x0110(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddTargetLocation_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F10[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_LimitHalfAngle_ImplicitCast;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MinRange_ImplicitCast;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MaxRange_ImplicitCast;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController) == 0x000008, "Wrong alignment on BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController");
static_assert(sizeof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController) == 0x000140, "Wrong size on BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, EntryPoint) == 0x000000, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, Temp_delegate_Variable) == 0x000004, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_PostEvent_ReturnValue) == 0x000014, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_GetOuterObject_ReturnValue) == 0x000018, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, K2Node_DynamicCast_AsWBP_Mortar_Legs_Map_Screen) == 0x000020, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::K2Node_DynamicCast_AsWBP_Mortar_Legs_Map_Screen' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_bBlockingHit) == 0x000029, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_bInitialOverlap) == 0x00002A, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_Time) == 0x00002C, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_Distance) == 0x000030, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_Location) == 0x000038, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_ImpactPoint) == 0x000050, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_Normal) == 0x000068, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_ImpactNormal) == 0x000080, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_PhysMat) == 0x000098, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_HitActor) == 0x0000A0, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_HitComponent) == 0x0000A8, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_HitBoneName) == 0x0000B0, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_BoneName) == 0x0000B8, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_HitItem) == 0x0000C0, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_ElementIndex) == 0x0000C4, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_FaceIndex) == 0x0000C8, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_TraceStart) == 0x0000D0, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_BreakHitResult_TraceEnd) == 0x0000E8, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, K2Node_Event_ScreenPosition) == 0x000100, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::K2Node_Event_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, K2Node_Event_WorldPos) == 0x000110, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::K2Node_Event_WorldPos' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, CallFunc_AddTargetLocation_ReturnValue) == 0x000120, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::CallFunc_AddTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, K2Node_VariableSet_LimitHalfAngle_ImplicitCast) == 0x000128, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::K2Node_VariableSet_LimitHalfAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, K2Node_VariableSet_MinRange_ImplicitCast) == 0x000130, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::K2Node_VariableSet_MinRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController, K2Node_VariableSet_MaxRange_ImplicitCast) == 0x000138, "Member 'BP_MortarLegsMapController_C_ExecuteUbergraph_BP_MortarLegsMapController::K2Node_VariableSet_MaxRange_ImplicitCast' has a wrong offset!");

// Function BP_MortarLegsMapController.BP_MortarLegsMapController_C.OnMapClick
// 0x0020 (0x0020 - 0x0000)
struct BP_MortarLegsMapController_C_OnMapClick final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              WorldPos;                                          // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MortarLegsMapController_C_OnMapClick) == 0x000008, "Wrong alignment on BP_MortarLegsMapController_C_OnMapClick");
static_assert(sizeof(BP_MortarLegsMapController_C_OnMapClick) == 0x000020, "Wrong size on BP_MortarLegsMapController_C_OnMapClick");
static_assert(offsetof(BP_MortarLegsMapController_C_OnMapClick, ScreenPosition) == 0x000000, "Member 'BP_MortarLegsMapController_C_OnMapClick::ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_MortarLegsMapController_C_OnMapClick, WorldPos) == 0x000010, "Member 'BP_MortarLegsMapController_C_OnMapClick::WorldPos' has a wrong offset!");

}

