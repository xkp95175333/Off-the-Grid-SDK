#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AmmoDisplay

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AmmoDisplay.WBP_AmmoDisplay_C
// 0x0020 (0x0300 - 0x02E0)
class UWBP_AmmoDisplay_C final : public UUserWidget
{
public:
	class UImage*                                 AmmoIcon;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_AmmoCount;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_AmmoReserve;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EGzWeaponResourceType                         Resource_Type;                                     // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EmptyData();
	void GetAmmoData(const class APawn* PlayerCharacter, const struct FGzInvPocket& InvPocket, int32* LoadedAmmo, int32* TotalAmmo);
	void Handle_Weapon_Data(class UGzWeaponItemData* WeaponItemData, const struct FGzInvPocket& Pocket);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AmmoDisplay_C">();
	}
	static class UWBP_AmmoDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AmmoDisplay_C>();
	}
};
static_assert(alignof(UWBP_AmmoDisplay_C) == 0x000008, "Wrong alignment on UWBP_AmmoDisplay_C");
static_assert(sizeof(UWBP_AmmoDisplay_C) == 0x000300, "Wrong size on UWBP_AmmoDisplay_C");
static_assert(offsetof(UWBP_AmmoDisplay_C, AmmoIcon) == 0x0002E0, "Member 'UWBP_AmmoDisplay_C::AmmoIcon' has a wrong offset!");
static_assert(offsetof(UWBP_AmmoDisplay_C, Gz_AmmoCount) == 0x0002E8, "Member 'UWBP_AmmoDisplay_C::Gz_AmmoCount' has a wrong offset!");
static_assert(offsetof(UWBP_AmmoDisplay_C, Gz_AmmoReserve) == 0x0002F0, "Member 'UWBP_AmmoDisplay_C::Gz_AmmoReserve' has a wrong offset!");
static_assert(offsetof(UWBP_AmmoDisplay_C, Resource_Type) == 0x0002F8, "Member 'UWBP_AmmoDisplay_C::Resource_Type' has a wrong offset!");

}

