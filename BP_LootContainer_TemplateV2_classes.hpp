#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootContainer_TemplateV2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootContainer_TemplateV2.BP_LootContainer_TemplateV2_C
// 0x0080 (0x0360 - 0x02E0)
class ABP_LootContainer_TemplateV2_C : public AGzContainerLootSpawner
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          DynamicCrateCollision;                             // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PhysicsBodyBoxCollision;                           // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DevLootPlacement;                                  // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzPingableComponent*                   GzPingable;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzAudioHintComponent*                  GzAudioHint;                                       // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       DetectibleSphere;                                  // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           OpenChestAnimMontage;                              // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      ActiveScreenMaterial;                              // 0x0328(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      InActiveScreenMaterial;                            // 0x0330(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGzPingVoiceLineData                   PingVoiceLineData;                                 // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bShouldPlayAudioHint;                              // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E63[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      OpenedScreenMaterial;                              // 0x0350(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EGzDefilerTargetType                          LootBoxDefilerTargetType;                          // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateCollisionResponseForMeshes();
	void UpdateAudioHintSound();
	void SubscribeToStageChanged();
	void SetUnOpenedMaterials();
	void SetOpenedMaterials();
	void SetInActiveMaterials();
	void SetActiveMaterials();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnStageChanged();
	void OnNotifyEnd_3AEEEBC7460A1A911574C3ABB98CD8FB(class FName NotifyName);
	void OnNotifyBegin_3AEEEBC7460A1A911574C3ABB98CD8FB(class FName NotifyName);
	void OnInterrupted_3AEEEBC7460A1A911574C3ABB98CD8FB(class FName NotifyName);
	void OnContainerStateChanged();
	void OnCompleted_3AEEEBC7460A1A911574C3ABB98CD8FB(class FName NotifyName);
	void OnBlendOut_3AEEEBC7460A1A911574C3ABB98CD8FB(class FName NotifyName);
	void InvalidateRepeatableTimer();
	void InitRepeatableTimer();
	void GetOpenChestAnimMontage(class UAnimMontage** OpenMontage);
	void ExecuteUbergraph_BP_LootContainer_TemplateV2(int32 EntryPoint);
	void ChangeMaterial(bool IsInteractable);
	void BndEvt__BP_LootContainer_TemplateV2_SkeletalMesh_K2Node_ComponentBoundEvent_0_ActorComponentActivatedSignature__DelegateSignature(class UActorComponent* Component, bool bReset);

	const struct FGzPingVoiceLineData GetPingVoiceLineData() const;
	TArray<struct FTransform> GetLocalSocketTransforms() const;
	EGzDefilerTargetType GetDefilerTargetType() const;
	void DetermineDefilerType(EGzDefilerTargetType TypeIfNotOpen, EGzDefilerTargetType* Type) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootContainer_TemplateV2_C">();
	}
	static class ABP_LootContainer_TemplateV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LootContainer_TemplateV2_C>();
	}
};
static_assert(alignof(ABP_LootContainer_TemplateV2_C) == 0x000008, "Wrong alignment on ABP_LootContainer_TemplateV2_C");
static_assert(sizeof(ABP_LootContainer_TemplateV2_C) == 0x000360, "Wrong size on ABP_LootContainer_TemplateV2_C");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, UberGraphFrame) == 0x0002E0, "Member 'ABP_LootContainer_TemplateV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, DynamicCrateCollision) == 0x0002E8, "Member 'ABP_LootContainer_TemplateV2_C::DynamicCrateCollision' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, PhysicsBodyBoxCollision) == 0x0002F0, "Member 'ABP_LootContainer_TemplateV2_C::PhysicsBodyBoxCollision' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, SkeletalMesh) == 0x0002F8, "Member 'ABP_LootContainer_TemplateV2_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, DevLootPlacement) == 0x000300, "Member 'ABP_LootContainer_TemplateV2_C::DevLootPlacement' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, GzPingable) == 0x000308, "Member 'ABP_LootContainer_TemplateV2_C::GzPingable' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, GzAudioHint) == 0x000310, "Member 'ABP_LootContainer_TemplateV2_C::GzAudioHint' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, DetectibleSphere) == 0x000318, "Member 'ABP_LootContainer_TemplateV2_C::DetectibleSphere' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, OpenChestAnimMontage) == 0x000320, "Member 'ABP_LootContainer_TemplateV2_C::OpenChestAnimMontage' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, ActiveScreenMaterial) == 0x000328, "Member 'ABP_LootContainer_TemplateV2_C::ActiveScreenMaterial' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, InActiveScreenMaterial) == 0x000330, "Member 'ABP_LootContainer_TemplateV2_C::InActiveScreenMaterial' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, PingVoiceLineData) == 0x000338, "Member 'ABP_LootContainer_TemplateV2_C::PingVoiceLineData' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, bShouldPlayAudioHint) == 0x000348, "Member 'ABP_LootContainer_TemplateV2_C::bShouldPlayAudioHint' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, OpenedScreenMaterial) == 0x000350, "Member 'ABP_LootContainer_TemplateV2_C::OpenedScreenMaterial' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_TemplateV2_C, LootBoxDefilerTargetType) == 0x000358, "Member 'ABP_LootContainer_TemplateV2_C::LootBoxDefilerTargetType' has a wrong offset!");

}

