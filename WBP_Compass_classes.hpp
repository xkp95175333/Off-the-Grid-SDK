#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Compass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Compass.WBP_Compass_C
// 0x0090 (0x03D0 - 0x0340)
class UWBP_Compass_C final : public UGzHUDComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               Compass_SizeBox;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           LookingDegree_Text;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Scale_Image;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CompassMarkerContainer_C*          WBP_CompassMarkerContainer;                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class UGzMarkerComponent*, class UUserWidget*> ActiveWidgets;                                     // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UGzPlayerMarkersHolderComponent*        MarkerHolderComp;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CompassMaterialInstance;                           // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CompassMaterialInstanceDynamic;                    // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Compass(int32 EntryPoint);
	double GetCompassScrollPosition(double A);
	double GetCompassSpacePosition(const struct FVector& ViewDirection, class UGzMarkerComponent* MarkerComp);
	class UCameraComponent* GetViewTargetCamera();
	double GetWidgetPixelToAngleRatio();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_Compass();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Compass_C">();
	}
	static class UWBP_Compass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Compass_C>();
	}
};
static_assert(alignof(UWBP_Compass_C) == 0x000008, "Wrong alignment on UWBP_Compass_C");
static_assert(sizeof(UWBP_Compass_C) == 0x0003D0, "Wrong size on UWBP_Compass_C");
static_assert(offsetof(UWBP_Compass_C, UberGraphFrame) == 0x000340, "Member 'UWBP_Compass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, Compass_SizeBox) == 0x000348, "Member 'UWBP_Compass_C::Compass_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, LookingDegree_Text) == 0x000350, "Member 'UWBP_Compass_C::LookingDegree_Text' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, Scale_Image) == 0x000358, "Member 'UWBP_Compass_C::Scale_Image' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, WBP_CompassMarkerContainer) == 0x000360, "Member 'UWBP_Compass_C::WBP_CompassMarkerContainer' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, ActiveWidgets) == 0x000368, "Member 'UWBP_Compass_C::ActiveWidgets' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, MarkerHolderComp) == 0x0003B8, "Member 'UWBP_Compass_C::MarkerHolderComp' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CompassMaterialInstance) == 0x0003C0, "Member 'UWBP_Compass_C::CompassMaterialInstance' has a wrong offset!");
static_assert(offsetof(UWBP_Compass_C, CompassMaterialInstanceDynamic) == 0x0003C8, "Member 'UWBP_Compass_C::CompassMaterialInstanceDynamic' has a wrong offset!");

}

