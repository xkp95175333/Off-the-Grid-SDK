#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_Cyberlimbs_ChargeIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Crosshair_Cyberlimbs_ChargeIndicator.WBP_Crosshair_Cyberlimbs_ChargeIndicator_C
// 0x0028 (0x0308 - 0x02E0)
class UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ChargeState_Image;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             T_ChargeAvailable;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_ChargeDisabled;                                  // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_ChargeLocked;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_ChargeIndicator(int32 EntryPoint);
	void MakeChargeAvailable();
	void MakeChargeDisabled();
	void MakeChargeLocked();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Crosshair_Cyberlimbs_ChargeIndicator_C">();
	}
	static class UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C>();
	}
};
static_assert(alignof(UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C) == 0x000008, "Wrong alignment on UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C");
static_assert(sizeof(UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C) == 0x000308, "Wrong size on UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C");
static_assert(offsetof(UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C, ChargeState_Image) == 0x0002E8, "Member 'UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C::ChargeState_Image' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C, T_ChargeAvailable) == 0x0002F0, "Member 'UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C::T_ChargeAvailable' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C, T_ChargeDisabled) == 0x0002F8, "Member 'UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C::T_ChargeDisabled' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C, T_ChargeLocked) == 0x000300, "Member 'UWBP_Crosshair_Cyberlimbs_ChargeIndicator_C::T_ChargeLocked' has a wrong offset!");

}

