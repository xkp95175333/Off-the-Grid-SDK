#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaUIBuilder

#include "Basic.hpp"


namespace SDK
{

// Enum XsollaUIBuilder.EWidgetType
// NumValues: 0x0021
enum class EWidgetType : uint8
{
	WidgetType_Default                       = 0,
	WidgetType1                              = 1,
	WidgetType2                              = 2,
	WidgetType3                              = 3,
	WidgetType4                              = 4,
	WidgetType5                              = 5,
	WidgetType6                              = 6,
	WidgetType7                              = 7,
	WidgetType8                              = 8,
	WidgetType9                              = 9,
	WidgetType10                             = 10,
	WidgetType11                             = 11,
	WidgetType12                             = 12,
	WidgetType13                             = 13,
	WidgetType14                             = 14,
	WidgetType15                             = 15,
	WidgetType16                             = 16,
	WidgetType17                             = 17,
	WidgetType18                             = 18,
	WidgetType19                             = 19,
	WidgetType20                             = 20,
	WidgetType21                             = 21,
	WidgetType22                             = 22,
	WidgetType23                             = 23,
	WidgetType24                             = 24,
	WidgetType25                             = 25,
	WidgetType26                             = 26,
	WidgetType27                             = 27,
	WidgetType28                             = 28,
	WidgetType29                             = 29,
	WidgetType30                             = 30,
	WidgetType_Max                           = 31,
	EWidgetType_MAX                          = 32,
};

// Enum XsollaUIBuilder.EColorType
// NumValues: 0x0021
enum class EColorType : uint8
{
	ColorType_Default                        = 0,
	ColorType1                               = 1,
	ColorType2                               = 2,
	ColorType3                               = 3,
	ColorType4                               = 4,
	ColorType5                               = 5,
	ColorType6                               = 6,
	ColorType7                               = 7,
	ColorType8                               = 8,
	ColorType9                               = 9,
	ColorType10                              = 10,
	ColorType11                              = 11,
	ColorType12                              = 12,
	ColorType13                              = 13,
	ColorType14                              = 14,
	ColorType15                              = 15,
	ColorType16                              = 16,
	ColorType17                              = 17,
	ColorType18                              = 18,
	ColorType19                              = 19,
	ColorType20                              = 20,
	ColorType21                              = 21,
	ColorType22                              = 22,
	ColorType23                              = 23,
	ColorType24                              = 24,
	ColorType25                              = 25,
	ColorType26                              = 26,
	ColorType27                              = 27,
	ColorType28                              = 28,
	ColorType29                              = 29,
	ColorType30                              = 30,
	ColorType_Max                            = 31,
	EColorType_MAX                           = 32,
};

// Enum XsollaUIBuilder.EFontType
// NumValues: 0x0021
enum class EFontType : uint8
{
	FontType_Default                         = 0,
	FontType1                                = 1,
	FontType2                                = 2,
	FontType3                                = 3,
	FontType4                                = 4,
	FontType5                                = 5,
	FontType6                                = 6,
	FontType7                                = 7,
	FontType8                                = 8,
	FontType9                                = 9,
	FontType10                               = 10,
	FontType11                               = 11,
	FontType12                               = 12,
	FontType13                               = 13,
	FontType14                               = 14,
	FontType15                               = 15,
	FontType16                               = 16,
	FontType17                               = 17,
	FontType18                               = 18,
	FontType19                               = 19,
	FontType20                               = 20,
	FontType21                               = 21,
	FontType22                               = 22,
	FontType23                               = 23,
	FontType24                               = 24,
	FontType25                               = 25,
	FontType26                               = 26,
	FontType27                               = 27,
	FontType28                               = 28,
	FontType29                               = 29,
	FontType30                               = 30,
	FontType_Max                             = 31,
	EFontType_MAX                            = 32,
};

// Enum XsollaUIBuilder.EBrushThemeType
// NumValues: 0x0041
enum class EBrushThemeType : uint8
{
	BrushType_Default                        = 0,
	BrushType1                               = 1,
	BrushType2                               = 2,
	BrushType3                               = 3,
	BrushType4                               = 4,
	BrushType5                               = 5,
	BrushType6                               = 6,
	BrushType7                               = 7,
	BrushType8                               = 8,
	BrushType9                               = 9,
	BrushType10                              = 10,
	BrushType11                              = 11,
	BrushType12                              = 12,
	BrushType13                              = 13,
	BrushType14                              = 14,
	BrushType15                              = 15,
	BrushType16                              = 16,
	BrushType17                              = 17,
	BrushType18                              = 18,
	BrushType19                              = 19,
	BrushType20                              = 20,
	BrushType21                              = 21,
	BrushType22                              = 22,
	BrushType23                              = 23,
	BrushType24                              = 24,
	BrushType25                              = 25,
	BrushType26                              = 26,
	BrushType27                              = 27,
	BrushType28                              = 28,
	BrushType29                              = 29,
	BrushType30                              = 30,
	BrushType31                              = 31,
	BrushType32                              = 32,
	BrushType33                              = 33,
	BrushType34                              = 34,
	BrushType35                              = 35,
	BrushType36                              = 36,
	BrushType37                              = 37,
	BrushType38                              = 38,
	BrushType39                              = 39,
	BrushType40                              = 40,
	BrushType41                              = 41,
	BrushType42                              = 42,
	BrushType43                              = 43,
	BrushType44                              = 44,
	BrushType45                              = 45,
	BrushType46                              = 46,
	BrushType47                              = 47,
	BrushType48                              = 48,
	BrushType49                              = 49,
	BrushType50                              = 50,
	BrushType51                              = 51,
	BrushType52                              = 52,
	BrushType53                              = 53,
	BrushType54                              = 54,
	BrushType55                              = 55,
	BrushType56                              = 56,
	BrushType57                              = 57,
	BrushType58                              = 58,
	BrushType59                              = 59,
	BrushType60                              = 60,
	BrushType61                              = 61,
	BrushType62                              = 62,
	BrushType_Max                            = 63,
	EBrushThemeType_MAX                      = 64,
};

// ScriptStruct XsollaUIBuilder.EntityTypeName
// 0x000C (0x000C - 0x0000)
struct FEntityTypeName final
{
public:
	int32                                         TypeAsInt;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEntityTypeName) == 0x000004, "Wrong alignment on FEntityTypeName");
static_assert(sizeof(FEntityTypeName) == 0x00000C, "Wrong size on FEntityTypeName");
static_assert(offsetof(FEntityTypeName, TypeAsInt) == 0x000000, "Member 'FEntityTypeName::TypeAsInt' has a wrong offset!");
static_assert(offsetof(FEntityTypeName, Name) == 0x000004, "Member 'FEntityTypeName::Name' has a wrong offset!");

// ScriptStruct XsollaUIBuilder.ThemeParameters
// 0x00F0 (0x00F0 - 0x0000)
struct FThemeParameters final
{
public:
	TMap<class FString, EColorType>               Colors;                                            // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FString, EFontType>                Fonts;                                             // 0x0050(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FString, EBrushThemeType>          Brushes;                                           // 0x00A0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
static_assert(alignof(FThemeParameters) == 0x000008, "Wrong alignment on FThemeParameters");
static_assert(sizeof(FThemeParameters) == 0x0000F0, "Wrong size on FThemeParameters");
static_assert(offsetof(FThemeParameters, Colors) == 0x000000, "Member 'FThemeParameters::Colors' has a wrong offset!");
static_assert(offsetof(FThemeParameters, Fonts) == 0x000050, "Member 'FThemeParameters::Fonts' has a wrong offset!");
static_assert(offsetof(FThemeParameters, Brushes) == 0x0000A0, "Member 'FThemeParameters::Brushes' has a wrong offset!");

}

