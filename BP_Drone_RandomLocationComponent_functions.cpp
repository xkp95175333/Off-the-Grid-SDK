#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Drone_RandomLocationComponent

#include "Basic.hpp"

#include "BP_Drone_RandomLocationComponent_classes.hpp"
#include "BP_Drone_RandomLocationComponent_parameters.hpp"


namespace SDK
{

// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.CalculateMoveLocations
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          MoveLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::CalculateMoveLocations(const struct FVector& MoveLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "CalculateMoveLocations");

	Params::BP_Drone_RandomLocationComponent_C_CalculateMoveLocations Parms{};

	Parms.MoveLocation = std::move(MoveLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.CircleFMod
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Circle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::CircleFMod(int32 Value, int32 Circle, int32* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "CircleFMod");

	Params::BP_Drone_RandomLocationComponent_C_CircleFMod Parms{};

	Parms.Value = Value;
	Parms.Circle = Circle;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.ExecuteUbergraph_BP_Drone_RandomLocationComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::ExecuteUbergraph_BP_Drone_RandomLocationComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "ExecuteUbergraph_BP_Drone_RandomLocationComponent");

	Params::BP_Drone_RandomLocationComponent_C_ExecuteUbergraph_BP_Drone_RandomLocationComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.GetRotationFromPoint
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Drone_RandomLocationComponent_C::GetRotationFromPoint(const struct FVector& Point, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "GetRotationFromPoint");

	Params::BP_Drone_RandomLocationComponent_C_GetRotationFromPoint Parms{};

	Parms.Point = std::move(Point);

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.OnRep_ScanState
// (BlueprintCallable, BlueprintEvent)

void UBP_Drone_RandomLocationComponent_C::OnRep_ScanState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "OnRep_ScanState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.OnStateChanged
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_Drone_RandomLocationComponent_C::OnStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "OnStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_Drone_RandomLocationComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "ReceiveTick");

	Params::BP_Drone_RandomLocationComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.SetOwnerViewRotation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Done                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::SetOwnerViewRotation(bool* Done)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "SetOwnerViewRotation");

	Params::BP_Drone_RandomLocationComponent_C_SetOwnerViewRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Done != nullptr)
		*Done = Parms.Done;
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.SetState
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EReconDrone_ScanState                   Param_ScanState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::SetState(EReconDrone_ScanState Param_ScanState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "SetState");

	Params::BP_Drone_RandomLocationComponent_C_SetState Parms{};

	Parms.Param_ScanState = Param_ScanState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.SetViewTargetLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ViewPointTargetLcoation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::SetViewTargetLocation(const struct FVector& ViewPointTargetLcoation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "SetViewTargetLocation");

	Params::BP_Drone_RandomLocationComponent_C_SetViewTargetLocation Parms{};

	Parms.ViewPointTargetLcoation = std::move(ViewPointTargetLcoation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.Start
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_StartLocation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::Start(const struct FVector& Param_StartLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "Start");

	Params::BP_Drone_RandomLocationComponent_C_Start Parms{};

	Parms.Param_StartLocation = std::move(Param_StartLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.Update
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_Drone_RandomLocationComponent_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.Update Current Time for Client
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeAfterStart                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::Update_Current_Time_for_Client(double& TimeAfterStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "Update Current Time for Client");

	Params::BP_Drone_RandomLocationComponent_C_Update_Current_Time_for_Client Parms{};

	Parms.TimeAfterStart = TimeAfterStart;

	UObject::ProcessEvent(Func, &Parms);

	TimeAfterStart = Parms.TimeAfterStart;
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.UpdateOwnerLocation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Drone_RandomLocationComponent_C::UpdateOwnerLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "UpdateOwnerLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Drone_RandomLocationComponent.BP_Drone_RandomLocationComponent_C.Vector 1D Max
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Drone_RandomLocationComponent_C::Vector_1D_Max(double Vector, double B, double* Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Drone_RandomLocationComponent_C", "Vector 1D Max");

	Params::BP_Drone_RandomLocationComponent_C_Vector_1D_Max Parms{};

	Parms.Vector = Vector;
	Parms.B = B;

	UObject::ProcessEvent(Func, &Parms);

	if (Max != nullptr)
		*Max = Parms.Max;
}

}

