#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HEX_HeatSink

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HEX_HeatSink.BP_HEX_HeatSink_C
// 0x0050 (0x0310 - 0x02C0)
class ABP_HEX_HeatSink_C final : public AGzDestructibleHeatSink
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          DestructibleCollision;                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         HeatingTimeline_HeatingTime_D9A0792D494D89CB85EEC986AF46B488; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            HeatingTimeline__Direction_D9A0792D494D89CB85EEC986AF46B488; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EBC[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     HeatingTimeline;                                   // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterialInstance;                           // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ForceDestroyTime;                                  // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EBD[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ForceDestroyTimer;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGeometryCollectionComponent*           DestructibleMeshComponent;                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AFieldSystemActor*                      AnchorField;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowFriendlyFire;                                 // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SimulateMeshDestruction(const struct FHitResult& Hit);
	void SetOwningTeam(int32 TeamID);
	void SetMeshDestroyed();
	void SetInitializationField(class AFieldSystemActor* Field);
	void ResetDestructibleMesh();
	void ReceiveReset();
	void ReceiveDestroy(const struct FHitResult& HitResult, bool bInstant);
	void HeatingTimeline__UpdateFunc();
	void HeatingTimeline__FinishedFunc();
	const class UGeometryCollection* GetDestructibleMeshAsset();
	void ExecuteUbergraph_BP_HEX_HeatSink(int32 EntryPoint);
	void EnableHeating(bool bEnable);
	void ApplyHeating(double HeatingTime);
	void ApplyDestruction(const struct FHitResult& Hit, bool bInstant);
	void ApplyAnchor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HEX_HeatSink_C">();
	}
	static class ABP_HEX_HeatSink_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HEX_HeatSink_C>();
	}
};
static_assert(alignof(ABP_HEX_HeatSink_C) == 0x000008, "Wrong alignment on ABP_HEX_HeatSink_C");
static_assert(sizeof(ABP_HEX_HeatSink_C) == 0x000310, "Wrong size on ABP_HEX_HeatSink_C");
static_assert(offsetof(ABP_HEX_HeatSink_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_HEX_HeatSink_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, DestructibleCollision) == 0x0002C8, "Member 'ABP_HEX_HeatSink_C::DestructibleCollision' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, HeatingTimeline_HeatingTime_D9A0792D494D89CB85EEC986AF46B488) == 0x0002D0, "Member 'ABP_HEX_HeatSink_C::HeatingTimeline_HeatingTime_D9A0792D494D89CB85EEC986AF46B488' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, HeatingTimeline__Direction_D9A0792D494D89CB85EEC986AF46B488) == 0x0002D4, "Member 'ABP_HEX_HeatSink_C::HeatingTimeline__Direction_D9A0792D494D89CB85EEC986AF46B488' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, HeatingTimeline) == 0x0002D8, "Member 'ABP_HEX_HeatSink_C::HeatingTimeline' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, DynamicMaterialInstance) == 0x0002E0, "Member 'ABP_HEX_HeatSink_C::DynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, ForceDestroyTime) == 0x0002E8, "Member 'ABP_HEX_HeatSink_C::ForceDestroyTime' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, ForceDestroyTimer) == 0x0002F0, "Member 'ABP_HEX_HeatSink_C::ForceDestroyTimer' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, DestructibleMeshComponent) == 0x0002F8, "Member 'ABP_HEX_HeatSink_C::DestructibleMeshComponent' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, AnchorField) == 0x000300, "Member 'ABP_HEX_HeatSink_C::AnchorField' has a wrong offset!");
static_assert(offsetof(ABP_HEX_HeatSink_C, AllowFriendlyFire) == 0x000308, "Member 'ABP_HEX_HeatSink_C::AllowFriendlyFire' has a wrong offset!");

}

