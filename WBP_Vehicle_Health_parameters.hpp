#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Vehicle_Health

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.Changed_555934AC4D0A69D12337A4B134AC86F6
// 0x0040 (0x0040 - 0x0000)
struct WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6");
static_assert(sizeof(WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6) == 0x000040, "Wrong size on WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6");
static_assert(offsetof(WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6, Attribute) == 0x000000, "Member 'WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6, NewValue) == 0x000038, "Member 'WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6, OldValue) == 0x00003C, "Member 'WBP_Vehicle_Health_C_Changed_555934AC4D0A69D12337A4B134AC86F6::OldValue' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.ExecuteUbergraph_WBP_Vehicle_Health
// 0x0288 (0x0288 - 0x0000)
struct WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4907[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x0030(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0078(0x0038)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ConvoyVehicleBase_C*                K2Node_CustomEvent_InputPin;                       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitAttributeChanged*     CallFunc_WaitForAttributeChanged_ReturnValue;      // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4908[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00E4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4909[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490A[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0190(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health");
static_assert(sizeof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health) == 0x000288, "Wrong size on WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, EntryPoint) == 0x000000, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_Attribute) == 0x000030, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_NewValue) == 0x000068, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_OldValue) == 0x00006C, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, Temp_real_Variable) == 0x000070, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, Temp_real_Variable_1) == 0x000074, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, Temp_struct_Variable) == 0x000078, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B0, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CustomEvent_InputPin) == 0x0000C0, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CustomEvent_InputPin' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C8, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_WaitForAttributeChanged_ReturnValue) == 0x0000D8, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_WaitForAttributeChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_Event_MyGeometry) == 0x0000E4, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, K2Node_Event_InDeltaTime) == 0x00011C, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_GetPlayerPawn_ReturnValue) == 0x000120, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_IsValid_ReturnValue_1) == 0x000128, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_GetComponentByClass_ReturnValue) == 0x000130, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000138, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_FindLookAtRotation_ReturnValue) == 0x000150, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_BreakRotator_Roll) == 0x000168, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_BreakRotator_Pitch) == 0x00016C, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_BreakRotator_Yaw) == 0x000170, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_MakeRotator_ReturnValue) == 0x000178, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000190, "Member 'WBP_Vehicle_Health_C_ExecuteUbergraph_WBP_Vehicle_Health::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.InitWidget
// 0x0030 (0x0030 - 0x0000)
struct WBP_Vehicle_Health_C_InitWidget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzHealthInterface>    CallFunc_GetHealth_self_CastInput;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_InitWidget) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_InitWidget");
static_assert(sizeof(WBP_Vehicle_Health_C_InitWidget) == 0x000030, "Wrong size on WBP_Vehicle_Health_C_InitWidget");
static_assert(offsetof(WBP_Vehicle_Health_C_InitWidget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Vehicle_Health_C_InitWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_InitWidget, CallFunc_GetHealth_self_CastInput) == 0x000008, "Member 'WBP_Vehicle_Health_C_InitWidget::CallFunc_GetHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_InitWidget, CallFunc_GetHealth_ReturnValue) == 0x000018, "Member 'WBP_Vehicle_Health_C_InitWidget::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_InitWidget, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000020, "Member 'WBP_Vehicle_Health_C_InitWidget::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_InitWidget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_Vehicle_Health_C_InitWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.OnVehicleRefSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_Vehicle_Health_C_OnVehicleRefSet final
{
public:
	class ABP_ConvoyVehicleBase_C*                InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_OnVehicleRefSet) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_OnVehicleRefSet");
static_assert(sizeof(WBP_Vehicle_Health_C_OnVehicleRefSet) == 0x000008, "Wrong size on WBP_Vehicle_Health_C_OnVehicleRefSet");
static_assert(offsetof(WBP_Vehicle_Health_C_OnVehicleRefSet, InputPin) == 0x000000, "Member 'WBP_Vehicle_Health_C_OnVehicleRefSet::InputPin' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.SetVehicleRef
// 0x0008 (0x0008 - 0x0000)
struct WBP_Vehicle_Health_C_SetVehicleRef final
{
public:
	class ABP_TrackTransport_ConvoyCar_JobZero_C* Param_VehicleRef;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_SetVehicleRef) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_SetVehicleRef");
static_assert(sizeof(WBP_Vehicle_Health_C_SetVehicleRef) == 0x000008, "Wrong size on WBP_Vehicle_Health_C_SetVehicleRef");
static_assert(offsetof(WBP_Vehicle_Health_C_SetVehicleRef, Param_VehicleRef) == 0x000000, "Member 'WBP_Vehicle_Health_C_SetVehicleRef::Param_VehicleRef' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Vehicle_Health_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_Tick) == 0x000004, "Wrong alignment on WBP_Vehicle_Health_C_Tick");
static_assert(sizeof(WBP_Vehicle_Health_C_Tick) == 0x00003C, "Wrong size on WBP_Vehicle_Health_C_Tick");
static_assert(offsetof(WBP_Vehicle_Health_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Vehicle_Health_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Vehicle_Health_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Vehicle_Health.WBP_Vehicle_Health_C.UpdateHealth
// 0x0040 (0x0040 - 0x0000)
struct WBP_Vehicle_Health_C_UpdateHealth final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzHealthInterface>    CallFunc_GetMaxHealth_self_CastInput;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vehicle_Health_C_UpdateHealth) == 0x000008, "Wrong alignment on WBP_Vehicle_Health_C_UpdateHealth");
static_assert(sizeof(WBP_Vehicle_Health_C_UpdateHealth) == 0x000040, "Wrong size on WBP_Vehicle_Health_C_UpdateHealth");
static_assert(offsetof(WBP_Vehicle_Health_C_UpdateHealth, Health) == 0x000000, "Member 'WBP_Vehicle_Health_C_UpdateHealth::Health' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_UpdateHealth, CallFunc_GetMaxHealth_self_CastInput) == 0x000008, "Member 'WBP_Vehicle_Health_C_UpdateHealth::CallFunc_GetMaxHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_UpdateHealth, CallFunc_GetMaxHealth_ReturnValue) == 0x000018, "Member 'WBP_Vehicle_Health_C_UpdateHealth::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_UpdateHealth, CallFunc_SafeDivide_ReturnValue) == 0x000020, "Member 'WBP_Vehicle_Health_C_UpdateHealth::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_UpdateHealth, CallFunc_SafeDivide_A_ImplicitCast) == 0x000028, "Member 'WBP_Vehicle_Health_C_UpdateHealth::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_UpdateHealth, CallFunc_SafeDivide_B_ImplicitCast) == 0x000030, "Member 'WBP_Vehicle_Health_C_UpdateHealth::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health_C_UpdateHealth, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000038, "Member 'WBP_Vehicle_Health_C_UpdateHealth::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

}

