#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LensComponent

#include "Basic.hpp"

#include "LensComponent_classes.hpp"
#include "LensComponent_parameters.hpp"


namespace SDK
{

// Function LensComponent.LensComponent.ApplyNodalOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  ComponentToOffset                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseManualInputs                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ManualFocusInput                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ManualZoomInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULensComponent::ApplyNodalOffset(class USceneComponent* ComponentToOffset, bool bUseManualInputs, float ManualFocusInput, float ManualZoomInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "ApplyNodalOffset");

	Params::LensComponent_ApplyNodalOffset Parms{};

	Parms.ComponentToOffset = ComponentToOffset;
	Parms.bUseManualInputs = bUseManualInputs;
	Parms.ManualFocusInput = ManualFocusInput;
	Parms.ManualZoomInput = ManualZoomInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.ClearDistortionState
// (Final, Native, Public, BlueprintCallable)

void ULensComponent::ClearDistortionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "ClearDistortionState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetApplyDistortion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bApply                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULensComponent::SetApplyDistortion(bool bApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetApplyDistortion");

	Params::LensComponent_SetApplyDistortion Parms{};

	Parms.bApply = bApply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetApplyNodalOffsetOnTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bApplyNodalOffset                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULensComponent::SetApplyNodalOffsetOnTick(bool bApplyNodalOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetApplyNodalOffsetOnTick");

	Params::LensComponent_SetApplyNodalOffsetOnTick Parms{};

	Parms.bApplyNodalOffset = bApplyNodalOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetCroppedFilmback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FCameraFilmbackSettings          Filmback                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ULensComponent::SetCroppedFilmback(const struct FCameraFilmbackSettings& Filmback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetCroppedFilmback");

	Params::LensComponent_SetCroppedFilmback Parms{};

	Parms.Filmback = std::move(Filmback);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetDistortionSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDistortionSource                       Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULensComponent::SetDistortionSource(EDistortionSource Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetDistortionSource");

	Params::LensComponent_SetDistortionSource Parms{};

	Parms.Source = Source;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetDistortionState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FLensDistortionState             State                                                  (Parm, NativeAccessSpecifierPublic)

void ULensComponent::SetDistortionState(const struct FLensDistortionState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetDistortionState");

	Params::LensComponent_SetDistortionState Parms{};

	Parms.State = std::move(State);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetFilmbackOverrideSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFilmbackOverrideSource                 Setting                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULensComponent::SetFilmbackOverrideSetting(EFilmbackOverrideSource Setting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetFilmbackOverrideSetting");

	Params::LensComponent_SetFilmbackOverrideSetting Parms{};

	Parms.Setting = Setting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetFIZEvaluationMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFIZEvaluationMode                      Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULensComponent::SetFIZEvaluationMode(EFIZEvaluationMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetFIZEvaluationMode");

	Params::LensComponent_SetFIZEvaluationMode Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetLensFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULensFile*                        LensFile                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULensComponent::SetLensFile(class ULensFile* LensFile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetLensFile");

	Params::LensComponent_SetLensFile Parms{};

	Parms.LensFile = LensFile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetLensFilePicker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FLensFilePicker                  LensFile                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ULensComponent::SetLensFilePicker(const struct FLensFilePicker& LensFile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetLensFilePicker");

	Params::LensComponent_SetLensFilePicker Parms{};

	Parms.LensFile = std::move(LensFile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetLensModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class ULensModel>           Model                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULensComponent::SetLensModel(TSubclassOf<class ULensModel> Model)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetLensModel");

	Params::LensComponent_SetLensModel Parms{};

	Parms.Model = Model;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.SetOverscanMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Multiplier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULensComponent::SetOverscanMultiplier(float Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "SetOverscanMultiplier");

	Params::LensComponent_SetOverscanMultiplier Parms{};

	Parms.Multiplier = Multiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LensComponent.LensComponent.GetCroppedFilmback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FCameraFilmbackSettings          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCameraFilmbackSettings ULensComponent::GetCroppedFilmback() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetCroppedFilmback");

	Params::LensComponent_GetCroppedFilmback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetDistortionSource
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDistortionSource                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDistortionSource ULensComponent::GetDistortionSource() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetDistortionSource");

	Params::LensComponent_GetDistortionSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetDistortionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLensDistortionState             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLensDistortionState ULensComponent::GetDistortionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetDistortionState");

	Params::LensComponent_GetDistortionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetFilmbackOverrideSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFilmbackOverrideSource                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFilmbackOverrideSource ULensComponent::GetFilmbackOverrideSetting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetFilmbackOverrideSetting");

	Params::LensComponent_GetFilmbackOverrideSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetFIZEvaluationMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFIZEvaluationMode                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFIZEvaluationMode ULensComponent::GetFIZEvaluationMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetFIZEvaluationMode");

	Params::LensComponent_GetFIZEvaluationMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetLensDistortionHandler
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULensDistortionModelHandlerBase*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULensDistortionModelHandlerBase* ULensComponent::GetLensDistortionHandler() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetLensDistortionHandler");

	Params::LensComponent_GetLensDistortionHandler Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetLensFile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULensFile*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULensFile* ULensComponent::GetLensFile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetLensFile");

	Params::LensComponent_GetLensFile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetLensFileEvaluationInputs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FLensFileEvaluationInputs  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FLensFileEvaluationInputs ULensComponent::GetLensFileEvaluationInputs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetLensFileEvaluationInputs");

	Params::LensComponent_GetLensFileEvaluationInputs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetLensFilePicker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLensFilePicker                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FLensFilePicker ULensComponent::GetLensFilePicker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetLensFilePicker");

	Params::LensComponent_GetLensFilePicker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetLensModel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ULensModel>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ULensModel> ULensComponent::GetLensModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetLensModel");

	Params::LensComponent_GetLensModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetOriginalFocalLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULensComponent::GetOriginalFocalLength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetOriginalFocalLength");

	Params::LensComponent_GetOriginalFocalLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.GetOverscanMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULensComponent::GetOverscanMultiplier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "GetOverscanMultiplier");

	Params::LensComponent_GetOverscanMultiplier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.ShouldApplyDistortion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULensComponent::ShouldApplyDistortion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "ShouldApplyDistortion");

	Params::LensComponent_ShouldApplyDistortion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.ShouldApplyNodalOffsetOnTick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULensComponent::ShouldApplyNodalOffsetOnTick() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "ShouldApplyNodalOffsetOnTick");

	Params::LensComponent_ShouldApplyNodalOffsetOnTick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.WasDistortionEvaluated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULensComponent::WasDistortionEvaluated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "WasDistortionEvaluated");

	Params::LensComponent_WasDistortionEvaluated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LensComponent.LensComponent.WasNodalOffsetAppliedThisTick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULensComponent::WasNodalOffsetAppliedThisTick() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LensComponent", "WasNodalOffsetAppliedThisTick");

	Params::LensComponent_WasNodalOffsetAppliedThisTick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

