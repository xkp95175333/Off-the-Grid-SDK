#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DynamicSlot

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_DynamicSlot.WBP_DynamicSlot_C.AddColorForIconIfHexCube
// 0x0030 (0x0030 - 0x0000)
struct WBP_DynamicSlot_C_AddColorForIconIfHexCube final
{
public:
	struct FGzInvItem                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B3C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchItemToType_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DynamicSlot_C_AddColorForIconIfHexCube) == 0x000008, "Wrong alignment on WBP_DynamicSlot_C_AddColorForIconIfHexCube");
static_assert(sizeof(WBP_DynamicSlot_C_AddColorForIconIfHexCube) == 0x000030, "Wrong size on WBP_DynamicSlot_C_AddColorForIconIfHexCube");
static_assert(offsetof(WBP_DynamicSlot_C_AddColorForIconIfHexCube, Item) == 0x000000, "Member 'WBP_DynamicSlot_C_AddColorForIconIfHexCube::Item' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_AddColorForIconIfHexCube, CallFunc_GetItemData_ReturnValue) == 0x000010, "Member 'WBP_DynamicSlot_C_AddColorForIconIfHexCube::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_AddColorForIconIfHexCube, CallFunc_GetRarity_ReturnValue) == 0x000018, "Member 'WBP_DynamicSlot_C_AddColorForIconIfHexCube::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_AddColorForIconIfHexCube, CallFunc_GetRarityColor_ReturnValue) == 0x00001C, "Member 'WBP_DynamicSlot_C_AddColorForIconIfHexCube::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_AddColorForIconIfHexCube, CallFunc_MatchItemToType_ReturnValue) == 0x00002C, "Member 'WBP_DynamicSlot_C_AddColorForIconIfHexCube::CallFunc_MatchItemToType_ReturnValue' has a wrong offset!");

// Function WBP_DynamicSlot.WBP_DynamicSlot_C.BndEvt__WBP_DynamicSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_DynamicSlot_C_BndEvt__WBP_DynamicSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DynamicSlot_C_BndEvt__WBP_DynamicSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_DynamicSlot_C_BndEvt__WBP_DynamicSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_DynamicSlot_C_BndEvt__WBP_DynamicSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_DynamicSlot_C_BndEvt__WBP_DynamicSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_DynamicSlot_C_BndEvt__WBP_DynamicSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_DynamicSlot_C_BndEvt__WBP_DynamicSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_DynamicSlot.WBP_DynamicSlot_C.ExecuteUbergraph_WBP_DynamicSlot
// 0x0028 (0x0028 - 0x0000)
struct WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B3D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             K2Node_Event_NewItem;                              // 0x0008(0x0010)(ConstParm)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemQuantity_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot) == 0x000008, "Wrong alignment on WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot");
static_assert(sizeof(WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot) == 0x000028, "Wrong size on WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot");
static_assert(offsetof(WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot, EntryPoint) == 0x000000, "Member 'WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot, K2Node_Event_NewItem) == 0x000008, "Member 'WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot::K2Node_Event_NewItem' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot, K2Node_ComponentBoundEvent_Button) == 0x000018, "Member 'WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot, CallFunc_GetItemQuantity_ReturnValue) == 0x000020, "Member 'WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot::CallFunc_GetItemQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'WBP_DynamicSlot_C_ExecuteUbergraph_WBP_DynamicSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_DynamicSlot.WBP_DynamicSlot_C.HandleValidItem
// 0x0068 (0x0068 - 0x0000)
struct WBP_DynamicSlot_C_HandleValidItem final
{
public:
	struct FGzInvItem                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B3E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemQuantity_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B3F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B40[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B41[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemQuantity_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0010)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DynamicSlot_C_HandleValidItem) == 0x000008, "Wrong alignment on WBP_DynamicSlot_C_HandleValidItem");
static_assert(sizeof(WBP_DynamicSlot_C_HandleValidItem) == 0x000068, "Wrong size on WBP_DynamicSlot_C_HandleValidItem");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, Item) == 0x000000, "Member 'WBP_DynamicSlot_C_HandleValidItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, Temp_byte_Variable) == 0x000010, "Member 'WBP_DynamicSlot_C_HandleValidItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, CallFunc_GetItemQuantity_ReturnValue) == 0x000014, "Member 'WBP_DynamicSlot_C_HandleValidItem::CallFunc_GetItemQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, CallFunc_GetItemData_ReturnValue) == 0x000018, "Member 'WBP_DynamicSlot_C_HandleValidItem::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'WBP_DynamicSlot_C_HandleValidItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'WBP_DynamicSlot_C_HandleValidItem::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000030, "Member 'WBP_DynamicSlot_C_HandleValidItem::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, Temp_byte_Variable_1) == 0x000038, "Member 'WBP_DynamicSlot_C_HandleValidItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_DynamicSlot_C_HandleValidItem::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, Temp_bool_Variable) == 0x000048, "Member 'WBP_DynamicSlot_C_HandleValidItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, K2Node_Select_Default) == 0x000049, "Member 'WBP_DynamicSlot_C_HandleValidItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, CallFunc_GetItemQuantity_ReturnValue_1) == 0x00004C, "Member 'WBP_DynamicSlot_C_HandleValidItem::CallFunc_GetItemQuantity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WBP_DynamicSlot_C_HandleValidItem::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DynamicSlot_C_HandleValidItem, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000060, "Member 'WBP_DynamicSlot_C_HandleValidItem::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_DynamicSlot.WBP_DynamicSlot_C.OnPocketChanged_BP
// 0x0010 (0x0010 - 0x0000)
struct WBP_DynamicSlot_C_OnPocketChanged_BP final
{
public:
	struct FGzInvItem                             NewItem;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_DynamicSlot_C_OnPocketChanged_BP) == 0x000008, "Wrong alignment on WBP_DynamicSlot_C_OnPocketChanged_BP");
static_assert(sizeof(WBP_DynamicSlot_C_OnPocketChanged_BP) == 0x000010, "Wrong size on WBP_DynamicSlot_C_OnPocketChanged_BP");
static_assert(offsetof(WBP_DynamicSlot_C_OnPocketChanged_BP, NewItem) == 0x000000, "Member 'WBP_DynamicSlot_C_OnPocketChanged_BP::NewItem' has a wrong offset!");

}

