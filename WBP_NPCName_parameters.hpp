#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NPCName

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "G01_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_NPCName.WBP_NPCName_C.Update NPC Name Color
// 0x0014 (0x0014 - 0x0000)
struct WBP_NPCName_C_Update_NPC_Name_Color final
{
public:
	ETeamAttitude                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NPCName_C_Update_NPC_Name_Color) == 0x000004, "Wrong alignment on WBP_NPCName_C_Update_NPC_Name_Color");
static_assert(sizeof(WBP_NPCName_C_Update_NPC_Name_Color) == 0x000014, "Wrong size on WBP_NPCName_C_Update_NPC_Name_Color");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Name_Color, Temp_byte_Variable) == 0x000000, "Member 'WBP_NPCName_C_Update_NPC_Name_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Name_Color, K2Node_Select_Default) == 0x000004, "Member 'WBP_NPCName_C_Update_NPC_Name_Color::K2Node_Select_Default' has a wrong offset!");

// Function WBP_NPCName.WBP_NPCName_C.Update Team Attitude
// 0x0005 (0x0005 - 0x0000)
struct WBP_NPCName_C_Update_Team_Attitude final
{
public:
	bool                                          ForceUpdate;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_TeamAttitude;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_TeamAttitude_1;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NPCName_C_Update_Team_Attitude) == 0x000001, "Wrong alignment on WBP_NPCName_C_Update_Team_Attitude");
static_assert(sizeof(WBP_NPCName_C_Update_Team_Attitude) == 0x000005, "Wrong size on WBP_NPCName_C_Update_Team_Attitude");
static_assert(offsetof(WBP_NPCName_C_Update_Team_Attitude, ForceUpdate) == 0x000000, "Member 'WBP_NPCName_C_Update_Team_Attitude::ForceUpdate' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_Team_Attitude, CallFunc_GetTeamAttitude_TeamAttitude) == 0x000001, "Member 'WBP_NPCName_C_Update_Team_Attitude::CallFunc_GetTeamAttitude_TeamAttitude' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_Team_Attitude, CallFunc_GetTeamAttitude_TeamAttitude_1) == 0x000002, "Member 'WBP_NPCName_C_Update_Team_Attitude::CallFunc_GetTeamAttitude_TeamAttitude_1' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_Team_Attitude, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WBP_NPCName_C_Update_Team_Attitude::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_Team_Attitude, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'WBP_NPCName_C_Update_Team_Attitude::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_NPCName.WBP_NPCName_C.Update NPC Name
// 0x0060 (0x0060 - 0x0000)
struct WBP_NPCName_C_Update_NPC_Name final
{
public:
	class FText                                   HostileRichTextFormat;                             // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FText                                   NeutralRichTextFormat;                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	class FText                                   FriendlyRichTextFormat;                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	class AGzAIInfo*                              CallFunc_GetAIInfo_OutAIInfo;                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNPCName_ReturnValue;                   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A5[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
};
static_assert(alignof(WBP_NPCName_C_Update_NPC_Name) == 0x000008, "Wrong alignment on WBP_NPCName_C_Update_NPC_Name");
static_assert(sizeof(WBP_NPCName_C_Update_NPC_Name) == 0x000060, "Wrong size on WBP_NPCName_C_Update_NPC_Name");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Name, HostileRichTextFormat) == 0x000000, "Member 'WBP_NPCName_C_Update_NPC_Name::HostileRichTextFormat' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Name, NeutralRichTextFormat) == 0x000010, "Member 'WBP_NPCName_C_Update_NPC_Name::NeutralRichTextFormat' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Name, FriendlyRichTextFormat) == 0x000020, "Member 'WBP_NPCName_C_Update_NPC_Name::FriendlyRichTextFormat' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Name, CallFunc_GetAIInfo_OutAIInfo) == 0x000030, "Member 'WBP_NPCName_C_Update_NPC_Name::CallFunc_GetAIInfo_OutAIInfo' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Name, CallFunc_GetNPCName_ReturnValue) == 0x000038, "Member 'WBP_NPCName_C_Update_NPC_Name::CallFunc_GetNPCName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Name, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_NPCName_C_Update_NPC_Name::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Name, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'WBP_NPCName_C_Update_NPC_Name::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_NPCName.WBP_NPCName_C.Update Outline Border
// 0x0006 (0x0006 - 0x0000)
struct WBP_NPCName_C_Update_Outline_Border final
{
public:
	ETeamAttitude                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDepthStencilValue                            Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDepthStencilValue                            Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDepthStencilValue                            Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDepthStencilValue                            K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NPCName_C_Update_Outline_Border) == 0x000001, "Wrong alignment on WBP_NPCName_C_Update_Outline_Border");
static_assert(sizeof(WBP_NPCName_C_Update_Outline_Border) == 0x000006, "Wrong size on WBP_NPCName_C_Update_Outline_Border");
static_assert(offsetof(WBP_NPCName_C_Update_Outline_Border, Temp_byte_Variable) == 0x000000, "Member 'WBP_NPCName_C_Update_Outline_Border::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_Outline_Border, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_NPCName_C_Update_Outline_Border::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_Outline_Border, Temp_byte_Variable_2) == 0x000002, "Member 'WBP_NPCName_C_Update_Outline_Border::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_Outline_Border, Temp_byte_Variable_3) == 0x000003, "Member 'WBP_NPCName_C_Update_Outline_Border::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_Outline_Border, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_NPCName_C_Update_Outline_Border::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_Outline_Border, K2Node_Select_Default) == 0x000005, "Member 'WBP_NPCName_C_Update_Outline_Border::K2Node_Select_Default' has a wrong offset!");

// Function WBP_NPCName.WBP_NPCName_C.SetNPCId
// 0x0004 (0x0004 - 0x0000)
struct WBP_NPCName_C_SetNPCId final
{
public:
	int32                                         NPC_Id;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NPCName_C_SetNPCId) == 0x000004, "Wrong alignment on WBP_NPCName_C_SetNPCId");
static_assert(sizeof(WBP_NPCName_C_SetNPCId) == 0x000004, "Wrong size on WBP_NPCName_C_SetNPCId");
static_assert(offsetof(WBP_NPCName_C_SetNPCId, NPC_Id) == 0x000000, "Member 'WBP_NPCName_C_SetNPCId::NPC_Id' has a wrong offset!");

// Function WBP_NPCName.WBP_NPCName_C.Update NPC Indicator Visibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_NPCName_C_Update_NPC_Indicator_Visibility final
{
public:
	ETeamAttitude                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NPCName_C_Update_NPC_Indicator_Visibility) == 0x000001, "Wrong alignment on WBP_NPCName_C_Update_NPC_Indicator_Visibility");
static_assert(sizeof(WBP_NPCName_C_Update_NPC_Indicator_Visibility) == 0x000005, "Wrong size on WBP_NPCName_C_Update_NPC_Indicator_Visibility");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Indicator_Visibility, Temp_byte_Variable) == 0x000000, "Member 'WBP_NPCName_C_Update_NPC_Indicator_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Indicator_Visibility, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_NPCName_C_Update_NPC_Indicator_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Indicator_Visibility, Temp_byte_Variable_2) == 0x000002, "Member 'WBP_NPCName_C_Update_NPC_Indicator_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Indicator_Visibility, Temp_byte_Variable_3) == 0x000003, "Member 'WBP_NPCName_C_Update_NPC_Indicator_Visibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_Update_NPC_Indicator_Visibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_NPCName_C_Update_NPC_Indicator_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_NPCName.WBP_NPCName_C.GetTeamAttitude
// 0x0018 (0x0018 - 0x0000)
struct WBP_NPCName_C_GetTeamAttitude final
{
public:
	ETeamAttitude                                 TeamAttitude;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetRelativeLocalPlayerState_OutPlayerState; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NPCName_C_GetTeamAttitude) == 0x000008, "Wrong alignment on WBP_NPCName_C_GetTeamAttitude");
static_assert(sizeof(WBP_NPCName_C_GetTeamAttitude) == 0x000018, "Wrong size on WBP_NPCName_C_GetTeamAttitude");
static_assert(offsetof(WBP_NPCName_C_GetTeamAttitude, TeamAttitude) == 0x000000, "Member 'WBP_NPCName_C_GetTeamAttitude::TeamAttitude' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_GetTeamAttitude, CallFunc_GetRelativeLocalPlayerState_OutPlayerState) == 0x000008, "Member 'WBP_NPCName_C_GetTeamAttitude::CallFunc_GetRelativeLocalPlayerState_OutPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_GetTeamAttitude, CallFunc_GetTeamAttitude_ReturnValue) == 0x000010, "Member 'WBP_NPCName_C_GetTeamAttitude::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_GetTeamAttitude, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_NPCName_C_GetTeamAttitude::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_NPCName.WBP_NPCName_C.GetRelativeLocalPlayerState
// 0x0020 (0x0020 - 0x0000)
struct WBP_NPCName_C_GetRelativeLocalPlayerState final
{
public:
	class APlayerState*                           OutPlayerState;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetLocalViewTarget_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerState*                         CallFunc_GetPlayerStateFromContext_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NPCName_C_GetRelativeLocalPlayerState) == 0x000008, "Wrong alignment on WBP_NPCName_C_GetRelativeLocalPlayerState");
static_assert(sizeof(WBP_NPCName_C_GetRelativeLocalPlayerState) == 0x000020, "Wrong size on WBP_NPCName_C_GetRelativeLocalPlayerState");
static_assert(offsetof(WBP_NPCName_C_GetRelativeLocalPlayerState, OutPlayerState) == 0x000000, "Member 'WBP_NPCName_C_GetRelativeLocalPlayerState::OutPlayerState' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_GetRelativeLocalPlayerState, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_NPCName_C_GetRelativeLocalPlayerState::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_GetRelativeLocalPlayerState, CallFunc_GetLocalViewTarget_ReturnValue) == 0x000010, "Member 'WBP_NPCName_C_GetRelativeLocalPlayerState::CallFunc_GetLocalViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_GetRelativeLocalPlayerState, CallFunc_GetPlayerStateFromContext_ReturnValue) == 0x000018, "Member 'WBP_NPCName_C_GetRelativeLocalPlayerState::CallFunc_GetPlayerStateFromContext_ReturnValue' has a wrong offset!");

// Function WBP_NPCName.WBP_NPCName_C.GetAiInfo
// 0x0018 (0x0018 - 0x0000)
struct WBP_NPCName_C_GetAiInfo final
{
public:
	class AGzAIInfo*                              OutAIInfo;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AGzAIInfo*                        CallFunc_GetAiInfo_ReturnValue;                    // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NPCName_C_GetAiInfo) == 0x000008, "Wrong alignment on WBP_NPCName_C_GetAiInfo");
static_assert(sizeof(WBP_NPCName_C_GetAiInfo) == 0x000018, "Wrong size on WBP_NPCName_C_GetAiInfo");
static_assert(offsetof(WBP_NPCName_C_GetAiInfo, OutAIInfo) == 0x000000, "Member 'WBP_NPCName_C_GetAiInfo::OutAIInfo' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_GetAiInfo, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_NPCName_C_GetAiInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_GetAiInfo, CallFunc_GetAiInfo_ReturnValue) == 0x000010, "Member 'WBP_NPCName_C_GetAiInfo::CallFunc_GetAiInfo_ReturnValue' has a wrong offset!");

// Function WBP_NPCName.WBP_NPCName_C.ExecuteUbergraph_WBP_NPCName
// 0x0028 (0x0028 - 0x0000)
struct WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName) == 0x000008, "Wrong alignment on WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName");
static_assert(sizeof(WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName) == 0x000028, "Wrong size on WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName");
static_assert(offsetof(WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName, EntryPoint) == 0x000000, "Member 'WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000020, "Member 'WBP_NPCName_C_ExecuteUbergraph_WBP_NPCName::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

}

