#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_CalculateOffset

#include "Basic.hpp"

#include "BTService_CalculateOffset_classes.hpp"
#include "BTService_CalculateOffset_parameters.hpp"


namespace SDK
{

// Function BTService_CalculateOffset.BTService_CalculateOffset_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTService_CalculateOffset_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTService_CalculateOffset_C", "ReceiveTickAI");

	Params::BTService_CalculateOffset_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTService_CalculateOffset.BTService_CalculateOffset_C.Get Weight Body Part
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<E_NPCBodyPart, int32>              InMapProbability                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// E_NPCBodyPart                           ReturnBodyPart                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTService_CalculateOffset_C::Get_Weight_Body_Part(const TMap<E_NPCBodyPart, int32>& InMapProbability, E_NPCBodyPart* ReturnBodyPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTService_CalculateOffset_C", "Get Weight Body Part");

	Params::BTService_CalculateOffset_C_Get_Weight_Body_Part Parms{};

	Parms.InMapProbability = std::move(InMapProbability);

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnBodyPart != nullptr)
		*ReturnBodyPart = Parms.ReturnBodyPart;
}


// Function BTService_CalculateOffset.BTService_CalculateOffset_C.ExecuteUbergraph_BTService_CalculateOffset
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTService_CalculateOffset_C::ExecuteUbergraph_BTService_CalculateOffset(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTService_CalculateOffset_C", "ExecuteUbergraph_BTService_CalculateOffset");

	Params::BTService_CalculateOffset_C_ExecuteUbergraph_BTService_CalculateOffset Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTService_CalculateOffset.BTService_CalculateOffset_C.CalcOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Enemy                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTService_CalculateOffset_C::CalcOffset(class AActor* Param_Enemy, double* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTService_CalculateOffset_C", "CalcOffset");

	Params::BTService_CalculateOffset_C_CalcOffset Parms{};

	Parms.Param_Enemy = Param_Enemy;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = Parms.Offset;
}


// Function BTService_CalculateOffset.BTService_CalculateOffset_C.BodyPart_basedonDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDistanceToTargetEnum                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Token                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_NPCBodyPart                           TargetonBody                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTService_CalculateOffset_C::BodyPart_basedonDistance(EDistanceToTargetEnum Distance, bool Token, E_NPCBodyPart* TargetonBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTService_CalculateOffset_C", "BodyPart_basedonDistance");

	Params::BTService_CalculateOffset_C_BodyPart_basedonDistance Parms{};

	Parms.Distance = Distance;
	Parms.Token = Token;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetonBody != nullptr)
		*TargetonBody = Parms.TargetonBody;
}

}

