#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaWebBrowser

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class XsollaWebBrowser.XsollaWebBrowser
// 0x0058 (0x01D0 - 0x0178)
class UXsollaWebBrowser final : public UWidget
{
public:
	FMulticastInlineDelegateProperty_             OnUrlChanged;                                      // 0x0178(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBeforePopup;                                     // 0x0188(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPageLoaded;                                      // 0x0198(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 InitialURL;                                        // 0x01A8(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSupportsTransparency;                             // 0x01B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2827[0x17];                                    // 0x01B9(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ExecuteJavascript(const class FString& ScriptText);
	void LoadHtml(const class FString& Contents, const class FString& DummyURL);
	void LoadUrl(const class FString& NewURL);
	void OnBeforePopup__DelegateSignature(const class FString& URL, const class FString& Frame);
	void OnPageLoaded__DelegateSignature();
	void OnUrlChanged__DelegateSignature(const class FText& Text);

	void ClearCache() const;
	class FString GetUrl() const;
	void GoBack() const;
	void GoForward() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaWebBrowser">();
	}
	static class UXsollaWebBrowser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaWebBrowser>();
	}
};
static_assert(alignof(UXsollaWebBrowser) == 0x000008, "Wrong alignment on UXsollaWebBrowser");
static_assert(sizeof(UXsollaWebBrowser) == 0x0001D0, "Wrong size on UXsollaWebBrowser");
static_assert(offsetof(UXsollaWebBrowser, OnUrlChanged) == 0x000178, "Member 'UXsollaWebBrowser::OnUrlChanged' has a wrong offset!");
static_assert(offsetof(UXsollaWebBrowser, OnBeforePopup) == 0x000188, "Member 'UXsollaWebBrowser::OnBeforePopup' has a wrong offset!");
static_assert(offsetof(UXsollaWebBrowser, OnPageLoaded) == 0x000198, "Member 'UXsollaWebBrowser::OnPageLoaded' has a wrong offset!");
static_assert(offsetof(UXsollaWebBrowser, InitialURL) == 0x0001A8, "Member 'UXsollaWebBrowser::InitialURL' has a wrong offset!");
static_assert(offsetof(UXsollaWebBrowser, bSupportsTransparency) == 0x0001B8, "Member 'UXsollaWebBrowser::bSupportsTransparency' has a wrong offset!");

// Class XsollaWebBrowser.XsollaWebBrowserAssetManager
// 0x0050 (0x0078 - 0x0028)
class UXsollaWebBrowserAssetManager final : public UObject
{
public:
	TSoftObjectPtr<class UMaterial>               DefaultMaterial;                                   // 0x0028(0x0028)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterial>               DefaultTranslucentMaterial;                        // 0x0050(0x0028)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"XsollaWebBrowserAssetManager">();
	}
	static class UXsollaWebBrowserAssetManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXsollaWebBrowserAssetManager>();
	}
};
static_assert(alignof(UXsollaWebBrowserAssetManager) == 0x000008, "Wrong alignment on UXsollaWebBrowserAssetManager");
static_assert(sizeof(UXsollaWebBrowserAssetManager) == 0x000078, "Wrong size on UXsollaWebBrowserAssetManager");
static_assert(offsetof(UXsollaWebBrowserAssetManager, DefaultMaterial) == 0x000028, "Member 'UXsollaWebBrowserAssetManager::DefaultMaterial' has a wrong offset!");
static_assert(offsetof(UXsollaWebBrowserAssetManager, DefaultTranslucentMaterial) == 0x000050, "Member 'UXsollaWebBrowserAssetManager::DefaultTranslucentMaterial' has a wrong offset!");

}

