#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AssaultDrone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_AssaultDrone.GA_AssaultDrone_C.AddCharacterFlySpeedToDrone
// 0x0060 (0x0060 - 0x0000)
struct GA_AssaultDrone_C_AddCharacterFlySpeedToDrone final
{
public:
	class AGzAssaultDrone*                        InDrone;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalAdditionalSpeed;                              // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D1[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AssaultDrone_C_AddCharacterFlySpeedToDrone) == 0x000008, "Wrong alignment on GA_AssaultDrone_C_AddCharacterFlySpeedToDrone");
static_assert(sizeof(GA_AssaultDrone_C_AddCharacterFlySpeedToDrone) == 0x000060, "Wrong size on GA_AssaultDrone_C_AddCharacterFlySpeedToDrone");
static_assert(offsetof(GA_AssaultDrone_C_AddCharacterFlySpeedToDrone, InDrone) == 0x000000, "Member 'GA_AssaultDrone_C_AddCharacterFlySpeedToDrone::InDrone' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_AddCharacterFlySpeedToDrone, LocalAdditionalSpeed) == 0x000008, "Member 'GA_AssaultDrone_C_AddCharacterFlySpeedToDrone::LocalAdditionalSpeed' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_AddCharacterFlySpeedToDrone, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000020, "Member 'GA_AssaultDrone_C_AddCharacterFlySpeedToDrone::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_AddCharacterFlySpeedToDrone, CallFunc_GetOwningCharacter_ReturnValue) == 0x000038, "Member 'GA_AssaultDrone_C_AddCharacterFlySpeedToDrone::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_AddCharacterFlySpeedToDrone, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'GA_AssaultDrone_C_AddCharacterFlySpeedToDrone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_AddCharacterFlySpeedToDrone, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'GA_AssaultDrone_C_AddCharacterFlySpeedToDrone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_AddCharacterFlySpeedToDrone, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000048, "Member 'GA_AssaultDrone_C_AddCharacterFlySpeedToDrone::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function GA_AssaultDrone.GA_AssaultDrone_C.EventReceived_FB1082FF4318D4E92525F9BC5BD551A2
// 0x00B8 (0x00B8 - 0x0000)
struct GA_AssaultDrone_C_EventReceived_FB1082FF4318D4E92525F9BC5BD551A2 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_AssaultDrone_C_EventReceived_FB1082FF4318D4E92525F9BC5BD551A2) == 0x000008, "Wrong alignment on GA_AssaultDrone_C_EventReceived_FB1082FF4318D4E92525F9BC5BD551A2");
static_assert(sizeof(GA_AssaultDrone_C_EventReceived_FB1082FF4318D4E92525F9BC5BD551A2) == 0x0000B8, "Wrong size on GA_AssaultDrone_C_EventReceived_FB1082FF4318D4E92525F9BC5BD551A2");
static_assert(offsetof(GA_AssaultDrone_C_EventReceived_FB1082FF4318D4E92525F9BC5BD551A2, EventTag) == 0x000000, "Member 'GA_AssaultDrone_C_EventReceived_FB1082FF4318D4E92525F9BC5BD551A2::EventTag' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_EventReceived_FB1082FF4318D4E92525F9BC5BD551A2, EventData) == 0x000008, "Member 'GA_AssaultDrone_C_EventReceived_FB1082FF4318D4E92525F9BC5BD551A2::EventData' has a wrong offset!");

// Function GA_AssaultDrone.GA_AssaultDrone_C.ExecuteUbergraph_GA_AssaultDrone
// 0x08A0 (0x08A0 - 0x0000)
struct GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D2[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0018(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0120(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       CallFunc_MakeGameplayAbilityTargetDataHandleFromHitResults_ReturnValue; // 0x0150(0x0028)()
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D3[0x1];                                     // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Data)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D4[0x3];                                     // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAT_PlayMontageAndWaitForEvent*       CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D5[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D6[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_HitResult;                      // 0x01B8(0x0028)(ConstParm)
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x01E0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UGzBodyPartAbilityData*                 CallFunc_BP_GetAbilityData_ReturnValue;            // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D7[0x2];                                     // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D8[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D9[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzBodyPartAbilityData_ADrone*          K2Node_DynamicCast_AsGz_Body_Part_Ability_Data_ADrone; // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64DA[0x7];                                     // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64DB[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAT_ServerWaitForTargetData*          CallFunc_ServerWaitForClientTargetData_ReturnValue; // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64DC[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable;                              // 0x0440(0x0028)()
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_2;            // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64DD[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64DE[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64DF[0x8];                                     // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBoneTransform_ReturnValue;             // 0x04C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Data;                           // 0x0520(0x0028)(ConstParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x05A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x05C0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x06B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x06BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64E0[0x1];                                     // 0x06BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64E1[0x4];                                     // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0738(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64E2[0x4];                                     // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x07A8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone) == 0x000010, "Wrong alignment on GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone");
static_assert(sizeof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone) == 0x0008A0, "Wrong size on GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, EntryPoint) == 0x000000, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CustomEvent_NotifyName) == 0x000008, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CustomEvent_EventTag) == 0x000010, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CustomEvent_EventData) == 0x000018, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CreateDelegate_OutputDelegate) == 0x0000C8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000108, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, Temp_object_Variable) == 0x000120, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_MakeArray_Array) == 0x000130, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CreateDelegate_OutputDelegate_4) == 0x000140, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_MakeGameplayAbilityTargetDataHandleFromHitResults_ReturnValue) == 0x000150, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_MakeGameplayAbilityTargetDataHandleFromHitResults_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_K2_HasAuthority_ReturnValue) == 0x000178, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x000179, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00017A, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CustomEvent_NotifyName_1) == 0x00017C, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CreateDelegate_OutputDelegate_5) == 0x000184, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_K2_CommitAbility_ReturnValue) == 0x000194, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x000198, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001A4, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CustomEvent_HitResult) == 0x0001B8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x0001E0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BP_GetAbilityData_ReturnValue) == 0x0002D8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BP_GetAbilityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_bBlockingHit) == 0x0002E0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002E1, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_Time) == 0x0002E4, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_Distance) == 0x0002E8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_Location) == 0x0002F0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_ImpactPoint) == 0x000308, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_Normal) == 0x000320, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_ImpactNormal) == 0x000338, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_PhysMat) == 0x000350, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_HitActor) == 0x000358, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_HitComponent) == 0x000360, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_HitBoneName) == 0x000368, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_BoneName) == 0x000370, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_HitItem) == 0x000378, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_ElementIndex) == 0x00037C, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_FaceIndex) == 0x000380, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_TraceStart) == 0x000388, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_TraceEnd) == 0x0003A0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_DynamicCast_AsGz_Body_Part_Ability_Data_ADrone) == 0x0003B8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_DynamicCast_AsGz_Body_Part_Ability_Data_ADrone' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_DynamicCast_bSuccess) == 0x0003C0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003C8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_VSize_ReturnValue) == 0x0003E0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0003E8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_ServerWaitForClientTargetData_ReturnValue) == 0x0003F0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_ServerWaitForClientTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003F8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_FMin_ReturnValue) == 0x000400, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_IsValid_ReturnValue_1) == 0x000408, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_ClampVectorSize_ReturnValue) == 0x000410, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_Add_VectorVector_ReturnValue) == 0x000428, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, Temp_struct_Variable) == 0x000440, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_K2_HasAuthority_ReturnValue_2) == 0x000468, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_K2_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_GetOwningCharacter_ReturnValue) == 0x000470, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000478, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_DynamicCast_bSuccess_1) == 0x000480, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_GetActorForwardVector_ReturnValue) == 0x000488, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0004A0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_GetBoneTransform_ReturnValue) == 0x0004C0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_GetBoneTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, K2Node_CustomEvent_Data) == 0x000520, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakTransform_Location) == 0x000548, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakTransform_Rotation) == 0x000560, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakTransform_Scale) == 0x000578, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000590, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0005A8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0005C0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0006B8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0006B9, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0006BA, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_Time_1) == 0x0006BC, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_Distance_1) == 0x0006C0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_Location_1) == 0x0006C8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0006E0, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_Normal_1) == 0x0006F8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000710, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_PhysMat_1) == 0x000728, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_HitActor_1) == 0x000730, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_HitComponent_1) == 0x000738, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_HitBoneName_1) == 0x000740, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_BoneName_1) == 0x000748, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_HitItem_1) == 0x000750, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_ElementIndex_1) == 0x000754, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_FaceIndex_1) == 0x000758, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_TraceStart_1) == 0x000760, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_BreakHitResult_TraceEnd_1) == 0x000778, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_SelectVector_ReturnValue) == 0x000790, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone, CallFunc_MakeHitResult_ReturnValue) == 0x0007A8, "Member 'GA_AssaultDrone_C_ExecuteUbergraph_GA_AssaultDrone::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");

// Function GA_AssaultDrone.GA_AssaultDrone_C.HandlSpawnData
// 0x0028 (0x0028 - 0x0000)
struct GA_AssaultDrone_C_HandlSpawnData final
{
public:
	struct FGameplayAbilityTargetDataHandle       HitResult;                                         // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_AssaultDrone_C_HandlSpawnData) == 0x000008, "Wrong alignment on GA_AssaultDrone_C_HandlSpawnData");
static_assert(sizeof(GA_AssaultDrone_C_HandlSpawnData) == 0x000028, "Wrong size on GA_AssaultDrone_C_HandlSpawnData");
static_assert(offsetof(GA_AssaultDrone_C_HandlSpawnData, HitResult) == 0x000000, "Member 'GA_AssaultDrone_C_HandlSpawnData::HitResult' has a wrong offset!");

// Function GA_AssaultDrone.GA_AssaultDrone_C.OnNotifyBegin_FB1082FF4318D4E92525F9BC5BD551A2
// 0x0008 (0x0008 - 0x0000)
struct GA_AssaultDrone_C_OnNotifyBegin_FB1082FF4318D4E92525F9BC5BD551A2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AssaultDrone_C_OnNotifyBegin_FB1082FF4318D4E92525F9BC5BD551A2) == 0x000004, "Wrong alignment on GA_AssaultDrone_C_OnNotifyBegin_FB1082FF4318D4E92525F9BC5BD551A2");
static_assert(sizeof(GA_AssaultDrone_C_OnNotifyBegin_FB1082FF4318D4E92525F9BC5BD551A2) == 0x000008, "Wrong size on GA_AssaultDrone_C_OnNotifyBegin_FB1082FF4318D4E92525F9BC5BD551A2");
static_assert(offsetof(GA_AssaultDrone_C_OnNotifyBegin_FB1082FF4318D4E92525F9BC5BD551A2, NotifyName) == 0x000000, "Member 'GA_AssaultDrone_C_OnNotifyBegin_FB1082FF4318D4E92525F9BC5BD551A2::NotifyName' has a wrong offset!");

// Function GA_AssaultDrone.GA_AssaultDrone_C.OnNotifyEnd_FB1082FF4318D4E92525F9BC5BD551A2
// 0x0008 (0x0008 - 0x0000)
struct GA_AssaultDrone_C_OnNotifyEnd_FB1082FF4318D4E92525F9BC5BD551A2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AssaultDrone_C_OnNotifyEnd_FB1082FF4318D4E92525F9BC5BD551A2) == 0x000004, "Wrong alignment on GA_AssaultDrone_C_OnNotifyEnd_FB1082FF4318D4E92525F9BC5BD551A2");
static_assert(sizeof(GA_AssaultDrone_C_OnNotifyEnd_FB1082FF4318D4E92525F9BC5BD551A2) == 0x000008, "Wrong size on GA_AssaultDrone_C_OnNotifyEnd_FB1082FF4318D4E92525F9BC5BD551A2");
static_assert(offsetof(GA_AssaultDrone_C_OnNotifyEnd_FB1082FF4318D4E92525F9BC5BD551A2, NotifyName) == 0x000000, "Member 'GA_AssaultDrone_C_OnNotifyEnd_FB1082FF4318D4E92525F9BC5BD551A2::NotifyName' has a wrong offset!");

// Function GA_AssaultDrone.GA_AssaultDrone_C.SpawnTurret
// 0x0110 (0x0110 - 0x0000)
struct GA_AssaultDrone_C_SpawnTurret final
{
public:
	struct FVector                                InTransform_Location;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InTargetPoint;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_AssaultDrone_C*                 LocalAssaultDrone;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GeneratePatrolVolume_ReturnValue;         // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamId_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64E3[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64E4[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue_2;         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzAIController*                        CallFunc_SpawnNPCByTag_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_BP_GetAbilityComponent_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_AssaultDrone_C*                 K2Node_DynamicCast_AsBP_NPC_Assault_Drone;         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64E5[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AssaultDroneComponent_C*            K2Node_DynamicCast_AsBP_Assault_Drone_Component;   // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AssaultDrone_C_SpawnTurret) == 0x000010, "Wrong alignment on GA_AssaultDrone_C_SpawnTurret");
static_assert(sizeof(GA_AssaultDrone_C_SpawnTurret) == 0x000110, "Wrong size on GA_AssaultDrone_C_SpawnTurret");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, InTransform_Location) == 0x000000, "Member 'GA_AssaultDrone_C_SpawnTurret::InTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, InTargetPoint) == 0x000018, "Member 'GA_AssaultDrone_C_SpawnTurret::InTargetPoint' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, LocalAssaultDrone) == 0x000030, "Member 'GA_AssaultDrone_C_SpawnTurret::LocalAssaultDrone' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_GeneratePatrolVolume_ReturnValue) == 0x000038, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_GeneratePatrolVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_GetOwningCharacter_ReturnValue) == 0x000050, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_GetTeamId_ReturnValue) == 0x000058, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_GetTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_GetOwningCharacter_ReturnValue_1) == 0x0000C0, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_GetOwningCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_GetOwningCharacter_ReturnValue_2) == 0x0000D0, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_GetOwningCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_SpawnNPCByTag_ReturnValue) == 0x0000D8, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_SpawnNPCByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_K2_GetPawn_ReturnValue) == 0x0000E0, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, CallFunc_BP_GetAbilityComponent_ReturnValue) == 0x0000E8, "Member 'GA_AssaultDrone_C_SpawnTurret::CallFunc_BP_GetAbilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, K2Node_DynamicCast_AsBP_NPC_Assault_Drone) == 0x0000F0, "Member 'GA_AssaultDrone_C_SpawnTurret::K2Node_DynamicCast_AsBP_NPC_Assault_Drone' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GA_AssaultDrone_C_SpawnTurret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, K2Node_DynamicCast_AsBP_Assault_Drone_Component) == 0x000100, "Member 'GA_AssaultDrone_C_SpawnTurret::K2Node_DynamicCast_AsBP_Assault_Drone_Component' has a wrong offset!");
static_assert(offsetof(GA_AssaultDrone_C_SpawnTurret, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'GA_AssaultDrone_C_SpawnTurret::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_AssaultDrone.GA_AssaultDrone_C.ValidData_85C4B5ED421D328D18276DAD09F41D96
// 0x0028 (0x0028 - 0x0000)
struct GA_AssaultDrone_C_ValidData_85C4B5ED421D328D18276DAD09F41D96 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_AssaultDrone_C_ValidData_85C4B5ED421D328D18276DAD09F41D96) == 0x000008, "Wrong alignment on GA_AssaultDrone_C_ValidData_85C4B5ED421D328D18276DAD09F41D96");
static_assert(sizeof(GA_AssaultDrone_C_ValidData_85C4B5ED421D328D18276DAD09F41D96) == 0x000028, "Wrong size on GA_AssaultDrone_C_ValidData_85C4B5ED421D328D18276DAD09F41D96");
static_assert(offsetof(GA_AssaultDrone_C_ValidData_85C4B5ED421D328D18276DAD09F41D96, Data) == 0x000000, "Member 'GA_AssaultDrone_C_ValidData_85C4B5ED421D328D18276DAD09F41D96::Data' has a wrong offset!");

}

