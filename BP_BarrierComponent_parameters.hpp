#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BarrierComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BarrierComponent.BP_BarrierComponent_C.BoxsTrace
// 0x0320 (0x0320 - 0x0000)
struct BP_BarrierComponent_C_BoxsTrace final
{
public:
	bool                                          bRight;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D69[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Param_Width;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResultHeight;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightLocal;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WidthLocal;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_BoxTraceSingleForObjects_OutHit;          // 0x0120(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceSingleForObjects_ReturnValue;     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D6A[0x1];                                     // 0x021B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D6B[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D6C[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BarrierComponent_C_BoxsTrace) == 0x000008, "Wrong alignment on BP_BarrierComponent_C_BoxsTrace");
static_assert(sizeof(BP_BarrierComponent_C_BoxsTrace) == 0x000320, "Wrong size on BP_BarrierComponent_C_BoxsTrace");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, bRight) == 0x000000, "Member 'BP_BarrierComponent_C_BoxsTrace::bRight' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, Param_Width) == 0x000008, "Member 'BP_BarrierComponent_C_BoxsTrace::Param_Width' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, ResultHeight) == 0x000010, "Member 'BP_BarrierComponent_C_BoxsTrace::ResultHeight' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, HeightLocal) == 0x000018, "Member 'BP_BarrierComponent_C_BoxsTrace::HeightLocal' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, WidthLocal) == 0x000020, "Member 'BP_BarrierComponent_C_BoxsTrace::WidthLocal' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, Temp_object_Variable) == 0x000028, "Member 'BP_BarrierComponent_C_BoxsTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000040, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000058, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000070, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000A0, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000B8, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000F0, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_MakeVector_ReturnValue) == 0x000108, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BoxTraceSingleForObjects_OutHit) == 0x000120, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BoxTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BoxTraceSingleForObjects_ReturnValue) == 0x000218, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BoxTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000219, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x00021A, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_Time) == 0x00021C, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_Distance) == 0x000220, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_Location) == 0x000228, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000240, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_Normal) == 0x000258, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000270, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_PhysMat) == 0x000288, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_HitActor) == 0x000290, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_HitComponent) == 0x000298, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_HitBoneName) == 0x0002A0, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_BoneName) == 0x0002A8, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_HitItem) == 0x0002B0, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_ElementIndex) == 0x0002B4, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_FaceIndex) == 0x0002B8, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_TraceStart) == 0x0002C0, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0002D8, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_FMin_ReturnValue) == 0x0002F0, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002F8, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_VSize_ReturnValue) == 0x000310, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_BoxsTrace, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000318, "Member 'BP_BarrierComponent_C_BoxsTrace::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_BarrierComponent.BP_BarrierComponent_C.ExecuteUbergraph_BP_BarrierComponent
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D6D[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D6E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Barrier_Preview_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D6F[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D70[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D71[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent) == 0x000010, "Wrong alignment on BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent");
static_assert(sizeof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent) == 0x0000C0, "Wrong size on BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, EntryPoint) == 0x000000, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000005, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000010, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_HasAuthority_ReturnValue) == 0x00001A, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_HasAuthority_ReturnValue_1) == 0x00001B, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, K2Node_Event_DeltaSeconds) == 0x000090, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000098, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, K2Node_Event_EndPlayReason) == 0x0000A0, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x0000A8, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_IsValid_ReturnValue_2) == 0x0000B1, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_BarrierComponent_C_ExecuteUbergraph_BP_BarrierComponent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_BarrierComponent.BP_BarrierComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_BarrierComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BarrierComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_BarrierComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_BarrierComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_BarrierComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_BarrierComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_BarrierComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_BarrierComponent.BP_BarrierComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BarrierComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BarrierComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BarrierComponent_C_ReceiveTick");
static_assert(sizeof(BP_BarrierComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_BarrierComponent_C_ReceiveTick");
static_assert(offsetof(BP_BarrierComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BarrierComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BarrierComponent.BP_BarrierComponent_C.Setup Height And Width
// 0x02D8 (0x02D8 - 0x0000)
struct BP_BarrierComponent_C_Setup_Height_And_Width final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00D0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D72[0x1];                                     // 0x01CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D73[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D74[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BarrierComponent_C_Setup_Height_And_Width) == 0x000008, "Wrong alignment on BP_BarrierComponent_C_Setup_Height_And_Width");
static_assert(sizeof(BP_BarrierComponent_C_Setup_Height_And_Width) == 0x0002D8, "Wrong size on BP_BarrierComponent_C_Setup_Height_And_Width");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, Temp_object_Variable) == 0x000000, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000010, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000028, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000040, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000058, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000070, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000A0, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000D0, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001C8, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_bBlockingHit) == 0x0001C9, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001CA, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_Time) == 0x0001CC, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_Distance) == 0x0001D0, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_Location) == 0x0001D8, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F0, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_Normal) == 0x000208, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_ImpactNormal) == 0x000220, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_PhysMat) == 0x000238, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_HitActor) == 0x000240, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_HitComponent) == 0x000248, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_HitBoneName) == 0x000250, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_BoneName) == 0x000258, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_HitItem) == 0x000260, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_ElementIndex) == 0x000264, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_FaceIndex) == 0x000268, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_TraceStart) == 0x000270, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_BreakHitResult_TraceEnd) == 0x000288, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002A0, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_VSize_ReturnValue) == 0x0002B8, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002C0, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_SelectFloat_ReturnValue) == 0x0002C8, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Setup_Height_And_Width, CallFunc_FMin_ReturnValue) == 0x0002D0, "Member 'BP_BarrierComponent_C_Setup_Height_And_Width::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function BP_BarrierComponent.BP_BarrierComponent_C.Update
// 0x0698 (0x0698 - 0x0000)
struct BP_BarrierComponent_C_Update final
{
public:
	struct FVector                                DirectionLocal;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetViewHitResult_ReturnValue;             // 0x0088(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D75[0x2];                                     // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D76[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D77[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZY_ReturnValue;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x02A0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D78[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BoxsTrace_Width;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BoxsTrace_Width_1;                        // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x04C8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D79[0x1];                                     // 0x05C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D7A[0x4];                                     // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0640(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D7B[0x4];                                     // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0680(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BarrierComponent_C_Update) == 0x000008, "Wrong alignment on BP_BarrierComponent_C_Update");
static_assert(sizeof(BP_BarrierComponent_C_Update) == 0x000698, "Wrong size on BP_BarrierComponent_C_Update");
static_assert(offsetof(BP_BarrierComponent_C_Update, DirectionLocal) == 0x000000, "Member 'BP_BarrierComponent_C_Update::DirectionLocal' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_BarrierComponent_C_Update::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_BarrierComponent_C_Update::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, Temp_object_Variable) == 0x000048, "Member 'BP_BarrierComponent_C_Update::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'BP_BarrierComponent_C_Update::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Normal_ReturnValue) == 0x000060, "Member 'BP_BarrierComponent_C_Update::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_BarrierComponent_C_Update::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_GetCombatComponent_ReturnValue) == 0x000080, "Member 'BP_BarrierComponent_C_Update::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_GetViewHitResult_ReturnValue) == 0x000088, "Member 'BP_BarrierComponent_C_Update::CallFunc_GetViewHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000180, "Member 'BP_BarrierComponent_C_Update::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_bBlockingHit) == 0x000198, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_bInitialOverlap) == 0x000199, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_Time) == 0x00019C, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_Distance) == 0x0001A0, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_Location) == 0x0001A8, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C0, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_Normal) == 0x0001D8, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F0, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_PhysMat) == 0x000208, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_HitActor) == 0x000210, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_HitComponent) == 0x000218, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_HitBoneName) == 0x000220, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_BoneName) == 0x000228, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_HitItem) == 0x000230, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_ElementIndex) == 0x000234, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_FaceIndex) == 0x000238, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_TraceStart) == 0x000240, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_TraceEnd) == 0x000258, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000270, "Member 'BP_BarrierComponent_C_Update::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_MakeRotFromZY_ReturnValue) == 0x000278, "Member 'BP_BarrierComponent_C_Update::CallFunc_MakeRotFromZY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000290, "Member 'BP_BarrierComponent_C_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000298, "Member 'BP_BarrierComponent_C_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0002A0, "Member 'BP_BarrierComponent_C_Update::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000398, "Member 'BP_BarrierComponent_C_Update::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BoxsTrace_Width) == 0x0003A0, "Member 'BP_BarrierComponent_C_Update::CallFunc_BoxsTrace_Width' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BoxsTrace_Width_1) == 0x0003A8, "Member 'BP_BarrierComponent_C_Update::CallFunc_BoxsTrace_Width_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_GetActorRightVector_ReturnValue) == 0x0003B0, "Member 'BP_BarrierComponent_C_Update::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0003C8, "Member 'BP_BarrierComponent_C_Update::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Dot_VectorVector_ReturnValue) == 0x0003E0, "Member 'BP_BarrierComponent_C_Update::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0003E8, "Member 'BP_BarrierComponent_C_Update::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000400, "Member 'BP_BarrierComponent_C_Update::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000418, "Member 'BP_BarrierComponent_C_Update::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Add_VectorVector_ReturnValue) == 0x000430, "Member 'BP_BarrierComponent_C_Update::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_FMin_ReturnValue) == 0x000448, "Member 'BP_BarrierComponent_C_Update::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Normal_ReturnValue_1) == 0x000450, "Member 'BP_BarrierComponent_C_Update::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000468, "Member 'BP_BarrierComponent_C_Update::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000480, "Member 'BP_BarrierComponent_C_Update::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000498, "Member 'BP_BarrierComponent_C_Update::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0004B0, "Member 'BP_BarrierComponent_C_Update::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0004C8, "Member 'BP_BarrierComponent_C_Update::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0005C0, "Member 'BP_BarrierComponent_C_Update::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0005C1, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0005C2, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_Time_1) == 0x0005C4, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_Distance_1) == 0x0005C8, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_Location_1) == 0x0005D0, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0005E8, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_Normal_1) == 0x000600, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000618, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_PhysMat_1) == 0x000630, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_HitActor_1) == 0x000638, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_HitComponent_1) == 0x000640, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_HitBoneName_1) == 0x000648, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_BoneName_1) == 0x000650, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_HitItem_1) == 0x000658, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_ElementIndex_1) == 0x00065C, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_FaceIndex_1) == 0x000660, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_TraceStart_1) == 0x000668, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_BarrierComponent_C_Update, CallFunc_BreakHitResult_TraceEnd_1) == 0x000680, "Member 'BP_BarrierComponent_C_Update::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");

}

