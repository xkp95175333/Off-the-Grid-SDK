#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_Cyberlimbs_Defiler

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Crosshair_Cyberlimbs_Defiler.WBP_Crosshair_Cyberlimbs_Defiler_C.ChrgesChanged_Event
// 0x0004 (0x0004 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_Defiler_C_ChrgesChanged_Event final
{
public:
	int32                                         Param_Charges;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_Defiler_C_ChrgesChanged_Event) == 0x000004, "Wrong alignment on WBP_Crosshair_Cyberlimbs_Defiler_C_ChrgesChanged_Event");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_Defiler_C_ChrgesChanged_Event) == 0x000004, "Wrong size on WBP_Crosshair_Cyberlimbs_Defiler_C_ChrgesChanged_Event");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ChrgesChanged_Event, Param_Charges) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ChrgesChanged_Event::Param_Charges' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_Defiler.WBP_Crosshair_Cyberlimbs_Defiler_C.ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler
// 0x0070 (0x0070 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   K2Node_Event_LimbType;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ADB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzLimbGaugeData                       K2Node_Event_GaugeData;                            // 0x0008(0x0028)(ConstParm, NoDestructor)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Charges;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ADC[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler) == 0x000008, "Wrong alignment on WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler) == 0x000070, "Wrong size on WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, EntryPoint) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, K2Node_Event_LimbType) == 0x000004, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::K2Node_Event_LimbType' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, K2Node_Event_GaugeData) == 0x000008, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::K2Node_Event_GaugeData' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, K2Node_MakeStruct_LinearColor) == 0x000030, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, K2Node_CustomEvent_Charges) == 0x000040, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::K2Node_CustomEvent_Charges' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, K2Node_MakeStruct_LinearColor_1) == 0x00004C, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, Temp_int_Array_Index_Variable) == 0x000060, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, CallFunc_Greater_IntInt_ReturnValue) == 0x000065, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Defiler::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Crosshair_Cyberlimbs_Defiler.WBP_Crosshair_Cyberlimbs_Defiler_C.OnLimbActivated
// 0x0030 (0x0030 - 0x0000)
struct WBP_Crosshair_Cyberlimbs_Defiler_C_OnLimbActivated final
{
public:
	EGzLimbType                                   LimbType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ADD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzLimbGaugeData                       GaugeData;                                         // 0x0008(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Crosshair_Cyberlimbs_Defiler_C_OnLimbActivated) == 0x000008, "Wrong alignment on WBP_Crosshair_Cyberlimbs_Defiler_C_OnLimbActivated");
static_assert(sizeof(WBP_Crosshair_Cyberlimbs_Defiler_C_OnLimbActivated) == 0x000030, "Wrong size on WBP_Crosshair_Cyberlimbs_Defiler_C_OnLimbActivated");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_OnLimbActivated, LimbType) == 0x000000, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_OnLimbActivated::LimbType' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_Cyberlimbs_Defiler_C_OnLimbActivated, GaugeData) == 0x000008, "Member 'WBP_Crosshair_Cyberlimbs_Defiler_C_OnLimbActivated::GaugeData' has a wrong offset!");

}

