#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapZoneOverloading

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_MapZoneOverloading.WBP_MapZoneOverloading_C.ExecuteUbergraph_WBP_MapZoneOverloading
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewRadius;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading) == 0x000004, "Wrong alignment on WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading");
static_assert(sizeof(WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading) == 0x000008, "Wrong size on WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading");
static_assert(offsetof(WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading, EntryPoint) == 0x000000, "Member 'WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading, K2Node_Event_NewRadius) == 0x000004, "Member 'WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading::K2Node_Event_NewRadius' has a wrong offset!");

// Function WBP_MapZoneOverloading.WBP_MapZoneOverloading_C.OnRadiusChange
// 0x0004 (0x0004 - 0x0000)
struct WBP_MapZoneOverloading_C_OnRadiusChange final
{
public:
	float                                         NewRadius;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapZoneOverloading_C_OnRadiusChange) == 0x000004, "Wrong alignment on WBP_MapZoneOverloading_C_OnRadiusChange");
static_assert(sizeof(WBP_MapZoneOverloading_C_OnRadiusChange) == 0x000004, "Wrong size on WBP_MapZoneOverloading_C_OnRadiusChange");
static_assert(offsetof(WBP_MapZoneOverloading_C_OnRadiusChange, NewRadius) == 0x000000, "Member 'WBP_MapZoneOverloading_C_OnRadiusChange::NewRadius' has a wrong offset!");

}

