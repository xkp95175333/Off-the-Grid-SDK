#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharacterPanel_StackedProgressBar_DOS

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CharacterPanel_StackedProgressBar_DOS.WBP_CharacterPanel_StackedProgressBar_DOS_C
// 0x00C0 (0x03A0 - 0x02E0)
class UWBP_CharacterPanel_StackedProgressBar_DOS_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       BlinkingAnim_TopColorAlpha;                        // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 StackedProgressBarImage;                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        TargetProgress;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DesignerTopProgress;                               // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DesignerBottomProgress;                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           BottomProgressUpdateHandle;                        // 0x0310(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C68[0x4];                                     // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TopProgressUpdateHandle;                           // 0x0320(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MaterialInstance;                                  // 0x0328(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterialInstance;                           // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentBottomProgress;                             // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DelayBottomProgressUpdate;                         // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      TopColorCurve;                                     // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bBottomProgressUpdate;                             // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C69[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AnimationSpeedMultiplier;                          // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DesignerRegenPreview;                              // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C6A[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DesignerRegenPreviewRation;                        // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentTopProgress;                                // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 HealthRegenClass;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProgressDelay;                                     // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableForceStopProgressTop;                       // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableForceStopProgressBottom;                    // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C6B[0x6];                                     // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ProgressMax;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Apply_Style();
	void ApplyTopColor(float Param_TargetProgress, class UCurveLinearColor* ColorCurve);
	void ClearBottomTimer();
	void ClearTopTimer();
	void ExecuteUbergraph_WBP_CharacterPanel_StackedProgressBar_DOS(int32 EntryPoint);
	void ForceStopProgress(double NewTarget);
	void HandleRegenPreview(bool EnableRegenPreview, double RegenValueRatio);
	void InitBottomProgressUpdate();
	void InitTopProgressUpdate();
	void IsTargetProgresGreaterEqualThanBottomProgress(bool* Param_TargetProgress);
	void IsTargetProgresGreaterEqualThanTopProgress(bool* Param_TargetProgress);
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void SetRatio(double Ratio);
	void TrySetBottomProgress(float Value);
	void UpdateBottomProgressBar();
	void UpdateTopProgressBar();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CharacterPanel_StackedProgressBar_DOS_C">();
	}
	static class UWBP_CharacterPanel_StackedProgressBar_DOS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CharacterPanel_StackedProgressBar_DOS_C>();
	}
};
static_assert(alignof(UWBP_CharacterPanel_StackedProgressBar_DOS_C) == 0x000008, "Wrong alignment on UWBP_CharacterPanel_StackedProgressBar_DOS_C");
static_assert(sizeof(UWBP_CharacterPanel_StackedProgressBar_DOS_C) == 0x0003A0, "Wrong size on UWBP_CharacterPanel_StackedProgressBar_DOS_C");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, BlinkingAnim_TopColorAlpha) == 0x0002E8, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::BlinkingAnim_TopColorAlpha' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, StackedProgressBarImage) == 0x0002F0, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::StackedProgressBarImage' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, TargetProgress) == 0x0002F8, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::TargetProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, DesignerTopProgress) == 0x000300, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::DesignerTopProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, DesignerBottomProgress) == 0x000308, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::DesignerBottomProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, BottomProgressUpdateHandle) == 0x000310, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::BottomProgressUpdateHandle' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, Delta_Time) == 0x000318, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::Delta_Time' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, TopProgressUpdateHandle) == 0x000320, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::TopProgressUpdateHandle' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, MaterialInstance) == 0x000328, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::MaterialInstance' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, DynamicMaterialInstance) == 0x000330, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::DynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, CurrentBottomProgress) == 0x000338, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::CurrentBottomProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, DelayBottomProgressUpdate) == 0x000340, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::DelayBottomProgressUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, TopColorCurve) == 0x000348, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::TopColorCurve' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, bBottomProgressUpdate) == 0x000350, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::bBottomProgressUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, AnimationSpeedMultiplier) == 0x000358, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::AnimationSpeedMultiplier' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, DesignerRegenPreview) == 0x000360, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::DesignerRegenPreview' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, DesignerRegenPreviewRation) == 0x000368, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::DesignerRegenPreviewRation' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, CurrentTopProgress) == 0x000370, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::CurrentTopProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, HealthRegenClass) == 0x000378, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::HealthRegenClass' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, MaxHealth) == 0x000380, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::MaxHealth' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, ProgressDelay) == 0x000388, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::ProgressDelay' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, bEnableForceStopProgressTop) == 0x000390, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::bEnableForceStopProgressTop' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, bEnableForceStopProgressBottom) == 0x000391, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::bEnableForceStopProgressBottom' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterPanel_StackedProgressBar_DOS_C, ProgressMax) == 0x000398, "Member 'UWBP_CharacterPanel_StackedProgressBar_DOS_C::ProgressMax' has a wrong offset!");

}

