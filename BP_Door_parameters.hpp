#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SBaseDoorStyles_structs.hpp"


namespace SDK::Params
{

// Function BP_Door.BP_Door_C.BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature final
{
public:
	class AActor*                                 InteractedBy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UGzInteractableComponent*         Interactable;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature) == 0x000008, "Wrong alignment on BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature");
static_assert(sizeof(BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature) == 0x000010, "Wrong size on BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature");
static_assert(offsetof(BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature, InteractedBy) == 0x000000, "Member 'BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature::InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature, Interactable) == 0x000008, "Member 'BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature::Interactable' has a wrong offset!");

// Function BP_Door.BP_Door_C.Enable Right Door
// 0x0005 (0x0005 - 0x0000)
struct BP_Door_C_Enable_Right_Door final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_Enable_Right_Door) == 0x000001, "Wrong alignment on BP_Door_C_Enable_Right_Door");
static_assert(sizeof(BP_Door_C_Enable_Right_Door) == 0x000005, "Wrong size on BP_Door_C_Enable_Right_Door");
static_assert(offsetof(BP_Door_C_Enable_Right_Door, IsEnable) == 0x000000, "Member 'BP_Door_C_Enable_Right_Door::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Enable_Right_Door, Temp_byte_Variable) == 0x000001, "Member 'BP_Door_C_Enable_Right_Door::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Enable_Right_Door, Temp_byte_Variable_1) == 0x000002, "Member 'BP_Door_C_Enable_Right_Door::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Enable_Right_Door, Temp_bool_Variable) == 0x000003, "Member 'BP_Door_C_Enable_Right_Door::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Enable_Right_Door, K2Node_Select_Default) == 0x000004, "Member 'BP_Door_C_Enable_Right_Door::K2Node_Select_Default' has a wrong offset!");

// Function BP_Door.BP_Door_C.ExecuteUbergraph_BP_Door
// 0x0060 (0x0060 - 0x0000)
struct BP_Door_C_ExecuteUbergraph_BP_Door final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCloseState_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B2[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTransitionProgress_ReturnValue;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewLocked;                           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B3[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOpening;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B4[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_InteractedBy;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UGzInteractableComponent*         K2Node_ComponentBoundEvent_Interactable;           // 0x0030(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOpened;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B5[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_ReturnValue_1;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B6[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdatedDoorPosition_OpenProgress_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdatedDoorPosition_OpenProgress_ImplicitCast_1; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_ExecuteUbergraph_BP_Door) == 0x000008, "Wrong alignment on BP_Door_C_ExecuteUbergraph_BP_Door");
static_assert(sizeof(BP_Door_C_ExecuteUbergraph_BP_Door) == 0x000060, "Wrong size on BP_Door_C_ExecuteUbergraph_BP_Door");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, EntryPoint) == 0x000000, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsCloseState_ReturnValue) == 0x000004, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsCloseState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetTransitionProgress_ReturnValue) == 0x00000C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetTransitionProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsLocked_ReturnValue) == 0x000010, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_bNewLocked) == 0x000015, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_bNewLocked' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_bOpening) == 0x000020, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_bOpening' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_ComponentBoundEvent_InteractedBy) == 0x000028, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_ComponentBoundEvent_InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_ComponentBoundEvent_Interactable) == 0x000030, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_bOpened) == 0x000038, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_bOpened' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_SelectFloat_ReturnValue_1) == 0x000040, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsLocked_ReturnValue_1) == 0x000048, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsLocked_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_SelectFloat_B_ImplicitCast) == 0x000050, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_UpdatedDoorPosition_OpenProgress_ImplicitCast) == 0x000058, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_UpdatedDoorPosition_OpenProgress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_UpdatedDoorPosition_OpenProgress_ImplicitCast_1) == 0x00005C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_UpdatedDoorPosition_OpenProgress_ImplicitCast_1' has a wrong offset!");

// Function BP_Door.BP_Door_C.GetDoorSizeX
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Door_C_GetDoorSizeX final
{
public:
	class UStaticMesh*                            StaticMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        SizeX;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0010(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B7[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_GetDoorSizeX) == 0x000008, "Wrong alignment on BP_Door_C_GetDoorSizeX");
static_assert(sizeof(BP_Door_C_GetDoorSizeX) == 0x0000A0, "Wrong size on BP_Door_C_GetDoorSizeX");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, StaticMesh) == 0x000000, "Member 'BP_Door_C_GetDoorSizeX::StaticMesh' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, SizeX) == 0x000008, "Member 'BP_Door_C_GetDoorSizeX::SizeX' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, CallFunc_GetBounds_ReturnValue) == 0x000010, "Member 'BP_Door_C_GetDoorSizeX::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, CallFunc_BreakBoxSphereBounds_Origin) == 0x000048, "Member 'BP_Door_C_GetDoorSizeX::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x000060, "Member 'BP_Door_C_GetDoorSizeX::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x000078, "Member 'BP_Door_C_GetDoorSizeX::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, CallFunc_BreakVector_X) == 0x000080, "Member 'BP_Door_C_GetDoorSizeX::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_Door_C_GetDoorSizeX::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, CallFunc_BreakVector_Z) == 0x000090, "Member 'BP_Door_C_GetDoorSizeX::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorSizeX, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_Door_C_GetDoorSizeX::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.OpenTriggerShouldReact
// 0x0020 (0x0020 - 0x0000)
struct BP_Door_C_OpenTriggerShouldReact final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldReact;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         K2Node_DynamicCast_AsBP_NPC_Base;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OpenTriggerShouldReact) == 0x000008, "Wrong alignment on BP_Door_C_OpenTriggerShouldReact");
static_assert(sizeof(BP_Door_C_OpenTriggerShouldReact) == 0x000020, "Wrong size on BP_Door_C_OpenTriggerShouldReact");
static_assert(offsetof(BP_Door_C_OpenTriggerShouldReact, OverlappedActor) == 0x000000, "Member 'BP_Door_C_OpenTriggerShouldReact::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OpenTriggerShouldReact, ShouldReact) == 0x000008, "Member 'BP_Door_C_OpenTriggerShouldReact::ShouldReact' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OpenTriggerShouldReact, K2Node_DynamicCast_AsBP_NPC_Base) == 0x000010, "Member 'BP_Door_C_OpenTriggerShouldReact::K2Node_DynamicCast_AsBP_NPC_Base' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OpenTriggerShouldReact, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Door_C_OpenTriggerShouldReact::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OpenTriggerShouldReact, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_Door_C_OpenTriggerShouldReact::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OpenTriggerShouldReact, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'BP_Door_C_OpenTriggerShouldReact::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.PostSoundEvent
// 0x0040 (0x0040 - 0x0000)
struct BP_Door_C_PostSoundEvent final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenState_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B9[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69BA[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_PostSoundEvent) == 0x000008, "Wrong alignment on BP_Door_C_PostSoundEvent");
static_assert(sizeof(BP_Door_C_PostSoundEvent) == 0x000040, "Wrong size on BP_Door_C_PostSoundEvent");
static_assert(offsetof(BP_Door_C_PostSoundEvent, Temp_bool_Variable) == 0x000000, "Member 'BP_Door_C_PostSoundEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_PostSoundEvent, CallFunc_IsOpenState_ReturnValue) == 0x000001, "Member 'BP_Door_C_PostSoundEvent::CallFunc_IsOpenState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_PostSoundEvent, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_Door_C_PostSoundEvent::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_PostSoundEvent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_Door_C_PostSoundEvent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_PostSoundEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_Door_C_PostSoundEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_PostSoundEvent, K2Node_Select_Default) == 0x000030, "Member 'BP_Door_C_PostSoundEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Door_C_PostSoundEvent, CallFunc_PostEventAtLocation_ReturnValue) == 0x000038, "Member 'BP_Door_C_PostSoundEvent::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.ReceiveDynamicStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_C_ReceiveDynamicStateChanged final
{
public:
	bool                                          bOpening;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_ReceiveDynamicStateChanged) == 0x000001, "Wrong alignment on BP_Door_C_ReceiveDynamicStateChanged");
static_assert(sizeof(BP_Door_C_ReceiveDynamicStateChanged) == 0x000001, "Wrong size on BP_Door_C_ReceiveDynamicStateChanged");
static_assert(offsetof(BP_Door_C_ReceiveDynamicStateChanged, bOpening) == 0x000000, "Member 'BP_Door_C_ReceiveDynamicStateChanged::bOpening' has a wrong offset!");

// Function BP_Door.BP_Door_C.ReceiveLockedStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_C_ReceiveLockedStateChanged final
{
public:
	bool                                          bNewLocked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_ReceiveLockedStateChanged) == 0x000001, "Wrong alignment on BP_Door_C_ReceiveLockedStateChanged");
static_assert(sizeof(BP_Door_C_ReceiveLockedStateChanged) == 0x000001, "Wrong size on BP_Door_C_ReceiveLockedStateChanged");
static_assert(offsetof(BP_Door_C_ReceiveLockedStateChanged, bNewLocked) == 0x000000, "Member 'BP_Door_C_ReceiveLockedStateChanged::bNewLocked' has a wrong offset!");

// Function BP_Door.BP_Door_C.ReceiveStaticStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_C_ReceiveStaticStateChanged final
{
public:
	bool                                          bOpened;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_ReceiveStaticStateChanged) == 0x000001, "Wrong alignment on BP_Door_C_ReceiveStaticStateChanged");
static_assert(sizeof(BP_Door_C_ReceiveStaticStateChanged) == 0x000001, "Wrong size on BP_Door_C_ReceiveStaticStateChanged");
static_assert(offsetof(BP_Door_C_ReceiveStaticStateChanged, bOpened) == 0x000000, "Member 'BP_Door_C_ReceiveStaticStateChanged::bOpened' has a wrong offset!");

// Function BP_Door.BP_Door_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Door_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Door_C_ReceiveTick");
static_assert(sizeof(BP_Door_C_ReceiveTick) == 0x000004, "Wrong size on BP_Door_C_ReceiveTick");
static_assert(offsetof(BP_Door_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Door_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Door.BP_Door_C.Set Door Position X
// 0x01B8 (0x01B8 - 0x0000)
struct BP_Door_C_Set_Door_Position_X final
{
public:
	class UStaticMeshComponent*                   Self3;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpposite_;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69BB[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0010(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69BC[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00C0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Door_C_Set_Door_Position_X) == 0x000008, "Wrong alignment on BP_Door_C_Set_Door_Position_X");
static_assert(sizeof(BP_Door_C_Set_Door_Position_X) == 0x0001B8, "Wrong size on BP_Door_C_Set_Door_Position_X");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, Self3) == 0x000000, "Member 'BP_Door_C_Set_Door_Position_X::Self3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, bOpposite_) == 0x000008, "Member 'BP_Door_C_Set_Door_Position_X::bOpposite_' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_GetBounds_ReturnValue) == 0x000010, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_BreakBoxSphereBounds_Origin) == 0x000048, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x000060, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x000078, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_BreakVector_X) == 0x000080, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_BreakVector_Z) == 0x000090, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_Set_Door_Position_X, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000C0, "Member 'BP_Door_C_Set_Door_Position_X::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_Door.BP_Door_C.SetDoorPositions
// 0x01B8 (0x01B8 - 0x0000)
struct BP_Door_C_SetDoorPositions final
{
public:
	class UStaticMeshComponent*                   DoorComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Invert;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69BD[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Alpha;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69BE[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDoorSizeX_SizeX;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69BF[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpEaseInOut_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00C0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Door_C_SetDoorPositions) == 0x000008, "Wrong alignment on BP_Door_C_SetDoorPositions");
static_assert(sizeof(BP_Door_C_SetDoorPositions) == 0x0001B8, "Wrong size on BP_Door_C_SetDoorPositions");
static_assert(offsetof(BP_Door_C_SetDoorPositions, DoorComponent) == 0x000000, "Member 'BP_Door_C_SetDoorPositions::DoorComponent' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, Invert) == 0x000008, "Member 'BP_Door_C_SetDoorPositions::Invert' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, Alpha) == 0x000010, "Member 'BP_Door_C_SetDoorPositions::Alpha' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_BreakVector_X) == 0x000018, "Member 'BP_Door_C_SetDoorPositions::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_Door_C_SetDoorPositions::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_Door_C_SetDoorPositions::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Door_C_SetDoorPositions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_GetDoorSizeX_SizeX) == 0x000038, "Member 'BP_Door_C_SetDoorPositions::CallFunc_GetDoorSizeX_SizeX' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_BreakVector_X_1) == 0x000040, "Member 'BP_Door_C_SetDoorPositions::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_BreakVector_Y_1) == 0x000048, "Member 'BP_Door_C_SetDoorPositions::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_BreakVector_Z_1) == 0x000050, "Member 'BP_Door_C_SetDoorPositions::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'BP_Door_C_SetDoorPositions::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_BreakVector_X_2) == 0x000060, "Member 'BP_Door_C_SetDoorPositions::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_BreakVector_Y_2) == 0x000068, "Member 'BP_Door_C_SetDoorPositions::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_BreakVector_Z_2) == 0x000070, "Member 'BP_Door_C_SetDoorPositions::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_Door_C_SetDoorPositions::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'BP_Door_C_SetDoorPositions::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_FInterpEaseInOut_ReturnValue) == 0x000088, "Member 'BP_Door_C_SetDoorPositions::CallFunc_FInterpEaseInOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_Door_C_SetDoorPositions::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_SelectFloat_ReturnValue_1) == 0x000098, "Member 'BP_Door_C_SetDoorPositions::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Door_C_SetDoorPositions::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'BP_Door_C_SetDoorPositions::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositions, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000C0, "Member 'BP_Door_C_SetDoorPositions::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_Door.BP_Door_C.SetDoorPositionYMiddle
// 0x01C0 (0x01C0 - 0x0000)
struct BP_Door_C_SetDoorPositionYMiddle final
{
public:
	class UStaticMeshComponent*                   Param_SM_Door_Right;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Invert;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0010(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C1[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00C8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Door_C_SetDoorPositionYMiddle) == 0x000008, "Wrong alignment on BP_Door_C_SetDoorPositionYMiddle");
static_assert(sizeof(BP_Door_C_SetDoorPositionYMiddle) == 0x0001C0, "Wrong size on BP_Door_C_SetDoorPositionYMiddle");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, Param_SM_Door_Right) == 0x000000, "Member 'BP_Door_C_SetDoorPositionYMiddle::Param_SM_Door_Right' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, Invert) == 0x000008, "Member 'BP_Door_C_SetDoorPositionYMiddle::Invert' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_GetBounds_ReturnValue) == 0x000010, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_BreakBoxSphereBounds_Origin) == 0x000048, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x000060, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x000078, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_BreakVector_X) == 0x000080, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_BreakVector_Z) == 0x000090, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_SelectFloat_ReturnValue) == 0x0000A8, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetDoorPositionYMiddle, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000C8, "Member 'BP_Door_C_SetDoorPositionYMiddle::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_Door.BP_Door_C.SetInteractableMeshes
// 0x0030 (0x0030 - 0x0000)
struct BP_Door_C_SetInteractableMeshes final
{
public:
	TArray<class UMeshComponent*>                 NewItems;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_SetInteractableMeshes) == 0x000008, "Wrong alignment on BP_Door_C_SetInteractableMeshes");
static_assert(sizeof(BP_Door_C_SetInteractableMeshes) == 0x000030, "Wrong size on BP_Door_C_SetInteractableMeshes");
static_assert(offsetof(BP_Door_C_SetInteractableMeshes, NewItems) == 0x000000, "Member 'BP_Door_C_SetInteractableMeshes::NewItems' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetInteractableMeshes, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Door_C_SetInteractableMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetInteractableMeshes, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_Door_C_SetInteractableMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetInteractableMeshes, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Door_C_SetInteractableMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetInteractableMeshes, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Door_C_SetInteractableMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetInteractableMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_Door_C_SetInteractableMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_SetInteractableMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Door_C_SetInteractableMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.ShouldReactToOverlappedActor
// 0x0010 (0x0010 - 0x0000)
struct BP_Door_C_ShouldReactToOverlappedActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldReactToOverlappedActor_ReturnValue; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OpenTriggerShouldReact_ShouldReact;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_ShouldReactToOverlappedActor) == 0x000008, "Wrong alignment on BP_Door_C_ShouldReactToOverlappedActor");
static_assert(sizeof(BP_Door_C_ShouldReactToOverlappedActor) == 0x000010, "Wrong size on BP_Door_C_ShouldReactToOverlappedActor");
static_assert(offsetof(BP_Door_C_ShouldReactToOverlappedActor, Actor) == 0x000000, "Member 'BP_Door_C_ShouldReactToOverlappedActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ShouldReactToOverlappedActor, ReturnValue) == 0x000008, "Member 'BP_Door_C_ShouldReactToOverlappedActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ShouldReactToOverlappedActor, CallFunc_ShouldReactToOverlappedActor_ReturnValue) == 0x000009, "Member 'BP_Door_C_ShouldReactToOverlappedActor::CallFunc_ShouldReactToOverlappedActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ShouldReactToOverlappedActor, CallFunc_OpenTriggerShouldReact_ShouldReact) == 0x00000A, "Member 'BP_Door_C_ShouldReactToOverlappedActor::CallFunc_OpenTriggerShouldReact_ShouldReact' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ShouldReactToOverlappedActor, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_Door_C_ShouldReactToOverlappedActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.UpdatedDoorPosition
// 0x0018 (0x0018 - 0x0000)
struct BP_Door_C_UpdatedDoorPosition final
{
public:
	float                                         OpenProgress;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetDoorPositions_Alpha_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetDoorPositions_Alpha_ImplicitCast_1;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_UpdatedDoorPosition) == 0x000008, "Wrong alignment on BP_Door_C_UpdatedDoorPosition");
static_assert(sizeof(BP_Door_C_UpdatedDoorPosition) == 0x000018, "Wrong size on BP_Door_C_UpdatedDoorPosition");
static_assert(offsetof(BP_Door_C_UpdatedDoorPosition, OpenProgress) == 0x000000, "Member 'BP_Door_C_UpdatedDoorPosition::OpenProgress' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UpdatedDoorPosition, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_Door_C_UpdatedDoorPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UpdatedDoorPosition, CallFunc_SetDoorPositions_Alpha_ImplicitCast) == 0x000008, "Member 'BP_Door_C_UpdatedDoorPosition::CallFunc_SetDoorPositions_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UpdatedDoorPosition, CallFunc_SetDoorPositions_Alpha_ImplicitCast_1) == 0x000010, "Member 'BP_Door_C_UpdatedDoorPosition::CallFunc_SetDoorPositions_Alpha_ImplicitCast_1' has a wrong offset!");

// Function BP_Door.BP_Door_C.UserConstructionScript
// 0x02C8 (0x02C8 - 0x0000)
struct BP_Door_C_UserConstructionScript final
{
public:
	class UMeshComponent*                         Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBaseDoorStyles                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0048)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C6[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0060(0x0010)(NoDestructor)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C7[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0078(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0088(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C8[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x00A8(0x0010)(NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C9[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBaseDoorStyles                       CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00C0(0x0048)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69CA[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0110(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69CB[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_2;            // 0x0210(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69CC[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Temp_object_Variable_1;                            // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_4;              // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_5;              // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue_1;      // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69CD[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_2;       // 0x0238(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69CE[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_3;       // 0x0250(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69CF[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0264(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69D0[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_3;            // 0x0270(0x0010)(NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_6;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAutomaticDoor_ReturnValue;              // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0287(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69D1[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         K2Node_Select_Default;                             // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         K2Node_Select_Default_1;                           // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x02A0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array_1;                          // 0x02B0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_SetTransitionTime_Time_ImplicitCast;      // 0x02C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTransitionTime_Time_ImplicitCast_1;    // 0x02C4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Door_C_UserConstructionScript");
static_assert(sizeof(BP_Door_C_UserConstructionScript) == 0x0002C8, "Wrong size on BP_Door_C_UserConstructionScript");
static_assert(offsetof(BP_Door_C_UserConstructionScript, Temp_object_Variable) == 0x000000, "Member 'BP_Door_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'BP_Door_C_UserConstructionScript::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_Door_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_Door_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_MakeStruct_DataTableRowHandle) == 0x000060, "Member 'BP_Door_C_UserConstructionScript::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x000070, "Member 'BP_Door_C_UserConstructionScript::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000078, "Member 'BP_Door_C_UserConstructionScript::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000088, "Member 'BP_Door_C_UserConstructionScript::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_Door_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x00009C, "Member 'BP_Door_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_Door_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_MakeStruct_DataTableRowHandle_1) == 0x0000A8, "Member 'BP_Door_C_UserConstructionScript::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x0000B8, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0000B9, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000C0, "Member 'BP_Door_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000108, "Member 'BP_Door_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000110, "Member 'BP_Door_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000208, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_3) == 0x000209, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x00020A, "Member 'BP_Door_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess_1) == 0x00020B, "Member 'BP_Door_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_MakeStruct_DataTableRowHandle_2) == 0x000210, "Member 'BP_Door_C_UserConstructionScript::K2Node_MakeStruct_DataTableRowHandle_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess_2) == 0x000220, "Member 'BP_Door_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, Temp_object_Variable_1) == 0x000228, "Member 'BP_Door_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, Temp_bool_Variable) == 0x000230, "Member 'BP_Door_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000231, "Member 'BP_Door_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_4) == 0x000232, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_5) == 0x000233, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_DoesDataTableRowExist_ReturnValue_1) == 0x000234, "Member 'BP_Door_C_UserConstructionScript::CallFunc_DoesDataTableRowExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_GetDataTableRowNames_OutRowNames_2) == 0x000238, "Member 'BP_Door_C_UserConstructionScript::CallFunc_GetDataTableRowNames_OutRowNames_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x000248, "Member 'BP_Door_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_GetDataTableRowNames_OutRowNames_3) == 0x000250, "Member 'BP_Door_C_UserConstructionScript::CallFunc_GetDataTableRowNames_OutRowNames_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000260, "Member 'BP_Door_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000264, "Member 'BP_Door_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_MakeStruct_DataTableRowHandle_3) == 0x000270, "Member 'BP_Door_C_UserConstructionScript::K2Node_MakeStruct_DataTableRowHandle_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_6) == 0x000280, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess_3) == 0x000281, "Member 'BP_Door_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_IsAutomaticDoor_ReturnValue) == 0x000282, "Member 'BP_Door_C_UserConstructionScript::CallFunc_IsAutomaticDoor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000283, "Member 'BP_Door_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_HasAuthority_ReturnValue_1) == 0x000284, "Member 'BP_Door_C_UserConstructionScript::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_HasAuthority_ReturnValue_2) == 0x000285, "Member 'BP_Door_C_UserConstructionScript::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_HasAuthority_ReturnValue_3) == 0x000286, "Member 'BP_Door_C_UserConstructionScript::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, Temp_bool_Variable_1) == 0x000287, "Member 'BP_Door_C_UserConstructionScript::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000288, "Member 'BP_Door_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_Select_Default) == 0x000290, "Member 'BP_Door_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000298, "Member 'BP_Door_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x0002A0, "Member 'BP_Door_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_MakeArray_Array_1) == 0x0002B0, "Member 'BP_Door_C_UserConstructionScript::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetTransitionTime_Time_ImplicitCast) == 0x0002C0, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetTransitionTime_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetTransitionTime_Time_ImplicitCast_1) == 0x0002C4, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetTransitionTime_Time_ImplicitCast_1' has a wrong offset!");

}

