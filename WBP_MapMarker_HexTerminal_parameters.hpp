#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapMarker_HexTerminal

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_MapMarker_HexTerminal.WBP_MapMarker_HexTerminal_C.EndExtraction
// 0x0014 (0x0014 - 0x0000)
struct WBP_MapMarker_HexTerminal_C_EndExtraction final
{
public:
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B60[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_HexTerminal_C_EndExtraction) == 0x000004, "Wrong alignment on WBP_MapMarker_HexTerminal_C_EndExtraction");
static_assert(sizeof(WBP_MapMarker_HexTerminal_C_EndExtraction) == 0x000014, "Wrong size on WBP_MapMarker_HexTerminal_C_EndExtraction");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_EndExtraction, CallFunc_HasTag_ReturnValue) == 0x000000, "Member 'WBP_MapMarker_HexTerminal_C_EndExtraction::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_EndExtraction, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'WBP_MapMarker_HexTerminal_C_EndExtraction::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_MapMarker_HexTerminal.WBP_MapMarker_HexTerminal_C.ExecuteUbergraph_WBP_MapMarker_HexTerminal
// 0x0040 (0x0040 - 0x0000)
struct WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B61[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_HEX_Extractor_C*                    K2Node_DynamicCast_AsBP_HEX_Extractor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExtractingState_Value;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B62[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGzExtractionData& Current)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzExtractionData& Current)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal) == 0x000008, "Wrong alignment on WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal");
static_assert(sizeof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal) == 0x000040, "Wrong size on WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal, EntryPoint) == 0x000000, "Member 'WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal, K2Node_DynamicCast_AsBP_HEX_Extractor) == 0x000010, "Member 'WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal::K2Node_DynamicCast_AsBP_HEX_Extractor' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal, CallFunc_IsExtractingState_Value) == 0x000019, "Member 'WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal::CallFunc_IsExtractingState_Value' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_MapMarker_HexTerminal_C_ExecuteUbergraph_WBP_MapMarker_HexTerminal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_MapMarker_HexTerminal.WBP_MapMarker_HexTerminal_C.ExtractionDataChanged
// 0x0068 (0x0068 - 0x0000)
struct WBP_MapMarker_HexTerminal_C_ExtractionDataChanged final
{
public:
	struct FGzExtractionData                      Current;                                           // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B63[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_HexTerminal_C_ExtractionDataChanged) == 0x000008, "Wrong alignment on WBP_MapMarker_HexTerminal_C_ExtractionDataChanged");
static_assert(sizeof(WBP_MapMarker_HexTerminal_C_ExtractionDataChanged) == 0x000068, "Wrong size on WBP_MapMarker_HexTerminal_C_ExtractionDataChanged");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExtractionDataChanged, Current) == 0x000000, "Member 'WBP_MapMarker_HexTerminal_C_ExtractionDataChanged::Current' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExtractionDataChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'WBP_MapMarker_HexTerminal_C_ExtractionDataChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExtractionDataChanged, CallFunc_SelectColor_ReturnValue) == 0x000044, "Member 'WBP_MapMarker_HexTerminal_C_ExtractionDataChanged::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_ExtractionDataChanged, CallFunc_SelectColor_ReturnValue_1) == 0x000054, "Member 'WBP_MapMarker_HexTerminal_C_ExtractionDataChanged::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function WBP_MapMarker_HexTerminal.WBP_MapMarker_HexTerminal_C.Is Local Player In Extracting Team
// 0x0018 (0x0018 - 0x0000)
struct WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team final
{
public:
	bool                                          IsInTeam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B64[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team) == 0x000008, "Wrong alignment on WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team");
static_assert(sizeof(WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team) == 0x000018, "Wrong size on WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team, IsInTeam) == 0x000000, "Member 'WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team::IsInTeam' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team, Valid) == 0x000001, "Member 'WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team::Valid' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team, CallFunc_GetTeamAttitude_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'WBP_MapMarker_HexTerminal_C_Is_Local_Player_In_Extracting_Team::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_MapMarker_HexTerminal.WBP_MapMarker_HexTerminal_C.IsLocalPlayerClose
// 0x0058 (0x0058 - 0x0000)
struct WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B65[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Square_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose) == 0x000008, "Wrong alignment on WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose");
static_assert(sizeof(WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose) == 0x000058, "Wrong size on WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose, ReturnValue) == 0x000000, "Member 'WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose, CallFunc_Square_ReturnValue) == 0x000008, "Member 'WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000028, "Member 'WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000030, "Member 'WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000048, "Member 'WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_MapMarker_HexTerminal_C_IsLocalPlayerClose::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_MapMarker_HexTerminal.WBP_MapMarker_HexTerminal_C.StartExtraction
// 0x0058 (0x0058 - 0x0000)
struct WBP_MapMarker_HexTerminal_C_StartExtraction final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B66[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexInTeam_OutputPin;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeammateColorFromIndex_OutPlayerColor; // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Local_Player_In_Extracting_Team_IsInTeam; // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Local_Player_In_Extracting_Team_Valid; // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_HexTerminal_C_StartExtraction) == 0x000008, "Wrong alignment on WBP_MapMarker_HexTerminal_C_StartExtraction");
static_assert(sizeof(WBP_MapMarker_HexTerminal_C_StartExtraction) == 0x000058, "Wrong size on WBP_MapMarker_HexTerminal_C_StartExtraction");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_StartExtraction, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MapMarker_HexTerminal_C_StartExtraction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_StartExtraction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'WBP_MapMarker_HexTerminal_C_StartExtraction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_StartExtraction, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WBP_MapMarker_HexTerminal_C_StartExtraction::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_StartExtraction, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'WBP_MapMarker_HexTerminal_C_StartExtraction::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_StartExtraction, CallFunc_SelectColor_ReturnValue_1) == 0x000030, "Member 'WBP_MapMarker_HexTerminal_C_StartExtraction::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_StartExtraction, CallFunc_GetIndexInTeam_OutputPin) == 0x000040, "Member 'WBP_MapMarker_HexTerminal_C_StartExtraction::CallFunc_GetIndexInTeam_OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_StartExtraction, CallFunc_GetTeammateColorFromIndex_OutPlayerColor) == 0x000044, "Member 'WBP_MapMarker_HexTerminal_C_StartExtraction::CallFunc_GetTeammateColorFromIndex_OutPlayerColor' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_StartExtraction, CallFunc_Is_Local_Player_In_Extracting_Team_IsInTeam) == 0x000054, "Member 'WBP_MapMarker_HexTerminal_C_StartExtraction::CallFunc_Is_Local_Player_In_Extracting_Team_IsInTeam' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_StartExtraction, CallFunc_Is_Local_Player_In_Extracting_Team_Valid) == 0x000055, "Member 'WBP_MapMarker_HexTerminal_C_StartExtraction::CallFunc_Is_Local_Player_In_Extracting_Team_Valid' has a wrong offset!");

// Function WBP_MapMarker_HexTerminal.WBP_MapMarker_HexTerminal_C.UpdateProgress
// 0x0008 (0x0008 - 0x0000)
struct WBP_MapMarker_HexTerminal_C_UpdateProgress final
{
public:
	bool                                          CallFunc_IsLocalPlayerClose_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B67[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetProgress_Percent__0_1__ImplicitCast;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapMarker_HexTerminal_C_UpdateProgress) == 0x000004, "Wrong alignment on WBP_MapMarker_HexTerminal_C_UpdateProgress");
static_assert(sizeof(WBP_MapMarker_HexTerminal_C_UpdateProgress) == 0x000008, "Wrong size on WBP_MapMarker_HexTerminal_C_UpdateProgress");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_UpdateProgress, CallFunc_IsLocalPlayerClose_ReturnValue) == 0x000000, "Member 'WBP_MapMarker_HexTerminal_C_UpdateProgress::CallFunc_IsLocalPlayerClose_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_UpdateProgress, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_MapMarker_HexTerminal_C_UpdateProgress::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapMarker_HexTerminal_C_UpdateProgress, CallFunc_SetProgress_Percent__0_1__ImplicitCast) == 0x000004, "Member 'WBP_MapMarker_HexTerminal_C_UpdateProgress::CallFunc_SetProgress_Percent__0_1__ImplicitCast' has a wrong offset!");

}

