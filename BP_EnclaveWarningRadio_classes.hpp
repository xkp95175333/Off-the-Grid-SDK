#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnclaveWarningRadio

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EnclaveWarningRadio.BP_EnclaveWarningRadio_C
// 0x0028 (0x02C8 - 0x02A0)
class ABP_EnclaveWarningRadio_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_Component_Triggerable_C*            BP_Component_Triggerable;                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaying;                                         // 0x02C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void PlaySound(class UAkAudioEvent* AkEvent);
	void PlayAudio();
	void OnRep_IsPlaying();
	void ExecuteUbergraph_BP_EnclaveWarningRadio(int32 EntryPoint);
	void BndEvt__BP_EnclaveWarningRadio_BP_Component_Triggerable_K2Node_ComponentBoundEvent_0_Triggered__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EnclaveWarningRadio_C">();
	}
	static class ABP_EnclaveWarningRadio_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EnclaveWarningRadio_C>();
	}
};
static_assert(alignof(ABP_EnclaveWarningRadio_C) == 0x000008, "Wrong alignment on ABP_EnclaveWarningRadio_C");
static_assert(sizeof(ABP_EnclaveWarningRadio_C) == 0x0002C8, "Wrong size on ABP_EnclaveWarningRadio_C");
static_assert(offsetof(ABP_EnclaveWarningRadio_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_EnclaveWarningRadio_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EnclaveWarningRadio_C, BP_Component_Triggerable) == 0x0002A8, "Member 'ABP_EnclaveWarningRadio_C::BP_Component_Triggerable' has a wrong offset!");
static_assert(offsetof(ABP_EnclaveWarningRadio_C, Sphere) == 0x0002B0, "Member 'ABP_EnclaveWarningRadio_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_EnclaveWarningRadio_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_EnclaveWarningRadio_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EnclaveWarningRadio_C, IsPlaying) == 0x0002C0, "Member 'ABP_EnclaveWarningRadio_C::IsPlaying' has a wrong offset!");

}

