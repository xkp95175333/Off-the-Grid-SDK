#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_WPN_LMG02

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_WPN_LMG02.ABP_WPN_LMG02_C
// 0x00C0 (0x0430 - 0x0370)
class UABP_WPN_LMG02_C final : public UAnimInstance
{
public:
	uint8                                         Pad_5AD0[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x03A8(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x03F0(0x0040)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_WPN_LMG02(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_WPN_LMG02_C">();
	}
	static class UABP_WPN_LMG02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_WPN_LMG02_C>();
	}
};
static_assert(alignof(UABP_WPN_LMG02_C) == 0x000010, "Wrong alignment on UABP_WPN_LMG02_C");
static_assert(sizeof(UABP_WPN_LMG02_C) == 0x000430, "Wrong size on UABP_WPN_LMG02_C");
static_assert(offsetof(UABP_WPN_LMG02_C, UberGraphFrame) == 0x000370, "Member 'UABP_WPN_LMG02_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_WPN_LMG02_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_WPN_LMG02_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_WPN_LMG02_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_WPN_LMG02_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_WPN_LMG02_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_WPN_LMG02_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_WPN_LMG02_C, AnimGraphNode_Slot) == 0x0003A8, "Member 'UABP_WPN_LMG02_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_WPN_LMG02_C, AnimGraphNode_SequenceEvaluator) == 0x0003F0, "Member 'UABP_WPN_LMG02_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");

}

