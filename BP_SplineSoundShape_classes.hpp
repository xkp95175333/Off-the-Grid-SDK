#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineSoundShape

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SplineSoundShape.BP_SplineSoundShape_C
// 0x0050 (0x02F0 - 0x02A0)
class ABP_SplineSoundShape_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AkComponent;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     SplineTansforms;                                   // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SplinePartitionFactor;                             // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          AreaEmittingSound;                                 // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_68DE[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Polygon_Border;                                    // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Debug;                                             // 0x02E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SplineSoundShape(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SplineSoundShape_C">();
	}
	static class ABP_SplineSoundShape_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SplineSoundShape_C>();
	}
};
static_assert(alignof(ABP_SplineSoundShape_C) == 0x000008, "Wrong alignment on ABP_SplineSoundShape_C");
static_assert(sizeof(ABP_SplineSoundShape_C) == 0x0002F0, "Wrong size on ABP_SplineSoundShape_C");
static_assert(offsetof(ABP_SplineSoundShape_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_SplineSoundShape_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SplineSoundShape_C, AkComponent) == 0x0002A8, "Member 'ABP_SplineSoundShape_C::AkComponent' has a wrong offset!");
static_assert(offsetof(ABP_SplineSoundShape_C, Spline) == 0x0002B0, "Member 'ABP_SplineSoundShape_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_SplineSoundShape_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_SplineSoundShape_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SplineSoundShape_C, SplineTansforms) == 0x0002C0, "Member 'ABP_SplineSoundShape_C::SplineTansforms' has a wrong offset!");
static_assert(offsetof(ABP_SplineSoundShape_C, SplinePartitionFactor) == 0x0002D0, "Member 'ABP_SplineSoundShape_C::SplinePartitionFactor' has a wrong offset!");
static_assert(offsetof(ABP_SplineSoundShape_C, AreaEmittingSound) == 0x0002D4, "Member 'ABP_SplineSoundShape_C::AreaEmittingSound' has a wrong offset!");
static_assert(offsetof(ABP_SplineSoundShape_C, Polygon_Border) == 0x0002D8, "Member 'ABP_SplineSoundShape_C::Polygon_Border' has a wrong offset!");
static_assert(offsetof(ABP_SplineSoundShape_C, Debug) == 0x0002E8, "Member 'ABP_SplineSoundShape_C::Debug' has a wrong offset!");

}

