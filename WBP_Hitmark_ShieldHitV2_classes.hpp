#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Hitmark_ShieldHitV2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WBP_Hitmark_V2_Base_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Hitmark_ShieldHitV2.WBP_Hitmark_ShieldHitV2_C
// 0x0028 (0x0330 - 0x0308)
class UWBP_Hitmark_ShieldHitV2_C final : public UWBP_Hitmark_V2_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_Hitmark_ShieldHitV2_C;          // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_Hitmark_Leaf_C*                    WBP_Hitmark_Leaf_BL;                               // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Hitmark_Leaf_C*                    WBP_Hitmark_Leaf_BR;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Hitmark_Leaf_C*                    WBP_Hitmark_Leaf_TL;                               // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Hitmark_Leaf_C*                    WBP_Hitmark_Leaf_TR;                               // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Hitmark_ShieldHitV2(int32 EntryPoint);
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);

	class UWidgetAnimation* GetDisplayAnimation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Hitmark_ShieldHitV2_C">();
	}
	static class UWBP_Hitmark_ShieldHitV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Hitmark_ShieldHitV2_C>();
	}
};
static_assert(alignof(UWBP_Hitmark_ShieldHitV2_C) == 0x000008, "Wrong alignment on UWBP_Hitmark_ShieldHitV2_C");
static_assert(sizeof(UWBP_Hitmark_ShieldHitV2_C) == 0x000330, "Wrong size on UWBP_Hitmark_ShieldHitV2_C");
static_assert(offsetof(UWBP_Hitmark_ShieldHitV2_C, UberGraphFrame_WBP_Hitmark_ShieldHitV2_C) == 0x000308, "Member 'UWBP_Hitmark_ShieldHitV2_C::UberGraphFrame_WBP_Hitmark_ShieldHitV2_C' has a wrong offset!");
static_assert(offsetof(UWBP_Hitmark_ShieldHitV2_C, WBP_Hitmark_Leaf_BL) == 0x000310, "Member 'UWBP_Hitmark_ShieldHitV2_C::WBP_Hitmark_Leaf_BL' has a wrong offset!");
static_assert(offsetof(UWBP_Hitmark_ShieldHitV2_C, WBP_Hitmark_Leaf_BR) == 0x000318, "Member 'UWBP_Hitmark_ShieldHitV2_C::WBP_Hitmark_Leaf_BR' has a wrong offset!");
static_assert(offsetof(UWBP_Hitmark_ShieldHitV2_C, WBP_Hitmark_Leaf_TL) == 0x000320, "Member 'UWBP_Hitmark_ShieldHitV2_C::WBP_Hitmark_Leaf_TL' has a wrong offset!");
static_assert(offsetof(UWBP_Hitmark_ShieldHitV2_C, WBP_Hitmark_Leaf_TR) == 0x000328, "Member 'UWBP_Hitmark_ShieldHitV2_C::WBP_Hitmark_Leaf_TR' has a wrong offset!");

}

