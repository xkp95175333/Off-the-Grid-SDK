#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProgressionSubsystem

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ProgressionSubsystem.BP_ProgressionSubsystem_C.CalculateBaseXp
// 0x0008 (0x0008 - 0x0000)
struct BP_ProgressionSubsystem_C_CalculateBaseXp final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProgressionSubsystem_C_CalculateBaseXp) == 0x000004, "Wrong alignment on BP_ProgressionSubsystem_C_CalculateBaseXp");
static_assert(sizeof(BP_ProgressionSubsystem_C_CalculateBaseXp) == 0x000008, "Wrong size on BP_ProgressionSubsystem_C_CalculateBaseXp");
static_assert(offsetof(BP_ProgressionSubsystem_C_CalculateBaseXp, PlayerId) == 0x000000, "Member 'BP_ProgressionSubsystem_C_CalculateBaseXp::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_ProgressionSubsystem_C_CalculateBaseXp, ReturnValue) == 0x000004, "Member 'BP_ProgressionSubsystem_C_CalculateBaseXp::ReturnValue' has a wrong offset!");

// Function BP_ProgressionSubsystem.BP_ProgressionSubsystem_C.CalculateBaseSoftCurrency
// 0x0008 (0x0008 - 0x0000)
struct BP_ProgressionSubsystem_C_CalculateBaseSoftCurrency final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProgressionSubsystem_C_CalculateBaseSoftCurrency) == 0x000004, "Wrong alignment on BP_ProgressionSubsystem_C_CalculateBaseSoftCurrency");
static_assert(sizeof(BP_ProgressionSubsystem_C_CalculateBaseSoftCurrency) == 0x000008, "Wrong size on BP_ProgressionSubsystem_C_CalculateBaseSoftCurrency");
static_assert(offsetof(BP_ProgressionSubsystem_C_CalculateBaseSoftCurrency, PlayerId) == 0x000000, "Member 'BP_ProgressionSubsystem_C_CalculateBaseSoftCurrency::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_ProgressionSubsystem_C_CalculateBaseSoftCurrency, ReturnValue) == 0x000004, "Member 'BP_ProgressionSubsystem_C_CalculateBaseSoftCurrency::ReturnValue' has a wrong offset!");

// Function BP_ProgressionSubsystem.BP_ProgressionSubsystem_C.CalculateBaseHardCurrency
// 0x0010 (0x0010 - 0x0000)
struct BP_ProgressionSubsystem_C_CalculateBaseHardCurrency final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67ED[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProgressionSubsystem_C_CalculateBaseHardCurrency) == 0x000008, "Wrong alignment on BP_ProgressionSubsystem_C_CalculateBaseHardCurrency");
static_assert(sizeof(BP_ProgressionSubsystem_C_CalculateBaseHardCurrency) == 0x000010, "Wrong size on BP_ProgressionSubsystem_C_CalculateBaseHardCurrency");
static_assert(offsetof(BP_ProgressionSubsystem_C_CalculateBaseHardCurrency, PlayerId) == 0x000000, "Member 'BP_ProgressionSubsystem_C_CalculateBaseHardCurrency::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_ProgressionSubsystem_C_CalculateBaseHardCurrency, ReturnValue) == 0x000008, "Member 'BP_ProgressionSubsystem_C_CalculateBaseHardCurrency::ReturnValue' has a wrong offset!");

}

