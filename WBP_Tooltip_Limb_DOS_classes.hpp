#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Tooltip_Limb_DOS

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "WBP_BaseTooltip_classes.hpp"
#include "G01_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Tooltip_Limb_DOS.WBP_Tooltip_Limb_DOS_C
// 0x0058 (0x0340 - 0x02E8)
class UWBP_Tooltip_Limb_DOS_C final : public UWBP_BaseTooltip_C
{
public:
	class UGzTextBlock*                           LimbDescription_GzText;                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quality_Image;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemImage_C*                       WBP_ItemImage;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Tooltip_Limb_LimbType_C*           WBP_Tooltip_Limb_LimbType;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TooltipDetailsPanel_C*             WBP_TooltipDetailsPanel;                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FText>                           LimbSide;                                          // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           HealthColor;                                       // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DamageColor;                                       // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InitLimbSetup(class UGzBodyPartItemData* LimbItemData);
	void UpdateInteractBlock(bool bCanInteract);
	void UpdateLimbType(class UGzBodyPartItemData* LimbItemData);
	void UpdateTooltip();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Tooltip_Limb_DOS_C">();
	}
	static class UWBP_Tooltip_Limb_DOS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Tooltip_Limb_DOS_C>();
	}
};
static_assert(alignof(UWBP_Tooltip_Limb_DOS_C) == 0x000008, "Wrong alignment on UWBP_Tooltip_Limb_DOS_C");
static_assert(sizeof(UWBP_Tooltip_Limb_DOS_C) == 0x000340, "Wrong size on UWBP_Tooltip_Limb_DOS_C");
static_assert(offsetof(UWBP_Tooltip_Limb_DOS_C, LimbDescription_GzText) == 0x0002E8, "Member 'UWBP_Tooltip_Limb_DOS_C::LimbDescription_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_Limb_DOS_C, Quality_Image) == 0x0002F0, "Member 'UWBP_Tooltip_Limb_DOS_C::Quality_Image' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_Limb_DOS_C, WBP_ItemImage) == 0x0002F8, "Member 'UWBP_Tooltip_Limb_DOS_C::WBP_ItemImage' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_Limb_DOS_C, WBP_Tooltip_Limb_LimbType) == 0x000300, "Member 'UWBP_Tooltip_Limb_DOS_C::WBP_Tooltip_Limb_LimbType' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_Limb_DOS_C, WBP_TooltipDetailsPanel) == 0x000308, "Member 'UWBP_Tooltip_Limb_DOS_C::WBP_TooltipDetailsPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_Limb_DOS_C, LimbSide) == 0x000310, "Member 'UWBP_Tooltip_Limb_DOS_C::LimbSide' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_Limb_DOS_C, HealthColor) == 0x000320, "Member 'UWBP_Tooltip_Limb_DOS_C::HealthColor' has a wrong offset!");
static_assert(offsetof(UWBP_Tooltip_Limb_DOS_C, DamageColor) == 0x000330, "Member 'UWBP_Tooltip_Limb_DOS_C::DamageColor' has a wrong offset!");

}

