#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChallengeComponent

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.OnChallengeProgressed
// 0x0020 (0x0020 - 0x0000)
struct WBP_ChallengeComponent_C_OnChallengeProgressed final
{
public:
	struct FGzGameplayTrial                       ProgresseddChallenge;                              // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_ChallengeComponent_C_OnChallengeProgressed) == 0x000008, "Wrong alignment on WBP_ChallengeComponent_C_OnChallengeProgressed");
static_assert(sizeof(WBP_ChallengeComponent_C_OnChallengeProgressed) == 0x000020, "Wrong size on WBP_ChallengeComponent_C_OnChallengeProgressed");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeProgressed, ProgresseddChallenge) == 0x000000, "Member 'WBP_ChallengeComponent_C_OnChallengeProgressed::ProgresseddChallenge' has a wrong offset!");

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.OnChallengeCompleted
// 0x0048 (0x0048 - 0x0000)
struct WBP_ChallengeComponent_C_OnChallengeCompleted final
{
public:
	const class UGzChallengeTemplate*             CompletedChallengeTemplate;                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalThisTrialIndex;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE4[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE5[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE6[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ChallengeEntry_C*                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE7[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzTrialTemplate*                       CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE8[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeComponent_C_OnChallengeCompleted) == 0x000008, "Wrong alignment on WBP_ChallengeComponent_C_OnChallengeCompleted");
static_assert(sizeof(WBP_ChallengeComponent_C_OnChallengeCompleted) == 0x000048, "Wrong size on WBP_ChallengeComponent_C_OnChallengeCompleted");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CompletedChallengeTemplate) == 0x000000, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CompletedChallengeTemplate' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, LocalThisTrialIndex) == 0x000008, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::LocalThisTrialIndex' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00002C, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeCompleted, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'WBP_ChallengeComponent_C_OnChallengeCompleted::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.OnChallengeAdded
// 0x0020 (0x0020 - 0x0000)
struct WBP_ChallengeComponent_C_OnChallengeAdded final
{
public:
	struct FGzGameplayTrial                       AddedChallenge;                                    // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_ChallengeComponent_C_OnChallengeAdded) == 0x000008, "Wrong alignment on WBP_ChallengeComponent_C_OnChallengeAdded");
static_assert(sizeof(WBP_ChallengeComponent_C_OnChallengeAdded) == 0x000020, "Wrong size on WBP_ChallengeComponent_C_OnChallengeAdded");
static_assert(offsetof(WBP_ChallengeComponent_C_OnChallengeAdded, AddedChallenge) == 0x000000, "Member 'WBP_ChallengeComponent_C_OnChallengeAdded::AddedChallenge' has a wrong offset!");

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.OnAchievementStageCompleted
// 0x0070 (0x0070 - 0x0000)
struct WBP_ChallengeComponent_C_OnAchievementStageCompleted final
{
public:
	const class UGzAchievementTemplate*           CompletedAchievementTemplate;                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CompletedStageIdx;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalThisTrialIndex;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EEA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ChallengeEntry_C*                  CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EEB[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ChallengeEntry_C*                  CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EEC[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EED[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeComponent_C_OnAchievementStageCompleted) == 0x000008, "Wrong alignment on WBP_ChallengeComponent_C_OnAchievementStageCompleted");
static_assert(sizeof(WBP_ChallengeComponent_C_OnAchievementStageCompleted) == 0x000070, "Wrong size on WBP_ChallengeComponent_C_OnAchievementStageCompleted");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CompletedAchievementTemplate) == 0x000000, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CompletedAchievementTemplate' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CompletedStageIdx) == 0x000008, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CompletedStageIdx' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, LocalThisTrialIndex) == 0x00000C, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::LocalThisTrialIndex' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Array_Add_ReturnValue_1) == 0x000040, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000054, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_OnAchievementStageCompleted, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'WBP_ChallengeComponent_C_OnAchievementStageCompleted::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.ExecuteUbergraph_WBP_ChallengeComponent
// 0x0100 (0x0100 - 0x0000)
struct WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzGameplayTrial& AddedChallenge)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzGameplayTrial& ProgresseddChallenge)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGzChallengeTemplate* CompletedChallengeTemplate)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGzAchievementTemplate* CompletedAchievementTemplate, int32 CompletedStageIdx)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0048(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameRuleEnabled_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EEE[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UGzAchievementTemplate* CompletedAchievementTemplate, int32 CompletedStageIdx)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzGameplayTrial& AddedChallenge)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGzChallengeTemplate* CompletedChallengeTemplate)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGzGameplayTrial& ProgresseddChallenge)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzTrialsControllerComponent*           CallFunc_GetComponentByClass_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EEF[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGzGameplayTrial>               CallFunc_GetOwnedTrials_ReturnValue;               // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	struct FGzGameplayTrial                       CallFunc_Array_Get_Item;                           // 0x00D8(0x0020)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent) == 0x000008, "Wrong alignment on WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent");
static_assert(sizeof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent) == 0x000100, "Wrong size on WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, EntryPoint) == 0x000000, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, Temp_struct_Variable) == 0x000048, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_IsGameRuleEnabled_ReturnValue) == 0x000054, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_IsGameRuleEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x000058, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_CreateDelegate_OutputDelegate_5) == 0x000068, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_CreateDelegate_OutputDelegate_6) == 0x000078, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_CreateDelegate_OutputDelegate_7) == 0x000088, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_GetOwningPlayer_ReturnValue) == 0x000098, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_ComponentBoundEvent_Button_2) == 0x0000A0, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A8, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_ComponentBoundEvent_Button_1) == 0x0000B0, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, Temp_int_Array_Index_Variable) == 0x0000BC, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, K2Node_ComponentBoundEvent_Button) == 0x0000C0, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_GetOwnedTrials_ReturnValue) == 0x0000C8, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_GetOwnedTrials_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000FD, "Member 'WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.AddOrUpdateTrialEntry
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_ChallengeComponent_C_AddOrUpdateTrialEntry final
{
public:
	struct FGzGameplayTrial                       TrialToProcess;                                    // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	int32                                         LocalSearchTrialIdx;                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzGameplayTrial                       LocalProcessedTrial;                               // 0x0028(0x0020)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF1[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzTrialTemplate*                       CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF2[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ChallengeEntry_C*                  CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ChallengeEntry_C*                  CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzChallengeTemplate*                   K2Node_DynamicCast_AsGz_Challenge_Template;        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF3[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_2;                   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF4[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF5[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry) == 0x000008, "Wrong alignment on WBP_ChallengeComponent_C_AddOrUpdateTrialEntry");
static_assert(sizeof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry) == 0x0000C0, "Wrong size on WBP_ChallengeComponent_C_AddOrUpdateTrialEntry");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, TrialToProcess) == 0x000000, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::TrialToProcess' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, LocalSearchTrialIdx) == 0x000020, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::LocalSearchTrialIdx' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, LocalProcessedTrial) == 0x000028, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::LocalProcessedTrial' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, Temp_int_Array_Index_Variable) == 0x000048, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, Temp_bool_True_if_break_was_hit_Variable) == 0x00004C, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004E, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00005C, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_GetPlayerController_ReturnValue) == 0x000068, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_Create_ReturnValue) == 0x000070, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_AddChild_ReturnValue) == 0x000078, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_AddChild_ReturnValue_1) == 0x000080, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, K2Node_DynamicCast_AsGz_Challenge_Template) == 0x000088, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::K2Node_DynamicCast_AsGz_Challenge_Template' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_AddChild_ReturnValue_2) == 0x000098, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_AddChild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A1, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_Array_Add_ReturnValue_1) == 0x0000AC, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChallengeComponent_C_AddOrUpdateTrialEntry, CallFunc_BooleanAND_ReturnValue) == 0x0000B8, "Member 'WBP_ChallengeComponent_C_AddOrUpdateTrialEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

