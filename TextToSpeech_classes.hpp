#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TextToSpeech

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class TextToSpeech.TextToSpeechEngineSubsystem
// 0x0050 (0x0080 - 0x0030)
class UTextToSpeechEngineSubsystem final : public UEngineSubsystem
{
public:
	uint8                                         Pad_4900[0x50];                                    // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateAllChannels();
	void ActivateChannel(class FName InChannelId);
	void AddCustomChannel(class FName InNewChannelId);
	void AddDefaultChannel(class FName InNewChannelId);
	void DeactivateAllChannels();
	void DeactivateChannel(class FName InChannelId);
	float GetVolumeOnChannel(class FName InChannelId);
	void MuteChannel(class FName InChannelId);
	void RemoveAllChannels();
	void RemoveChannel(class FName InChannelId);
	void SetRateOnChannel(class FName InChannelId, float InRate);
	void SetVolumeOnChannel(class FName InChannelId, float InVolume);
	void SpeakOnChannel(class FName InChannelId, class FString& InStringToSpeak);
	void StopSpeakingOnAllChannels();
	void StopSpeakingOnChannel(class FName InChannelId);
	void UnmuteChannel(class FName InChannelId);

	bool DoesChannelExist(class FName InChannelId) const;
	int32 GetNumChannels() const;
	float GetRateOnChannel(class FName InChannelId) const;
	bool IsChannelActive(class FName InChannelId) const;
	bool IsChannelMuted(class FName InChannelId) const;
	bool IsSpeakingOnChannel(class FName InChannelId) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TextToSpeechEngineSubsystem">();
	}
	static class UTextToSpeechEngineSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTextToSpeechEngineSubsystem>();
	}
};
static_assert(alignof(UTextToSpeechEngineSubsystem) == 0x000008, "Wrong alignment on UTextToSpeechEngineSubsystem");
static_assert(sizeof(UTextToSpeechEngineSubsystem) == 0x000080, "Wrong size on UTextToSpeechEngineSubsystem");

}

