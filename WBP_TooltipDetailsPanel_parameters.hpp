#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TooltipDetailsPanel

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_TooltipDetailsPanel.WBP_TooltipDetailsPanel_C.ExecuteUbergraph_WBP_TooltipDetailsPanel
// 0x0010 (0x0010 - 0x0000)
struct WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel) == 0x000004, "Wrong alignment on WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel");
static_assert(sizeof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel) == 0x000010, "Wrong size on WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, EntryPoint) == 0x000000, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, Temp_bool_Variable) == 0x000004, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, Temp_byte_Variable) == 0x000005, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, Temp_byte_Variable_3) == 0x000009, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, K2Node_Event_IsDesignTime) == 0x00000A, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, K2Node_Select_Default) == 0x00000B, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel, K2Node_Select_Default_1) == 0x00000C, "Member 'WBP_TooltipDetailsPanel_C_ExecuteUbergraph_WBP_TooltipDetailsPanel::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_TooltipDetailsPanel.WBP_TooltipDetailsPanel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TooltipDetailsPanel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipDetailsPanel_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TooltipDetailsPanel_C_PreConstruct");
static_assert(sizeof(WBP_TooltipDetailsPanel_C_PreConstruct) == 0x000001, "Wrong size on WBP_TooltipDetailsPanel_C_PreConstruct");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TooltipDetailsPanel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TooltipDetailsPanel.WBP_TooltipDetailsPanel_C.SetDetailsFromItemAsset
// 0x0010 (0x0010 - 0x0000)
struct WBP_TooltipDetailsPanel_C_SetDetailsFromItemAsset final
{
public:
	class UGzItemData*                            ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipDetailsPanel_C_SetDetailsFromItemAsset) == 0x000008, "Wrong alignment on WBP_TooltipDetailsPanel_C_SetDetailsFromItemAsset");
static_assert(sizeof(WBP_TooltipDetailsPanel_C_SetDetailsFromItemAsset) == 0x000010, "Wrong size on WBP_TooltipDetailsPanel_C_SetDetailsFromItemAsset");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetDetailsFromItemAsset, ItemData) == 0x000000, "Member 'WBP_TooltipDetailsPanel_C_SetDetailsFromItemAsset::ItemData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetDetailsFromItemAsset, CallFunc_GetRarity_ReturnValue) == 0x000008, "Member 'WBP_TooltipDetailsPanel_C_SetDetailsFromItemAsset::CallFunc_GetRarity_ReturnValue' has a wrong offset!");

// Function WBP_TooltipDetailsPanel.WBP_TooltipDetailsPanel_C.SetEnableRarity
// 0x0006 (0x0006 - 0x0000)
struct WBP_TooltipDetailsPanel_C_SetEnableRarity final
{
public:
	bool                                          Param_bEnableRarity;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 NewRarity;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipDetailsPanel_C_SetEnableRarity) == 0x000001, "Wrong alignment on WBP_TooltipDetailsPanel_C_SetEnableRarity");
static_assert(sizeof(WBP_TooltipDetailsPanel_C_SetEnableRarity) == 0x000006, "Wrong size on WBP_TooltipDetailsPanel_C_SetEnableRarity");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetEnableRarity, Param_bEnableRarity) == 0x000000, "Member 'WBP_TooltipDetailsPanel_C_SetEnableRarity::Param_bEnableRarity' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetEnableRarity, NewRarity) == 0x000001, "Member 'WBP_TooltipDetailsPanel_C_SetEnableRarity::NewRarity' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetEnableRarity, Temp_bool_Variable) == 0x000002, "Member 'WBP_TooltipDetailsPanel_C_SetEnableRarity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetEnableRarity, Temp_byte_Variable) == 0x000003, "Member 'WBP_TooltipDetailsPanel_C_SetEnableRarity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetEnableRarity, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_TooltipDetailsPanel_C_SetEnableRarity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetEnableRarity, K2Node_Select_Default) == 0x000005, "Member 'WBP_TooltipDetailsPanel_C_SetEnableRarity::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TooltipDetailsPanel.WBP_TooltipDetailsPanel_C.SetItemCount
// 0x0018 (0x0018 - 0x0000)
struct WBP_TooltipDetailsPanel_C_SetItemCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
};
static_assert(alignof(WBP_TooltipDetailsPanel_C_SetItemCount) == 0x000008, "Wrong alignment on WBP_TooltipDetailsPanel_C_SetItemCount");
static_assert(sizeof(WBP_TooltipDetailsPanel_C_SetItemCount) == 0x000018, "Wrong size on WBP_TooltipDetailsPanel_C_SetItemCount");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetItemCount, Count) == 0x000000, "Member 'WBP_TooltipDetailsPanel_C_SetItemCount::Count' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetItemCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_TooltipDetailsPanel_C_SetItemCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_TooltipDetailsPanel.WBP_TooltipDetailsPanel_C.SetItemName
// 0x0010 (0x0010 - 0x0000)
struct WBP_TooltipDetailsPanel_C_SetItemName final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_TooltipDetailsPanel_C_SetItemName) == 0x000008, "Wrong alignment on WBP_TooltipDetailsPanel_C_SetItemName");
static_assert(sizeof(WBP_TooltipDetailsPanel_C_SetItemName) == 0x000010, "Wrong size on WBP_TooltipDetailsPanel_C_SetItemName");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetItemName, Param_Name) == 0x000000, "Member 'WBP_TooltipDetailsPanel_C_SetItemName::Param_Name' has a wrong offset!");

// Function WBP_TooltipDetailsPanel.WBP_TooltipDetailsPanel_C.SetRarity
// 0x0038 (0x0038 - 0x0000)
struct WBP_TooltipDetailsPanel_C_SetRarity final
{
public:
	EGzItemRarity                                 Rarity;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            QualityColor;                                      // 0x0004(0x0014)(Edit, BlueprintVisible)
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetRarityName_RarityName;                 // 0x0028(0x0010)()
};
static_assert(alignof(WBP_TooltipDetailsPanel_C_SetRarity) == 0x000008, "Wrong alignment on WBP_TooltipDetailsPanel_C_SetRarity");
static_assert(sizeof(WBP_TooltipDetailsPanel_C_SetRarity) == 0x000038, "Wrong size on WBP_TooltipDetailsPanel_C_SetRarity");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetRarity, Rarity) == 0x000000, "Member 'WBP_TooltipDetailsPanel_C_SetRarity::Rarity' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetRarity, QualityColor) == 0x000004, "Member 'WBP_TooltipDetailsPanel_C_SetRarity::QualityColor' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetRarity, CallFunc_GetRarityColor_ReturnValue) == 0x000018, "Member 'WBP_TooltipDetailsPanel_C_SetRarity::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipDetailsPanel_C_SetRarity, CallFunc_GetRarityName_RarityName) == 0x000028, "Member 'WBP_TooltipDetailsPanel_C_SetRarity::CallFunc_GetRarityName_RarityName' has a wrong offset!");

}

