#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Phosphorous_Dart_Component

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Phosphorous_Dart_Component.BP_Phosphorous_Dart_Component_C
// 0x03A8 (0x0498 - 0x00F0)
class UBP_Phosphorous_Dart_Component_C final : public UGzLimbAbilityComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        CurrentChargeTime;                                 // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ExplosiveDartPreviewActorNoHit;                    // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCharging;                                       // 0x0108(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6208[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  As_Gz_Multi_Part_Character;                        // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MaxChargeTime;                                     // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxProjectileSpeed;                                // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentChargeProgress;                             // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGA_Phosphorous_Dart_C*                 ExplosiveDartAbility;                              // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHoldTime;                                       // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0140(0x00F8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Launch_Location;                                   // 0x0238(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Launch_Direction;                                  // 0x0250(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Projectile_Velocity;                               // 0x0268(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   LimbSlot;                                          // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_6209[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Phosphorous_Dart_Projectile_C*      ExplosiveDart;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnMaxHoldTimeExceeded;                             // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        Min_Projectile_Speed;                              // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min_Gravity_Z;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Gravity_Z;                                     // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMaxCharged;                                     // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithDebug;                                        // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_620A[0x2];                                     // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProjectileRadius;                                  // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPredictProjectilePathResult           Predict_Result;                                    // 0x02B0(0x0140)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class ABP_Phosphorous_Dart_HitPreview_C*      HitPreview;                                        // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentCharTimer;                                  // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CharacterHitFeedbackTime;                          // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___Spline_Color_Change_Time;                       // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_620B[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Phosphorous_Dart_PreviewActor_ArcCharHit_C* ExplosiveDartPreviewActorCharHit;                  // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_Phosphorous_Dart_PreviewActor_Arc_C* ExplosiveDartPreviewActorArc;                      // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Index_BP_Phosphorous_Dart_Component_C;             // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_620C[0x7];                                     // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     Pawn;                                              // 0x0428(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNiagaraComponent*                      ChargeSparks;                                      // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0440(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnStartCharge;                                     // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnResetState;                                      // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnIsMaxCharged;                                    // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnStopCharge;                                      // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnMaxHoldTimeExceeded__DelegateSignature();
	void BP_Phosphorous_Dart_Component_AutoGenFunc(class AGzCharacter* Character);
	void CalculateLaunchAndUpdatePreview();
	void CharacterHitTimer(bool IsCharacter, bool* __SplineColorChangeTime, double* CharacterHitTime);
	void DestroyPreviewActor();
	void ExecuteUbergraph_BP_Phosphorous_Dart_Component(int32 EntryPoint);
	void GetDartVelocityGravity(double* MinProjectileSpeed, double* Param_MaxProjectileSpeed, double* MinGravityZ, double* MaxGravityZ);
	double GetGravityZ();
	struct FVector GetLaunchDirection(const struct FVector& LaunchLocation);
	void GetLaunchLocation(struct FVector* LaunchLocation);
	void GetLaunchParams(struct FVector* LaunchLocation, struct FVector* LaunchDirection, double* ProjectileVelocity);
	void GetLaunchSpeed(double* ProjectileVelocity);
	void GetLaunchVelo(struct FVector* LaunchVelocity, struct FVector* LaunchLocation);
	void GetPathParams(struct FPredictProjectilePathParams* PredictProjectilePathParams);
	struct FVector GetPlayerLocation();
	void IsCharacterHitResult(const struct FHitResult& Hit, bool* IsCharacter);
	struct FHitResult MakeHitResult(const struct FVector& EndLocation, const struct FHitResult& Hit, struct FVector* Location);
	void MaxChargeAudio();
	void OnIsMaxCharged__DelegateSignature();
	void OnResetState__DelegateSignature();
	void OnStartCharge__DelegateSignature();
	void OnStopCharge__DelegateSignature();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ResetVariables();
	void SetPreviewEnabled();
	void SpawnChargeSparks();
	void SpawnPreviewActorCharHit();
	void SpawnPreviewActorNoHit();
	void SpawnPreviewEnd();
	void StartCharge();
	void StopCharge();
	bool UpdateChargingProgress(double DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Phosphorous_Dart_Component_C">();
	}
	static class UBP_Phosphorous_Dart_Component_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Phosphorous_Dart_Component_C>();
	}
};
static_assert(alignof(UBP_Phosphorous_Dart_Component_C) == 0x000008, "Wrong alignment on UBP_Phosphorous_Dart_Component_C");
static_assert(sizeof(UBP_Phosphorous_Dart_Component_C) == 0x000498, "Wrong size on UBP_Phosphorous_Dart_Component_C");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_Phosphorous_Dart_Component_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, CurrentChargeTime) == 0x0000F8, "Member 'UBP_Phosphorous_Dart_Component_C::CurrentChargeTime' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, ExplosiveDartPreviewActorNoHit) == 0x000100, "Member 'UBP_Phosphorous_Dart_Component_C::ExplosiveDartPreviewActorNoHit' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, bIsCharging) == 0x000108, "Member 'UBP_Phosphorous_Dart_Component_C::bIsCharging' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, As_Gz_Multi_Part_Character) == 0x000110, "Member 'UBP_Phosphorous_Dart_Component_C::As_Gz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, MaxChargeTime) == 0x000118, "Member 'UBP_Phosphorous_Dart_Component_C::MaxChargeTime' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, MaxProjectileSpeed) == 0x000120, "Member 'UBP_Phosphorous_Dart_Component_C::MaxProjectileSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, CurrentChargeProgress) == 0x000128, "Member 'UBP_Phosphorous_Dart_Component_C::CurrentChargeProgress' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, ExplosiveDartAbility) == 0x000130, "Member 'UBP_Phosphorous_Dart_Component_C::ExplosiveDartAbility' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, MaxHoldTime) == 0x000138, "Member 'UBP_Phosphorous_Dart_Component_C::MaxHoldTime' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, HitResult) == 0x000140, "Member 'UBP_Phosphorous_Dart_Component_C::HitResult' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, Launch_Location) == 0x000238, "Member 'UBP_Phosphorous_Dart_Component_C::Launch_Location' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, Launch_Direction) == 0x000250, "Member 'UBP_Phosphorous_Dart_Component_C::Launch_Direction' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, Projectile_Velocity) == 0x000268, "Member 'UBP_Phosphorous_Dart_Component_C::Projectile_Velocity' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, LimbSlot) == 0x000270, "Member 'UBP_Phosphorous_Dart_Component_C::LimbSlot' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, ExplosiveDart) == 0x000278, "Member 'UBP_Phosphorous_Dart_Component_C::ExplosiveDart' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, OnMaxHoldTimeExceeded) == 0x000280, "Member 'UBP_Phosphorous_Dart_Component_C::OnMaxHoldTimeExceeded' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, Min_Projectile_Speed) == 0x000290, "Member 'UBP_Phosphorous_Dart_Component_C::Min_Projectile_Speed' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, Min_Gravity_Z) == 0x000298, "Member 'UBP_Phosphorous_Dart_Component_C::Min_Gravity_Z' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, Max_Gravity_Z) == 0x0002A0, "Member 'UBP_Phosphorous_Dart_Component_C::Max_Gravity_Z' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, bIsMaxCharged) == 0x0002A8, "Member 'UBP_Phosphorous_Dart_Component_C::bIsMaxCharged' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, bWithDebug) == 0x0002A9, "Member 'UBP_Phosphorous_Dart_Component_C::bWithDebug' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, ProjectileRadius) == 0x0002AC, "Member 'UBP_Phosphorous_Dart_Component_C::ProjectileRadius' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, Predict_Result) == 0x0002B0, "Member 'UBP_Phosphorous_Dart_Component_C::Predict_Result' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, HitPreview) == 0x0003F0, "Member 'UBP_Phosphorous_Dart_Component_C::HitPreview' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, CurrentCharTimer) == 0x0003F8, "Member 'UBP_Phosphorous_Dart_Component_C::CurrentCharTimer' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, CharacterHitFeedbackTime) == 0x000400, "Member 'UBP_Phosphorous_Dart_Component_C::CharacterHitFeedbackTime' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, ___Spline_Color_Change_Time) == 0x000408, "Member 'UBP_Phosphorous_Dart_Component_C::___Spline_Color_Change_Time' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, ExplosiveDartPreviewActorCharHit) == 0x000410, "Member 'UBP_Phosphorous_Dart_Component_C::ExplosiveDartPreviewActorCharHit' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, ExplosiveDartPreviewActorArc) == 0x000418, "Member 'UBP_Phosphorous_Dart_Component_C::ExplosiveDartPreviewActorArc' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, Index_BP_Phosphorous_Dart_Component_C) == 0x000420, "Member 'UBP_Phosphorous_Dart_Component_C::Index_BP_Phosphorous_Dart_Component_C' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, Pawn) == 0x000428, "Member 'UBP_Phosphorous_Dart_Component_C::Pawn' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, ChargeSparks) == 0x000438, "Member 'UBP_Phosphorous_Dart_Component_C::ChargeSparks' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, TargetLocation) == 0x000440, "Member 'UBP_Phosphorous_Dart_Component_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, OnStartCharge) == 0x000458, "Member 'UBP_Phosphorous_Dart_Component_C::OnStartCharge' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, OnResetState) == 0x000468, "Member 'UBP_Phosphorous_Dart_Component_C::OnResetState' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, OnIsMaxCharged) == 0x000478, "Member 'UBP_Phosphorous_Dart_Component_C::OnIsMaxCharged' has a wrong offset!");
static_assert(offsetof(UBP_Phosphorous_Dart_Component_C, OnStopCharge) == 0x000488, "Member 'UBP_Phosphorous_Dart_Component_C::OnStopCharge' has a wrong offset!");

}

