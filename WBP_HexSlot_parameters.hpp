#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HexSlot

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_HexSlot.WBP_HexSlot_C.BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_HexSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HexSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_HexSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_HexSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_HexSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_HexSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_HexSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_HexSlot.WBP_HexSlot_C.ExecuteUbergraph_WBP_HexSlot
// 0x0038 (0x0038 - 0x0000)
struct WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Inventory_BaseButton_C*            K2Node_DynamicCast_AsWBP_Inventory_Base_Button;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BD[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzInvItem                             K2Node_Event_NewItem;                              // 0x0020(0x0010)(ConstParm)
	int32                                         CallFunc_GetItemQuantity_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot) == 0x000008, "Wrong alignment on WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot");
static_assert(sizeof(WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot) == 0x000038, "Wrong size on WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot");
static_assert(offsetof(WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot, EntryPoint) == 0x000000, "Member 'WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot, K2Node_DynamicCast_AsWBP_Inventory_Base_Button) == 0x000008, "Member 'WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot::K2Node_DynamicCast_AsWBP_Inventory_Base_Button' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot, K2Node_ComponentBoundEvent_Button) == 0x000018, "Member 'WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot, K2Node_Event_NewItem) == 0x000020, "Member 'WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot::K2Node_Event_NewItem' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot, CallFunc_GetItemQuantity_ReturnValue) == 0x000030, "Member 'WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot::CallFunc_GetItemQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'WBP_HexSlot_C_ExecuteUbergraph_WBP_HexSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HexSlot.WBP_HexSlot_C.HandleValidItem
// 0x0038 (0x0038 - 0x0000)
struct WBP_HexSlot_C_HandleValidItem final
{
public:
	struct FGzInvItem                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HexSlot_C_HandleValidItem) == 0x000008, "Wrong alignment on WBP_HexSlot_C_HandleValidItem");
static_assert(sizeof(WBP_HexSlot_C_HandleValidItem) == 0x000038, "Wrong size on WBP_HexSlot_C_HandleValidItem");
static_assert(offsetof(WBP_HexSlot_C_HandleValidItem, Item) == 0x000000, "Member 'WBP_HexSlot_C_HandleValidItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_HandleValidItem, CallFunc_GetItemData_ReturnValue) == 0x000010, "Member 'WBP_HexSlot_C_HandleValidItem::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_HandleValidItem, CallFunc_GetRarity_ReturnValue) == 0x000018, "Member 'WBP_HexSlot_C_HandleValidItem::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_HandleValidItem, CallFunc_GetItemData_ReturnValue_1) == 0x000020, "Member 'WBP_HexSlot_C_HandleValidItem::CallFunc_GetItemData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HexSlot_C_HandleValidItem, CallFunc_GetRarityColor_ReturnValue) == 0x000028, "Member 'WBP_HexSlot_C_HandleValidItem::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");

// Function WBP_HexSlot.WBP_HexSlot_C.OnPocketChanged_BP
// 0x0010 (0x0010 - 0x0000)
struct WBP_HexSlot_C_OnPocketChanged_BP final
{
public:
	struct FGzInvItem                             NewItem;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_HexSlot_C_OnPocketChanged_BP) == 0x000008, "Wrong alignment on WBP_HexSlot_C_OnPocketChanged_BP");
static_assert(sizeof(WBP_HexSlot_C_OnPocketChanged_BP) == 0x000010, "Wrong size on WBP_HexSlot_C_OnPocketChanged_BP");
static_assert(offsetof(WBP_HexSlot_C_OnPocketChanged_BP, NewItem) == 0x000000, "Member 'WBP_HexSlot_C_OnPocketChanged_BP::NewItem' has a wrong offset!");

}

