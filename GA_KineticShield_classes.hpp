#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_KineticShield

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_KineticShield.GA_KineticShield_C
// 0x0080 (0x0708 - 0x0688)
class UGA_KineticShield_C : public UGzGA_KineticShield
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0688(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        EnergyRegenDelay;                                  // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinEnergyAfterBrokenShield;                        // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_KineticShield_C*                    KineticShieldReference;                            // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Damage_to_Blast_Ratio;                             // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Blast_Damage;                                  // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastTraceRadius;                                  // 0x06B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      BlastTraceObjectTypes;                             // 0x06B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        BlastRange;                                        // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_KineticShieldComponent_C*           KineticShieldComponent;                            // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DidBlast;                                          // 0x06E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewShield;                                       // 0x06E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E0[0x2];                                     // 0x06E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Concussion_Duration;                               // 0x06E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            MovementModifierEffect;                            // 0x06E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BlastHorizontalImpulse;                            // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlastVerticalImpulse;                              // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ShieldActivationBlockingEffect;                    // 0x0700(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateKineticBlast();
	void Added_BFA650314A8A4317AEF1D99581725B44();
	void ApplyActivationBlock();
	struct FVector CalculatePunchImpulse();
	void CloseShield(bool Param_DidBlast);
	void DisableShield();
	void ExecuteUbergraph_GA_KineticShield(int32 EntryPoint);
	class UAnimMontage* GetBlastMonatge();
	class UAnimMontage* GetBlastMontage();
	void GetBlastSpawnTransform(double ForwardOffset, double UpOffset, struct FTransform* SpawnTransform);
	class UAnimMontage* GetDeployedMonatge();
	class UAnimMontage* GetShieldOpenMontage();
	void InitializeAbilityComponent();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnBlendOut_04CACE884685B72C80776F88AC4E7089();
	void OnBlendOut_0A3F3BD545AAC84158D993B11F869BDF();
	void OnBlendOut_50435503474F761367F837B4ED470AD7();
	void OnCancelled_04CACE884685B72C80776F88AC4E7089();
	void OnCancelled_0A3F3BD545AAC84158D993B11F869BDF();
	void OnCancelled_50435503474F761367F837B4ED470AD7();
	void OnCompleted_04CACE884685B72C80776F88AC4E7089();
	void OnCompleted_0A3F3BD545AAC84158D993B11F869BDF();
	void OnCompleted_50435503474F761367F837B4ED470AD7();
	void OnInput_D4AE883B40B85BC7D315F4BA76AEB183(float Time);
	void OnInterrupted_04CACE884685B72C80776F88AC4E7089();
	void OnInterrupted_0A3F3BD545AAC84158D993B11F869BDF();
	void OnInterrupted_50435503474F761367F837B4ED470AD7();
	void OnPress_2569CD07462877773D27BF84ACAC0766(float TimeWaited);
	void OnRecharged(int32 NewChargeAmount, int32 PreviousChargeAmount);
	void OnShieldBroken();
	void OnSync_03B336A1402A0724ADA0D4A4F3C3F17D();
	void ReadAbilityConfig();
	bool TraceBlastTarget(struct FHitResult* OutHit);
	void WaitForBlastInput();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_KineticShield_C">();
	}
	static class UGA_KineticShield_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_KineticShield_C>();
	}
};
static_assert(alignof(UGA_KineticShield_C) == 0x000008, "Wrong alignment on UGA_KineticShield_C");
static_assert(sizeof(UGA_KineticShield_C) == 0x000708, "Wrong size on UGA_KineticShield_C");
static_assert(offsetof(UGA_KineticShield_C, UberGraphFrame) == 0x000688, "Member 'UGA_KineticShield_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, EnergyRegenDelay) == 0x000690, "Member 'UGA_KineticShield_C::EnergyRegenDelay' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, MinEnergyAfterBrokenShield) == 0x000698, "Member 'UGA_KineticShield_C::MinEnergyAfterBrokenShield' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, KineticShieldReference) == 0x0006A0, "Member 'UGA_KineticShield_C::KineticShieldReference' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, Damage_to_Blast_Ratio) == 0x0006A8, "Member 'UGA_KineticShield_C::Damage_to_Blast_Ratio' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, Max_Blast_Damage) == 0x0006B0, "Member 'UGA_KineticShield_C::Max_Blast_Damage' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, BlastTraceRadius) == 0x0006B4, "Member 'UGA_KineticShield_C::BlastTraceRadius' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, BlastTraceObjectTypes) == 0x0006B8, "Member 'UGA_KineticShield_C::BlastTraceObjectTypes' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, BlastRange) == 0x0006C8, "Member 'UGA_KineticShield_C::BlastRange' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, KineticShieldComponent) == 0x0006D0, "Member 'UGA_KineticShield_C::KineticShieldComponent' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, MaxHealth) == 0x0006D8, "Member 'UGA_KineticShield_C::MaxHealth' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, DidBlast) == 0x0006E0, "Member 'UGA_KineticShield_C::DidBlast' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, IsNewShield) == 0x0006E1, "Member 'UGA_KineticShield_C::IsNewShield' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, Concussion_Duration) == 0x0006E4, "Member 'UGA_KineticShield_C::Concussion_Duration' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, MovementModifierEffect) == 0x0006E8, "Member 'UGA_KineticShield_C::MovementModifierEffect' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, BlastHorizontalImpulse) == 0x0006F0, "Member 'UGA_KineticShield_C::BlastHorizontalImpulse' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, BlastVerticalImpulse) == 0x0006F8, "Member 'UGA_KineticShield_C::BlastVerticalImpulse' has a wrong offset!");
static_assert(offsetof(UGA_KineticShield_C, ShieldActivationBlockingEffect) == 0x000700, "Member 'UGA_KineticShield_C::ShieldActivationBlockingEffect' has a wrong offset!");

}

