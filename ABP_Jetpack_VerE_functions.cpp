#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Jetpack_VerE

#include "Basic.hpp"

#include "ABP_Jetpack_VerE_classes.hpp"
#include "ABP_Jetpack_VerE_parameters.hpp"


namespace SDK
{

// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.SF_UpdateSidewaysBend
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::SF_UpdateSidewaysBend(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "SF_UpdateSidewaysBend");

	Params::ABP_Jetpack_VerE_C_SF_UpdateSidewaysBend Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.SF_Update_SetAnimOnBreakFree
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::SF_Update_SetAnimOnBreakFree(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "SF_Update_SetAnimOnBreakFree");

	Params::ABP_Jetpack_VerE_C_SF_Update_SetAnimOnBreakFree Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.SF_Update_GetLastLeaningDirectot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::SF_Update_GetLastLeaningDirectot(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "SF_Update_GetLastLeaningDirectot");

	Params::ABP_Jetpack_VerE_C_SF_Update_GetLastLeaningDirectot Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.SF_Setup_SetWavyData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::SF_Setup_SetWavyData(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "SF_Setup_SetWavyData");

	Params::ABP_Jetpack_VerE_C_SF_Setup_SetWavyData Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.SF_Setup_OverrideWavyData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::SF_Setup_OverrideWavyData(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "SF_Setup_OverrideWavyData");

	Params::ABP_Jetpack_VerE_C_SF_Setup_OverrideWavyData Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.SF_EnableLimbSway
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::SF_EnableLimbSway(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "SF_EnableLimbSway");

	Params::ABP_Jetpack_VerE_C_SF_EnableLimbSway Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.SF_DisableLimbSway
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::SF_DisableLimbSway(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "SF_DisableLimbSway");

	Params::ABP_Jetpack_VerE_C_SF_DisableLimbSway Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.SF_ControlRigEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::SF_ControlRigEnable(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "SF_ControlRigEnable");

	Params::ABP_Jetpack_VerE_C_SF_ControlRigEnable Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.SF_ControlRigDisable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::SF_ControlRigDisable(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "SF_ControlRigDisable");

	Params::ABP_Jetpack_VerE_C_SF_ControlRigDisable Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.OnInitialUpdate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::OnInitialUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "OnInitialUpdate");

	Params::ABP_Jetpack_VerE_C_OnInitialUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.OnBecomeRelevant
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Jetpack_VerE_C::OnBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "OnBecomeRelevant");

	Params::ABP_Jetpack_VerE_C_OnBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.NPC_CoverState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_NPC_CoverState                                   (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::NPC_CoverState(struct FPoseLink* Param_NPC_CoverState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "NPC_CoverState");

	Params::ABP_Jetpack_VerE_C_NPC_CoverState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_NPC_CoverState != nullptr)
		*Param_NPC_CoverState = std::move(Parms.Param_NPC_CoverState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.Limbless_State
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_Limbless_State                                   (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::Limbless_State(struct FPoseLink* Param_Limbless_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "Limbless_State");

	Params::ABP_Jetpack_VerE_C_Limbless_State Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Limbless_State != nullptr)
		*Param_Limbless_State = std::move(Parms.Param_Limbless_State);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.KneeSlide_State
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_KneeSlide_State                                  (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::KneeSlide_State(struct FPoseLink* Param_KneeSlide_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "KneeSlide_State");

	Params::ABP_Jetpack_VerE_C_KneeSlide_State Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_KneeSlide_State != nullptr)
		*Param_KneeSlide_State = std::move(Parms.Param_KneeSlide_State);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.GetOwnerMovements
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGzCharacterMovementComponent*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UGzCharacterMovementComponent* UABP_Jetpack_VerE_C::GetOwnerMovements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "GetOwnerMovements");

	Params::ABP_Jetpack_VerE_C_GetOwnerMovements Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.GetNormalizeData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Jetpack_VerE_C::GetNormalizeData(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "GetNormalizeData");

	Params::ABP_Jetpack_VerE_C_GetNormalizeData Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.GetMainThreadSafeAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UABP_Human_C*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UABP_Human_C* UABP_Jetpack_VerE_C::GetMainThreadSafeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "GetMainThreadSafeAnimation");

	Params::ABP_Jetpack_VerE_C_GetMainThreadSafeAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.GetJetpackStatsData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Jetpack_VerE_C::GetJetpackStatsData(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "GetJetpackStatsData");

	Params::ABP_Jetpack_VerE_C_GetJetpackStatsData Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.GetHit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<EGzCharacterDamageAreaType, struct FHitDirectionInfo>TargetMap                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Jetpack_VerE_C::GetHit(const TMap<EGzCharacterDamageAreaType, struct FHitDirectionInfo>& TargetMap, bool* Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "GetHit");

	Params::ABP_Jetpack_VerE_C_GetHit Parms{};

	Parms.TargetMap = std::move(TargetMap);

	UObject::ProcessEvent(Func, &Parms);

	if (Hit != nullptr)
		*Hit = Parms.Hit;
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.GetControlData
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Jetpack_VerE_C::GetControlData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "GetControlData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.GetCharacterData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AGzPlayerCharacter*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AGzPlayerCharacter* UABP_Jetpack_VerE_C::GetCharacterData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "GetCharacterData");

	Params::ABP_Jetpack_VerE_C_GetCharacterData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.GereneratePhysicalData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Jetpack_VerE_C::GereneratePhysicalData(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "GereneratePhysicalData");

	Params::ABP_Jetpack_VerE_C_GereneratePhysicalData Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBodyAdditives
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBodyAdditives                                (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBodyAdditives(struct FPoseLink* Param_FullBodyAdditives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBodyAdditives");

	Params::ABP_Jetpack_VerE_C_FullBodyAdditives Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBodyAdditives != nullptr)
		*Param_FullBodyAdditives = std::move(Parms.Param_FullBodyAdditives);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_StopState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_StopState                               (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_StopState(struct FPoseLink* Param_FullBody_StopState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_StopState");

	Params::ABP_Jetpack_VerE_C_FullBody_StopState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_StopState != nullptr)
		*Param_FullBody_StopState = std::move(Parms.Param_FullBody_StopState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_StartState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_StartState                              (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_StartState(struct FPoseLink* Param_FullBody_StartState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_StartState");

	Params::ABP_Jetpack_VerE_C_FullBody_StartState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_StartState != nullptr)
		*Param_FullBody_StartState = std::move(Parms.Param_FullBody_StartState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_PivotState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_PivotState                              (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_PivotState(struct FPoseLink* Param_FullBody_PivotState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_PivotState");

	Params::ABP_Jetpack_VerE_C_FullBody_PivotState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_PivotState != nullptr)
		*Param_FullBody_PivotState = std::move(Parms.Param_FullBody_PivotState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_JumpStartState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_JumpStartState                          (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_JumpStartState(struct FPoseLink* Param_FullBody_JumpStartState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_JumpStartState");

	Params::ABP_Jetpack_VerE_C_FullBody_JumpStartState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_JumpStartState != nullptr)
		*Param_FullBody_JumpStartState = std::move(Parms.Param_FullBody_JumpStartState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_JumpStartLoopState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_JumpStartLoopState                      (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_JumpStartLoopState(struct FPoseLink* Param_FullBody_JumpStartLoopState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_JumpStartLoopState");

	Params::ABP_Jetpack_VerE_C_FullBody_JumpStartLoopState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_JumpStartLoopState != nullptr)
		*Param_FullBody_JumpStartLoopState = std::move(Parms.Param_FullBody_JumpStartLoopState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_JumpApexState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_JumpApexState                           (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_JumpApexState(struct FPoseLink* Param_FullBody_JumpApexState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_JumpApexState");

	Params::ABP_Jetpack_VerE_C_FullBody_JumpApexState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_JumpApexState != nullptr)
		*Param_FullBody_JumpApexState = std::move(Parms.Param_FullBody_JumpApexState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_IdleState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_IdleState                               (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_IdleState(struct FPoseLink* Param_FullBody_IdleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_IdleState");

	Params::ABP_Jetpack_VerE_C_FullBody_IdleState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_IdleState != nullptr)
		*Param_FullBody_IdleState = std::move(Parms.Param_FullBody_IdleState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_FallLandState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_FallLandState                           (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_FallLandState(struct FPoseLink* Param_FullBody_FallLandState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_FallLandState");

	Params::ABP_Jetpack_VerE_C_FullBody_FallLandState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_FallLandState != nullptr)
		*Param_FullBody_FallLandState = std::move(Parms.Param_FullBody_FallLandState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_CycleState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_CycleState                              (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_CycleState(struct FPoseLink* Param_FullBody_CycleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_CycleState");

	Params::ABP_Jetpack_VerE_C_FullBody_CycleState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_CycleState != nullptr)
		*Param_FullBody_CycleState = std::move(Parms.Param_FullBody_CycleState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_AnimAbility
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_AnimAbility                             (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_AnimAbility(struct FPoseLink* Param_FullBody_AnimAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_AnimAbility");

	Params::ABP_Jetpack_VerE_C_FullBody_AnimAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_AnimAbility != nullptr)
		*Param_FullBody_AnimAbility = std::move(Parms.Param_FullBody_AnimAbility);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_Aiming
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        PreAimPose                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  Param_AimYaw                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AimPitch                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink                        Param_FullBody_Aiming                                  (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_Aiming(const struct FPoseLink& PreAimPose, double Param_AimYaw, double AimPitch, struct FPoseLink* Param_FullBody_Aiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_Aiming");

	Params::ABP_Jetpack_VerE_C_FullBody_Aiming Parms{};

	Parms.PreAimPose = std::move(PreAimPose);
	Parms.Param_AimYaw = Param_AimYaw;
	Parms.AimPitch = AimPitch;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_Aiming != nullptr)
		*Param_FullBody_Aiming = std::move(Parms.Param_FullBody_Aiming);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.ExecuteUbergraph_ABP_Jetpack_VerE
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Jetpack_VerE_C::ExecuteUbergraph_ABP_Jetpack_VerE(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "ExecuteUbergraph_ABP_Jetpack_VerE");

	Params::ABP_Jetpack_VerE_C_ExecuteUbergraph_ABP_Jetpack_VerE Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_B0AE45BC4E9806F80EF3A28B54ED26FC
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_B0AE45BC4E9806F80EF3A28B54ED26FC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_B0AE45BC4E9806F80EF3A28B54ED26FC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_AF32B1584EF5599253209FB440882044
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_AF32B1584EF5599253209FB440882044()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_AF32B1584EF5599253209FB440882044");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_989F7424471070891A1A7B9A5928AABB
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_989F7424471070891A1A7B9A5928AABB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_989F7424471070891A1A7B9A5928AABB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_72AA0D4C444D3FEE1F8C1BBEA205EEBD
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_72AA0D4C444D3FEE1F8C1BBEA205EEBD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_72AA0D4C444D3FEE1F8C1BBEA205EEBD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_35FC212E48168D037A0FFDBC8C6DCA4E
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_35FC212E48168D037A0FFDBC8C6DCA4E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_35FC212E48168D037A0FFDBC8C6DCA4E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_273745F24007F2B8734E27893730B6E7
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_273745F24007F2B8734E27893730B6E7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_273745F24007F2B8734E27893730B6E7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_1E7BA60C4B04AE164330AAA5C4AE51E0
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_1E7BA60C4B04AE164330AAA5C4AE51E0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_TransitionResult_1E7BA60C4B04AE164330AAA5C4AE51E0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_F5CF1E9744127B71F6793BAAA610A19B
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_F5CF1E9744127B71F6793BAAA610A19B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_F5CF1E9744127B71F6793BAAA610A19B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_B17205ED4E1B5B7BACDFB2B040E6A14B
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_B17205ED4E1B5B7BACDFB2B040E6A14B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_B17205ED4E1B5B7BACDFB2B040E6A14B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_AFE89C734B8098DF50E129A7897123A9
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_AFE89C734B8098DF50E129A7897123A9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_AFE89C734B8098DF50E129A7897123A9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_4161741045957A31FB489A9BE7E5730B
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_4161741045957A31FB489A9BE7E5730B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_4161741045957A31FB489A9BE7E5730B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_186ECEE34BE49934DD650D99FBCA9000
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_186ECEE34BE49934DD650D99FBCA9000()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ModifyBone_186ECEE34BE49934DD650D99FBCA9000");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ApplyAdditive_676CA3124FDBBFAC1A4E94B81F534D3C
// (BlueprintEvent)

void UABP_Jetpack_VerE_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ApplyAdditive_676CA3124FDBBFAC1A4E94B81F534D3C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Jetpack_VerE_AnimGraphNode_ApplyAdditive_676CA3124FDBBFAC1A4E94B81F534D3C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.DetectInputPress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInputJetpackControl_VerD_E             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EInputJetpackControl_VerD_E UABP_Jetpack_VerE_C::DetectInputPress(double Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "DetectInputPress");

	Params::ABP_Jetpack_VerE_C_DetectInputPress Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.FullBody_FallLoopState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_FullBody_FallLoopState                           (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::FullBody_FallLoopState(struct FPoseLink* Param_FullBody_FallLoopState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "FullBody_FallLoopState");

	Params::ABP_Jetpack_VerE_C_FullBody_FallLoopState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FullBody_FallLoopState != nullptr)
		*Param_FullBody_FallLoopState = std::move(Parms.Param_FullBody_FallLoopState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.Debug
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UABP_Jetpack_VerE_C::Debug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "Debug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.DamagedBody_IdleState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_DamagedBody_IdleState                            (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::DamagedBody_IdleState(struct FPoseLink* Param_DamagedBody_IdleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "DamagedBody_IdleState");

	Params::ABP_Jetpack_VerE_C_DamagedBody_IdleState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_DamagedBody_IdleState != nullptr)
		*Param_DamagedBody_IdleState = std::move(Parms.Param_DamagedBody_IdleState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.DamagedBody_ExitState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_DamagedBody_ExitState                            (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::DamagedBody_ExitState(struct FPoseLink* Param_DamagedBody_ExitState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "DamagedBody_ExitState");

	Params::ABP_Jetpack_VerE_C_DamagedBody_ExitState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_DamagedBody_ExitState != nullptr)
		*Param_DamagedBody_ExitState = std::move(Parms.Param_DamagedBody_ExitState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.DamagedBody_EnterState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_DamagedBody_EnterState                           (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::DamagedBody_EnterState(struct FPoseLink* Param_DamagedBody_EnterState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "DamagedBody_EnterState");

	Params::ABP_Jetpack_VerE_C_DamagedBody_EnterState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_DamagedBody_EnterState != nullptr)
		*Param_DamagedBody_EnterState = std::move(Parms.Param_DamagedBody_EnterState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.DamagedBody_CycleState
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Param_DamagedBody_CycleState                           (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::DamagedBody_CycleState(struct FPoseLink* Param_DamagedBody_CycleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "DamagedBody_CycleState");

	Params::ABP_Jetpack_VerE_C_DamagedBody_CycleState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_DamagedBody_CycleState != nullptr)
		*Param_DamagedBody_CycleState = std::move(Parms.Param_DamagedBody_CycleState);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.BlueprintThreadSafeUpdateAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Jetpack_VerE_C::BlueprintThreadSafeUpdateAnimation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "BlueprintThreadSafeUpdateAnimation");

	Params::ABP_Jetpack_VerE_C_BlueprintThreadSafeUpdateAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "AnimGraph");

	Params::ABP_Jetpack_VerE_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function ABP_Jetpack_VerE.ABP_Jetpack_VerE_C.Aiming_Correction
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        Aim_pose                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_Aiming_Correction                                (Parm, OutParm, NoDestructor)

void UABP_Jetpack_VerE_C::Aiming_Correction(const struct FPoseLink& Aim_pose, struct FPoseLink* Param_Aiming_Correction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Jetpack_VerE_C", "Aiming_Correction");

	Params::ABP_Jetpack_VerE_C_Aiming_Correction Parms{};

	Parms.Aim_pose = std::move(Aim_pose);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Aiming_Correction != nullptr)
		*Param_Aiming_Correction = std::move(Parms.Param_Aiming_Correction);
}

}

