#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmashGroundTargetPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SmashGroundTargetPreview.BP_SmashGroundTargetPreview_C.ExecuteUbergraph_BP_SmashGroundTargetPreview
// 0x0008 (0x0008 - 0x0000)
struct BP_SmashGroundTargetPreview_C_ExecuteUbergraph_BP_SmashGroundTargetPreview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmashGroundTargetPreview_C_ExecuteUbergraph_BP_SmashGroundTargetPreview) == 0x000004, "Wrong alignment on BP_SmashGroundTargetPreview_C_ExecuteUbergraph_BP_SmashGroundTargetPreview");
static_assert(sizeof(BP_SmashGroundTargetPreview_C_ExecuteUbergraph_BP_SmashGroundTargetPreview) == 0x000008, "Wrong size on BP_SmashGroundTargetPreview_C_ExecuteUbergraph_BP_SmashGroundTargetPreview");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_ExecuteUbergraph_BP_SmashGroundTargetPreview, EntryPoint) == 0x000000, "Member 'BP_SmashGroundTargetPreview_C_ExecuteUbergraph_BP_SmashGroundTargetPreview::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_ExecuteUbergraph_BP_SmashGroundTargetPreview, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_SmashGroundTargetPreview_C_ExecuteUbergraph_BP_SmashGroundTargetPreview::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_SmashGroundTargetPreview.BP_SmashGroundTargetPreview_C.FindTargetLocation
// 0x0458 (0x0458 - 0x0000)
struct BP_SmashGroundTargetPreview_C_FindTargetLocation final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                TargetEnd;                                         // 0x00F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ViewDirection;                                     // 0x0110(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             ViewHitResult;                                     // 0x0128(0x00F8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ViewEnd;                                           // 0x0220(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ViewStart;                                         // 0x0238(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C32[0x2];                                     // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C33[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C34[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetViewHitResult_ReturnValue;             // 0x0360(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SmashGroundTargetPreview_C_FindTargetLocation) == 0x000008, "Wrong alignment on BP_SmashGroundTargetPreview_C_FindTargetLocation");
static_assert(sizeof(BP_SmashGroundTargetPreview_C_FindTargetLocation) == 0x000458, "Wrong size on BP_SmashGroundTargetPreview_C_FindTargetLocation");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, Hit) == 0x000000, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::Hit' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, TargetEnd) == 0x0000F8, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::TargetEnd' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, ViewDirection) == 0x000110, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::ViewDirection' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, ViewHitResult) == 0x000128, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::ViewHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, ViewEnd) == 0x000220, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::ViewEnd' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, ViewStart) == 0x000238, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::ViewStart' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000250, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000251, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_Time) == 0x000254, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_Distance) == 0x000258, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_Location) == 0x000260, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000278, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_Normal) == 0x000290, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x0002A8, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_PhysMat) == 0x0002C0, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_HitActor) == 0x0002C8, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_HitComponent) == 0x0002D0, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_HitBoneName) == 0x0002D8, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_BoneName) == 0x0002E0, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_HitItem) == 0x0002E8, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_ElementIndex) == 0x0002EC, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_FaceIndex) == 0x0002F0, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_TraceStart) == 0x0002F8, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000310, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000328, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_GetCombatComponent_ReturnValue) == 0x000340, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_Normal_ReturnValue) == 0x000348, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_FindTargetLocation, CallFunc_GetViewHitResult_ReturnValue) == 0x000360, "Member 'BP_SmashGroundTargetPreview_C_FindTargetLocation::CallFunc_GetViewHitResult_ReturnValue' has a wrong offset!");

// Function BP_SmashGroundTargetPreview.BP_SmashGroundTargetPreview_C.GetMaxDistanceLocation
// 0x03D0 (0x03D0 - 0x0000)
struct BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation final
{
public:
	struct FHitResult                             OutHit;                                            // 0x0000(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Location;                                          // 0x00F8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0110(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C35[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0118(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C36[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCameraComponent*                     CallFunc_GetCameraComponent_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01E8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C37[0x1];                                     // 0x02E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C38[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C39[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation) == 0x000008, "Wrong alignment on BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation");
static_assert(sizeof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation) == 0x0003D0, "Wrong size on BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, OutHit) == 0x000000, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, Location) == 0x0000F8, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, Distance) == 0x000110, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::Distance' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, Temp_object_Variable) == 0x000118, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000128, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000140, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, K2Node_DynamicCast_AsGz_Player_Character) == 0x000158, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_GetCameraComponent_ReturnValue) == 0x000168, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_GetCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_GetForwardVector_ReturnValue) == 0x000170, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_Normal_ReturnValue) == 0x000188, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001A0, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B8, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001D0, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_LineTraceSingle_OutHit) == 0x0001E8, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x0002E0, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x0002E1, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002E2, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_Time) == 0x0002E4, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_Distance) == 0x0002E8, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_Location) == 0x0002F0, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000308, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_Normal) == 0x000320, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000338, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_PhysMat) == 0x000350, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_HitActor) == 0x000358, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_HitComponent) == 0x000360, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000368, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_BoneName) == 0x000370, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_HitItem) == 0x000378, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_ElementIndex) == 0x00037C, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000380, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_TraceStart) == 0x000388, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_BreakHitResult_TraceEnd) == 0x0003A0, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation, CallFunc_SelectVector_ReturnValue) == 0x0003B8, "Member 'BP_SmashGroundTargetPreview_C_GetMaxDistanceLocation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BP_SmashGroundTargetPreview.BP_SmashGroundTargetPreview_C.IsValidLandingSpot
// 0x0580 (0x0580 - 0x0000)
struct BP_SmashGroundTargetPreview_C_IsValidLandingSpot final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          IsValid_;                                          // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3A[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Param_ActorLocation;                               // 0x0100(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_LandingLocation;                             // 0x0118(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0130(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             TargetLocationHitResult;                           // 0x0138(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3B[0x1];                                     // 0x0233(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3C[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3D[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetMaxDistanceLocation_OutHit;            // 0x0308(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetMaxDistanceLocation_Location;          // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxDistanceLocation_Distance;          // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3E[0x4];                                     // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3F[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Select_Default;                             // 0x0480(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot) == 0x000008, "Wrong alignment on BP_SmashGroundTargetPreview_C_IsValidLandingSpot");
static_assert(sizeof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot) == 0x000580, "Wrong size on BP_SmashGroundTargetPreview_C_IsValidLandingSpot");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, Hit) == 0x000000, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::Hit' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, IsValid_) == 0x0000F8, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::IsValid_' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, Param_ActorLocation) == 0x000100, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::Param_ActorLocation' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, Param_LandingLocation) == 0x000118, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::Param_LandingLocation' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, Distance) == 0x000130, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::Distance' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, TargetLocationHitResult) == 0x000138, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::TargetLocationHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, Temp_bool_Variable) == 0x000230, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_bBlockingHit) == 0x000231, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_bInitialOverlap) == 0x000232, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_Time) == 0x000234, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_Distance) == 0x000238, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_Location) == 0x000240, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_ImpactPoint) == 0x000258, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_Normal) == 0x000270, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_ImpactNormal) == 0x000288, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_PhysMat) == 0x0002A0, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_HitActor) == 0x0002A8, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_HitComponent) == 0x0002B0, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_HitBoneName) == 0x0002B8, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_BoneName) == 0x0002C0, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_HitItem) == 0x0002C8, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_ElementIndex) == 0x0002CC, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_FaceIndex) == 0x0002D0, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_TraceStart) == 0x0002D8, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_BreakHitResult_TraceEnd) == 0x0002F0, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_GetMaxDistanceLocation_OutHit) == 0x000308, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_GetMaxDistanceLocation_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_GetMaxDistanceLocation_Location) == 0x000400, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_GetMaxDistanceLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_GetMaxDistanceLocation_Distance) == 0x000418, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_GetMaxDistanceLocation_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_SelectVector_ReturnValue) == 0x000420, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000438, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_Vector_Distance2D_ReturnValue) == 0x000450, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000458, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_SelectVector_ReturnValue_1) == 0x000460, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_SelectFloat_ReturnValue) == 0x000478, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, K2Node_Select_Default) == 0x000480, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_IsValidLandingSpot, CallFunc_SelectFloat_B_ImplicitCast) == 0x000578, "Member 'BP_SmashGroundTargetPreview_C_IsValidLandingSpot::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");

// Function BP_SmashGroundTargetPreview.BP_SmashGroundTargetPreview_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SmashGroundTargetPreview_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmashGroundTargetPreview_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SmashGroundTargetPreview_C_ReceiveTick");
static_assert(sizeof(BP_SmashGroundTargetPreview_C_ReceiveTick) == 0x000004, "Wrong size on BP_SmashGroundTargetPreview_C_ReceiveTick");
static_assert(offsetof(BP_SmashGroundTargetPreview_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SmashGroundTargetPreview_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

