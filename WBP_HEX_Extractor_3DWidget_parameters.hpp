#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HEX_Extractor_3DWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "E_HexUIExtractionStates_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "G01_structs.hpp"


namespace SDK::Params
{

// Function WBP_HEX_Extractor_3DWidget.WBP_HEX_Extractor_3DWidget_C.ShowGridNoise
// 0x0005 (0x0005 - 0x0000)
struct WBP_HEX_Extractor_3DWidget_C_ShowGridNoise final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HEX_Extractor_3DWidget_C_ShowGridNoise) == 0x000001, "Wrong alignment on WBP_HEX_Extractor_3DWidget_C_ShowGridNoise");
static_assert(sizeof(WBP_HEX_Extractor_3DWidget_C_ShowGridNoise) == 0x000005, "Wrong size on WBP_HEX_Extractor_3DWidget_C_ShowGridNoise");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ShowGridNoise, Show) == 0x000000, "Member 'WBP_HEX_Extractor_3DWidget_C_ShowGridNoise::Show' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ShowGridNoise, Temp_bool_Variable) == 0x000001, "Member 'WBP_HEX_Extractor_3DWidget_C_ShowGridNoise::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ShowGridNoise, Temp_byte_Variable) == 0x000002, "Member 'WBP_HEX_Extractor_3DWidget_C_ShowGridNoise::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ShowGridNoise, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_HEX_Extractor_3DWidget_C_ShowGridNoise::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ShowGridNoise, K2Node_Select_Default) == 0x000004, "Member 'WBP_HEX_Extractor_3DWidget_C_ShowGridNoise::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HEX_Extractor_3DWidget.WBP_HEX_Extractor_3DWidget_C.SetStateStyle
// 0x0120 (0x0120 - 0x0000)
struct WBP_HEX_Extractor_3DWidget_C_SetStateStyle final
{
public:
	E_HexUIExtractionStates                       NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HexUIExtractionStates                       Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60CC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HexUIExtractionStates                       Temp_byte_Variable_5;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0010)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0010)()
	class FText                                   Temp_text_Variable_5;                              // 0x0078(0x0010)()
	class FText                                   Temp_text_Variable_6;                              // 0x0088(0x0010)()
	E_HexUIExtractionStates                       Temp_byte_Variable_6;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HexUIExtractionStates                       Temp_byte_Variable_14;                             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60CD[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60CE[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60CF[0x1];                                     // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D0[0x1];                                     // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D1[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_5;                           // 0x00D8(0x0010)()
	struct FLinearColor                           K2Node_Select_Default_6;                           // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D2[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle) == 0x000008, "Wrong alignment on WBP_HEX_Extractor_3DWidget_C_SetStateStyle");
static_assert(sizeof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle) == 0x000120, "Wrong size on WBP_HEX_Extractor_3DWidget_C_SetStateStyle");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, NewState) == 0x000000, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::NewState' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_bool_Variable) == 0x000001, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable) == 0x000002, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_int_Variable) == 0x000008, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_int_Variable_1) == 0x00000C, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_int_Variable_2) == 0x000010, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_int_Variable_3) == 0x000014, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_int_Variable_4) == 0x000018, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_int_Variable_5) == 0x00001C, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_int_Variable_6) == 0x000020, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_bool_Variable_1) == 0x000024, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_3) == 0x000025, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_4) == 0x000026, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_5) == 0x000027, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_text_Variable) == 0x000028, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_text_Variable_1) == 0x000038, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_text_Variable_2) == 0x000048, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_text_Variable_3) == 0x000058, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_text_Variable_4) == 0x000068, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_text_Variable_5) == 0x000078, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_text_Variable_6) == 0x000088, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_6) == 0x000098, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_7) == 0x000099, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_8) == 0x00009A, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_9) == 0x00009B, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_10) == 0x00009C, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_11) == 0x00009D, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_12) == 0x00009E, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_13) == 0x00009F, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_14) == 0x0000A0, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_15) == 0x0000A9, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000AA, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, K2Node_Select_Default) == 0x0000AB, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, K2Node_Select_Default_1) == 0x0000AC, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_byte_Variable_16) == 0x0000AD, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, K2Node_Select_Default_2) == 0x0000B0, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000B4, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000B5, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_BooleanOR_ReturnValue) == 0x0000B6, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_SelectColor_ReturnValue) == 0x0000B8, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, K2Node_Select_Default_3) == 0x0000C8, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_bool_Variable_2) == 0x0000C9, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, K2Node_Select_Default_4) == 0x0000CA, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, K2Node_Select_Default_5) == 0x0000D8, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, K2Node_Select_Default_6) == 0x0000E8, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, K2Node_MakeArray_Array) == 0x000100, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_Array_Get_Item) == 0x000110, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStateStyle, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStateStyle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HEX_Extractor_3DWidget.WBP_HEX_Extractor_3DWidget_C.SetPercent
// 0x0090 (0x0090 - 0x0000)
struct WBP_HEX_Extractor_3DWidget_C_SetPercent final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
};
static_assert(alignof(WBP_HEX_Extractor_3DWidget_C_SetPercent) == 0x000008, "Wrong alignment on WBP_HEX_Extractor_3DWidget_C_SetPercent");
static_assert(sizeof(WBP_HEX_Extractor_3DWidget_C_SetPercent) == 0x000090, "Wrong size on WBP_HEX_Extractor_3DWidget_C_SetPercent");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetPercent, Percent) == 0x000000, "Member 'WBP_HEX_Extractor_3DWidget_C_SetPercent::Percent' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetPercent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_HEX_Extractor_3DWidget_C_SetPercent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetPercent, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'WBP_HEX_Extractor_3DWidget_C_SetPercent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetPercent, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_HEX_Extractor_3DWidget_C_SetPercent::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetPercent, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WBP_HEX_Extractor_3DWidget_C_SetPercent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetPercent, K2Node_MakeArray_Array) == 0x000070, "Member 'WBP_HEX_Extractor_3DWidget_C_SetPercent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetPercent, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WBP_HEX_Extractor_3DWidget_C_SetPercent::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_HEX_Extractor_3DWidget.WBP_HEX_Extractor_3DWidget_C.SetPauseState
// 0x0010 (0x0010 - 0x0000)
struct WBP_HEX_Extractor_3DWidget_C_SetPauseState final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HEX_Extractor_3DWidget_C_SetPauseState) == 0x000008, "Wrong alignment on WBP_HEX_Extractor_3DWidget_C_SetPauseState");
static_assert(sizeof(WBP_HEX_Extractor_3DWidget_C_SetPauseState) == 0x000010, "Wrong size on WBP_HEX_Extractor_3DWidget_C_SetPauseState");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetPauseState, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_HEX_Extractor_3DWidget_C_SetPauseState::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetPauseState, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000008, "Member 'WBP_HEX_Extractor_3DWidget_C_SetPauseState::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function WBP_HEX_Extractor_3DWidget.WBP_HEX_Extractor_3DWidget_C.SetStartExtractionState
// 0x0020 (0x0020 - 0x0000)
struct WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState final
{
public:
	class UGzItemData*                            ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D4[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState) == 0x000008, "Wrong alignment on WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState");
static_assert(sizeof(WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState) == 0x000020, "Wrong size on WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState, ItemData) == 0x000000, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState::ItemData' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState, CallFunc_GetRarity_ReturnValue) == 0x000008, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState, CallFunc_GetRarityColor_ReturnValue) == 0x00000C, "Member 'WBP_HEX_Extractor_3DWidget_C_SetStartExtractionState::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");

// Function WBP_HEX_Extractor_3DWidget.WBP_HEX_Extractor_3DWidget_C.ExecuteUbergraph_WBP_HEX_Extractor_3DWidget
// 0x0020 (0x0020 - 0x0000)
struct WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D6[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget) == 0x000008, "Wrong alignment on WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget");
static_assert(sizeof(WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget) == 0x000020, "Wrong size on WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget, EntryPoint) == 0x000000, "Member 'WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget, CallFunc_Delay_Duration_ImplicitCast) == 0x00001C, "Member 'WBP_HEX_Extractor_3DWidget_C_ExecuteUbergraph_WBP_HEX_Extractor_3DWidget::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

}

