#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LimbInputHintContainer

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "E_InputHint_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.CreateWidget
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_LimbInputHintContainer_C_CreateWidget final
{
public:
	TMap<EGzAbilityInputModifier, struct FGzBodyPartAbilityInputEntry> TargetMap;                                         // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EGzAbilityInputModifier                       InputModifierKey;                                  // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InputHint                                   Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B77[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzBodyPartAbilityInputEntry           CallFunc_Map_Find_Value;                           // 0x0058(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InputHint                                   Temp_byte_Variable_1;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B78[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           CallFunc_GetInputAction_ReturnValue;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_InputHint                                   Temp_byte_Variable_2;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InputHint                                   Temp_byte_Variable_3;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzAbilityInputModifier                       Temp_byte_Variable_4;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B79[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerController*                    CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_InputHint                                   K2Node_Select_Default;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B7A[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Crosshair_InputAction_C*           CallFunc_Create_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_CreateWidget) == 0x000008, "Wrong alignment on WBP_LimbInputHintContainer_C_CreateWidget");
static_assert(sizeof(WBP_LimbInputHintContainer_C_CreateWidget) == 0x0000A8, "Wrong size on WBP_LimbInputHintContainer_C_CreateWidget");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, TargetMap) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::TargetMap' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, InputModifierKey) == 0x000050, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::InputModifierKey' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, Temp_byte_Variable) == 0x000051, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, CallFunc_Map_Find_Value) == 0x000058, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, Temp_byte_Variable_1) == 0x000071, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, CallFunc_GetInputAction_ReturnValue) == 0x000078, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::CallFunc_GetInputAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, Temp_byte_Variable_2) == 0x000080, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, Temp_byte_Variable_3) == 0x000081, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, Temp_byte_Variable_4) == 0x000082, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000088, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, K2Node_Select_Default) == 0x000090, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, CallFunc_Create_ReturnValue) == 0x000098, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_CreateWidget, CallFunc_Array_AddUnique_ReturnValue) == 0x0000A0, "Member 'WBP_LimbInputHintContainer_C_CreateWidget::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.ExecuteUbergraph_WBP_LimbInputHintContainer
// 0x01E0 (0x01E0 - 0x0000)
struct WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_4;                          // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_3;                          // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_2;                          // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0044(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_1;                          // 0x005C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x007C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B7B[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EGzAbilityInputModifier, struct FGzBodyPartAbilityInputEntry> CallFunc_GetInputData_Input_Entries;               // 0x0088(0x0050)()
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B7C[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGzAbilityInputModifier>               CallFunc_Map_Keys_Keys;                            // 0x00E0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B7D[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzAbilityInputModifier                       CallFunc_Array_Get_Item;                           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B7E[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGzLimbType LimbType)>         K2Node_CreateDelegate_OutputDelegate_5;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   K2Node_CustomEvent_LimbType;                       // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B7F[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UWBP_Crosshair_InputAction_C*           CallFunc_Array_Get_Item_1;                         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue;  // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1; // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B80[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2; // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B81[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B82[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ViewTarget;                           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B83[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B84[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_Array_Get_Item_2;                         // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_5;                          // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B85[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer) == 0x000008, "Wrong alignment on WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer");
static_assert(sizeof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer) == 0x0001E0, "Wrong size on WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, EntryPoint) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CustomEvent_Tag_4) == 0x000004, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CustomEvent_Tag_4' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, Temp_struct_Variable) == 0x00000C, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CustomEvent_Tag_3) == 0x000024, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CustomEvent_Tag_3' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CustomEvent_Tag_2) == 0x00002C, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CustomEvent_Tag_2' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, Temp_struct_Variable_1) == 0x000044, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CustomEvent_Tag_1) == 0x00005C, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CustomEvent_Tag) == 0x000064, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CreateDelegate_OutputDelegate_3) == 0x00006C, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, Temp_struct_Variable_2) == 0x00007C, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_GetInputData_Input_Entries) == 0x000088, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_GetInputData_Input_Entries' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x0000D8, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Map_Keys_Keys) == 0x0000E0, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Array_Length_ReturnValue) == 0x0000F4, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, Temp_int_Array_Index_Variable_1) == 0x000104, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Array_Get_Item) == 0x000108, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CreateDelegate_OutputDelegate_4) == 0x00010C, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CreateDelegate_OutputDelegate_5) == 0x00011C, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CustomEvent_LimbType) == 0x00012C, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CustomEvent_LimbType' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CreateDelegate_OutputDelegate_6) == 0x000130, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000140, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_GetGzAbilitySystemComponent_ReturnValue) == 0x000150, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_GetGzAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_AddChild_ReturnValue) == 0x000158, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue) == 0x000160, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1) == 0x000168, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_IsValid_ReturnValue_1) == 0x000171, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2) == 0x000178, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_IsValid_ReturnValue_2) == 0x000180, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Array_Length_ReturnValue_1) == 0x000184, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000188, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_Event_ViewTarget) == 0x000190, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_Event_ViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_IsValid_ReturnValue_3) == 0x000198, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_IsLocallyControlled_ReturnValue) == 0x000199, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x0001A0, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Array_Get_Item_2) == 0x0001B0, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CustomEvent_Tag_5) == 0x0001B8, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CustomEvent_Tag_5' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001C0, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, Temp_int_Loop_Counter_Variable_1) == 0x0001D0, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D4, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001D8, "Member 'WBP_LimbInputHintContainer_C_ExecuteUbergraph_WBP_LimbInputHintContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.GetInputAction
// 0x0018 (0x0018 - 0x0000)
struct WBP_LimbInputHintContainer_C_GetInputAction final
{
public:
	class UInputAction*                           Option_1;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_GetInputAction) == 0x000008, "Wrong alignment on WBP_LimbInputHintContainer_C_GetInputAction");
static_assert(sizeof(WBP_LimbInputHintContainer_C_GetInputAction) == 0x000018, "Wrong size on WBP_LimbInputHintContainer_C_GetInputAction");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputAction, Option_1) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_GetInputAction::Option_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputAction, ReturnValue) == 0x000008, "Member 'WBP_LimbInputHintContainer_C_GetInputAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputAction, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_LimbInputHintContainer_C_GetInputAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputAction, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'WBP_LimbInputHintContainer_C_GetInputAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputAction, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000012, "Member 'WBP_LimbInputHintContainer_C_GetInputAction::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.GetInputData
// 0x0068 (0x0068 - 0x0000)
struct WBP_LimbInputHintContainer_C_GetInputData final
{
public:
	class UGzItemData*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<EGzAbilityInputModifier, struct FGzBodyPartAbilityInputEntry> Input_Entries;                                     // 0x0008(0x0050)(Parm, OutParm)
	class UGzBodyPartItemData*                    K2Node_DynamicCast_AsGz_Body_Part_Item_Data;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_GetInputData) == 0x000008, "Wrong alignment on WBP_LimbInputHintContainer_C_GetInputData");
static_assert(sizeof(WBP_LimbInputHintContainer_C_GetInputData) == 0x000068, "Wrong size on WBP_LimbInputHintContainer_C_GetInputData");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputData, Target) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_GetInputData::Target' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputData, Input_Entries) == 0x000008, "Member 'WBP_LimbInputHintContainer_C_GetInputData::Input_Entries' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputData, K2Node_DynamicCast_AsGz_Body_Part_Item_Data) == 0x000058, "Member 'WBP_LimbInputHintContainer_C_GetInputData::K2Node_DynamicCast_AsGz_Body_Part_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputData, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_LimbInputHintContainer_C_GetInputData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_GetInputData, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'WBP_LimbInputHintContainer_C_GetInputData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.OnLimbChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_LimbInputHintContainer_C_OnLimbChanged final
{
public:
	EGzLimbType                                   LimbType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_OnLimbChanged) == 0x000001, "Wrong alignment on WBP_LimbInputHintContainer_C_OnLimbChanged");
static_assert(sizeof(WBP_LimbInputHintContainer_C_OnLimbChanged) == 0x000001, "Wrong size on WBP_LimbInputHintContainer_C_OnLimbChanged");
static_assert(offsetof(WBP_LimbInputHintContainer_C_OnLimbChanged, LimbType) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_OnLimbChanged::LimbType' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.OnTagAdded_AADE8FEE499777FA16392EBD63B787F4
// 0x0008 (0x0008 - 0x0000)
struct WBP_LimbInputHintContainer_C_OnTagAdded_AADE8FEE499777FA16392EBD63B787F4 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_OnTagAdded_AADE8FEE499777FA16392EBD63B787F4) == 0x000004, "Wrong alignment on WBP_LimbInputHintContainer_C_OnTagAdded_AADE8FEE499777FA16392EBD63B787F4");
static_assert(sizeof(WBP_LimbInputHintContainer_C_OnTagAdded_AADE8FEE499777FA16392EBD63B787F4) == 0x000008, "Wrong size on WBP_LimbInputHintContainer_C_OnTagAdded_AADE8FEE499777FA16392EBD63B787F4");
static_assert(offsetof(WBP_LimbInputHintContainer_C_OnTagAdded_AADE8FEE499777FA16392EBD63B787F4, Tag) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_OnTagAdded_AADE8FEE499777FA16392EBD63B787F4::Tag' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.OnTagAdded_B1B2135047193647594BC88ED64C5BF8
// 0x0008 (0x0008 - 0x0000)
struct WBP_LimbInputHintContainer_C_OnTagAdded_B1B2135047193647594BC88ED64C5BF8 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_OnTagAdded_B1B2135047193647594BC88ED64C5BF8) == 0x000004, "Wrong alignment on WBP_LimbInputHintContainer_C_OnTagAdded_B1B2135047193647594BC88ED64C5BF8");
static_assert(sizeof(WBP_LimbInputHintContainer_C_OnTagAdded_B1B2135047193647594BC88ED64C5BF8) == 0x000008, "Wrong size on WBP_LimbInputHintContainer_C_OnTagAdded_B1B2135047193647594BC88ED64C5BF8");
static_assert(offsetof(WBP_LimbInputHintContainer_C_OnTagAdded_B1B2135047193647594BC88ED64C5BF8, Tag) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_OnTagAdded_B1B2135047193647594BC88ED64C5BF8::Tag' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.OnTagAdded_CC67AF944794759C9E6035882987770E
// 0x0008 (0x0008 - 0x0000)
struct WBP_LimbInputHintContainer_C_OnTagAdded_CC67AF944794759C9E6035882987770E final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_OnTagAdded_CC67AF944794759C9E6035882987770E) == 0x000004, "Wrong alignment on WBP_LimbInputHintContainer_C_OnTagAdded_CC67AF944794759C9E6035882987770E");
static_assert(sizeof(WBP_LimbInputHintContainer_C_OnTagAdded_CC67AF944794759C9E6035882987770E) == 0x000008, "Wrong size on WBP_LimbInputHintContainer_C_OnTagAdded_CC67AF944794759C9E6035882987770E");
static_assert(offsetof(WBP_LimbInputHintContainer_C_OnTagAdded_CC67AF944794759C9E6035882987770E, Tag) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_OnTagAdded_CC67AF944794759C9E6035882987770E::Tag' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.OnTagRemoved_AADE8FEE499777FA16392EBD63B787F4
// 0x0008 (0x0008 - 0x0000)
struct WBP_LimbInputHintContainer_C_OnTagRemoved_AADE8FEE499777FA16392EBD63B787F4 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_OnTagRemoved_AADE8FEE499777FA16392EBD63B787F4) == 0x000004, "Wrong alignment on WBP_LimbInputHintContainer_C_OnTagRemoved_AADE8FEE499777FA16392EBD63B787F4");
static_assert(sizeof(WBP_LimbInputHintContainer_C_OnTagRemoved_AADE8FEE499777FA16392EBD63B787F4) == 0x000008, "Wrong size on WBP_LimbInputHintContainer_C_OnTagRemoved_AADE8FEE499777FA16392EBD63B787F4");
static_assert(offsetof(WBP_LimbInputHintContainer_C_OnTagRemoved_AADE8FEE499777FA16392EBD63B787F4, Tag) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_OnTagRemoved_AADE8FEE499777FA16392EBD63B787F4::Tag' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.OnTagRemoved_B1B2135047193647594BC88ED64C5BF8
// 0x0008 (0x0008 - 0x0000)
struct WBP_LimbInputHintContainer_C_OnTagRemoved_B1B2135047193647594BC88ED64C5BF8 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_OnTagRemoved_B1B2135047193647594BC88ED64C5BF8) == 0x000004, "Wrong alignment on WBP_LimbInputHintContainer_C_OnTagRemoved_B1B2135047193647594BC88ED64C5BF8");
static_assert(sizeof(WBP_LimbInputHintContainer_C_OnTagRemoved_B1B2135047193647594BC88ED64C5BF8) == 0x000008, "Wrong size on WBP_LimbInputHintContainer_C_OnTagRemoved_B1B2135047193647594BC88ED64C5BF8");
static_assert(offsetof(WBP_LimbInputHintContainer_C_OnTagRemoved_B1B2135047193647594BC88ED64C5BF8, Tag) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_OnTagRemoved_B1B2135047193647594BC88ED64C5BF8::Tag' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.OnTagRemoved_CC67AF944794759C9E6035882987770E
// 0x0008 (0x0008 - 0x0000)
struct WBP_LimbInputHintContainer_C_OnTagRemoved_CC67AF944794759C9E6035882987770E final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_OnTagRemoved_CC67AF944794759C9E6035882987770E) == 0x000004, "Wrong alignment on WBP_LimbInputHintContainer_C_OnTagRemoved_CC67AF944794759C9E6035882987770E");
static_assert(sizeof(WBP_LimbInputHintContainer_C_OnTagRemoved_CC67AF944794759C9E6035882987770E) == 0x000008, "Wrong size on WBP_LimbInputHintContainer_C_OnTagRemoved_CC67AF944794759C9E6035882987770E");
static_assert(offsetof(WBP_LimbInputHintContainer_C_OnTagRemoved_CC67AF944794759C9E6035882987770E, Tag) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_OnTagRemoved_CC67AF944794759C9E6035882987770E::Tag' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.OnViewTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_LimbInputHintContainer_C_OnViewTargetChanged final
{
public:
	class APawn*                                  ViewTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_OnViewTargetChanged) == 0x000008, "Wrong alignment on WBP_LimbInputHintContainer_C_OnViewTargetChanged");
static_assert(sizeof(WBP_LimbInputHintContainer_C_OnViewTargetChanged) == 0x000008, "Wrong size on WBP_LimbInputHintContainer_C_OnViewTargetChanged");
static_assert(offsetof(WBP_LimbInputHintContainer_C_OnViewTargetChanged, ViewTarget) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_OnViewTargetChanged::ViewTarget' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.RetriggerQueueIfNotEmpty
// 0x0002 (0x0002 - 0x0000)
struct WBP_LimbInputHintContainer_C_RetriggerQueueIfNotEmpty final
{
public:
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_RetriggerQueueIfNotEmpty) == 0x000001, "Wrong alignment on WBP_LimbInputHintContainer_C_RetriggerQueueIfNotEmpty");
static_assert(sizeof(WBP_LimbInputHintContainer_C_RetriggerQueueIfNotEmpty) == 0x000002, "Wrong size on WBP_LimbInputHintContainer_C_RetriggerQueueIfNotEmpty");
static_assert(offsetof(WBP_LimbInputHintContainer_C_RetriggerQueueIfNotEmpty, CallFunc_Array_RemoveItem_ReturnValue) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_RetriggerQueueIfNotEmpty::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_RetriggerQueueIfNotEmpty, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000001, "Member 'WBP_LimbInputHintContainer_C_RetriggerQueueIfNotEmpty::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.SetLimbImageAndName
// 0x0010 (0x0010 - 0x0000)
struct WBP_LimbInputHintContainer_C_SetLimbImageAndName final
{
public:
	class UGzItemData*                            ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_SetLimbImageAndName) == 0x000008, "Wrong alignment on WBP_LimbInputHintContainer_C_SetLimbImageAndName");
static_assert(sizeof(WBP_LimbInputHintContainer_C_SetLimbImageAndName) == 0x000010, "Wrong size on WBP_LimbInputHintContainer_C_SetLimbImageAndName");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetLimbImageAndName, ItemData) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_SetLimbImageAndName::ItemData' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetLimbImageAndName, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_LimbInputHintContainer_C_SetLimbImageAndName::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_LimbInputHintContainer.WBP_LimbInputHintContainer_C.SetQueue
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_LimbInputHintContainer_C_SetQueue final
{
public:
	EGzLimbType                                   LimbType;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B86[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B87[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGzInvItem>                     CallFunc_GetItemsBySlot_ReturnValue;               // 0x0018(0x0010)(ReferenceParm)
	struct FGzInvItem                             CallFunc_Array_Get_Item;                           // 0x0028(0x0010)()
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B88[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EGzAbilityInputModifier, struct FGzBodyPartAbilityInputEntry> CallFunc_GetInputData_Input_Entries;               // 0x0048(0x0050)()
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LimbInputHintContainer_C_SetQueue) == 0x000008, "Wrong alignment on WBP_LimbInputHintContainer_C_SetQueue");
static_assert(sizeof(WBP_LimbInputHintContainer_C_SetQueue) == 0x0000A0, "Wrong size on WBP_LimbInputHintContainer_C_SetQueue");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, LimbType) == 0x000000, "Member 'WBP_LimbInputHintContainer_C_SetQueue::LimbType' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, Temp_byte_Variable) == 0x000001, "Member 'WBP_LimbInputHintContainer_C_SetQueue::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, K2Node_Select_Default) == 0x000004, "Member 'WBP_LimbInputHintContainer_C_SetQueue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, CallFunc_GetInventoryComponent_ReturnValue) == 0x000010, "Member 'WBP_LimbInputHintContainer_C_SetQueue::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, CallFunc_GetItemsBySlot_ReturnValue) == 0x000018, "Member 'WBP_LimbInputHintContainer_C_SetQueue::CallFunc_GetItemsBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_LimbInputHintContainer_C_SetQueue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, CallFunc_GetItemData_ReturnValue) == 0x000038, "Member 'WBP_LimbInputHintContainer_C_SetQueue::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, CallFunc_Array_AddUnique_ReturnValue) == 0x000040, "Member 'WBP_LimbInputHintContainer_C_SetQueue::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, CallFunc_GetInputData_Input_Entries) == 0x000048, "Member 'WBP_LimbInputHintContainer_C_SetQueue::CallFunc_GetInputData_Input_Entries' has a wrong offset!");
static_assert(offsetof(WBP_LimbInputHintContainer_C_SetQueue, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x000098, "Member 'WBP_LimbInputHintContainer_C_SetQueue::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");

}

