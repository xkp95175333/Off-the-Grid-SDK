#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_LMG

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Crosshair_LMG.WBP_Crosshair_LMG_C.ExecuteUbergraph_WBP_Crosshair_LMG
// 0x0008 (0x0008 - 0x0000)
struct WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInAds;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG) == 0x000004, "Wrong alignment on WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG");
static_assert(sizeof(WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG) == 0x000008, "Wrong size on WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG");
static_assert(offsetof(WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG, EntryPoint) == 0x000000, "Member 'WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG, K2Node_Event_bIsInAds) == 0x000004, "Member 'WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG::K2Node_Event_bIsInAds' has a wrong offset!");
static_assert(offsetof(WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG, K2Node_Event_bEnable) == 0x000005, "Member 'WBP_Crosshair_LMG_C_ExecuteUbergraph_WBP_Crosshair_LMG::K2Node_Event_bEnable' has a wrong offset!");

// Function WBP_Crosshair_LMG.WBP_Crosshair_LMG_C.OnAdsUpdated
// 0x0001 (0x0001 - 0x0000)
struct WBP_Crosshair_LMG_C_OnAdsUpdated final
{
public:
	bool                                          bIsInAds;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_LMG_C_OnAdsUpdated) == 0x000001, "Wrong alignment on WBP_Crosshair_LMG_C_OnAdsUpdated");
static_assert(sizeof(WBP_Crosshair_LMG_C_OnAdsUpdated) == 0x000001, "Wrong size on WBP_Crosshair_LMG_C_OnAdsUpdated");
static_assert(offsetof(WBP_Crosshair_LMG_C_OnAdsUpdated, bIsInAds) == 0x000000, "Member 'WBP_Crosshair_LMG_C_OnAdsUpdated::bIsInAds' has a wrong offset!");

// Function WBP_Crosshair_LMG.WBP_Crosshair_LMG_C.OnUpdatedMaxPrecisionStateBP
// 0x0001 (0x0001 - 0x0000)
struct WBP_Crosshair_LMG_C_OnUpdatedMaxPrecisionStateBP final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Crosshair_LMG_C_OnUpdatedMaxPrecisionStateBP) == 0x000001, "Wrong alignment on WBP_Crosshair_LMG_C_OnUpdatedMaxPrecisionStateBP");
static_assert(sizeof(WBP_Crosshair_LMG_C_OnUpdatedMaxPrecisionStateBP) == 0x000001, "Wrong size on WBP_Crosshair_LMG_C_OnUpdatedMaxPrecisionStateBP");
static_assert(offsetof(WBP_Crosshair_LMG_C_OnUpdatedMaxPrecisionStateBP, bEnable) == 0x000000, "Member 'WBP_Crosshair_LMG_C_OnUpdatedMaxPrecisionStateBP::bEnable' has a wrong offset!");

}

