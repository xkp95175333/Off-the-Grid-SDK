#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "CommonInput_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MapScreen.WBP_MapScreen_C
// 0x0058 (0x0580 - 0x0528)
class UWBP_MapScreen_C final : public UGzNavigationWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0528(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonBoundActionBar*                  CommonBoundActionBar_63;                           // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           OverrideGeometry;                                  // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_EventStatusContainer_C*            WBP_EventStatusContainer;                          // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Map_C*                             WBP_Map;                                           // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MapLegend_C*                       WBP_MapLegend;                                     // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ScreenBackground_C*                WBP_ScreenBackground;                              // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_FullMapController_C*                MapController;                                     // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGzInputActionBindingHandle            TrackingBinding;                                   // 0x0568(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGzInputActionBindingHandle            PingHandle;                                        // 0x056C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGameplayTag                           PingTypeDefaultTag;                                // 0x0570(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGzInputActionBindingHandle            ZoomInBinding;                                     // 0x0578(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGzInputActionBindingHandle            ZoomOutBinding;                                    // 0x057C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void BP_OnDeactivated();
	void Construct();
	void Destruct();
	void EnablePlayerTracking();
	void ExecuteUbergraph_WBP_MapScreen(int32 EntryPoint);
	void InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void On_Center_Player();
	void On_Geom_Update();
	void OnInitialized();
	void OnMapClickDelegate_Event(const struct FVector2D& ScreenPosition, const struct FVector2D& WorldPos, const struct FKey& Key);
	void Ping_Dummy();
	void RegisterBindingsAndHints();
	void UnregisterBindingsAndHints();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MapScreen_C">();
	}
	static class UWBP_MapScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MapScreen_C>();
	}
};
static_assert(alignof(UWBP_MapScreen_C) == 0x000008, "Wrong alignment on UWBP_MapScreen_C");
static_assert(sizeof(UWBP_MapScreen_C) == 0x000580, "Wrong size on UWBP_MapScreen_C");
static_assert(offsetof(UWBP_MapScreen_C, UberGraphFrame) == 0x000528, "Member 'UWBP_MapScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, CommonBoundActionBar_63) == 0x000530, "Member 'UWBP_MapScreen_C::CommonBoundActionBar_63' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, OverrideGeometry) == 0x000538, "Member 'UWBP_MapScreen_C::OverrideGeometry' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, WBP_EventStatusContainer) == 0x000540, "Member 'UWBP_MapScreen_C::WBP_EventStatusContainer' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, WBP_Map) == 0x000548, "Member 'UWBP_MapScreen_C::WBP_Map' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, WBP_MapLegend) == 0x000550, "Member 'UWBP_MapScreen_C::WBP_MapLegend' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, WBP_ScreenBackground) == 0x000558, "Member 'UWBP_MapScreen_C::WBP_ScreenBackground' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, MapController) == 0x000560, "Member 'UWBP_MapScreen_C::MapController' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, TrackingBinding) == 0x000568, "Member 'UWBP_MapScreen_C::TrackingBinding' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, PingHandle) == 0x00056C, "Member 'UWBP_MapScreen_C::PingHandle' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, PingTypeDefaultTag) == 0x000570, "Member 'UWBP_MapScreen_C::PingTypeDefaultTag' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, ZoomInBinding) == 0x000578, "Member 'UWBP_MapScreen_C::ZoomInBinding' has a wrong offset!");
static_assert(offsetof(UWBP_MapScreen_C, ZoomOutBinding) == 0x00057C, "Member 'UWBP_MapScreen_C::ZoomOutBinding' has a wrong offset!");

}

