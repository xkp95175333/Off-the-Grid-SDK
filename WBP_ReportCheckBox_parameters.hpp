#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ReportCheckBox

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_ReportCheckBox.WBP_ReportCheckBox_C.ToggleChecked
// 0x0010 (0x0010 - 0x0000)
struct WBP_ReportCheckBox_C_ToggleChecked final
{
public:
	bool                                          Param_bIsChecked;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CF[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ReportCheckBox_C_ToggleChecked) == 0x000004, "Wrong alignment on WBP_ReportCheckBox_C_ToggleChecked");
static_assert(sizeof(WBP_ReportCheckBox_C_ToggleChecked) == 0x000010, "Wrong size on WBP_ReportCheckBox_C_ToggleChecked");
static_assert(offsetof(WBP_ReportCheckBox_C_ToggleChecked, Param_bIsChecked) == 0x000000, "Member 'WBP_ReportCheckBox_C_ToggleChecked::Param_bIsChecked' has a wrong offset!");
static_assert(offsetof(WBP_ReportCheckBox_C_ToggleChecked, Temp_bool_Variable) == 0x000001, "Member 'WBP_ReportCheckBox_C_ToggleChecked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ReportCheckBox_C_ToggleChecked, Temp_real_Variable) == 0x000004, "Member 'WBP_ReportCheckBox_C_ToggleChecked::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ReportCheckBox_C_ToggleChecked, Temp_real_Variable_1) == 0x000008, "Member 'WBP_ReportCheckBox_C_ToggleChecked::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ReportCheckBox_C_ToggleChecked, K2Node_Select_Default) == 0x00000C, "Member 'WBP_ReportCheckBox_C_ToggleChecked::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ReportCheckBox.WBP_ReportCheckBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ReportCheckBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ReportCheckBox_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ReportCheckBox_C_PreConstruct");
static_assert(sizeof(WBP_ReportCheckBox_C_PreConstruct) == 0x000001, "Wrong size on WBP_ReportCheckBox_C_PreConstruct");
static_assert(offsetof(WBP_ReportCheckBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ReportCheckBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ReportCheckBox.WBP_ReportCheckBox_C.ExecuteUbergraph_WBP_ReportCheckBox
// 0x0008 (0x0008 - 0x0000)
struct WBP_ReportCheckBox_C_ExecuteUbergraph_WBP_ReportCheckBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ReportCheckBox_C_ExecuteUbergraph_WBP_ReportCheckBox) == 0x000004, "Wrong alignment on WBP_ReportCheckBox_C_ExecuteUbergraph_WBP_ReportCheckBox");
static_assert(sizeof(WBP_ReportCheckBox_C_ExecuteUbergraph_WBP_ReportCheckBox) == 0x000008, "Wrong size on WBP_ReportCheckBox_C_ExecuteUbergraph_WBP_ReportCheckBox");
static_assert(offsetof(WBP_ReportCheckBox_C_ExecuteUbergraph_WBP_ReportCheckBox, EntryPoint) == 0x000000, "Member 'WBP_ReportCheckBox_C_ExecuteUbergraph_WBP_ReportCheckBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ReportCheckBox_C_ExecuteUbergraph_WBP_ReportCheckBox, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_ReportCheckBox_C_ExecuteUbergraph_WBP_ReportCheckBox::K2Node_Event_IsDesignTime' has a wrong offset!");

}

