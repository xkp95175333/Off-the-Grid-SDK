#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Defiler_VisionComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_Defiler_VisionComponent_ReplicatedData_structs.hpp"
#include "G01_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C
// 0x0170 (0x0218 - 0x00A8)
class UBP_Defiler_VisionComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AGzMultiPartCharacter*                  As_Gz_Multi_Part_Character;                        // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class AActor*, class ABP_Defiler_MarkActor_C*> AllMarks;                                          // 0x00B8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TSet<class AActor*>                           Tapes;                                             // 0x0108(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_Defiler_VisionArea_C*               VisionAreaActor;                                   // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnNewHackedTarget;                                 // 0x0160(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UAkAudioEvent*                          HackedActorSound;                                  // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSet<class UActorComponent*>                  Hands;                                             // 0x0178(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        AdditionalDurationCurrent;                         // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScanPeriod;                                        // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeToNextWave;                                    // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AdditionalDuration;                                // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Defiler_VisionComponent_ReplicatedData ReplicatedData;                                    // 0x01E8(0x0030)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void AddMarker(class AActor* Target, EGzDefilerTargetType Type, class ABP_Defiler_MarkActor_C** Marker);
	void AddSourceDefilerLimb(const class UActorComponent*& NewItem, float InSphereRadius);
	void AddTape(const class AActor*& NewItem);
	void Check_Haked_Actor_Type(class AActor* Actor, EGzDefilerTargetType* DefilerType, bool* AnyDistance);
	void CheckNeedDisable(bool* bNeed);
	void Destroy_Vision_Area();
	void DestroyAllMarkActors();
	void ExecuteUbergraph_BP_Defiler_VisionComponent(int32 EntryPoint);
	void Get_Distance_Scale_Per_Type(EGzDefilerTargetType DefilerType, double* Scale);
	struct FVector GetOwnerLocation();
	void NewHackedTarget(class AActor* Target, class AActor* Source, double DistanceToScaned, class ABP_Defiler_MarkActor_C** MarkActor, bool* NotInRange);
	void OnNewHackedTarget__DelegateSignature(class AActor* Actor, uint8 Type, class AActor* HackSource);
	void OnPawnChanged_Event(class APawn* Pawn);
	void OnRep_ReplicatedData();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void RemoveHackedActor(class AActor* Target, class AActor* Source);
	void RemoveSourceDefilerLimb(const class UActorComponent*& NewItem);
	void RemoveTape(const class AActor*& Item);
	void Send_Start_Scan_Wave(double InRadius);
	void SendDisableVision();
	void SetTagCountZero(TArray<struct FGameplayTag>& Gameplay_Tags_Gameplay_Tags);
	void SetVisionStateWithTag(const struct FGameplayTag& _0_);
	void SpawnVisionArea();
	void UpdateState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Defiler_VisionComponent_C">();
	}
	static class UBP_Defiler_VisionComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Defiler_VisionComponent_C>();
	}
};
static_assert(alignof(UBP_Defiler_VisionComponent_C) == 0x000008, "Wrong alignment on UBP_Defiler_VisionComponent_C");
static_assert(sizeof(UBP_Defiler_VisionComponent_C) == 0x000218, "Wrong size on UBP_Defiler_VisionComponent_C");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, UberGraphFrame) == 0x0000A8, "Member 'UBP_Defiler_VisionComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, As_Gz_Multi_Part_Character) == 0x0000B0, "Member 'UBP_Defiler_VisionComponent_C::As_Gz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, AllMarks) == 0x0000B8, "Member 'UBP_Defiler_VisionComponent_C::AllMarks' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, Tapes) == 0x000108, "Member 'UBP_Defiler_VisionComponent_C::Tapes' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, VisionAreaActor) == 0x000158, "Member 'UBP_Defiler_VisionComponent_C::VisionAreaActor' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, OnNewHackedTarget) == 0x000160, "Member 'UBP_Defiler_VisionComponent_C::OnNewHackedTarget' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, HackedActorSound) == 0x000170, "Member 'UBP_Defiler_VisionComponent_C::HackedActorSound' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, Hands) == 0x000178, "Member 'UBP_Defiler_VisionComponent_C::Hands' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, AdditionalDurationCurrent) == 0x0001C8, "Member 'UBP_Defiler_VisionComponent_C::AdditionalDurationCurrent' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, ScanPeriod) == 0x0001D0, "Member 'UBP_Defiler_VisionComponent_C::ScanPeriod' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, TimeToNextWave) == 0x0001D8, "Member 'UBP_Defiler_VisionComponent_C::TimeToNextWave' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, AdditionalDuration) == 0x0001E0, "Member 'UBP_Defiler_VisionComponent_C::AdditionalDuration' has a wrong offset!");
static_assert(offsetof(UBP_Defiler_VisionComponent_C, ReplicatedData) == 0x0001E8, "Member 'UBP_Defiler_VisionComponent_C::ReplicatedData' has a wrong offset!");

}

