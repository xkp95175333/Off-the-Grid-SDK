#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Barrier

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "S_Barrier_ReplicatedData_structs.hpp"


namespace SDK::Params
{

// Function BP_Barrier.BP_Barrier_C.BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature final
{
public:
	class AActor*                                 InteractedBy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UGzInteractableComponent*         Interactable;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature) == 0x000008, "Wrong alignment on BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature");
static_assert(sizeof(BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature) == 0x000010, "Wrong size on BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature");
static_assert(offsetof(BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature, InteractedBy) == 0x000000, "Member 'BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature::InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature, Interactable) == 0x000008, "Member 'BP_Barrier_C_BndEvt__BP_Barrier_GzInteractable_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature::Interactable' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.Cache Barrier Component
// 0x0018 (0x0018 - 0x0000)
struct BP_Barrier_C_Cache_Barrier_Component final
{
public:
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BarrierComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_Cache_Barrier_Component) == 0x000008, "Wrong alignment on BP_Barrier_C_Cache_Barrier_Component");
static_assert(sizeof(BP_Barrier_C_Cache_Barrier_Component) == 0x000018, "Wrong size on BP_Barrier_C_Cache_Barrier_Component");
static_assert(offsetof(BP_Barrier_C_Cache_Barrier_Component, CallFunc_GetInstigator_ReturnValue) == 0x000000, "Member 'BP_Barrier_C_Cache_Barrier_Component::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_Cache_Barrier_Component, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_Barrier_C_Cache_Barrier_Component::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_Cache_Barrier_Component, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Barrier_C_Cache_Barrier_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.ExecuteUbergraph_BP_Barrier
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Barrier_C_ExecuteUbergraph_BP_Barrier final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1257[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1258[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_IsEmpty_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1259[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_InteractedBy;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UGzInteractableComponent*         K2Node_ComponentBoundEvent_Interactable;           // 0x0038(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bReverse;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPickeable_Pick;                         // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Barrier_Replicated_Values_Target_Position; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Barrier_ReplicatedData              K2Node_MakeStruct_S_Barrier_ReplicatedData;        // 0x0078(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Barrier_ReplicatedData              K2Node_MakeStruct_S_Barrier_ReplicatedData_1;      // 0x0098(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x00B8(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125B[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateLaunchSequence_Scale_ImplicitCast;  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier) == 0x000008, "Wrong alignment on BP_Barrier_C_ExecuteUbergraph_BP_Barrier");
static_assert(sizeof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier) == 0x0000D8, "Wrong size on BP_Barrier_C_ExecuteUbergraph_BP_Barrier");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, EntryPoint) == 0x000000, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_IsDedicatedServer_ReturnValue) == 0x000005, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000006, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_HasAuthority_ReturnValue) == 0x000007, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000008, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_HasAuthority_ReturnValue_1) == 0x000009, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, K2Node_CustomEvent_DestroyedActor) == 0x000020, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_Set_IsEmpty_ReturnValue) == 0x000028, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_Set_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_Set_Remove_ReturnValue) == 0x000029, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, K2Node_ComponentBoundEvent_InteractedBy) == 0x000030, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::K2Node_ComponentBoundEvent_InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, K2Node_ComponentBoundEvent_Interactable) == 0x000038, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, K2Node_CustomEvent_bReverse) == 0x000058, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::K2Node_CustomEvent_bReverse' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_HasAuthority_ReturnValue_2) == 0x000059, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_HasAuthority_ReturnValue_3) == 0x00005A, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_IsPickeable_Pick) == 0x00005B, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_IsPickeable_Pick' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, K2Node_CustomEvent_Barrier_Replicated_Values_Target_Position) == 0x000060, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::K2Node_CustomEvent_Barrier_Replicated_Values_Target_Position' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, K2Node_MakeStruct_S_Barrier_ReplicatedData) == 0x000078, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::K2Node_MakeStruct_S_Barrier_ReplicatedData' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, K2Node_MakeStruct_S_Barrier_ReplicatedData_1) == 0x000098, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::K2Node_MakeStruct_S_Barrier_ReplicatedData_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, Temp_delegate_Variable) == 0x0000B8, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, Temp_bool_Has_Been_Initd_Variable) == 0x0000C8, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_PostEvent_ReturnValue) == 0x0000CC, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_ExecuteUbergraph_BP_Barrier, CallFunc_UpdateLaunchSequence_Scale_ImplicitCast) == 0x0000D0, "Member 'BP_Barrier_C_ExecuteUbergraph_BP_Barrier::CallFunc_UpdateLaunchSequence_Scale_ImplicitCast' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.LaunchToTarget_Event
// 0x0001 (0x0001 - 0x0000)
struct BP_Barrier_C_LaunchToTarget_Event final
{
public:
	bool                                          bReverse;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_LaunchToTarget_Event) == 0x000001, "Wrong alignment on BP_Barrier_C_LaunchToTarget_Event");
static_assert(sizeof(BP_Barrier_C_LaunchToTarget_Event) == 0x000001, "Wrong size on BP_Barrier_C_LaunchToTarget_Event");
static_assert(offsetof(BP_Barrier_C_LaunchToTarget_Event, bReverse) == 0x000000, "Member 'BP_Barrier_C_LaunchToTarget_Event::bReverse' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.OnDestroyed_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_Barrier_C_OnDestroyed_Event final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_OnDestroyed_Event) == 0x000008, "Wrong alignment on BP_Barrier_C_OnDestroyed_Event");
static_assert(sizeof(BP_Barrier_C_OnDestroyed_Event) == 0x000008, "Wrong size on BP_Barrier_C_OnDestroyed_Event");
static_assert(offsetof(BP_Barrier_C_OnDestroyed_Event, DestroyedActor) == 0x000000, "Member 'BP_Barrier_C_OnDestroyed_Event::DestroyedActor' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.OnRep_BarrierReplicatedValues
// 0x0001 (0x0001 - 0x0000)
struct BP_Barrier_C_OnRep_BarrierReplicatedValues final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_OnRep_BarrierReplicatedValues) == 0x000001, "Wrong alignment on BP_Barrier_C_OnRep_BarrierReplicatedValues");
static_assert(sizeof(BP_Barrier_C_OnRep_BarrierReplicatedValues) == 0x000001, "Wrong size on BP_Barrier_C_OnRep_BarrierReplicatedValues");
static_assert(offsetof(BP_Barrier_C_OnRep_BarrierReplicatedValues, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_Barrier_C_OnRep_BarrierReplicatedValues::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.RestoreCharge
// 0x0040 (0x0040 - 0x0000)
struct BP_Barrier_C_RestoreCharge final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BarrierComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x0018(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_RestoreCharge) == 0x000008, "Wrong alignment on BP_Barrier_C_RestoreCharge");
static_assert(sizeof(BP_Barrier_C_RestoreCharge) == 0x000040, "Wrong size on BP_Barrier_C_RestoreCharge");
static_assert(offsetof(BP_Barrier_C_RestoreCharge, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_Barrier_C_RestoreCharge::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_RestoreCharge, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'BP_Barrier_C_RestoreCharge::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_RestoreCharge, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_Barrier_C_RestoreCharge::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_RestoreCharge, CallFunc_MakeEffectContext_ReturnValue) == 0x000018, "Member 'BP_Barrier_C_RestoreCharge::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_RestoreCharge, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Barrier_C_RestoreCharge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_RestoreCharge, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000034, "Member 'BP_Barrier_C_RestoreCharge::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.Set Parts
// 0x0018 (0x0018 - 0x0000)
struct BP_Barrier_C_Set_Parts final
{
public:
	bool                                          bRight;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Barrier_Part_C*                     Part;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_Set_Parts) == 0x000008, "Wrong alignment on BP_Barrier_C_Set_Parts");
static_assert(sizeof(BP_Barrier_C_Set_Parts) == 0x000018, "Wrong size on BP_Barrier_C_Set_Parts");
static_assert(offsetof(BP_Barrier_C_Set_Parts, bRight) == 0x000000, "Member 'BP_Barrier_C_Set_Parts::bRight' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_Set_Parts, Part) == 0x000008, "Member 'BP_Barrier_C_Set_Parts::Part' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_Set_Parts, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Barrier_C_Set_Parts::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_Set_Parts, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_Barrier_C_Set_Parts::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.Setup Interactable Objects
// 0x0028 (0x0028 - 0x0000)
struct BP_Barrier_C_Setup_Interactable_Objects final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Barrier_C_Setup_Interactable_Objects) == 0x000008, "Wrong alignment on BP_Barrier_C_Setup_Interactable_Objects");
static_assert(sizeof(BP_Barrier_C_Setup_Interactable_Objects) == 0x000028, "Wrong size on BP_Barrier_C_Setup_Interactable_Objects");
static_assert(offsetof(BP_Barrier_C_Setup_Interactable_Objects, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'BP_Barrier_C_Setup_Interactable_Objects::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_Setup_Interactable_Objects, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Barrier_C_Setup_Interactable_Objects::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_Setup_Interactable_Objects, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'BP_Barrier_C_Setup_Interactable_Objects::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_Setup_Interactable_Objects, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_Barrier_C_Setup_Interactable_Objects::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.SpawnPart
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Barrier_C_SpawnPart final
{
public:
	bool                                          bRight;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Barrier_Part_C*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Barrier_Part_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_SpawnPart) == 0x000010, "Wrong alignment on BP_Barrier_C_SpawnPart");
static_assert(sizeof(BP_Barrier_C_SpawnPart) == 0x0000D0, "Wrong size on BP_Barrier_C_SpawnPart");
static_assert(offsetof(BP_Barrier_C_SpawnPart, bRight) == 0x000000, "Member 'BP_Barrier_C_SpawnPart::bRight' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_SpawnPart, ReturnValue) == 0x000008, "Member 'BP_Barrier_C_SpawnPart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_SpawnPart, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'BP_Barrier_C_SpawnPart::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_SpawnPart, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'BP_Barrier_C_SpawnPart::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_SpawnPart, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_Barrier_C_SpawnPart::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_SpawnPart, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000048, "Member 'BP_Barrier_C_SpawnPart::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_SpawnPart, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_Barrier_C_SpawnPart::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_SpawnPart, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'BP_Barrier_C_SpawnPart::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_SpawnPart, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'BP_Barrier_C_SpawnPart::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.SpawnParts
// 0x0010 (0x0010 - 0x0000)
struct BP_Barrier_C_SpawnParts final
{
public:
	class ABP_Barrier_Part_C*                     CallFunc_SpawnPart_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Barrier_Part_C*                     CallFunc_SpawnPart_ReturnValue_1;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_SpawnParts) == 0x000008, "Wrong alignment on BP_Barrier_C_SpawnParts");
static_assert(sizeof(BP_Barrier_C_SpawnParts) == 0x000010, "Wrong size on BP_Barrier_C_SpawnParts");
static_assert(offsetof(BP_Barrier_C_SpawnParts, CallFunc_SpawnPart_ReturnValue) == 0x000000, "Member 'BP_Barrier_C_SpawnParts::CallFunc_SpawnPart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_SpawnParts, CallFunc_SpawnPart_ReturnValue_1) == 0x000008, "Member 'BP_Barrier_C_SpawnParts::CallFunc_SpawnPart_ReturnValue_1' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.StartLaunch
// 0x0018 (0x0018 - 0x0000)
struct BP_Barrier_C_StartLaunch final
{
public:
	struct FVector                                Barrier_Replicated_Values_Target_Position;         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_StartLaunch) == 0x000008, "Wrong alignment on BP_Barrier_C_StartLaunch");
static_assert(sizeof(BP_Barrier_C_StartLaunch) == 0x000018, "Wrong size on BP_Barrier_C_StartLaunch");
static_assert(offsetof(BP_Barrier_C_StartLaunch, Barrier_Replicated_Values_Target_Position) == 0x000000, "Member 'BP_Barrier_C_StartLaunch::Barrier_Replicated_Values_Target_Position' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.UpdateLaunchSequence
// 0x04D8 (0x04D8 - 0x0000)
struct BP_Barrier_C_UpdateLaunchSequence final
{
public:
	float                                         Location;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reverce;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1260[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Scale;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1261[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0160(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0288(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1262[0x7];                                     // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x03D8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_UpdateLaunchSequence) == 0x000008, "Wrong alignment on BP_Barrier_C_UpdateLaunchSequence");
static_assert(sizeof(BP_Barrier_C_UpdateLaunchSequence) == 0x0004D8, "Wrong size on BP_Barrier_C_UpdateLaunchSequence");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, Location) == 0x000000, "Member 'BP_Barrier_C_UpdateLaunchSequence::Location' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, Reverce) == 0x000004, "Member 'BP_Barrier_C_UpdateLaunchSequence::Reverce' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, Scale) == 0x000008, "Member 'BP_Barrier_C_UpdateLaunchSequence::Scale' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000010, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000028, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000040, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_GetUpVector_ReturnValue) == 0x000058, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_GetForwardVector_ReturnValue) == 0x000070, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000A0, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000B8, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Not_PreBool_ReturnValue) == 0x0000D0, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0000E0, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000100, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_SelectFloat_ReturnValue) == 0x000118, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000138, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000140, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000158, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000160, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_MakeVector_ReturnValue) == 0x000258, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000270, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000288, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_Not_PreBool_ReturnValue_1) == 0x000380, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_GetInstigator_ReturnValue) == 0x000388, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000390, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_SelectVector_ReturnValue) == 0x0003A8, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_VLerp_ReturnValue) == 0x0003C0, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0003D8, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_UpdateLaunchSequence, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0004D0, "Member 'BP_Barrier_C_UpdateLaunchSequence::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.GetCurrentInteractionInfo
// 0x0340 (0x0340 - 0x0000)
struct BP_Barrier_C_GetCurrentInteractionInfo final
{
public:
	const class AGzCharacter*                     InteractedBy;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGzInteractionInfo>             InteractionInfoArray;                              // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayTag                           OutInteractionTag;                                 // 0x0018(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGzInteractionData                     OutInteractionData;                                // 0x0020(0x00F8)(Parm, OutParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0118(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPickeable_Pick;                         // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1263[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x011C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x0124(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_2;     // 0x012C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_3;     // 0x0134(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1264[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInteractionData                     CallFunc_FindInteractionDataByTag_OutInteractionData; // 0x0140(0x00F8)(ContainsInstancedReference)
	bool                                          CallFunc_FindInteractionDataByTag_ReturnValue;     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1265[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInteractionData                     CallFunc_FindInteractionDataByTag_OutInteractionData_1; // 0x0240(0x00F8)(ContainsInstancedReference)
	bool                                          CallFunc_FindInteractionDataByTag_ReturnValue_1;   // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_GetCurrentInteractionInfo) == 0x000008, "Wrong alignment on BP_Barrier_C_GetCurrentInteractionInfo");
static_assert(sizeof(BP_Barrier_C_GetCurrentInteractionInfo) == 0x000340, "Wrong size on BP_Barrier_C_GetCurrentInteractionInfo");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, InteractedBy) == 0x000000, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, InteractionInfoArray) == 0x000008, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::InteractionInfoArray' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, OutInteractionTag) == 0x000018, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::OutInteractionTag' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, OutInteractionData) == 0x000020, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::OutInteractionData' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, ReturnValue) == 0x000118, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, CallFunc_IsPickeable_Pick) == 0x000119, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::CallFunc_IsPickeable_Pick' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00011C, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x000124, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, CallFunc_MakeLiteralGameplayTag_ReturnValue_2) == 0x00012C, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::CallFunc_MakeLiteralGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, CallFunc_MakeLiteralGameplayTag_ReturnValue_3) == 0x000134, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::CallFunc_MakeLiteralGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, CallFunc_FindInteractionDataByTag_OutInteractionData) == 0x000140, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::CallFunc_FindInteractionDataByTag_OutInteractionData' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, CallFunc_FindInteractionDataByTag_ReturnValue) == 0x000238, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::CallFunc_FindInteractionDataByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, CallFunc_FindInteractionDataByTag_OutInteractionData_1) == 0x000240, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::CallFunc_FindInteractionDataByTag_OutInteractionData_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_GetCurrentInteractionInfo, CallFunc_FindInteractionDataByTag_ReturnValue_1) == 0x000338, "Member 'BP_Barrier_C_GetCurrentInteractionInfo::CallFunc_FindInteractionDataByTag_ReturnValue_1' has a wrong offset!");

// Function BP_Barrier.BP_Barrier_C.IsPickeable
// 0x0040 (0x0040 - 0x0000)
struct BP_Barrier_C_IsPickeable final
{
public:
	bool                                          Pick;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1266[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameplayAttributeValue_bFound;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1267[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameplayAttributeValue_ReturnValue;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameplayAttributeValue_bFound_1;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1268[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameplayAttributeValue_ReturnValue_1;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1269[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barrier_C_IsPickeable) == 0x000008, "Wrong alignment on BP_Barrier_C_IsPickeable");
static_assert(sizeof(BP_Barrier_C_IsPickeable) == 0x000040, "Wrong size on BP_Barrier_C_IsPickeable");
static_assert(offsetof(BP_Barrier_C_IsPickeable, Pick) == 0x000000, "Member 'BP_Barrier_C_IsPickeable::Pick' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_IsPickeable, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Barrier_C_IsPickeable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_IsPickeable, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'BP_Barrier_C_IsPickeable::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_IsPickeable, CallFunc_GetGameplayAttributeValue_bFound) == 0x000018, "Member 'BP_Barrier_C_IsPickeable::CallFunc_GetGameplayAttributeValue_bFound' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_IsPickeable, CallFunc_GetGameplayAttributeValue_ReturnValue) == 0x00001C, "Member 'BP_Barrier_C_IsPickeable::CallFunc_GetGameplayAttributeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_IsPickeable, CallFunc_GetGameplayAttributeValue_bFound_1) == 0x000020, "Member 'BP_Barrier_C_IsPickeable::CallFunc_GetGameplayAttributeValue_bFound_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_IsPickeable, CallFunc_GetGameplayAttributeValue_ReturnValue_1) == 0x000024, "Member 'BP_Barrier_C_IsPickeable::CallFunc_GetGameplayAttributeValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_IsPickeable, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Barrier_C_IsPickeable::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_IsPickeable, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'BP_Barrier_C_IsPickeable::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Barrier_C_IsPickeable, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'BP_Barrier_C_IsPickeable::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

}

