#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OpportunityMission

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MissionGraphRuntime_structs.hpp"
#include "WBP_BaseOpportunityMission_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OpportunityMission.WBP_OpportunityMission_C
// 0x0038 (0x0320 - 0x02E8)
class UWBP_OpportunityMission_C final : public UWBP_BaseOpportunityMission_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGzTextBlock*                           Description_GzText;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Image;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           MissionTime_GzText;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpecialMissionFrame_Image;                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGzMission*                             Mission;                                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ObjectiveTimerHandle;                              // 0x0318(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_OpportunityMission(int32 EntryPoint);
	void OnMissionStateChanged(class AGzMission* Param_Mission, const struct FGzMissionState& OldState, const struct FGzMissionState& MissionState);
	void OnObjectiveProgressChanged(class UMissionObjective* Objective);
	void OnObjectiveStateChanged(class UMissionObjective* Objective, EMissionObjectiveState OldState, EMissionObjectiveState NewState);
	void PreConstruct(bool IsDesignTime);
	void Set_Mission_Data(class AGzMission* Param_Mission);
	void Update_Objective_Timer();
	void UpdateObjectiveInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OpportunityMission_C">();
	}
	static class UWBP_OpportunityMission_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OpportunityMission_C>();
	}
};
static_assert(alignof(UWBP_OpportunityMission_C) == 0x000008, "Wrong alignment on UWBP_OpportunityMission_C");
static_assert(sizeof(UWBP_OpportunityMission_C) == 0x000320, "Wrong size on UWBP_OpportunityMission_C");
static_assert(offsetof(UWBP_OpportunityMission_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_OpportunityMission_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_OpportunityMission_C, Description_GzText) == 0x0002F0, "Member 'UWBP_OpportunityMission_C::Description_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_OpportunityMission_C, Icon_Image) == 0x0002F8, "Member 'UWBP_OpportunityMission_C::Icon_Image' has a wrong offset!");
static_assert(offsetof(UWBP_OpportunityMission_C, MissionTime_GzText) == 0x000300, "Member 'UWBP_OpportunityMission_C::MissionTime_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_OpportunityMission_C, SpecialMissionFrame_Image) == 0x000308, "Member 'UWBP_OpportunityMission_C::SpecialMissionFrame_Image' has a wrong offset!");
static_assert(offsetof(UWBP_OpportunityMission_C, Mission) == 0x000310, "Member 'UWBP_OpportunityMission_C::Mission' has a wrong offset!");
static_assert(offsetof(UWBP_OpportunityMission_C, ObjectiveTimerHandle) == 0x000318, "Member 'UWBP_OpportunityMission_C::ObjectiveTimerHandle' has a wrong offset!");

}

