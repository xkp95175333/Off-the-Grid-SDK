#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GeometryScriptingCore_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_QuickMeleeStates_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerCharacter.BP_PlayerCharacter_C
// 0x0250 (0x1C10 - 0x19C0)
class ABP_PlayerCharacter_C : public AGzPlayerCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x19C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_Jetpack_C*                          BP_Jetpack;                                        // 0x19C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzStreamableComponent*                 GzStreamableComponent;                             // 0x19D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Player_HexHuntComponent_C*          BP_Player_HexHuntComponent;                        // 0x19D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_QuickOrderComponent_C*              QuickOrderComponent;                               // 0x19E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzCharacterWorldVisibilityComponent*   GzCharacterWorldVisibility;                        // 0x19E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzRadialLootSpawnerComponent*          GzRadialLootSpawner;                               // 0x19F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterCustomization_C*           CharacterCustomization;                            // 0x19F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     GzCombatComponent;                                 // 0x1A00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMakeNoiseComponent_C*                  MakeNoiseComponent;                                // 0x1A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           AsyncTask_HealthChanged;                           // 0x1A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        WarningPoint;                                      // 0x1A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     ChangedAttribute;                                  // 0x1A20(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        CurrentAttributeValue;                             // 0x1A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousAttributeValue;                            // 0x1A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BloodSplat;                                        // 0x1A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           AsyncTask_ArmorChanged;                            // 0x1A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        WingsSuitActionValue;                              // 0x1A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             MovementInputActionStarted;                        // 0x1A80(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             MovementInputActionCompleted;                      // 0x1A90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             InteractInputActionStarted;                        // 0x1AA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	E_QuickMeleeStates                            QuickMeleeStates;                                  // 0x1AB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B4[0x7];                                     // 0x1AB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WeaponSelectionFloat;                              // 0x1AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WeaponSelectUpOrDown;                              // 0x1AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScrollingWeapons;                                  // 0x1AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B5[0x7];                                     // 0x1AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LineTraceOffset;                                   // 0x1AD0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SpawnedPose;                                       // 0x1AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DistanceText;                                      // 0x1AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class UInputAction*, double>             LastInputTimes;                                    // 0x1AF8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          BleedingOut;                                       // 0x1B48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B6[0x7];                                     // 0x1B49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             InteractInputActionEnded;                          // 0x1B50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        Jump_Apex;                                         // 0x1B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           AsyncTask_HealthChangedAuthority;                  // 0x1B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponSelectionIncrement;                          // 0x1B70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B7[0x4];                                     // 0x1B74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzPostProcessFX*                       BleedingOutPP;                                     // 0x1B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UABP_PlayerVehicle_C*                   As_ABP_Player_Vehicle;                             // 0x1B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ArmAbilityStarted;                                 // 0x1B88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreWingsuitForward;                            // 0x1B89(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B8[0x2];                                     // 0x1B8A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraFadeDistance;                                // 0x1B8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           Async_GridArmorAttributeChange;                    // 0x1B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               GridArmorDynamicMaterialInstance;                  // 0x1B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGzPocketChangeHandle                  HandleBackpack;                                    // 0x1BA0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B9[0x4];                                     // 0x1BAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          BodyHitResponseEvent;                              // 0x1BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ArmorHitResponseEvent;                             // 0x1BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPressingKillYourself;                            // 0x1BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62BA[0x3];                                     // 0x1BC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInt32Range                            EmotionSeedRange;                                  // 0x1BC4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62BB[0x4];                                     // 0x1BD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PreviousRightTriggerTime;                          // 0x1BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightAbilityTriggerTime;                           // 0x1BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftAbilityTriggerTime;                            // 0x1BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousLeftTriggerTimer;                          // 0x1BF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TriggerLegsTime;                                   // 0x1BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLegsAbilityStarted;                               // 0x1C00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSideArmComboTriggered;                            // 0x1C01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62BC[0x6];                                     // 0x1C02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GridArmorValue;                                    // 0x1C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InteractInputActionStarted__DelegateSignature();
	void InteractInputActionEnded__DelegateSignature();
	void BackpackCallback(const struct FGzInvPocketChangeData& PocketChangeData);
	void BP_OnBackpackChanged(const struct FGzInvPocketChangeData& Data);
	void CheckForwardMovement(bool* CanEnterSprint);
	void CreateGridShieldMaterialInstance();
	void DrawDebugShapes();
	void ExecuteUbergraph_BP_PlayerCharacter(int32 EntryPoint);
	bool FilterBackpackPocketChange(const struct FGzInvPocketDef& PocketDef, const struct FGzInvPocket& Pocket);
	void Fn_CycleDataTable(class UDataTable* TmpHaircut_DataTable, int32 StepSize, int32& REF_Cloth_CustomizationIndex, class FName* Output);
	void GetAvailableWeapons(bool bIncludeSideArm, TArray<struct FGameplayTag>* Result);
	float GetDefaultAttributeGridArmor();
	void GetEquippedWeaponIndex(TArray<struct FGameplayTag>& AvailableWeaponSlots, int32* Array_Index);
	int32 GetNewWeaponIndex(const TArray<struct FGameplayTag>& AvailableWeapons, int32 Direction);
	void GetVignetteIntensity(double* Vignette_Intensity);
	void GridShieldLevelSFX(double GridArmorMaxValue, double GridArmorCurrentValue);
	void Gz_ALS_ADS_Active();
	void Gz_ALS_ADS_Enter();
	void Gz_ALS_ADS_Leave();
	void HandleCrouchAndSlide(bool* Handled);
	void HandleDodgeRoll(bool* Handled);
	void HandleWingsuit(bool* Handled);
	bool HasSelfReviveKit();
	void Health_Attribute_Changed(double NewValue, double OldValue);
	void InpActEvt_IA_Accelerate_K2Node_EnhancedInputActionEvent_45(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Accelerate_K2Node_EnhancedInputActionEvent_46(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_57(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_58(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_59(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Attack_K2Node_EnhancedInputActionEvent_61(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Attack_K2Node_EnhancedInputActionEvent_62(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Attack_K2Node_EnhancedInputActionEvent_63(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_ConsumSlot1_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_ConsumSlot2_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_ExitVehicle_K2Node_EnhancedInputActionEvent_49(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_ExitVehicle_K2Node_EnhancedInputActionEvent_50(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_FireMode_K2Node_EnhancedInputActionEvent_56(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Handbrake_K2Node_EnhancedInputActionEvent_41(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Handbrake_K2Node_EnhancedInputActionEvent_42(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Horn_K2Node_EnhancedInputActionEvent_39(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Horn_K2Node_EnhancedInputActionEvent_40(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_64(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_65(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_InventorySlot1_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_InventorySlot2_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_InventorySlot3_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_71(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_72(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_73(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_KillYourself_K2Node_EnhancedInputActionEvent_23(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_KillYourself_K2Node_EnhancedInputActionEvent_24(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_KillYourself_K2Node_EnhancedInputActionEvent_25(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LeanOut_K2Node_EnhancedInputActionEvent_37(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LeanOut_K2Node_EnhancedInputActionEvent_38(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LeftArmAbility_K2Node_EnhancedInputActionEvent_20(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LeftArmAbility_K2Node_EnhancedInputActionEvent_21(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LeftArmAbility_K2Node_EnhancedInputActionEvent_22(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LegAbility_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LegAbility_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LegAbility_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LegAbility_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LookUp_K2Node_EnhancedInputActionEvent_70(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_35(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_36(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_PrevNextWeapon_K2Node_EnhancedInputActionEvent_60(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_QuickMelee_K2Node_EnhancedInputActionEvent_68(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_QuickMelee_K2Node_EnhancedInputActionEvent_69(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Reload_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_RightArmAbility_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_RightArmAbility_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_RightArmAbility_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SelectSideArm_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SelectSideArm_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SelfRevive_K2Node_EnhancedInputActionEvent_29(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SelfRevive_K2Node_EnhancedInputActionEvent_30(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SelfRevive_K2Node_EnhancedInputActionEvent_31(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_26(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_27(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_28(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Steer_K2Node_EnhancedInputActionEvent_43(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Steer_K2Node_EnhancedInputActionEvent_44(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SwitchLeftShoulderCamera_K2Node_EnhancedInputActionEvent_53(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SwitchScopeMode_K2Node_EnhancedInputActionEvent_54(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SwitchScopeMode_K2Node_EnhancedInputActionEvent_55(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SwitchSeat_K2Node_EnhancedInputActionEvent_47(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SwitchSeat_K2Node_EnhancedInputActionEvent_48(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Throwing_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Throwing_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Turn_K2Node_EnhancedInputActionEvent_67(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_VehicleLookPitch_K2Node_EnhancedInputActionEvent_51(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_VehicleLookYaw_K2Node_EnhancedInputActionEvent_52(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Wingsuit_Boost_K2Node_EnhancedInputActionEvent_66(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_WingsuitForward_K2Node_EnhancedInputActionEvent_32(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_WingsuitForward_K2Node_EnhancedInputActionEvent_33(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_WingsuitForward_K2Node_EnhancedInputActionEvent_34(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_WingsuitSide_K2Node_EnhancedInputActionEvent_19(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_ZiplineCancel_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_K_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InteractInputActionEndedEvent();
	void InteractInputActionStartedEvent();
	void IsAimingToggleModeEnabled(bool* Aiming_Toggle_Mode_Enabled);
	bool IsSprintToggleModeEnabled();
	void K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void K2_OnStartLeglessState();
	void K2_OnStopLeglessState();
	void ListenAndHandleAttributesChanges();
	void MakeReviveSelfPing();
	void MovementInputActionCompleted__DelegateSignature();
	void MovementInputActionCompletedEvent();
	void MovementInputActionStarted__DelegateSignature();
	void MovementInputActionStartedEvent();
	void On_Damage_Received(class AActor* Damager, EGzDamageIndicatorType Type, float Damage, bool bCrit);
	void OnAttributeChanged_8CCC0BF84343A593F37C34A05C818047(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnAttributeChanged_95D577EE4C7E8A49E327C8B2F3585CBB(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnCharacterKnockedDownStateChanged(class AGzCharacter* Character, bool KnockedDownState);
	void OnJumpActivationFailed(const struct FGameplayTag& FailedAbilityTag);
	void OnJumped();
	void OnLanded(const struct FHitResult& Hit);
	void OnPlayerStateReplicated(class AGzPlayerState* Param_PlayerState);
	void OnVehicleSeatChange(class AGzVehicle* VehicleRef, EGzVehicleSeatType OldSeat, EGzVehicleSeatType NewSeat);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void SetDefaultBackpackMaterials(class UGzSimpleItemData* Self2);
	void SetGridShieldMaterial();
	void SetGridShieldMaterialParameters(double GridArmorCurrent);
	void SetupPlayerNameWidget(class APlayerState* InPlayerState);
	void SetVignetteIntensity(double Value);
	void SpeedKmh(double* H);
	void SwitchWeaponScroll(bool bIncludeSideArm);
	void Trigger_Jump_Off_by_Type();
	void TryActivateConsumeAbility();
	void UserConstructionScript();
	void VignetteCalculator();
	void Was_Health_Reduced(bool* Health_Reduced);
	void ZeroVignette();

	bool BP_IsNewCharacter() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerCharacter_C">();
	}
	static class ABP_PlayerCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerCharacter_C>();
	}
};
static_assert(alignof(ABP_PlayerCharacter_C) == 0x000010, "Wrong alignment on ABP_PlayerCharacter_C");
static_assert(sizeof(ABP_PlayerCharacter_C) == 0x001C10, "Wrong size on ABP_PlayerCharacter_C");
static_assert(offsetof(ABP_PlayerCharacter_C, UberGraphFrame) == 0x0019C0, "Member 'ABP_PlayerCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_Jetpack) == 0x0019C8, "Member 'ABP_PlayerCharacter_C::BP_Jetpack' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, GzStreamableComponent) == 0x0019D0, "Member 'ABP_PlayerCharacter_C::GzStreamableComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_Player_HexHuntComponent) == 0x0019D8, "Member 'ABP_PlayerCharacter_C::BP_Player_HexHuntComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, QuickOrderComponent) == 0x0019E0, "Member 'ABP_PlayerCharacter_C::QuickOrderComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, GzCharacterWorldVisibility) == 0x0019E8, "Member 'ABP_PlayerCharacter_C::GzCharacterWorldVisibility' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, GzRadialLootSpawner) == 0x0019F0, "Member 'ABP_PlayerCharacter_C::GzRadialLootSpawner' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, CharacterCustomization) == 0x0019F8, "Member 'ABP_PlayerCharacter_C::CharacterCustomization' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, GzCombatComponent) == 0x001A00, "Member 'ABP_PlayerCharacter_C::GzCombatComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, MakeNoiseComponent) == 0x001A08, "Member 'ABP_PlayerCharacter_C::MakeNoiseComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, AsyncTask_HealthChanged) == 0x001A10, "Member 'ABP_PlayerCharacter_C::AsyncTask_HealthChanged' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, WarningPoint) == 0x001A18, "Member 'ABP_PlayerCharacter_C::WarningPoint' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, ChangedAttribute) == 0x001A20, "Member 'ABP_PlayerCharacter_C::ChangedAttribute' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, CurrentAttributeValue) == 0x001A58, "Member 'ABP_PlayerCharacter_C::CurrentAttributeValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, PreviousAttributeValue) == 0x001A60, "Member 'ABP_PlayerCharacter_C::PreviousAttributeValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BloodSplat) == 0x001A68, "Member 'ABP_PlayerCharacter_C::BloodSplat' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, AsyncTask_ArmorChanged) == 0x001A70, "Member 'ABP_PlayerCharacter_C::AsyncTask_ArmorChanged' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, WingsSuitActionValue) == 0x001A78, "Member 'ABP_PlayerCharacter_C::WingsSuitActionValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, MovementInputActionStarted) == 0x001A80, "Member 'ABP_PlayerCharacter_C::MovementInputActionStarted' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, MovementInputActionCompleted) == 0x001A90, "Member 'ABP_PlayerCharacter_C::MovementInputActionCompleted' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, InteractInputActionStarted) == 0x001AA0, "Member 'ABP_PlayerCharacter_C::InteractInputActionStarted' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, QuickMeleeStates) == 0x001AB0, "Member 'ABP_PlayerCharacter_C::QuickMeleeStates' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, WeaponSelectionFloat) == 0x001AB8, "Member 'ABP_PlayerCharacter_C::WeaponSelectionFloat' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, WeaponSelectUpOrDown) == 0x001AC0, "Member 'ABP_PlayerCharacter_C::WeaponSelectUpOrDown' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, ScrollingWeapons) == 0x001AC8, "Member 'ABP_PlayerCharacter_C::ScrollingWeapons' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, LineTraceOffset) == 0x001AD0, "Member 'ABP_PlayerCharacter_C::LineTraceOffset' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, SpawnedPose) == 0x001AE8, "Member 'ABP_PlayerCharacter_C::SpawnedPose' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, DistanceText) == 0x001AF0, "Member 'ABP_PlayerCharacter_C::DistanceText' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, LastInputTimes) == 0x001AF8, "Member 'ABP_PlayerCharacter_C::LastInputTimes' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BleedingOut) == 0x001B48, "Member 'ABP_PlayerCharacter_C::BleedingOut' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, InteractInputActionEnded) == 0x001B50, "Member 'ABP_PlayerCharacter_C::InteractInputActionEnded' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, Jump_Apex) == 0x001B60, "Member 'ABP_PlayerCharacter_C::Jump_Apex' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, AsyncTask_HealthChangedAuthority) == 0x001B68, "Member 'ABP_PlayerCharacter_C::AsyncTask_HealthChangedAuthority' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, WeaponSelectionIncrement) == 0x001B70, "Member 'ABP_PlayerCharacter_C::WeaponSelectionIncrement' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BleedingOutPP) == 0x001B78, "Member 'ABP_PlayerCharacter_C::BleedingOutPP' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, As_ABP_Player_Vehicle) == 0x001B80, "Member 'ABP_PlayerCharacter_C::As_ABP_Player_Vehicle' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, ArmAbilityStarted) == 0x001B88, "Member 'ABP_PlayerCharacter_C::ArmAbilityStarted' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, bIgnoreWingsuitForward) == 0x001B89, "Member 'ABP_PlayerCharacter_C::bIgnoreWingsuitForward' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, CameraFadeDistance) == 0x001B8C, "Member 'ABP_PlayerCharacter_C::CameraFadeDistance' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, Async_GridArmorAttributeChange) == 0x001B90, "Member 'ABP_PlayerCharacter_C::Async_GridArmorAttributeChange' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, GridArmorDynamicMaterialInstance) == 0x001B98, "Member 'ABP_PlayerCharacter_C::GridArmorDynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, HandleBackpack) == 0x001BA0, "Member 'ABP_PlayerCharacter_C::HandleBackpack' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BodyHitResponseEvent) == 0x001BB0, "Member 'ABP_PlayerCharacter_C::BodyHitResponseEvent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, ArmorHitResponseEvent) == 0x001BB8, "Member 'ABP_PlayerCharacter_C::ArmorHitResponseEvent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, IsPressingKillYourself) == 0x001BC0, "Member 'ABP_PlayerCharacter_C::IsPressingKillYourself' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, EmotionSeedRange) == 0x001BC4, "Member 'ABP_PlayerCharacter_C::EmotionSeedRange' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, PreviousRightTriggerTime) == 0x001BD8, "Member 'ABP_PlayerCharacter_C::PreviousRightTriggerTime' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, RightAbilityTriggerTime) == 0x001BE0, "Member 'ABP_PlayerCharacter_C::RightAbilityTriggerTime' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, LeftAbilityTriggerTime) == 0x001BE8, "Member 'ABP_PlayerCharacter_C::LeftAbilityTriggerTime' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, PreviousLeftTriggerTimer) == 0x001BF0, "Member 'ABP_PlayerCharacter_C::PreviousLeftTriggerTimer' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, TriggerLegsTime) == 0x001BF8, "Member 'ABP_PlayerCharacter_C::TriggerLegsTime' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, bLegsAbilityStarted) == 0x001C00, "Member 'ABP_PlayerCharacter_C::bLegsAbilityStarted' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, bSideArmComboTriggered) == 0x001C01, "Member 'ABP_PlayerCharacter_C::bSideArmComboTriggered' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, GridArmorValue) == 0x001C08, "Member 'ABP_PlayerCharacter_C::GridArmorValue' has a wrong offset!");

}

