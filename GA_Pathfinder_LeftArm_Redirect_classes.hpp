#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Pathfinder_LeftArm_Redirect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Pathfinder_LeftArm_Redirect.GA_Pathfinder_LeftArm_Redirect_C
// 0x0018 (0x0520 - 0x0508)
class UGA_Pathfinder_LeftArm_Redirect_C : public UGzGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0508(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PathfinderLimbAbilityComponent_C*   LimbComponent;                                     // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Limb_Type;                                         // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Pathfinder_LeftArm_Redirect(int32 EntryPoint);
	void K2_ActivateAbility();
	void SetComponent(class UBP_PathfinderLimbAbilityComponent_C** Param_LimbComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Pathfinder_LeftArm_Redirect_C">();
	}
	static class UGA_Pathfinder_LeftArm_Redirect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Pathfinder_LeftArm_Redirect_C>();
	}
};
static_assert(alignof(UGA_Pathfinder_LeftArm_Redirect_C) == 0x000008, "Wrong alignment on UGA_Pathfinder_LeftArm_Redirect_C");
static_assert(sizeof(UGA_Pathfinder_LeftArm_Redirect_C) == 0x000520, "Wrong size on UGA_Pathfinder_LeftArm_Redirect_C");
static_assert(offsetof(UGA_Pathfinder_LeftArm_Redirect_C, UberGraphFrame) == 0x000508, "Member 'UGA_Pathfinder_LeftArm_Redirect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Pathfinder_LeftArm_Redirect_C, LimbComponent) == 0x000510, "Member 'UGA_Pathfinder_LeftArm_Redirect_C::LimbComponent' has a wrong offset!");
static_assert(offsetof(UGA_Pathfinder_LeftArm_Redirect_C, Limb_Type) == 0x000518, "Member 'UGA_Pathfinder_LeftArm_Redirect_C::Limb_Type' has a wrong offset!");

}

