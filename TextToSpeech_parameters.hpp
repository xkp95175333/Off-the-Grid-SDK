#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TextToSpeech

#include "Basic.hpp"


namespace SDK::Params
{

// Function TextToSpeech.TextToSpeechEngineSubsystem.ActivateChannel
// 0x0008 (0x0008 - 0x0000)
struct TextToSpeechEngineSubsystem_ActivateChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_ActivateChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_ActivateChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_ActivateChannel) == 0x000008, "Wrong size on TextToSpeechEngineSubsystem_ActivateChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_ActivateChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_ActivateChannel::InChannelId' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.AddCustomChannel
// 0x0008 (0x0008 - 0x0000)
struct TextToSpeechEngineSubsystem_AddCustomChannel final
{
public:
	class FName                                   InNewChannelId;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_AddCustomChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_AddCustomChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_AddCustomChannel) == 0x000008, "Wrong size on TextToSpeechEngineSubsystem_AddCustomChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_AddCustomChannel, InNewChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_AddCustomChannel::InNewChannelId' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.AddDefaultChannel
// 0x0008 (0x0008 - 0x0000)
struct TextToSpeechEngineSubsystem_AddDefaultChannel final
{
public:
	class FName                                   InNewChannelId;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_AddDefaultChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_AddDefaultChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_AddDefaultChannel) == 0x000008, "Wrong size on TextToSpeechEngineSubsystem_AddDefaultChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_AddDefaultChannel, InNewChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_AddDefaultChannel::InNewChannelId' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.DeactivateChannel
// 0x0008 (0x0008 - 0x0000)
struct TextToSpeechEngineSubsystem_DeactivateChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_DeactivateChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_DeactivateChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_DeactivateChannel) == 0x000008, "Wrong size on TextToSpeechEngineSubsystem_DeactivateChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_DeactivateChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_DeactivateChannel::InChannelId' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.GetVolumeOnChannel
// 0x000C (0x000C - 0x0000)
struct TextToSpeechEngineSubsystem_GetVolumeOnChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_GetVolumeOnChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_GetVolumeOnChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_GetVolumeOnChannel) == 0x00000C, "Wrong size on TextToSpeechEngineSubsystem_GetVolumeOnChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_GetVolumeOnChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_GetVolumeOnChannel::InChannelId' has a wrong offset!");
static_assert(offsetof(TextToSpeechEngineSubsystem_GetVolumeOnChannel, ReturnValue) == 0x000008, "Member 'TextToSpeechEngineSubsystem_GetVolumeOnChannel::ReturnValue' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.MuteChannel
// 0x0008 (0x0008 - 0x0000)
struct TextToSpeechEngineSubsystem_MuteChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_MuteChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_MuteChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_MuteChannel) == 0x000008, "Wrong size on TextToSpeechEngineSubsystem_MuteChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_MuteChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_MuteChannel::InChannelId' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.RemoveChannel
// 0x0008 (0x0008 - 0x0000)
struct TextToSpeechEngineSubsystem_RemoveChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_RemoveChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_RemoveChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_RemoveChannel) == 0x000008, "Wrong size on TextToSpeechEngineSubsystem_RemoveChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_RemoveChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_RemoveChannel::InChannelId' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.SetRateOnChannel
// 0x000C (0x000C - 0x0000)
struct TextToSpeechEngineSubsystem_SetRateOnChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InRate;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_SetRateOnChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_SetRateOnChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_SetRateOnChannel) == 0x00000C, "Wrong size on TextToSpeechEngineSubsystem_SetRateOnChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_SetRateOnChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_SetRateOnChannel::InChannelId' has a wrong offset!");
static_assert(offsetof(TextToSpeechEngineSubsystem_SetRateOnChannel, InRate) == 0x000008, "Member 'TextToSpeechEngineSubsystem_SetRateOnChannel::InRate' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.SetVolumeOnChannel
// 0x000C (0x000C - 0x0000)
struct TextToSpeechEngineSubsystem_SetVolumeOnChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InVolume;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_SetVolumeOnChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_SetVolumeOnChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_SetVolumeOnChannel) == 0x00000C, "Wrong size on TextToSpeechEngineSubsystem_SetVolumeOnChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_SetVolumeOnChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_SetVolumeOnChannel::InChannelId' has a wrong offset!");
static_assert(offsetof(TextToSpeechEngineSubsystem_SetVolumeOnChannel, InVolume) == 0x000008, "Member 'TextToSpeechEngineSubsystem_SetVolumeOnChannel::InVolume' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.SpeakOnChannel
// 0x0018 (0x0018 - 0x0000)
struct TextToSpeechEngineSubsystem_SpeakOnChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InStringToSpeak;                                   // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_SpeakOnChannel) == 0x000008, "Wrong alignment on TextToSpeechEngineSubsystem_SpeakOnChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_SpeakOnChannel) == 0x000018, "Wrong size on TextToSpeechEngineSubsystem_SpeakOnChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_SpeakOnChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_SpeakOnChannel::InChannelId' has a wrong offset!");
static_assert(offsetof(TextToSpeechEngineSubsystem_SpeakOnChannel, InStringToSpeak) == 0x000008, "Member 'TextToSpeechEngineSubsystem_SpeakOnChannel::InStringToSpeak' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.StopSpeakingOnChannel
// 0x0008 (0x0008 - 0x0000)
struct TextToSpeechEngineSubsystem_StopSpeakingOnChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_StopSpeakingOnChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_StopSpeakingOnChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_StopSpeakingOnChannel) == 0x000008, "Wrong size on TextToSpeechEngineSubsystem_StopSpeakingOnChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_StopSpeakingOnChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_StopSpeakingOnChannel::InChannelId' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.UnmuteChannel
// 0x0008 (0x0008 - 0x0000)
struct TextToSpeechEngineSubsystem_UnmuteChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_UnmuteChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_UnmuteChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_UnmuteChannel) == 0x000008, "Wrong size on TextToSpeechEngineSubsystem_UnmuteChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_UnmuteChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_UnmuteChannel::InChannelId' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.DoesChannelExist
// 0x000C (0x000C - 0x0000)
struct TextToSpeechEngineSubsystem_DoesChannelExist final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4901[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TextToSpeechEngineSubsystem_DoesChannelExist) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_DoesChannelExist");
static_assert(sizeof(TextToSpeechEngineSubsystem_DoesChannelExist) == 0x00000C, "Wrong size on TextToSpeechEngineSubsystem_DoesChannelExist");
static_assert(offsetof(TextToSpeechEngineSubsystem_DoesChannelExist, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_DoesChannelExist::InChannelId' has a wrong offset!");
static_assert(offsetof(TextToSpeechEngineSubsystem_DoesChannelExist, ReturnValue) == 0x000008, "Member 'TextToSpeechEngineSubsystem_DoesChannelExist::ReturnValue' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.GetNumChannels
// 0x0004 (0x0004 - 0x0000)
struct TextToSpeechEngineSubsystem_GetNumChannels final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_GetNumChannels) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_GetNumChannels");
static_assert(sizeof(TextToSpeechEngineSubsystem_GetNumChannels) == 0x000004, "Wrong size on TextToSpeechEngineSubsystem_GetNumChannels");
static_assert(offsetof(TextToSpeechEngineSubsystem_GetNumChannels, ReturnValue) == 0x000000, "Member 'TextToSpeechEngineSubsystem_GetNumChannels::ReturnValue' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.GetRateOnChannel
// 0x000C (0x000C - 0x0000)
struct TextToSpeechEngineSubsystem_GetRateOnChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechEngineSubsystem_GetRateOnChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_GetRateOnChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_GetRateOnChannel) == 0x00000C, "Wrong size on TextToSpeechEngineSubsystem_GetRateOnChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_GetRateOnChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_GetRateOnChannel::InChannelId' has a wrong offset!");
static_assert(offsetof(TextToSpeechEngineSubsystem_GetRateOnChannel, ReturnValue) == 0x000008, "Member 'TextToSpeechEngineSubsystem_GetRateOnChannel::ReturnValue' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.IsChannelActive
// 0x000C (0x000C - 0x0000)
struct TextToSpeechEngineSubsystem_IsChannelActive final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4902[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TextToSpeechEngineSubsystem_IsChannelActive) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_IsChannelActive");
static_assert(sizeof(TextToSpeechEngineSubsystem_IsChannelActive) == 0x00000C, "Wrong size on TextToSpeechEngineSubsystem_IsChannelActive");
static_assert(offsetof(TextToSpeechEngineSubsystem_IsChannelActive, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_IsChannelActive::InChannelId' has a wrong offset!");
static_assert(offsetof(TextToSpeechEngineSubsystem_IsChannelActive, ReturnValue) == 0x000008, "Member 'TextToSpeechEngineSubsystem_IsChannelActive::ReturnValue' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.IsChannelMuted
// 0x000C (0x000C - 0x0000)
struct TextToSpeechEngineSubsystem_IsChannelMuted final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4903[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TextToSpeechEngineSubsystem_IsChannelMuted) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_IsChannelMuted");
static_assert(sizeof(TextToSpeechEngineSubsystem_IsChannelMuted) == 0x00000C, "Wrong size on TextToSpeechEngineSubsystem_IsChannelMuted");
static_assert(offsetof(TextToSpeechEngineSubsystem_IsChannelMuted, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_IsChannelMuted::InChannelId' has a wrong offset!");
static_assert(offsetof(TextToSpeechEngineSubsystem_IsChannelMuted, ReturnValue) == 0x000008, "Member 'TextToSpeechEngineSubsystem_IsChannelMuted::ReturnValue' has a wrong offset!");

// Function TextToSpeech.TextToSpeechEngineSubsystem.IsSpeakingOnChannel
// 0x000C (0x000C - 0x0000)
struct TextToSpeechEngineSubsystem_IsSpeakingOnChannel final
{
public:
	class FName                                   InChannelId;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4904[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TextToSpeechEngineSubsystem_IsSpeakingOnChannel) == 0x000004, "Wrong alignment on TextToSpeechEngineSubsystem_IsSpeakingOnChannel");
static_assert(sizeof(TextToSpeechEngineSubsystem_IsSpeakingOnChannel) == 0x00000C, "Wrong size on TextToSpeechEngineSubsystem_IsSpeakingOnChannel");
static_assert(offsetof(TextToSpeechEngineSubsystem_IsSpeakingOnChannel, InChannelId) == 0x000000, "Member 'TextToSpeechEngineSubsystem_IsSpeakingOnChannel::InChannelId' has a wrong offset!");
static_assert(offsetof(TextToSpeechEngineSubsystem_IsSpeakingOnChannel, ReturnValue) == 0x000008, "Member 'TextToSpeechEngineSubsystem_IsSpeakingOnChannel::ReturnValue' has a wrong offset!");

}

