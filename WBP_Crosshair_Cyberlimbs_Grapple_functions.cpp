#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_Cyberlimbs_Grapple

#include "Basic.hpp"

#include "WBP_Crosshair_Cyberlimbs_Grapple_classes.hpp"
#include "WBP_Crosshair_Cyberlimbs_Grapple_parameters.hpp"


namespace SDK
{

// Function WBP_Crosshair_Cyberlimbs_Grapple.WBP_Crosshair_Cyberlimbs_Grapple_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Crosshair_Cyberlimbs_Grapple_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_Grapple_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_Cyberlimbs_Grapple.WBP_Crosshair_Cyberlimbs_Grapple_C.ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Grapple
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_Grapple_C::ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Grapple(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_Grapple_C", "ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Grapple");

	Params::WBP_Crosshair_Cyberlimbs_Grapple_C_ExecuteUbergraph_WBP_Crosshair_Cyberlimbs_Grapple Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_Grapple.WBP_Crosshair_Cyberlimbs_Grapple_C.Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_Cyberlimbs_Grapple_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_Grapple_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_Cyberlimbs_Grapple.WBP_Crosshair_Cyberlimbs_Grapple_C.IsAbilityAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    AbilityAvailable                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_Grapple_C::IsAbilityAvailable(bool* AbilityAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_Grapple_C", "IsAbilityAvailable");

	Params::WBP_Crosshair_Cyberlimbs_Grapple_C_IsAbilityAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AbilityAvailable != nullptr)
		*AbilityAvailable = Parms.AbilityAvailable;
}


// Function WBP_Crosshair_Cyberlimbs_Grapple.WBP_Crosshair_Cyberlimbs_Grapple_C.PlayCrossAnimForward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_Crosshair_Cyberlimbs_Grapple_Leaf_C*Crosshair_Leaf                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_Grapple_C::PlayCrossAnimForward(class UWBP_Crosshair_Cyberlimbs_Grapple_Leaf_C* Crosshair_Leaf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_Grapple_C", "PlayCrossAnimForward");

	Params::WBP_Crosshair_Cyberlimbs_Grapple_C_PlayCrossAnimForward Parms{};

	Parms.Crosshair_Leaf = Crosshair_Leaf;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_Grapple.WBP_Crosshair_Cyberlimbs_Grapple_C.PlayCrossAnimReversed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_Crosshair_Cyberlimbs_Grapple_Leaf_C*CrosshairLeaf                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_Grapple_C::PlayCrossAnimReversed(class UWBP_Crosshair_Cyberlimbs_Grapple_Leaf_C* CrosshairLeaf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_Grapple_C", "PlayCrossAnimReversed");

	Params::WBP_Crosshair_Cyberlimbs_Grapple_C_PlayCrossAnimReversed Parms{};

	Parms.CrosshairLeaf = CrosshairLeaf;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_Grapple.WBP_Crosshair_Cyberlimbs_Grapple_C.PlayReticleAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTargetInRange                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_Grapple_C::PlayReticleAnimation(bool IsTargetInRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_Grapple_C", "PlayReticleAnimation");

	Params::WBP_Crosshair_Cyberlimbs_Grapple_C_PlayReticleAnimation Parms{};

	Parms.IsTargetInRange = IsTargetInRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_Cyberlimbs_Grapple.WBP_Crosshair_Cyberlimbs_Grapple_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_Cyberlimbs_Grapple_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_Cyberlimbs_Grapple_C", "Tick");

	Params::WBP_Crosshair_Cyberlimbs_Grapple_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

