#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ReconDrone_Redirect

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_ReconDrone_Redirect.GA_ReconDrone_Redirect_C.ExecuteUbergraph_GA_ReconDrone_Redirect
// 0x0078 (0x0078 - 0x0000)
struct GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Data;                           // 0x0008(0x0028)(ConstParm)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Data)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable;                              // 0x0040(0x0028)()
	class UGzAT_ServerWaitForTargetData*          CallFunc_ServerWaitForClientTargetData_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect) == 0x000008, "Wrong alignment on GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect");
static_assert(sizeof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect) == 0x000078, "Wrong size on GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect");
static_assert(offsetof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect, EntryPoint) == 0x000000, "Member 'GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect, K2Node_CustomEvent_Data) == 0x000008, "Member 'GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect, Temp_struct_Variable) == 0x000040, "Member 'GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect, CallFunc_ServerWaitForClientTargetData_ReturnValue) == 0x000068, "Member 'GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect::CallFunc_ServerWaitForClientTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect, CallFunc_K2_HasAuthority_ReturnValue) == 0x000071, "Member 'GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect, CallFunc_IsDedicatedServer_ReturnValue) == 0x000072, "Member 'GA_ReconDrone_Redirect_C_ExecuteUbergraph_GA_ReconDrone_Redirect::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function GA_ReconDrone_Redirect.GA_ReconDrone_Redirect_C.RedirectDrone
// 0x0220 (0x0220 - 0x0000)
struct GA_ReconDrone_Redirect_C_RedirectDrone final
{
public:
	struct FGameplayAbilityTargetDataHandle       HitResult;                                         // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABP_ReconDrone_C*                       CallFunc_GetDroneComponent_DroneCached;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x0030(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F4[0x1];                                     // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F5[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F6[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ReconDrone_Redirect_C_RedirectDrone) == 0x000008, "Wrong alignment on GA_ReconDrone_Redirect_C_RedirectDrone");
static_assert(sizeof(GA_ReconDrone_Redirect_C_RedirectDrone) == 0x000220, "Wrong size on GA_ReconDrone_Redirect_C_RedirectDrone");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, HitResult) == 0x000000, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::HitResult' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_GetDroneComponent_DroneCached) == 0x000028, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_GetDroneComponent_DroneCached' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x000030, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_bBlockingHit) == 0x000129, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_bInitialOverlap) == 0x00012A, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_Time) == 0x00012C, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_Distance) == 0x000130, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_Location) == 0x000138, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_ImpactPoint) == 0x000150, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_Normal) == 0x000168, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_ImpactNormal) == 0x000180, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_PhysMat) == 0x000198, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_HitActor) == 0x0001A0, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_HitComponent) == 0x0001A8, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_HitBoneName) == 0x0001B0, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_BoneName) == 0x0001B8, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_HitItem) == 0x0001C0, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_ElementIndex) == 0x0001C4, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_FaceIndex) == 0x0001C8, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_TraceStart) == 0x0001D0, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_BreakHitResult_TraceEnd) == 0x0001E8, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_SelectVector_ReturnValue) == 0x000200, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_RedirectDrone, CallFunc_IsValid_ReturnValue_1) == 0x000218, "Member 'GA_ReconDrone_Redirect_C_RedirectDrone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GA_ReconDrone_Redirect.GA_ReconDrone_Redirect_C.SendRedirectLocation
// 0x0158 (0x0158 - 0x0000)
struct GA_ReconDrone_Redirect_C_SendRedirectLocation final
{
public:
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F7[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetViewHitResult_ReturnValue;             // 0x0020(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F8[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayAbilityTargetDataHandle       CallFunc_MakeGameplayAbilityTargetDataHandleFromHitResults_ReturnValue; // 0x0130(0x0028)()
};
static_assert(alignof(GA_ReconDrone_Redirect_C_SendRedirectLocation) == 0x000008, "Wrong alignment on GA_ReconDrone_Redirect_C_SendRedirectLocation");
static_assert(sizeof(GA_ReconDrone_Redirect_C_SendRedirectLocation) == 0x000158, "Wrong size on GA_ReconDrone_Redirect_C_SendRedirectLocation");
static_assert(offsetof(GA_ReconDrone_Redirect_C_SendRedirectLocation, CallFunc_GetOwningCharacter_ReturnValue) == 0x000000, "Member 'GA_ReconDrone_Redirect_C_SendRedirectLocation::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_SendRedirectLocation, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000008, "Member 'GA_ReconDrone_Redirect_C_SendRedirectLocation::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_SendRedirectLocation, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_ReconDrone_Redirect_C_SendRedirectLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_SendRedirectLocation, CallFunc_GetCombatComponent_ReturnValue) == 0x000018, "Member 'GA_ReconDrone_Redirect_C_SendRedirectLocation::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_SendRedirectLocation, CallFunc_GetViewHitResult_ReturnValue) == 0x000020, "Member 'GA_ReconDrone_Redirect_C_SendRedirectLocation::CallFunc_GetViewHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_SendRedirectLocation, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'GA_ReconDrone_Redirect_C_SendRedirectLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_SendRedirectLocation, K2Node_MakeArray_Array) == 0x000120, "Member 'GA_ReconDrone_Redirect_C_SendRedirectLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_SendRedirectLocation, CallFunc_MakeGameplayAbilityTargetDataHandleFromHitResults_ReturnValue) == 0x000130, "Member 'GA_ReconDrone_Redirect_C_SendRedirectLocation::CallFunc_MakeGameplayAbilityTargetDataHandleFromHitResults_ReturnValue' has a wrong offset!");

// Function GA_ReconDrone_Redirect.GA_ReconDrone_Redirect_C.ValidData_B58204724909E572345BFBB401158589
// 0x0028 (0x0028 - 0x0000)
struct GA_ReconDrone_Redirect_C_ValidData_B58204724909E572345BFBB401158589 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_ReconDrone_Redirect_C_ValidData_B58204724909E572345BFBB401158589) == 0x000008, "Wrong alignment on GA_ReconDrone_Redirect_C_ValidData_B58204724909E572345BFBB401158589");
static_assert(sizeof(GA_ReconDrone_Redirect_C_ValidData_B58204724909E572345BFBB401158589) == 0x000028, "Wrong size on GA_ReconDrone_Redirect_C_ValidData_B58204724909E572345BFBB401158589");
static_assert(offsetof(GA_ReconDrone_Redirect_C_ValidData_B58204724909E572345BFBB401158589, Data) == 0x000000, "Member 'GA_ReconDrone_Redirect_C_ValidData_B58204724909E572345BFBB401158589::Data' has a wrong offset!");

// Function GA_ReconDrone_Redirect.GA_ReconDrone_Redirect_C.GetDroneComponent
// 0x0028 (0x0028 - 0x0000)
struct GA_ReconDrone_Redirect_C_GetDroneComponent final
{
public:
	class ABP_ReconDrone_C*                       DroneCached;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ReconDrone_Component_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ReconDrone_Redirect_C_GetDroneComponent) == 0x000008, "Wrong alignment on GA_ReconDrone_Redirect_C_GetDroneComponent");
static_assert(sizeof(GA_ReconDrone_Redirect_C_GetDroneComponent) == 0x000028, "Wrong size on GA_ReconDrone_Redirect_C_GetDroneComponent");
static_assert(offsetof(GA_ReconDrone_Redirect_C_GetDroneComponent, DroneCached) == 0x000000, "Member 'GA_ReconDrone_Redirect_C_GetDroneComponent::DroneCached' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_GetDroneComponent, CallFunc_GetOwningCharacter_ReturnValue) == 0x000008, "Member 'GA_ReconDrone_Redirect_C_GetDroneComponent::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_GetDroneComponent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GA_ReconDrone_Redirect_C_GetDroneComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_GetDroneComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'GA_ReconDrone_Redirect_C_GetDroneComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_GetDroneComponent, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'GA_ReconDrone_Redirect_C_GetDroneComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GA_ReconDrone_Redirect.GA_ReconDrone_Redirect_C.K2_CanActivateAbility
// 0x0088 (0x0088 - 0x0000)
struct GA_ReconDrone_Redirect_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63FA[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63FB[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ReconDrone_C*                       CallFunc_GetDroneComponent_DroneCached;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ReconDrone_Redirect_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_ReconDrone_Redirect_C_K2_CanActivateAbility");
static_assert(sizeof(GA_ReconDrone_Redirect_C_K2_CanActivateAbility) == 0x000088, "Wrong size on GA_ReconDrone_Redirect_C_K2_CanActivateAbility");
static_assert(offsetof(GA_ReconDrone_Redirect_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_ReconDrone_Redirect_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_ReconDrone_Redirect_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_ReconDrone_Redirect_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_ReconDrone_Redirect_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_K2_CanActivateAbility, CallFunc_GetDroneComponent_DroneCached) == 0x000078, "Member 'GA_ReconDrone_Redirect_C_K2_CanActivateAbility::CallFunc_GetDroneComponent_DroneCached' has a wrong offset!");
static_assert(offsetof(GA_ReconDrone_Redirect_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'GA_ReconDrone_Redirect_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

