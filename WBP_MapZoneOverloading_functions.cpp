#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapZoneOverloading

#include "Basic.hpp"

#include "WBP_MapZoneOverloading_classes.hpp"
#include "WBP_MapZoneOverloading_parameters.hpp"


namespace SDK
{

// Function WBP_MapZoneOverloading.WBP_MapZoneOverloading_C.ExecuteUbergraph_WBP_MapZoneOverloading
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MapZoneOverloading_C::ExecuteUbergraph_WBP_MapZoneOverloading(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MapZoneOverloading_C", "ExecuteUbergraph_WBP_MapZoneOverloading");

	Params::WBP_MapZoneOverloading_C_ExecuteUbergraph_WBP_MapZoneOverloading Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MapZoneOverloading.WBP_MapZoneOverloading_C.OnBecomeLastZone
// (Event, Protected, BlueprintEvent)

void UWBP_MapZoneOverloading_C::OnBecomeLastZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MapZoneOverloading_C", "OnBecomeLastZone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MapZoneOverloading.WBP_MapZoneOverloading_C.OnRadiusChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewRadius                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MapZoneOverloading_C::OnRadiusChange(float NewRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MapZoneOverloading_C", "OnRadiusChange");

	Params::WBP_MapZoneOverloading_C_OnRadiusChange Parms{};

	Parms.NewRadius = NewRadius;

	UObject::ProcessEvent(Func, &Parms);
}

}

