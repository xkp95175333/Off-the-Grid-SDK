#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OverlayStateButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass OverlayStateButton.OverlayStateButton_C
// 0x0058 (0x0338 - 0x02E0)
class UOverlayStateButton_C final : public UUserWidget
{
public:
	class UImage*                                 Background;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundSelectedColor;                           // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundUnSelectedColor;                         // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            TextSelectedColor;                                 // 0x0310(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TextUnSelectedColor;                               // 0x0324(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SetVisualParameters(bool Selected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OverlayStateButton_C">();
	}
	static class UOverlayStateButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOverlayStateButton_C>();
	}
};
static_assert(alignof(UOverlayStateButton_C) == 0x000008, "Wrong alignment on UOverlayStateButton_C");
static_assert(sizeof(UOverlayStateButton_C) == 0x000338, "Wrong size on UOverlayStateButton_C");
static_assert(offsetof(UOverlayStateButton_C, Background) == 0x0002E0, "Member 'UOverlayStateButton_C::Background' has a wrong offset!");
static_assert(offsetof(UOverlayStateButton_C, Text) == 0x0002E8, "Member 'UOverlayStateButton_C::Text' has a wrong offset!");
static_assert(offsetof(UOverlayStateButton_C, BackgroundSelectedColor) == 0x0002F0, "Member 'UOverlayStateButton_C::BackgroundSelectedColor' has a wrong offset!");
static_assert(offsetof(UOverlayStateButton_C, BackgroundUnSelectedColor) == 0x000300, "Member 'UOverlayStateButton_C::BackgroundUnSelectedColor' has a wrong offset!");
static_assert(offsetof(UOverlayStateButton_C, TextSelectedColor) == 0x000310, "Member 'UOverlayStateButton_C::TextSelectedColor' has a wrong offset!");
static_assert(offsetof(UOverlayStateButton_C, TextUnSelectedColor) == 0x000324, "Member 'UOverlayStateButton_C::TextUnSelectedColor' has a wrong offset!");

}

