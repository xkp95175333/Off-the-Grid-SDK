#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OpportunityMission

#include "Basic.hpp"

#include "WBP_OpportunityMission_classes.hpp"
#include "WBP_OpportunityMission_parameters.hpp"


namespace SDK
{

// Function WBP_OpportunityMission.WBP_OpportunityMission_C.ExecuteUbergraph_WBP_OpportunityMission
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpportunityMission_C::ExecuteUbergraph_WBP_OpportunityMission(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpportunityMission_C", "ExecuteUbergraph_WBP_OpportunityMission");

	Params::WBP_OpportunityMission_C_ExecuteUbergraph_WBP_OpportunityMission Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpportunityMission.WBP_OpportunityMission_C.OnMissionStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGzMission*                       Param_Mission                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGzMissionState                  OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FGzMissionState                  MissionState                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_OpportunityMission_C::OnMissionStateChanged(class AGzMission* Param_Mission, const struct FGzMissionState& OldState, const struct FGzMissionState& MissionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpportunityMission_C", "OnMissionStateChanged");

	Params::WBP_OpportunityMission_C_OnMissionStateChanged Parms{};

	Parms.Param_Mission = Param_Mission;
	Parms.OldState = std::move(OldState);
	Parms.MissionState = std::move(MissionState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpportunityMission.WBP_OpportunityMission_C.OnObjectiveProgressChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMissionObjective*                Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_OpportunityMission_C::OnObjectiveProgressChanged(class UMissionObjective* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpportunityMission_C", "OnObjectiveProgressChanged");

	Params::WBP_OpportunityMission_C_OnObjectiveProgressChanged Parms{};

	Parms.Objective = Objective;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpportunityMission.WBP_OpportunityMission_C.OnObjectiveStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMissionObjective*                Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMissionObjectiveState                  OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMissionObjectiveState                  NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpportunityMission_C::OnObjectiveStateChanged(class UMissionObjective* Objective, EMissionObjectiveState OldState, EMissionObjectiveState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpportunityMission_C", "OnObjectiveStateChanged");

	Params::WBP_OpportunityMission_C_OnObjectiveStateChanged Parms{};

	Parms.Objective = Objective;
	Parms.OldState = OldState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpportunityMission.WBP_OpportunityMission_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OpportunityMission_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpportunityMission_C", "PreConstruct");

	Params::WBP_OpportunityMission_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpportunityMission.WBP_OpportunityMission_C.Set Mission Data
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGzMission*                       Param_Mission                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_OpportunityMission_C::Set_Mission_Data(class AGzMission* Param_Mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpportunityMission_C", "Set Mission Data");

	Params::WBP_OpportunityMission_C_Set_Mission_Data Parms{};

	Parms.Param_Mission = Param_Mission;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OpportunityMission.WBP_OpportunityMission_C.Update Objective Timer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_OpportunityMission_C::Update_Objective_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpportunityMission_C", "Update Objective Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OpportunityMission.WBP_OpportunityMission_C.UpdateObjectiveInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_OpportunityMission_C::UpdateObjectiveInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OpportunityMission_C", "UpdateObjectiveInfo");

	UObject::ProcessEvent(Func, nullptr);
}

}

