#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_Lighting

#include "Basic.hpp"

#include "S_PodiumBulb_01_Settings_structs.hpp"
#include "S_Bulb_01_Settings_structs.hpp"
#include "S_Light_Fitting_Mesh_Settings_structs.hpp"
#include "S_LED_Diode_03_structs.hpp"
#include "S_Bulb_Light_02_Settings_structs.hpp"
#include "S_PodiumBulb_03_Settings_structs.hpp"
#include "S_Bulb_Light_03_Settings_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_LED_Diode_02_structs.hpp"
#include "S_PodiumBulb_02_Settings_structs.hpp"
#include "S_Bulb_Light_01_Settings_structs.hpp"
#include "S_LED_Diode_01_structs.hpp"
#include "S_Bulb_03_Settings_structs.hpp"
#include "S_Prop_Mesh_01_structs.hpp"
#include "S_Procedural_Railings_structs.hpp"
#include "Engine_structs.hpp"
#include "S_Light_Presets_structs.hpp"
#include "S_Ambient_Emissive_Settings_structs.hpp"
#include "S_Light_02_Settings_structs.hpp"
#include "S_Light_01_Settings_structs.hpp"
#include "S_Bulb_Light_04_Emissive_Settings_structs.hpp"
#include "S_Main_Throw_Light_01_Settings_structs.hpp"
#include "S_LED_Diode_04_structs.hpp"
#include "S_Bulb_04_Setting_structs.hpp"
#include "S_Bulb_Light_04_Settings_structs.hpp"
#include "S_Bulb_02_Settings_structs.hpp"
#include "S_Main_Throw_Light_02_Settings_structs.hpp"
#include "S_Bulb_Light_03_Emissive_Settings_structs.hpp"
#include "S_Bulb_Light_02_Emissive_Settings_structs.hpp"
#include "S_Bulb_Light_01_Emissive_Settings_structs.hpp"
#include "S_Light_02_Emissive_Settings_structs.hpp"
#include "S_Light_01_Emissive_Settings_structs.hpp"


namespace SDK::Params
{

// Function BPFL_Lighting.BPFL_Lighting_C.AddSuspension
// 0x0B80 (0x0B80 - 0x0000)
struct BPFL_Lighting_C_AddSuspension final
{
public:
	class UObject*                                Blueprint;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SuspensionMesh;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF3[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Prop_Mesh_01                        PropSettings;                                      // 0x0020(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                PrevAnchor;                                        // 0x0140(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PrevProp;                                          // 0x0158(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        PrevSplinePoint0;                                  // 0x0170(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FVector>                        PrevSplinePoint1;                                  // 0x0180(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FS_Light_Fitting_Mesh_Settings         LightFittingSettings;                              // 0x0190(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineComponent*>               Splines;                                           // 0x02B8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FVector                                SplinePoint2;                                      // 0x02C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SplinePoint1;                                      // 0x02E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceAlongSpline;                               // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0300(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EF4[0x8];                                     // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0340(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF5[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF6[0x7];                                     // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0440(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF7[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF8[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF9[0x3];                                     // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EFA[0x8];                                     // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0490(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EFB[0x3];                                     // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EFC[0x4];                                     // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EFD[0x4];                                     // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EFE[0x3];                                     // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue_1;                  // 0x05C0(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin_1;            // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent_1;         // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius_1;      // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EFF[0x4];                                     // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_1;                          // 0x0660(0x0010)(ReferenceParm)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F00[0x8];                                     // 0x0688(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0690(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_2;                          // 0x06F0(0x0010)(ConstParm, ReferenceParm)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue_1;            // 0x0700(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue_1;        // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue_1;               // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F01[0x4];                                     // 0x07BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F02[0x3];                                     // 0x07C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x07D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x07F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x0808(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor_1;                      // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F03[0x3];                                     // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponentByClass_ReturnValue;          // 0x0830(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F04[0x7];                                     // 0x0839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0840(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0858(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0870(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0888(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x08A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x08B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue_1;           // 0x08D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue; // 0x08E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue; // 0x0900(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x0918(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0930(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0948(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x0990(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x09A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x09C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x09F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F05[0x8];                                     // 0x0A08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0A10(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F06[0x4];                                     // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0A90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0AA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0AC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F07[0x8];                                     // 0x0AD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0AE0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_1;                // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__0__ImplicitCast;                 // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__1__ImplicitCast;                 // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__2__ImplicitCast;                 // 0x0B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__2__ImplicitCast_1;               // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__1__ImplicitCast_1;               // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__0__ImplicitCast_1;               // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_AddSuspension) == 0x000010, "Wrong alignment on BPFL_Lighting_C_AddSuspension");
static_assert(sizeof(BPFL_Lighting_C_AddSuspension) == 0x000B80, "Wrong size on BPFL_Lighting_C_AddSuspension");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, Blueprint) == 0x000000, "Member 'BPFL_Lighting_C_AddSuspension::Blueprint' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, Spline) == 0x000008, "Member 'BPFL_Lighting_C_AddSuspension::Spline' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, SuspensionMesh) == 0x000010, "Member 'BPFL_Lighting_C_AddSuspension::SuspensionMesh' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, PropSettings) == 0x000020, "Member 'BPFL_Lighting_C_AddSuspension::PropSettings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, PrevAnchor) == 0x000140, "Member 'BPFL_Lighting_C_AddSuspension::PrevAnchor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, PrevProp) == 0x000158, "Member 'BPFL_Lighting_C_AddSuspension::PrevProp' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, PrevSplinePoint0) == 0x000170, "Member 'BPFL_Lighting_C_AddSuspension::PrevSplinePoint0' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, PrevSplinePoint1) == 0x000180, "Member 'BPFL_Lighting_C_AddSuspension::PrevSplinePoint1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, LightFittingSettings) == 0x000190, "Member 'BPFL_Lighting_C_AddSuspension::LightFittingSettings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, __WorldContext) == 0x0002B0, "Member 'BPFL_Lighting_C_AddSuspension::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, Splines) == 0x0002B8, "Member 'BPFL_Lighting_C_AddSuspension::Splines' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, SplinePoint2) == 0x0002C8, "Member 'BPFL_Lighting_C_AddSuspension::SplinePoint2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, SplinePoint1) == 0x0002E0, "Member 'BPFL_Lighting_C_AddSuspension::SplinePoint1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, DistanceAlongSpline) == 0x0002F8, "Member 'BPFL_Lighting_C_AddSuspension::DistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetBounds_ReturnValue) == 0x000300, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_SelectTransform_ReturnValue) == 0x000340, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakBoxSphereBounds_Origin) == 0x0003A0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x0003B8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x0003D0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakTransform_Location) == 0x0003D8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakTransform_Rotation) == 0x0003F0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakTransform_Scale) == 0x000408, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakVector_X) == 0x000420, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakVector_Y) == 0x000428, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakVector_Z) == 0x000430, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_IsValid_ReturnValue) == 0x000438, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_MakeArray_Array) == 0x000440, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000450, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_MaxOfFloatArray_MaxValue) == 0x000454, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_IsValid_ReturnValue_1) == 0x000458, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000460, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BooleanAND_ReturnValue) == 0x000468, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000470, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_DynamicCast_AsActor) == 0x000478, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_DynamicCast_bSuccess) == 0x000480, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, Temp_int_Variable) == 0x000484, "Member 'BPFL_Lighting_C_AddSuspension::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetRelativeTransform_ReturnValue) == 0x000490, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0004F0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0004F8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Add_IntInt_ReturnValue) == 0x000500, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetSplineLength_ReturnValue) == 0x000504, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000508, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Round_ReturnValue) == 0x000510, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Subtract_IntInt_ReturnValue) == 0x000514, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000518, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, Temp_int_Variable_1) == 0x00051C, "Member 'BPFL_Lighting_C_AddSuspension::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Conv_IntToVector_ReturnValue) == 0x000520, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_SelectFloat_ReturnValue) == 0x000538, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_SelectFloat_ReturnValue_1) == 0x000540, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000548, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_RotateAngleAxis_ReturnValue) == 0x000560, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_SelectInt_ReturnValue) == 0x000578, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000580, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000598, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0005A0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0005B8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Add_IntInt_ReturnValue_1) == 0x0005BC, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetBounds_ReturnValue_1) == 0x0005C0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetBounds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakBoxSphereBounds_Origin_1) == 0x0005F8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakBoxSphereBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakBoxSphereBounds_BoxExtent_1) == 0x000610, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakBoxSphereBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakBoxSphereBounds_SphereRadius_1) == 0x000628, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakBoxSphereBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakVector_X_1) == 0x000630, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakVector_Y_1) == 0x000638, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakVector_Z_1) == 0x000640, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000648, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_MakeArray_Array_1) == 0x000660, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Abs_ReturnValue) == 0x000670, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Abs_ReturnValue_1) == 0x000678, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Abs_ReturnValue_2) == 0x000680, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_MakeTransform_ReturnValue) == 0x000690, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_MakeArray_Array_2) == 0x0006F0, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_SelectTransform_ReturnValue_1) == 0x000700, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_SelectTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_MaxOfFloatArray_IndexOfMaxValue_1) == 0x000760, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_MaxOfFloatArray_IndexOfMaxValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_MaxOfFloatArray_MaxValue_1) == 0x000764, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_MaxOfFloatArray_MaxValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakTransform_Location_1) == 0x000768, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakTransform_Rotation_1) == 0x000780, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakTransform_Scale_1) == 0x000798, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Array_Get_Item) == 0x0007B0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, Temp_int_Variable_2) == 0x0007B8, "Member 'BPFL_Lighting_C_AddSuspension::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_SignOfFloat_ReturnValue) == 0x0007C0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0007C8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, Temp_int_Variable_3) == 0x0007CC, "Member 'BPFL_Lighting_C_AddSuspension::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_SelectFloat_ReturnValue_2) == 0x0007D0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0007D8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0007F0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x000808, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_DynamicCast_AsActor_1) == 0x000820, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_DynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_DynamicCast_bSuccess_1) == 0x000828, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, Temp_int_Variable_4) == 0x00082C, "Member 'BPFL_Lighting_C_AddSuspension::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_AddComponentByClass_ReturnValue) == 0x000830, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_SetStaticMesh_ReturnValue) == 0x000838, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Array_Get_Item_1) == 0x000840, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Array_Get_Item_2) == 0x000858, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000870, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000888, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Add_VectorVector_ReturnValue) == 0x0008A0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0008B8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Conv_IntToVector_ReturnValue_1) == 0x0008D0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Conv_IntToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue) == 0x0008E8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue) == 0x000900, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x000918, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000930, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_Select_Default) == 0x000948, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_Select_Default_1) == 0x000960, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000978, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x000990, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_Select_Default_2) == 0x0009A8, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0009C0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x0009D8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x0009F0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_MakeTransform_ReturnValue_1) == 0x000A10, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_AddInstance_ReturnValue) == 0x000A70, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakTransform_Location_2) == 0x000A78, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakTransform_Rotation_2) == 0x000A90, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_BreakTransform_Scale_2) == 0x000AA8, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000AC0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_MakeTransform_ReturnValue_2) == 0x000AE0, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_AddInstance_ReturnValue_1) == 0x000B40, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_AddInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_MakeArray__0__ImplicitCast) == 0x000B44, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_MakeArray__0__ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_MakeArray__1__ImplicitCast) == 0x000B48, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_MakeArray__1__ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_MakeArray__2__ImplicitCast) == 0x000B4C, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_MakeArray__2__ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000B50, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000B58, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000B60, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_MakeArray__2__ImplicitCast_1) == 0x000B64, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_MakeArray__2__ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_MakeArray__1__ImplicitCast_1) == 0x000B68, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_MakeArray__1__ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, K2Node_MakeArray__0__ImplicitCast_1) == 0x000B6C, "Member 'BPFL_Lighting_C_AddSuspension::K2Node_MakeArray__0__ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000B70, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000B74, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000B78, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_AddSuspension, CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000B7C, "Member 'BPFL_Lighting_C_AddSuspension::CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Bulb 01 Settings
// 0x0330 (0x0330 - 0x0000)
struct BPFL_Lighting_C_Bulb_01_Settings final
{
public:
	class UObject*                                Self_Reference;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F08[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Bulb_01_Settings                    Param_Bulb_01_Settings;                            // 0x0010(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_Bulb_Light_01_Settings              Bulb_Light_01_Settings;                            // 0x0100(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x0240(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F09[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LED_Diode_01                        LED_Diode_01_Settings;                             // 0x0248(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x02C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F0A[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    Spot;                                              // 0x02C8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x02D0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x02D8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x02E0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb_Mesh_Reference;                               // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Bulb_Light_On_;                               // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F0B[0x6];                                     // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference; // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference;     // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    CallFunc_Create_Light_Component_Spot_Light_Reference; // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_Create_Light_Component_Point_Light_Reference; // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_Create_Light_Component_Rect_Light_Reference; // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Bulb_01_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Bulb_01_Settings");
static_assert(sizeof(BPFL_Lighting_C_Bulb_01_Settings) == 0x000330, "Wrong size on BPFL_Lighting_C_Bulb_01_Settings");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Self_Reference) == 0x000000, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Param_Bulb_01_Settings) == 0x000010, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Param_Bulb_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Bulb_Light_01_Settings) == 0x000100, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Bulb_Light_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Off) == 0x000240, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Off' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, LED_Diode_01_Settings) == 0x000248, "Member 'BPFL_Lighting_C_Bulb_01_Settings::LED_Diode_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, __WorldContext) == 0x0002B8, "Member 'BPFL_Lighting_C_Bulb_01_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Is_Bulb_Light_On_) == 0x0002C0, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Spot) == 0x0002C8, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Point) == 0x0002D0, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Rect) == 0x0002D8, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Prop_Mesh_Reference) == 0x0002E0, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Bulb_Mesh_Reference) == 0x0002E8, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Bulb_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, Turn_Bulb_Light_On_) == 0x0002F0, "Member 'BPFL_Lighting_C_Bulb_01_Settings::Turn_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, CallFunc_Not_PreBool_ReturnValue) == 0x0002F1, "Member 'BPFL_Lighting_C_Bulb_01_Settings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference) == 0x0002F8, "Member 'BPFL_Lighting_C_Bulb_01_Settings::CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference) == 0x000300, "Member 'BPFL_Lighting_C_Bulb_01_Settings::CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, CallFunc_Create_Light_Component_Spot_Light_Reference) == 0x000308, "Member 'BPFL_Lighting_C_Bulb_01_Settings::CallFunc_Create_Light_Component_Spot_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, CallFunc_Create_Light_Component_Point_Light_Reference) == 0x000310, "Member 'BPFL_Lighting_C_Bulb_01_Settings::CallFunc_Create_Light_Component_Point_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, CallFunc_Create_Light_Component_Rect_Light_Reference) == 0x000318, "Member 'BPFL_Lighting_C_Bulb_01_Settings::CallFunc_Create_Light_Component_Rect_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_01_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000320, "Member 'BPFL_Lighting_C_Bulb_01_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Bulb 02 Settings
// 0x0320 (0x0320 - 0x0000)
struct BPFL_Lighting_C_Bulb_02_Settings final
{
public:
	struct FS_Bulb_02_Settings                    Param_Bulb_02_Settings;                            // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_02_Settings              Bulb_Light_02_Settings;                            // 0x00F0(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Self_Reference;                                    // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x0238(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F0C[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LED_Diode_02                        LED_Diode_02_Settings;                             // 0x0240(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x02B8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F0D[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    Spot;                                              // 0x02C0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x02C8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x02D0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x02D8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb_Mesh_Reference;                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Bulb_Light_On_;                               // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F0E[0x6];                                     // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference; // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    CallFunc_Create_Light_Component_Spot_Light_Reference; // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_Create_Light_Component_Point_Light_Reference; // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_Create_Light_Component_Rect_Light_Reference; // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F0F[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference;     // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Bulb_02_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Bulb_02_Settings");
static_assert(sizeof(BPFL_Lighting_C_Bulb_02_Settings) == 0x000320, "Wrong size on BPFL_Lighting_C_Bulb_02_Settings");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Param_Bulb_02_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Param_Bulb_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Bulb_Light_02_Settings) == 0x0000F0, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Bulb_Light_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Self_Reference) == 0x000230, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Off) == 0x000238, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Off' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, LED_Diode_02_Settings) == 0x000240, "Member 'BPFL_Lighting_C_Bulb_02_Settings::LED_Diode_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, __WorldContext) == 0x0002B0, "Member 'BPFL_Lighting_C_Bulb_02_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Is_Bulb_Light_On_) == 0x0002B8, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Spot) == 0x0002C0, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Point) == 0x0002C8, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Rect) == 0x0002D0, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Prop_Mesh_Reference) == 0x0002D8, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Bulb_Mesh_Reference) == 0x0002E0, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Bulb_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, Turn_Bulb_Light_On_) == 0x0002E8, "Member 'BPFL_Lighting_C_Bulb_02_Settings::Turn_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, CallFunc_Not_PreBool_ReturnValue) == 0x0002E9, "Member 'BPFL_Lighting_C_Bulb_02_Settings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference) == 0x0002F0, "Member 'BPFL_Lighting_C_Bulb_02_Settings::CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, CallFunc_Create_Light_Component_Spot_Light_Reference) == 0x0002F8, "Member 'BPFL_Lighting_C_Bulb_02_Settings::CallFunc_Create_Light_Component_Spot_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, CallFunc_Create_Light_Component_Point_Light_Reference) == 0x000300, "Member 'BPFL_Lighting_C_Bulb_02_Settings::CallFunc_Create_Light_Component_Point_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, CallFunc_Create_Light_Component_Rect_Light_Reference) == 0x000308, "Member 'BPFL_Lighting_C_Bulb_02_Settings::CallFunc_Create_Light_Component_Rect_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000310, "Member 'BPFL_Lighting_C_Bulb_02_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_02_Settings, CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference) == 0x000318, "Member 'BPFL_Lighting_C_Bulb_02_Settings::CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Bulb 03 Settings
// 0x0320 (0x0320 - 0x0000)
struct BPFL_Lighting_C_Bulb_03_Settings final
{
public:
	struct FS_Bulb_03_Settings                    Param_Bulb_03_Settings;                            // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_03_Settings              Bulb_Light_03_Settings;                            // 0x00F0(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Self_Reference;                                    // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x0238(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F10[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LED_Diode_03                        LED_Diode_03_Settings;                             // 0x0240(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x02B8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F11[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    Spot;                                              // 0x02C0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x02C8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x02D0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x02D8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb_Mesh_Reference;                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Bulb_Light_On_;                               // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F12[0x6];                                     // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference; // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    CallFunc_Create_Light_Component_Spot_Light_Reference; // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_Create_Light_Component_Point_Light_Reference; // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_Create_Light_Component_Rect_Light_Reference; // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F13[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference;     // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Bulb_03_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Bulb_03_Settings");
static_assert(sizeof(BPFL_Lighting_C_Bulb_03_Settings) == 0x000320, "Wrong size on BPFL_Lighting_C_Bulb_03_Settings");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Param_Bulb_03_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Param_Bulb_03_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Bulb_Light_03_Settings) == 0x0000F0, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Bulb_Light_03_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Self_Reference) == 0x000230, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Off) == 0x000238, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Off' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, LED_Diode_03_Settings) == 0x000240, "Member 'BPFL_Lighting_C_Bulb_03_Settings::LED_Diode_03_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, __WorldContext) == 0x0002B0, "Member 'BPFL_Lighting_C_Bulb_03_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Is_Bulb_Light_On_) == 0x0002B8, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Spot) == 0x0002C0, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Point) == 0x0002C8, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Rect) == 0x0002D0, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Prop_Mesh_Reference) == 0x0002D8, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Bulb_Mesh_Reference) == 0x0002E0, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Bulb_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, Turn_Bulb_Light_On_) == 0x0002E8, "Member 'BPFL_Lighting_C_Bulb_03_Settings::Turn_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, CallFunc_Not_PreBool_ReturnValue) == 0x0002E9, "Member 'BPFL_Lighting_C_Bulb_03_Settings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference) == 0x0002F0, "Member 'BPFL_Lighting_C_Bulb_03_Settings::CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, CallFunc_Create_Light_Component_Spot_Light_Reference) == 0x0002F8, "Member 'BPFL_Lighting_C_Bulb_03_Settings::CallFunc_Create_Light_Component_Spot_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, CallFunc_Create_Light_Component_Point_Light_Reference) == 0x000300, "Member 'BPFL_Lighting_C_Bulb_03_Settings::CallFunc_Create_Light_Component_Point_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, CallFunc_Create_Light_Component_Rect_Light_Reference) == 0x000308, "Member 'BPFL_Lighting_C_Bulb_03_Settings::CallFunc_Create_Light_Component_Rect_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000310, "Member 'BPFL_Lighting_C_Bulb_03_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_03_Settings, CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference) == 0x000318, "Member 'BPFL_Lighting_C_Bulb_03_Settings::CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Bulb 04 Settings
// 0x0320 (0x0320 - 0x0000)
struct BPFL_Lighting_C_Bulb_04_Settings final
{
public:
	struct FS_Bulb_04_Setting                     Param_Bulb_04_Settings;                            // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_04_Settings              Bulb_Light_04_Settings;                            // 0x00F0(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Self_Reference;                                    // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x0238(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F14[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LED_Diode_04                        LED_Diode_04_Settings;                             // 0x0240(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x02B8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F15[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    Spot;                                              // 0x02C0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x02C8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x02D0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x02D8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb_Mesh_Reference;                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Bulb_Light_On_;                               // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F16[0x6];                                     // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference; // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    CallFunc_Create_Light_Component_Spot_Light_Reference; // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_Create_Light_Component_Point_Light_Reference; // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_Create_Light_Component_Rect_Light_Reference; // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F17[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference;     // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Bulb_04_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Bulb_04_Settings");
static_assert(sizeof(BPFL_Lighting_C_Bulb_04_Settings) == 0x000320, "Wrong size on BPFL_Lighting_C_Bulb_04_Settings");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Param_Bulb_04_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Param_Bulb_04_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Bulb_Light_04_Settings) == 0x0000F0, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Bulb_Light_04_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Self_Reference) == 0x000230, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Off) == 0x000238, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Off' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, LED_Diode_04_Settings) == 0x000240, "Member 'BPFL_Lighting_C_Bulb_04_Settings::LED_Diode_04_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, __WorldContext) == 0x0002B0, "Member 'BPFL_Lighting_C_Bulb_04_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Is_Bulb_Light_On_) == 0x0002B8, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Spot) == 0x0002C0, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Point) == 0x0002C8, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Rect) == 0x0002D0, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Prop_Mesh_Reference) == 0x0002D8, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Bulb_Mesh_Reference) == 0x0002E0, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Bulb_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, Turn_Bulb_Light_On_) == 0x0002E8, "Member 'BPFL_Lighting_C_Bulb_04_Settings::Turn_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, CallFunc_Not_PreBool_ReturnValue) == 0x0002E9, "Member 'BPFL_Lighting_C_Bulb_04_Settings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference) == 0x0002F0, "Member 'BPFL_Lighting_C_Bulb_04_Settings::CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, CallFunc_Create_Light_Component_Spot_Light_Reference) == 0x0002F8, "Member 'BPFL_Lighting_C_Bulb_04_Settings::CallFunc_Create_Light_Component_Spot_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, CallFunc_Create_Light_Component_Point_Light_Reference) == 0x000300, "Member 'BPFL_Lighting_C_Bulb_04_Settings::CallFunc_Create_Light_Component_Point_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, CallFunc_Create_Light_Component_Rect_Light_Reference) == 0x000308, "Member 'BPFL_Lighting_C_Bulb_04_Settings::CallFunc_Create_Light_Component_Rect_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000310, "Member 'BPFL_Lighting_C_Bulb_04_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_04_Settings, CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference) == 0x000318, "Member 'BPFL_Lighting_C_Bulb_04_Settings::CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Bulb Light 01 Settings
// 0x02A8 (0x02A8 - 0x0000)
struct BPFL_Lighting_C_Bulb_Light_01_Settings final
{
public:
	struct FS_Bulb_Light_01_Settings              Param_Bulb_Light_01_Settings;                      // 0x0000(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_01_Emissive_Settings     Bulb_Light_01_Emissive_Settings;                   // 0x0140(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot;                                              // 0x0160(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x0168(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x0170(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x0178(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x0180(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x0188(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x0198(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F18[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x01A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x01A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F19[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x01B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_01_Intensity;                           // 0x01B8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int_Output;                            // 0x01C0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Emissive_Int_Output;                         // 0x01C8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Final_Colour_Output;                               // 0x01D0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Ref_Output;                              // 0x01E8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int;                                   // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Attenuation_Radius_B1;             // 0x01F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1A[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Final_Colour;                                      // 0x01FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1B[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Emissive_Intensity;                                // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity;                                   // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1C[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rect_Light_Settings_Final_Intensity_Output; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Rect_Light_Settings_Final_Colour_Output;  // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Point_Light_Settings_Final_Intensity_Output; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Point_Light_Settings_Final_Colour_Output; // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spot_Light_Settings_Final_Intensity_Output; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Spot_Light_Settings_Final_Colour_Output;  // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1; // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Bulb_Light_01_Settings) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Bulb_Light_01_Settings");
static_assert(sizeof(BPFL_Lighting_C_Bulb_Light_01_Settings) == 0x0002A8, "Wrong size on BPFL_Lighting_C_Bulb_Light_01_Settings");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Param_Bulb_Light_01_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Param_Bulb_Light_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Bulb_Light_01_Emissive_Settings) == 0x000140, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Bulb_Light_01_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Spot) == 0x000160, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Point) == 0x000168, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Rect) == 0x000170, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Prop_Mesh_Reference) == 0x000178, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Preset_Intensity) == 0x000180, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Preset_Colour) == 0x000188, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Use_Preset_Kelvin_) == 0x000198, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Preset_Kelvin) == 0x0001A0, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Is_Bulb_Light_On_) == 0x0001A8, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, __WorldContext) == 0x0001B0, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Bulb_Light_01_Intensity) == 0x0001B8, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Bulb_Light_01_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Final_Lumen_Int_Output) == 0x0001C0, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Final_Lumen_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Final_Emissive_Int_Output) == 0x0001C8, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Final_Emissive_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Final_Colour_Output) == 0x0001D0, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Prop_Mesh_Ref_Output) == 0x0001E8, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Prop_Mesh_Ref_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Final_Lumen_Int) == 0x0001F0, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Final_Lumen_Int' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Override_Preset_Attenuation_Radius_B1) == 0x0001F8, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Override_Preset_Attenuation_Radius_B1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Final_Colour) == 0x0001FC, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Final_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Emissive_Intensity) == 0x000210, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Emissive_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, Final_Intensity) == 0x000218, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::Final_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000220, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_FClamp_ReturnValue) == 0x000228, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_Rect_Light_Settings_Final_Intensity_Output) == 0x000230, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_Rect_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_Rect_Light_Settings_Final_Colour_Output) == 0x000238, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_Rect_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000248, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_Point_Light_Settings_Final_Intensity_Output) == 0x000260, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_Point_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_Point_Light_Settings_Final_Colour_Output) == 0x000268, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_Point_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_Spot_Light_Settings_Final_Intensity_Output) == 0x000278, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_Spot_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_Spot_Light_Settings_Final_Colour_Output) == 0x000280, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_Spot_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000290, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x000298, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1) == 0x00029C, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_01_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2) == 0x0002A0, "Member 'BPFL_Lighting_C_Bulb_Light_01_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Bulb Light 02 Settings
// 0x02A8 (0x02A8 - 0x0000)
struct BPFL_Lighting_C_Bulb_Light_02_Settings final
{
public:
	struct FS_Bulb_Light_02_Settings              Param_Bulb_Light_02_Settings;                      // 0x0000(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_02_Emissive_Settings     Bulb_Light_02_Emissive_Settings;                   // 0x0140(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot;                                              // 0x0160(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x0168(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x0170(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x0178(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x0180(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x0188(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x0198(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1D[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x01A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x01A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1E[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x01B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_02_Intensity;                           // 0x01B8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int_Output;                            // 0x01C0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Emissive_Int_Output;                         // 0x01C8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Final_Colour_Output;                               // 0x01D0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Ref_Output;                              // 0x01E8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int;                                   // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Attenuation_Radius_B2;             // 0x01F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1F[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Final_Colour;                                      // 0x01FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F20[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Emissive_Intensity;                                // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity;                                   // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F21[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rect_Light_Settings_Final_Intensity_Output; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Rect_Light_Settings_Final_Colour_Output;  // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Point_Light_Settings_Final_Intensity_Output; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Point_Light_Settings_Final_Colour_Output; // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spot_Light_Settings_Final_Intensity_Output; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Spot_Light_Settings_Final_Colour_Output;  // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1; // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Bulb_Light_02_Settings) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Bulb_Light_02_Settings");
static_assert(sizeof(BPFL_Lighting_C_Bulb_Light_02_Settings) == 0x0002A8, "Wrong size on BPFL_Lighting_C_Bulb_Light_02_Settings");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Param_Bulb_Light_02_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Param_Bulb_Light_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Bulb_Light_02_Emissive_Settings) == 0x000140, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Bulb_Light_02_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Spot) == 0x000160, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Point) == 0x000168, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Rect) == 0x000170, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Prop_Mesh_Reference) == 0x000178, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Preset_Intensity) == 0x000180, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Preset_Colour) == 0x000188, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Use_Preset_Kelvin_) == 0x000198, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Preset_Kelvin) == 0x0001A0, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Is_Bulb_Light_On_) == 0x0001A8, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, __WorldContext) == 0x0001B0, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Bulb_Light_02_Intensity) == 0x0001B8, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Bulb_Light_02_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Final_Lumen_Int_Output) == 0x0001C0, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Final_Lumen_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Final_Emissive_Int_Output) == 0x0001C8, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Final_Emissive_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Final_Colour_Output) == 0x0001D0, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Prop_Mesh_Ref_Output) == 0x0001E8, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Prop_Mesh_Ref_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Final_Lumen_Int) == 0x0001F0, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Final_Lumen_Int' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Override_Preset_Attenuation_Radius_B2) == 0x0001F8, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Override_Preset_Attenuation_Radius_B2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Final_Colour) == 0x0001FC, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Final_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Emissive_Intensity) == 0x000210, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Emissive_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, Final_Intensity) == 0x000218, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::Final_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000220, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_FClamp_ReturnValue) == 0x000228, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_Rect_Light_Settings_Final_Intensity_Output) == 0x000230, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_Rect_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_Rect_Light_Settings_Final_Colour_Output) == 0x000238, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_Rect_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000248, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_Point_Light_Settings_Final_Intensity_Output) == 0x000260, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_Point_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_Point_Light_Settings_Final_Colour_Output) == 0x000268, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_Point_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_Spot_Light_Settings_Final_Intensity_Output) == 0x000278, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_Spot_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_Spot_Light_Settings_Final_Colour_Output) == 0x000280, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_Spot_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000290, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x000298, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1) == 0x00029C, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_02_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2) == 0x0002A0, "Member 'BPFL_Lighting_C_Bulb_Light_02_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Bulb Light 03 Settings
// 0x02A8 (0x02A8 - 0x0000)
struct BPFL_Lighting_C_Bulb_Light_03_Settings final
{
public:
	struct FS_Bulb_Light_03_Settings              Param_Bulb_Light_03_Settings;                      // 0x0000(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_03_Emissive_Settings     Bulb_Light_03_Emissive_Settings;                   // 0x0140(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot;                                              // 0x0160(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x0168(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x0170(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x0178(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x0180(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x0188(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x0198(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F22[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x01A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x01A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F23[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x01B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_03_Intensity;                           // 0x01B8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int_Output;                            // 0x01C0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Emissive_Int_Output;                         // 0x01C8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Final_Colour_Output;                               // 0x01D0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Ref_Output;                              // 0x01E8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int;                                   // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Attenuation_Radius_B3;             // 0x01F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F24[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Final_Colour;                                      // 0x01FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F25[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Emissive_Intensity;                                // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity;                                   // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F26[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rect_Light_Settings_Final_Intensity_Output; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Rect_Light_Settings_Final_Colour_Output;  // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Point_Light_Settings_Final_Intensity_Output; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Point_Light_Settings_Final_Colour_Output; // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spot_Light_Settings_Final_Intensity_Output; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Spot_Light_Settings_Final_Colour_Output;  // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1; // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Bulb_Light_03_Settings) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Bulb_Light_03_Settings");
static_assert(sizeof(BPFL_Lighting_C_Bulb_Light_03_Settings) == 0x0002A8, "Wrong size on BPFL_Lighting_C_Bulb_Light_03_Settings");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Param_Bulb_Light_03_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Param_Bulb_Light_03_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Bulb_Light_03_Emissive_Settings) == 0x000140, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Bulb_Light_03_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Spot) == 0x000160, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Point) == 0x000168, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Rect) == 0x000170, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Prop_Mesh_Reference) == 0x000178, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Preset_Intensity) == 0x000180, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Preset_Colour) == 0x000188, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Use_Preset_Kelvin_) == 0x000198, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Preset_Kelvin) == 0x0001A0, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Is_Bulb_Light_On_) == 0x0001A8, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, __WorldContext) == 0x0001B0, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Bulb_Light_03_Intensity) == 0x0001B8, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Bulb_Light_03_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Final_Lumen_Int_Output) == 0x0001C0, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Final_Lumen_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Final_Emissive_Int_Output) == 0x0001C8, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Final_Emissive_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Final_Colour_Output) == 0x0001D0, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Prop_Mesh_Ref_Output) == 0x0001E8, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Prop_Mesh_Ref_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Final_Lumen_Int) == 0x0001F0, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Final_Lumen_Int' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Override_Preset_Attenuation_Radius_B3) == 0x0001F8, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Override_Preset_Attenuation_Radius_B3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Final_Colour) == 0x0001FC, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Final_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Emissive_Intensity) == 0x000210, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Emissive_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, Final_Intensity) == 0x000218, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::Final_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000220, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_FClamp_ReturnValue) == 0x000228, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_Rect_Light_Settings_Final_Intensity_Output) == 0x000230, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_Rect_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_Rect_Light_Settings_Final_Colour_Output) == 0x000238, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_Rect_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000248, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_Point_Light_Settings_Final_Intensity_Output) == 0x000260, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_Point_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_Point_Light_Settings_Final_Colour_Output) == 0x000268, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_Point_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_Spot_Light_Settings_Final_Intensity_Output) == 0x000278, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_Spot_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_Spot_Light_Settings_Final_Colour_Output) == 0x000280, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_Spot_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000290, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x000298, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1) == 0x00029C, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_03_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2) == 0x0002A0, "Member 'BPFL_Lighting_C_Bulb_Light_03_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Bulb Light 04 Settings
// 0x02A8 (0x02A8 - 0x0000)
struct BPFL_Lighting_C_Bulb_Light_04_Settings final
{
public:
	struct FS_Bulb_Light_04_Settings              Param_Bulb_Light_04_Settings;                      // 0x0000(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_04_Emissive_Settings     Bulb_Light_04_Emissive_Settings;                   // 0x0140(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot;                                              // 0x0160(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x0168(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x0170(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x0178(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x0180(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x0188(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x0198(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F27[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x01A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x01A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F28[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x01B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_04_Intensity;                           // 0x01B8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int_Output;                            // 0x01C0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Emissive_Int_Output;                         // 0x01C8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Final_Colour_Output;                               // 0x01D0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Ref_Output;                              // 0x01E8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int;                                   // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Attenuation_Radius_B4;             // 0x01F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F29[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Final_Colour;                                      // 0x01FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2A[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Emissive_Intensity;                                // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity;                                   // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2B[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rect_Light_Settings_Final_Intensity_Output; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Rect_Light_Settings_Final_Colour_Output;  // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Point_Light_Settings_Final_Intensity_Output; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Point_Light_Settings_Final_Colour_Output; // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spot_Light_Settings_Final_Intensity_Output; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Spot_Light_Settings_Final_Colour_Output;  // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1; // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Bulb_Light_04_Settings) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Bulb_Light_04_Settings");
static_assert(sizeof(BPFL_Lighting_C_Bulb_Light_04_Settings) == 0x0002A8, "Wrong size on BPFL_Lighting_C_Bulb_Light_04_Settings");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Param_Bulb_Light_04_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Param_Bulb_Light_04_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Bulb_Light_04_Emissive_Settings) == 0x000140, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Bulb_Light_04_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Spot) == 0x000160, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Point) == 0x000168, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Rect) == 0x000170, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Prop_Mesh_Reference) == 0x000178, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Preset_Intensity) == 0x000180, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Preset_Colour) == 0x000188, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Use_Preset_Kelvin_) == 0x000198, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Preset_Kelvin) == 0x0001A0, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Is_Bulb_Light_On_) == 0x0001A8, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, __WorldContext) == 0x0001B0, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Bulb_Light_04_Intensity) == 0x0001B8, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Bulb_Light_04_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Final_Lumen_Int_Output) == 0x0001C0, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Final_Lumen_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Final_Emissive_Int_Output) == 0x0001C8, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Final_Emissive_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Final_Colour_Output) == 0x0001D0, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Prop_Mesh_Ref_Output) == 0x0001E8, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Prop_Mesh_Ref_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Final_Lumen_Int) == 0x0001F0, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Final_Lumen_Int' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Override_Preset_Attenuation_Radius_B4) == 0x0001F8, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Override_Preset_Attenuation_Radius_B4' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Final_Colour) == 0x0001FC, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Final_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Emissive_Intensity) == 0x000210, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Emissive_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, Final_Intensity) == 0x000218, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::Final_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000220, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_FClamp_ReturnValue) == 0x000228, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_Rect_Light_Settings_Final_Intensity_Output) == 0x000230, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_Rect_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_Rect_Light_Settings_Final_Colour_Output) == 0x000238, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_Rect_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000248, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_Point_Light_Settings_Final_Intensity_Output) == 0x000260, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_Point_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_Point_Light_Settings_Final_Colour_Output) == 0x000268, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_Point_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_Spot_Light_Settings_Final_Intensity_Output) == 0x000278, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_Spot_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_Spot_Light_Settings_Final_Colour_Output) == 0x000280, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_Spot_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000290, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x000298, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1) == 0x00029C, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Bulb_Light_04_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2) == 0x0002A0, "Member 'BPFL_Lighting_C_Bulb_Light_04_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Create Light 01
// 0x05E0 (0x05E0 - 0x0000)
struct BPFL_Lighting_C_Create_Light_01 final
{
public:
	struct FS_Light_01_Settings                   Light_01_Settings;                                 // 0x0000(0x0178)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Self_Reference;                                    // 0x0178(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x0180(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2C[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0188(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_Lights;                                       // 0x0190(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point_Lights;                                      // 0x0198(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect_Lights;                                       // 0x01A0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Light_On_;                                    // 0x01A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2D[0x6];                                     // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2E[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0220(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_AddComponentByClass_ReturnValue;          // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0290(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x0388(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0480(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    CallFunc_AddComponentByClass_ReturnValue_2;        // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_2;     // 0x04E8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPFL_Lighting_C_Create_Light_01) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Create_Light_01");
static_assert(sizeof(BPFL_Lighting_C_Create_Light_01) == 0x0005E0, "Wrong size on BPFL_Lighting_C_Create_Light_01");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, Light_01_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Create_Light_01::Light_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, Self_Reference) == 0x000178, "Member 'BPFL_Lighting_C_Create_Light_01::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, Off) == 0x000180, "Member 'BPFL_Lighting_C_Create_Light_01::Off' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, __WorldContext) == 0x000188, "Member 'BPFL_Lighting_C_Create_Light_01::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, Spot_Lights) == 0x000190, "Member 'BPFL_Lighting_C_Create_Light_01::Spot_Lights' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, Point_Lights) == 0x000198, "Member 'BPFL_Lighting_C_Create_Light_01::Point_Lights' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, Rect_Lights) == 0x0001A0, "Member 'BPFL_Lighting_C_Create_Light_01::Rect_Lights' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, Turn_Light_On_) == 0x0001A8, "Member 'BPFL_Lighting_C_Create_Light_01::Turn_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_Not_PreBool_ReturnValue) == 0x0001A9, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, K2Node_DynamicCast_AsActor) == 0x0001B0, "Member 'BPFL_Lighting_C_Create_Light_01::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'BPFL_Lighting_C_Create_Light_01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, K2Node_SwitchEnum_CmpSuccess) == 0x0001B9, "Member 'BPFL_Lighting_C_Create_Light_01::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_MakeTransform_ReturnValue) == 0x0001C0, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_MakeTransform_ReturnValue_1) == 0x000220, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_AddComponentByClass_ReturnValue) == 0x000280, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000288, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000290, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x000388, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_MakeTransform_ReturnValue_2) == 0x000480, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_AddComponentByClass_ReturnValue_2) == 0x0004E0, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_01, CallFunc_K2_AddLocalRotation_SweepHitResult_2) == 0x0004E8, "Member 'BPFL_Lighting_C_Create_Light_01::CallFunc_K2_AddLocalRotation_SweepHitResult_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Create Light 02
// 0x05E0 (0x05E0 - 0x0000)
struct BPFL_Lighting_C_Create_Light_02 final
{
public:
	struct FS_Light_02_Settings                   Light_02_Settings;                                 // 0x0000(0x0178)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Self_Reference;                                    // 0x0178(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x0180(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2F[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0188(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_Lights;                                       // 0x0190(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point_Lights;                                      // 0x0198(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect_Lights;                                       // 0x01A0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Light_On_;                                    // 0x01A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F30[0x6];                                     // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F31[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0220(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_AddComponentByClass_ReturnValue;          // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0290(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x0388(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0480(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    CallFunc_AddComponentByClass_ReturnValue_2;        // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_2;     // 0x04E8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPFL_Lighting_C_Create_Light_02) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Create_Light_02");
static_assert(sizeof(BPFL_Lighting_C_Create_Light_02) == 0x0005E0, "Wrong size on BPFL_Lighting_C_Create_Light_02");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, Light_02_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Create_Light_02::Light_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, Self_Reference) == 0x000178, "Member 'BPFL_Lighting_C_Create_Light_02::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, Off) == 0x000180, "Member 'BPFL_Lighting_C_Create_Light_02::Off' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, __WorldContext) == 0x000188, "Member 'BPFL_Lighting_C_Create_Light_02::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, Spot_Lights) == 0x000190, "Member 'BPFL_Lighting_C_Create_Light_02::Spot_Lights' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, Point_Lights) == 0x000198, "Member 'BPFL_Lighting_C_Create_Light_02::Point_Lights' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, Rect_Lights) == 0x0001A0, "Member 'BPFL_Lighting_C_Create_Light_02::Rect_Lights' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, Turn_Light_On_) == 0x0001A8, "Member 'BPFL_Lighting_C_Create_Light_02::Turn_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_Not_PreBool_ReturnValue) == 0x0001A9, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, K2Node_DynamicCast_AsActor) == 0x0001B0, "Member 'BPFL_Lighting_C_Create_Light_02::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'BPFL_Lighting_C_Create_Light_02::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, K2Node_SwitchEnum_CmpSuccess) == 0x0001B9, "Member 'BPFL_Lighting_C_Create_Light_02::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_MakeTransform_ReturnValue) == 0x0001C0, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_MakeTransform_ReturnValue_1) == 0x000220, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_AddComponentByClass_ReturnValue) == 0x000280, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000288, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000290, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x000388, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_MakeTransform_ReturnValue_2) == 0x000480, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_AddComponentByClass_ReturnValue_2) == 0x0004E0, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_02, CallFunc_K2_AddLocalRotation_SweepHitResult_2) == 0x0004E8, "Member 'BPFL_Lighting_C_Create_Light_02::CallFunc_K2_AddLocalRotation_SweepHitResult_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Create Light Fitting Meshes
// 0x0370 (0x0370 - 0x0000)
struct BPFL_Lighting_C_Create_Light_Fitting_Meshes final
{
public:
	struct FS_Light_Fitting_Mesh_Settings         Light_Fitting_Meshes_Settings;                     // 0x0000(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Self_Reference;                                    // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F32[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_AddComponentByClass_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F33[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F34[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F35[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue_1;        // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F36[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue_2;        // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F37[0x3];                                     // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F38[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F39[0x4];                                     // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0300(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Create_Light_Fitting_Meshes) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Create_Light_Fitting_Meshes");
static_assert(sizeof(BPFL_Lighting_C_Create_Light_Fitting_Meshes) == 0x000370, "Wrong size on BPFL_Lighting_C_Create_Light_Fitting_Meshes");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, Light_Fitting_Meshes_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::Light_Fitting_Meshes_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, Self_Reference) == 0x000120, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, Spline) == 0x000128, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::Spline' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, __WorldContext) == 0x000130, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, K2Node_DynamicCast_AsActor) == 0x000138, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_AddComponentByClass_ReturnValue) == 0x000148, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000150, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_SetStaticMesh_ReturnValue) == 0x000168, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_RotateAngleAxis_ReturnValue) == 0x000170, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000188, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_Normal_ReturnValue) == 0x000190, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_SelectInt_ReturnValue) == 0x0001A8, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_AddComponentByClass_ReturnValue_1) == 0x0001B0, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_BreakTransform_Location) == 0x0001B8, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_BreakTransform_Rotation) == 0x0001D0, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_BreakTransform_Scale) == 0x0001E8, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_BreakVector_X) == 0x000200, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_BreakVector_Y) == 0x000208, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_BreakVector_Z) == 0x000210, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000218, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_AddComponentByClass_ReturnValue_2) == 0x000220, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000228, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000240, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, Temp_int_Variable) == 0x000244, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_Conv_IntToVector_ReturnValue) == 0x000248, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000260, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000278, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000280, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_Add_VectorVector_ReturnValue) == 0x000298, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_Add_IntInt_ReturnValue) == 0x0002B0, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002B8, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_BreakVector_X_1) == 0x0002D0, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_BreakVector_Y_1) == 0x0002D8, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_BreakVector_Z_1) == 0x0002E0, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_MakeVector_ReturnValue) == 0x0002E8, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_MakeTransform_ReturnValue) == 0x000300, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_AddInstance_ReturnValue) == 0x000360, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Light_Fitting_Meshes, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000364, "Member 'BPFL_Lighting_C_Create_Light_Fitting_Meshes::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Create Main Throw Light
// 0x0650 (0x0650 - 0x0000)
struct BPFL_Lighting_C_Create_Main_Throw_Light final
{
public:
	struct FS_Main_Throw_Light_01_Settings        Main_Throw_Light_Settings;                         // 0x0000(0x01E0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Self_Reference;                                    // 0x01E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Are_Bulb_Lights_On_;                               // 0x01E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F3A[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x01F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_Light;                                        // 0x01F8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point_Light;                                       // 0x0200(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect_Light;                                        // 0x0208(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F3B[0xF];                                     // 0x0211(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0220(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0280(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x02E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F3C[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_AddComponentByClass_ReturnValue;          // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0360(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x0458(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPointLightComponent*                   CallFunc_AddComponentByClass_ReturnValue_2;        // 0x0550(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_2;     // 0x0558(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPFL_Lighting_C_Create_Main_Throw_Light) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Create_Main_Throw_Light");
static_assert(sizeof(BPFL_Lighting_C_Create_Main_Throw_Light) == 0x000650, "Wrong size on BPFL_Lighting_C_Create_Main_Throw_Light");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, Main_Throw_Light_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::Main_Throw_Light_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, Self_Reference) == 0x0001E0, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, Are_Bulb_Lights_On_) == 0x0001E8, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::Are_Bulb_Lights_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, __WorldContext) == 0x0001F0, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, Spot_Light) == 0x0001F8, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::Spot_Light' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, Point_Light) == 0x000200, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::Point_Light' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, Rect_Light) == 0x000208, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::Rect_Light' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, K2Node_SwitchEnum_CmpSuccess) == 0x000210, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, CallFunc_MakeTransform_ReturnValue) == 0x000220, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, CallFunc_MakeTransform_ReturnValue_1) == 0x000280, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, CallFunc_MakeTransform_ReturnValue_2) == 0x0002E0, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, K2Node_DynamicCast_AsActor) == 0x000340, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, K2Node_DynamicCast_bSuccess) == 0x000348, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, CallFunc_AddComponentByClass_ReturnValue) == 0x000350, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000358, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000360, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x000458, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, CallFunc_AddComponentByClass_ReturnValue_2) == 0x000550, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Main_Throw_Light, CallFunc_K2_AddLocalRotation_SweepHitResult_2) == 0x000558, "Member 'BPFL_Lighting_C_Create_Main_Throw_Light::CallFunc_K2_AddLocalRotation_SweepHitResult_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Create Prop Mesh
// 0x0370 (0x0370 - 0x0000)
struct BPFL_Lighting_C_Create_Prop_Mesh final
{
public:
	struct FS_Prop_Mesh_01                        Prop_Mesh_01;                                      // 0x0000(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                Self_Reference;                                    // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       SplineIn;                                          // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Prop_Mesh_Reference;                               // 0x0138(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F3D[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_AddComponentByClass_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F3E[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F3F[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F40[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F41[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F42[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F43[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F44[0x8];                                     // 0x02F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0300(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Create_Prop_Mesh) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Create_Prop_Mesh");
static_assert(sizeof(BPFL_Lighting_C_Create_Prop_Mesh) == 0x000370, "Wrong size on BPFL_Lighting_C_Create_Prop_Mesh");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, Prop_Mesh_01) == 0x000000, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::Prop_Mesh_01' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, Self_Reference) == 0x000120, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, SplineIn) == 0x000128, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::SplineIn' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, __WorldContext) == 0x000130, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, Prop_Mesh_Reference) == 0x000138, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, K2Node_DynamicCast_AsActor) == 0x000140, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_AddComponentByClass_ReturnValue) == 0x000150, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000158, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000170, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_RotateAngleAxis_ReturnValue) == 0x000178, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000190, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_Normal_ReturnValue) == 0x000198, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_SelectInt_ReturnValue) == 0x0001B0, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_BreakTransform_Location) == 0x0001B8, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_BreakTransform_Rotation) == 0x0001D0, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_BreakTransform_Scale) == 0x0001E8, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_BreakVector_X) == 0x000200, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_BreakVector_Y) == 0x000208, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_BreakVector_Z) == 0x000210, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000218, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000220, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000238, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, Temp_int_Variable) == 0x00023C, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_Add_IntInt_ReturnValue) == 0x000240, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_Conv_IntToVector_ReturnValue) == 0x000248, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000260, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000278, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000290, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_Add_VectorVector_ReturnValue) == 0x000298, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002B0, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_BreakVector_X_1) == 0x0002C8, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_BreakVector_Y_1) == 0x0002D0, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_BreakVector_Z_1) == 0x0002D8, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_MakeVector_ReturnValue) == 0x0002E0, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_MakeTransform_ReturnValue) == 0x000300, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_AddInstance_ReturnValue) == 0x000360, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Create_Prop_Mesh, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000364, "Member 'BPFL_Lighting_C_Create_Prop_Mesh::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Emissive Plane Settings
// 0x0270 (0x0270 - 0x0000)
struct BPFL_Lighting_C_Emissive_Plane_Settings final
{
public:
	class UObject*                                Self_Reference;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F45[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Ambient_Emissive_Settings           Ambient_Emissive_Settings;                         // 0x0010(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F46[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F47[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_1;    // 0x00E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F48[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F49[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4A[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4B[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 CallFunc_GetParameterInfo_ReturnValue;             // 0x0140(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 CallFunc_GetParameterInfo_ReturnValue_1;           // 0x0150(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 CallFunc_GetParameterInfo_ReturnValue_2;           // 0x0160(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 CallFunc_GetParameterInfo_ReturnValue_3;           // 0x0170(0x0010)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4C[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4D[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UDirectionalLightComponent*>     CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x01A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4E[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4F[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F50[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F51[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USkyLightComponent*>             CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0210(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UActorComponent*                        CallFunc_Array_Get_Item_3;                         // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F52[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F53[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyLightComponent*                     CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueByInfo_Value_ImplicitCast; // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F54[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueByInfo_Value_ImplicitCast_1; // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Emissive_Plane_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Emissive_Plane_Settings");
static_assert(sizeof(BPFL_Lighting_C_Emissive_Plane_Settings) == 0x000270, "Wrong size on BPFL_Lighting_C_Emissive_Plane_Settings");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Self_Reference) == 0x000000, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Ambient_Emissive_Settings) == 0x000010, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Ambient_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, __WorldContext) == 0x0000B0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetAllActorsWithInterface_OutActors) == 0x0000C0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetAllActorsWithInterface_OutActors_1) == 0x0000E0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetAllActorsWithInterface_OutActors_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000108, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, K2Node_DynamicCast_AsActor) == 0x000110, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Temp_int_Loop_Counter_Variable_1) == 0x00011C, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_AddComponentByClass_ReturnValue) == 0x000120, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Add_IntInt_ReturnValue_1) == 0x000128, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_SetStaticMesh_ReturnValue) == 0x00012C, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetMaterial_ReturnValue) == 0x000130, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000138, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetParameterInfo_ReturnValue) == 0x000140, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetParameterInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetParameterInfo_ReturnValue_1) == 0x000150, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetParameterInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetParameterInfo_ReturnValue_2) == 0x000160, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetParameterInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetParameterInfo_ReturnValue_3) == 0x000170, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetParameterInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Temp_int_Array_Index_Variable) == 0x000180, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Temp_int_Array_Index_Variable_1) == 0x000184, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Temp_int_Loop_Counter_Variable_2) == 0x000188, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Less_IntInt_ReturnValue_1) == 0x00018C, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Add_IntInt_ReturnValue_2) == 0x000190, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Temp_int_Array_Index_Variable_2) == 0x000194, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Temp_int_Loop_Counter_Variable_3) == 0x000198, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x0001A8, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001B8, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetOwner_ReturnValue) == 0x0001C8, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Array_Length_ReturnValue_2) == 0x0001D0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetComponentByClass_ReturnValue) == 0x0001D8, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001E0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0001E8, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_FClamp_ReturnValue) == 0x0001F8, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, Temp_int_Array_Index_Variable_3) == 0x000200, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Array_Get_Item_2) == 0x000208, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000210, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Array_Get_Item_3) == 0x000220, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Array_Length_ReturnValue_3) == 0x000228, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetOwner_ReturnValue_1) == 0x000230, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Less_IntInt_ReturnValue_3) == 0x000238, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000240, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000248, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000250, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_SetScalarParameterValueByInfo_Value_ImplicitCast) == 0x000258, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_SetScalarParameterValueByInfo_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000260, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Emissive_Plane_Settings, CallFunc_SetScalarParameterValueByInfo_Value_ImplicitCast_1) == 0x000268, "Member 'BPFL_Lighting_C_Emissive_Plane_Settings::CallFunc_SetScalarParameterValueByInfo_Value_ImplicitCast_1' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Light 01 Settings
// 0x02C0 (0x02C0 - 0x0000)
struct BPFL_Lighting_C_Light_01_Settings final
{
public:
	struct FS_Light_01_Settings                   Param_Light_01_Settings;                           // 0x0000(0x0178)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Light_01_Emissive_Settings          Light_01_Emissive_Settings;                        // 0x0178(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot;                                              // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x0198(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x01A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Prop_Mesh_Reference;                               // 0x01A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x01B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x01B8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x01C8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F55[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x01D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Attenuation_Radius;                         // 0x01D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x01E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int_Output;                            // 0x01E8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Emissive_Int_Output;                         // 0x01F0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Final_Colour_Output;                               // 0x01F8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Prop_Mesh_Ref_Output;                              // 0x0210(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int;                                   // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Final_Colour;                                      // 0x0220(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity;                                   // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rect_Light_Settings_Final_Intensity_Output; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Rect_Light_Settings_Final_Colour_Output;  // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Point_Light_Settings_Final_Intensity_Output; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Point_Light_Settings_Final_Colour_Output; // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spot_Light_Settings_Final_Intensity_Output; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Spot_Light_Settings_Final_Colour_Output;  // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F56[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1; // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2; // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Light_01_Settings) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Light_01_Settings");
static_assert(sizeof(BPFL_Lighting_C_Light_01_Settings) == 0x0002C0, "Wrong size on BPFL_Lighting_C_Light_01_Settings");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Param_Light_01_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Light_01_Settings::Param_Light_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Light_01_Emissive_Settings) == 0x000178, "Member 'BPFL_Lighting_C_Light_01_Settings::Light_01_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Spot) == 0x000190, "Member 'BPFL_Lighting_C_Light_01_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Point) == 0x000198, "Member 'BPFL_Lighting_C_Light_01_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Rect) == 0x0001A0, "Member 'BPFL_Lighting_C_Light_01_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Prop_Mesh_Reference) == 0x0001A8, "Member 'BPFL_Lighting_C_Light_01_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Preset_Intensity) == 0x0001B0, "Member 'BPFL_Lighting_C_Light_01_Settings::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Preset_Colour) == 0x0001B8, "Member 'BPFL_Lighting_C_Light_01_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Use_Preset_Kelvin_) == 0x0001C8, "Member 'BPFL_Lighting_C_Light_01_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Preset_Kelvin) == 0x0001D0, "Member 'BPFL_Lighting_C_Light_01_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Preset_Attenuation_Radius) == 0x0001D8, "Member 'BPFL_Lighting_C_Light_01_Settings::Preset_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, __WorldContext) == 0x0001E0, "Member 'BPFL_Lighting_C_Light_01_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Final_Lumen_Int_Output) == 0x0001E8, "Member 'BPFL_Lighting_C_Light_01_Settings::Final_Lumen_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Final_Emissive_Int_Output) == 0x0001F0, "Member 'BPFL_Lighting_C_Light_01_Settings::Final_Emissive_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Final_Colour_Output) == 0x0001F8, "Member 'BPFL_Lighting_C_Light_01_Settings::Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Prop_Mesh_Ref_Output) == 0x000210, "Member 'BPFL_Lighting_C_Light_01_Settings::Prop_Mesh_Ref_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Final_Lumen_Int) == 0x000218, "Member 'BPFL_Lighting_C_Light_01_Settings::Final_Lumen_Int' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Final_Colour) == 0x000220, "Member 'BPFL_Lighting_C_Light_01_Settings::Final_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, Final_Intensity) == 0x000230, "Member 'BPFL_Lighting_C_Light_01_Settings::Final_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_FClamp_ReturnValue) == 0x000238, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_Rect_Light_Settings_Final_Intensity_Output) == 0x000240, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_Rect_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_Rect_Light_Settings_Final_Colour_Output) == 0x000248, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_Rect_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_Point_Light_Settings_Final_Intensity_Output) == 0x000258, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_Point_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_Point_Light_Settings_Final_Colour_Output) == 0x000260, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_Point_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_Spot_Light_Settings_Final_Intensity_Output) == 0x000270, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_Spot_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_Spot_Light_Settings_Final_Colour_Output) == 0x000278, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_Spot_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000288, "Member 'BPFL_Lighting_C_Light_01_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000290, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002A8, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x0002B0, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1) == 0x0002B4, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_01_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2) == 0x0002B8, "Member 'BPFL_Lighting_C_Light_01_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Light 02 Settings
// 0x02C0 (0x02C0 - 0x0000)
struct BPFL_Lighting_C_Light_02_Settings final
{
public:
	struct FS_Light_02_Settings                   Param_Light_02_Settings;                           // 0x0000(0x0178)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Light_02_Emissive_Settings          Light_02_Emissive_Settings;                        // 0x0178(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot;                                              // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x0198(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x01A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Prop_Mesh_Reference;                               // 0x01A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x01B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x01B8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x01C8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F57[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x01D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Attenuation_Radius;                         // 0x01D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x01E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int_Output;                            // 0x01E8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Emissive_Int_Output;                         // 0x01F0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Final_Colour_Output;                               // 0x01F8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Prop_Mesh_Ref_Output;                              // 0x0210(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Lumen_Int;                                   // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Final_Colour;                                      // 0x0220(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity;                                   // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rect_Light_Settings_Final_Intensity_Output; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Rect_Light_Settings_Final_Colour_Output;  // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Point_Light_Settings_Final_Intensity_Output; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Point_Light_Settings_Final_Colour_Output; // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spot_Light_Settings_Final_Intensity_Output; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Spot_Light_Settings_Final_Colour_Output;  // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F58[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1; // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2; // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Light_02_Settings) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Light_02_Settings");
static_assert(sizeof(BPFL_Lighting_C_Light_02_Settings) == 0x0002C0, "Wrong size on BPFL_Lighting_C_Light_02_Settings");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Param_Light_02_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Light_02_Settings::Param_Light_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Light_02_Emissive_Settings) == 0x000178, "Member 'BPFL_Lighting_C_Light_02_Settings::Light_02_Emissive_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Spot) == 0x000190, "Member 'BPFL_Lighting_C_Light_02_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Point) == 0x000198, "Member 'BPFL_Lighting_C_Light_02_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Rect) == 0x0001A0, "Member 'BPFL_Lighting_C_Light_02_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Prop_Mesh_Reference) == 0x0001A8, "Member 'BPFL_Lighting_C_Light_02_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Preset_Intensity) == 0x0001B0, "Member 'BPFL_Lighting_C_Light_02_Settings::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Preset_Colour) == 0x0001B8, "Member 'BPFL_Lighting_C_Light_02_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Use_Preset_Kelvin_) == 0x0001C8, "Member 'BPFL_Lighting_C_Light_02_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Preset_Kelvin) == 0x0001D0, "Member 'BPFL_Lighting_C_Light_02_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Preset_Attenuation_Radius) == 0x0001D8, "Member 'BPFL_Lighting_C_Light_02_Settings::Preset_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, __WorldContext) == 0x0001E0, "Member 'BPFL_Lighting_C_Light_02_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Final_Lumen_Int_Output) == 0x0001E8, "Member 'BPFL_Lighting_C_Light_02_Settings::Final_Lumen_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Final_Emissive_Int_Output) == 0x0001F0, "Member 'BPFL_Lighting_C_Light_02_Settings::Final_Emissive_Int_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Final_Colour_Output) == 0x0001F8, "Member 'BPFL_Lighting_C_Light_02_Settings::Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Prop_Mesh_Ref_Output) == 0x000210, "Member 'BPFL_Lighting_C_Light_02_Settings::Prop_Mesh_Ref_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Final_Lumen_Int) == 0x000218, "Member 'BPFL_Lighting_C_Light_02_Settings::Final_Lumen_Int' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Final_Colour) == 0x000220, "Member 'BPFL_Lighting_C_Light_02_Settings::Final_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, Final_Intensity) == 0x000230, "Member 'BPFL_Lighting_C_Light_02_Settings::Final_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_FClamp_ReturnValue) == 0x000238, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_Rect_Light_Settings_Final_Intensity_Output) == 0x000240, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_Rect_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_Rect_Light_Settings_Final_Colour_Output) == 0x000248, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_Rect_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_Point_Light_Settings_Final_Intensity_Output) == 0x000258, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_Point_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_Point_Light_Settings_Final_Colour_Output) == 0x000260, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_Point_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_Spot_Light_Settings_Final_Intensity_Output) == 0x000270, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_Spot_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_Spot_Light_Settings_Final_Colour_Output) == 0x000278, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_Spot_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000288, "Member 'BPFL_Lighting_C_Light_02_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000290, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002A8, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x0002B0, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1) == 0x0002B4, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Light_02_Settings, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2) == 0x0002B8, "Member 'BPFL_Lighting_C_Light_02_Settings::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Lobby Transition From Camera
// 0x0038 (0x0038 - 0x0000)
struct BPFL_Lighting_C_Lobby_Transition_From_Camera final
{
public:
	class ULevelSequence*                         Level_Sequence;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         End_Frame_Number;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F59[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                TestArray;                                         // 0x0018(0x0010)(Edit, BlueprintVisible)
	double                                        CurrentLightIntensity;                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OpenLevelSequence_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Lobby_Transition_From_Camera) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Lobby_Transition_From_Camera");
static_assert(sizeof(BPFL_Lighting_C_Lobby_Transition_From_Camera) == 0x000038, "Wrong size on BPFL_Lighting_C_Lobby_Transition_From_Camera");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_From_Camera, Level_Sequence) == 0x000000, "Member 'BPFL_Lighting_C_Lobby_Transition_From_Camera::Level_Sequence' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_From_Camera, End_Frame_Number) == 0x000008, "Member 'BPFL_Lighting_C_Lobby_Transition_From_Camera::End_Frame_Number' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_From_Camera, __WorldContext) == 0x000010, "Member 'BPFL_Lighting_C_Lobby_Transition_From_Camera::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_From_Camera, TestArray) == 0x000018, "Member 'BPFL_Lighting_C_Lobby_Transition_From_Camera::TestArray' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_From_Camera, CurrentLightIntensity) == 0x000028, "Member 'BPFL_Lighting_C_Lobby_Transition_From_Camera::CurrentLightIntensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_From_Camera, CallFunc_OpenLevelSequence_ReturnValue) == 0x000030, "Member 'BPFL_Lighting_C_Lobby_Transition_From_Camera::CallFunc_OpenLevelSequence_ReturnValue' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Lobby Transition to Camera
// 0x0030 (0x0030 - 0x0000)
struct BPFL_Lighting_C_Lobby_Transition_to_Camera final
{
public:
	class ULevelSequence*                         Camera_Sequence;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                TestArray;                                         // 0x0010(0x0010)(Edit, BlueprintVisible)
	double                                        CurrentLightIntensity;                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OpenLevelSequence_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Lobby_Transition_to_Camera) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Lobby_Transition_to_Camera");
static_assert(sizeof(BPFL_Lighting_C_Lobby_Transition_to_Camera) == 0x000030, "Wrong size on BPFL_Lighting_C_Lobby_Transition_to_Camera");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_to_Camera, Camera_Sequence) == 0x000000, "Member 'BPFL_Lighting_C_Lobby_Transition_to_Camera::Camera_Sequence' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_to_Camera, __WorldContext) == 0x000008, "Member 'BPFL_Lighting_C_Lobby_Transition_to_Camera::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_to_Camera, TestArray) == 0x000010, "Member 'BPFL_Lighting_C_Lobby_Transition_to_Camera::TestArray' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_to_Camera, CurrentLightIntensity) == 0x000020, "Member 'BPFL_Lighting_C_Lobby_Transition_to_Camera::CurrentLightIntensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Lobby_Transition_to_Camera, CallFunc_OpenLevelSequence_ReturnValue) == 0x000028, "Member 'BPFL_Lighting_C_Lobby_Transition_to_Camera::CallFunc_OpenLevelSequence_ReturnValue' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Main Throw Light 01 Settings
// 0x02B0 (0x02B0 - 0x0000)
struct BPFL_Lighting_C_Main_Throw_Light_01_Settings final
{
public:
	struct FS_Main_Throw_Light_01_Settings        Param_Main_Throw_Light_01_Settings;                // 0x0000(0x01E0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot;                                              // 0x01E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x01E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x01F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_01_Intensity;                           // 0x01F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_02_Intensity;                           // 0x0200(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_03_Intensity;                           // 0x0208(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_04_Intensity;                           // 0x0210(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x0218(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x0228(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5A[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Attenuation_Radius;                         // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5B[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spot_Light_Settings_Final_Intensity_Output; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Spot_Light_Settings_Final_Colour_Output;  // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rect_Light_Settings_Final_Intensity_Output; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Rect_Light_Settings_Final_Colour_Output;  // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Point_Light_Settings_Final_Intensity_Output; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Point_Light_Settings_Final_Colour_Output; // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Main_Throw_Light_01_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Main_Throw_Light_01_Settings");
static_assert(sizeof(BPFL_Lighting_C_Main_Throw_Light_01_Settings) == 0x0002B0, "Wrong size on BPFL_Lighting_C_Main_Throw_Light_01_Settings");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Param_Main_Throw_Light_01_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Param_Main_Throw_Light_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Spot) == 0x0001E0, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Point) == 0x0001E8, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Rect) == 0x0001F0, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Bulb_Light_01_Intensity) == 0x0001F8, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Bulb_Light_01_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Bulb_Light_02_Intensity) == 0x000200, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Bulb_Light_02_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Bulb_Light_03_Intensity) == 0x000208, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Bulb_Light_03_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Bulb_Light_04_Intensity) == 0x000210, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Bulb_Light_04_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Preset_Colour) == 0x000218, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Use_Preset_Kelvin_) == 0x000228, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Preset_Kelvin) == 0x000230, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, Preset_Attenuation_Radius) == 0x000238, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::Preset_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, __WorldContext) == 0x000240, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000248, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000250, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000258, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000260, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, CallFunc_Spot_Light_Settings_Final_Intensity_Output) == 0x000268, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::CallFunc_Spot_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, CallFunc_Spot_Light_Settings_Final_Colour_Output) == 0x000270, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::CallFunc_Spot_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, CallFunc_Rect_Light_Settings_Final_Intensity_Output) == 0x000280, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::CallFunc_Rect_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, CallFunc_Rect_Light_Settings_Final_Colour_Output) == 0x000288, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::CallFunc_Rect_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, CallFunc_Point_Light_Settings_Final_Intensity_Output) == 0x000298, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::CallFunc_Point_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_01_Settings, CallFunc_Point_Light_Settings_Final_Colour_Output) == 0x0002A0, "Member 'BPFL_Lighting_C_Main_Throw_Light_01_Settings::CallFunc_Point_Light_Settings_Final_Colour_Output' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Main Throw Light 02 Settings
// 0x0280 (0x0280 - 0x0000)
struct BPFL_Lighting_C_Main_Throw_Light_02_Settings final
{
public:
	struct FS_Main_Throw_Light_02_Settings        Param_Main_Throw_Light_02_Settings;                // 0x0000(0x01B0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot;                                              // 0x01B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x01B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x01C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_01_Intensity;                           // 0x01C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_02_Intensity;                           // 0x01D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_03_Intensity;                           // 0x01D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bulb_Light_04_Intensity;                           // 0x01E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x01E8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x01F8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5C[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x0200(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Attenuation_Radius;                         // 0x0208(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0210(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5D[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spot_Light_Settings_Final_Intensity_Output; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Spot_Light_Settings_Final_Colour_Output;  // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rect_Light_Settings_Final_Intensity_Output; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Rect_Light_Settings_Final_Colour_Output;  // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Point_Light_Settings_Final_Intensity_Output; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Point_Light_Settings_Final_Colour_Output; // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Main_Throw_Light_02_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Main_Throw_Light_02_Settings");
static_assert(sizeof(BPFL_Lighting_C_Main_Throw_Light_02_Settings) == 0x000280, "Wrong size on BPFL_Lighting_C_Main_Throw_Light_02_Settings");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Param_Main_Throw_Light_02_Settings) == 0x000000, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Param_Main_Throw_Light_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Spot) == 0x0001B0, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Point) == 0x0001B8, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Rect) == 0x0001C0, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Bulb_Light_01_Intensity) == 0x0001C8, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Bulb_Light_01_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Bulb_Light_02_Intensity) == 0x0001D0, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Bulb_Light_02_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Bulb_Light_03_Intensity) == 0x0001D8, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Bulb_Light_03_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Bulb_Light_04_Intensity) == 0x0001E0, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Bulb_Light_04_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Preset_Colour) == 0x0001E8, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Use_Preset_Kelvin_) == 0x0001F8, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Preset_Kelvin) == 0x000200, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, Preset_Attenuation_Radius) == 0x000208, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::Preset_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, __WorldContext) == 0x000210, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000218, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000228, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000230, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, CallFunc_Spot_Light_Settings_Final_Intensity_Output) == 0x000238, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::CallFunc_Spot_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, CallFunc_Spot_Light_Settings_Final_Colour_Output) == 0x000240, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::CallFunc_Spot_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, CallFunc_Rect_Light_Settings_Final_Intensity_Output) == 0x000250, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::CallFunc_Rect_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, CallFunc_Rect_Light_Settings_Final_Colour_Output) == 0x000258, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::CallFunc_Rect_Light_Settings_Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, CallFunc_Point_Light_Settings_Final_Intensity_Output) == 0x000268, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::CallFunc_Point_Light_Settings_Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Main_Throw_Light_02_Settings, CallFunc_Point_Light_Settings_Final_Colour_Output) == 0x000270, "Member 'BPFL_Lighting_C_Main_Throw_Light_02_Settings::CallFunc_Point_Light_Settings_Final_Colour_Output' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Podium Bulb 01 Settings
// 0x0340 (0x0340 - 0x0000)
struct BPFL_Lighting_C_Podium_Bulb_01_Settings final
{
public:
	class UObject*                                Self_Reference;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5E[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PodiumBulb_01_Settings              Param_Podium_Bulb_01_Settings;                     // 0x0010(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_Bulb_Light_01_Settings              Bulb_Light_01_Settings;                            // 0x00D0(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x0210(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5F[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LED_Diode_01                        LED_Diode_01_Settings;                             // 0x0218(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x0290(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F60[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    Spot;                                              // 0x0298(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x02A0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x02A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x02B0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb_Mesh_Reference;                               // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Bulb_Light_On_;                               // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F61[0x6];                                     // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference; // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F62[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_Create_Light_Component_Spot_Light_Reference; // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_Create_Light_Component_Point_Light_Reference; // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_Create_Light_Component_Rect_Light_Reference; // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference;     // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Podium_Bulb_01_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Podium_Bulb_01_Settings");
static_assert(sizeof(BPFL_Lighting_C_Podium_Bulb_01_Settings) == 0x000340, "Wrong size on BPFL_Lighting_C_Podium_Bulb_01_Settings");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Self_Reference) == 0x000000, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Param_Podium_Bulb_01_Settings) == 0x000010, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Param_Podium_Bulb_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Bulb_Light_01_Settings) == 0x0000D0, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Bulb_Light_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Off) == 0x000210, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Off' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, LED_Diode_01_Settings) == 0x000218, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::LED_Diode_01_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, __WorldContext) == 0x000288, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Is_Bulb_Light_On_) == 0x000290, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Spot) == 0x000298, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Point) == 0x0002A0, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Rect) == 0x0002A8, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Prop_Mesh_Reference) == 0x0002B0, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Bulb_Mesh_Reference) == 0x0002B8, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Bulb_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, Turn_Bulb_Light_On_) == 0x0002C0, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::Turn_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, CallFunc_Not_PreBool_ReturnValue) == 0x0002C1, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference) == 0x0002C8, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, CallFunc_BreakTransform_Location) == 0x0002D0, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, CallFunc_BreakTransform_Rotation) == 0x0002E8, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, CallFunc_BreakTransform_Scale) == 0x000300, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000318, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, CallFunc_Create_Light_Component_Spot_Light_Reference) == 0x000320, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::CallFunc_Create_Light_Component_Spot_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, CallFunc_Create_Light_Component_Point_Light_Reference) == 0x000328, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::CallFunc_Create_Light_Component_Point_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, CallFunc_Create_Light_Component_Rect_Light_Reference) == 0x000330, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::CallFunc_Create_Light_Component_Rect_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_01_Settings, CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference) == 0x000338, "Member 'BPFL_Lighting_C_Podium_Bulb_01_Settings::CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Podium Bulb 02 Settings
// 0x0340 (0x0340 - 0x0000)
struct BPFL_Lighting_C_Podium_Bulb_02_Settings final
{
public:
	class UObject*                                Self_Reference;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F63[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PodiumBulb_02_Settings              Param_Podium_Bulb_02_Settings;                     // 0x0010(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_02_Settings              Bulb_Light_02_Settings;                            // 0x00D0(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x0210(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F64[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LED_Diode_02                        LED_Diode_02_Settings;                             // 0x0218(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x0290(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F65[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    Spot;                                              // 0x0298(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x02A0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x02A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x02B0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb_Mesh_Reference;                               // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Bulb_Light_On_;                               // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F66[0x6];                                     // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference; // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F67[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_Create_Light_Component_Spot_Light_Reference; // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_Create_Light_Component_Point_Light_Reference; // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_Create_Light_Component_Rect_Light_Reference; // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference;     // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Podium_Bulb_02_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Podium_Bulb_02_Settings");
static_assert(sizeof(BPFL_Lighting_C_Podium_Bulb_02_Settings) == 0x000340, "Wrong size on BPFL_Lighting_C_Podium_Bulb_02_Settings");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Self_Reference) == 0x000000, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Param_Podium_Bulb_02_Settings) == 0x000010, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Param_Podium_Bulb_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Bulb_Light_02_Settings) == 0x0000D0, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Bulb_Light_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Off) == 0x000210, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Off' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, LED_Diode_02_Settings) == 0x000218, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::LED_Diode_02_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, __WorldContext) == 0x000288, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Is_Bulb_Light_On_) == 0x000290, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Spot) == 0x000298, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Point) == 0x0002A0, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Rect) == 0x0002A8, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Prop_Mesh_Reference) == 0x0002B0, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Bulb_Mesh_Reference) == 0x0002B8, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Bulb_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, Turn_Bulb_Light_On_) == 0x0002C0, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::Turn_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, CallFunc_Not_PreBool_ReturnValue) == 0x0002C1, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference) == 0x0002C8, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, CallFunc_BreakTransform_Location) == 0x0002D0, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, CallFunc_BreakTransform_Rotation) == 0x0002E8, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, CallFunc_BreakTransform_Scale) == 0x000300, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000318, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, CallFunc_Create_Light_Component_Spot_Light_Reference) == 0x000320, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::CallFunc_Create_Light_Component_Spot_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, CallFunc_Create_Light_Component_Point_Light_Reference) == 0x000328, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::CallFunc_Create_Light_Component_Point_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, CallFunc_Create_Light_Component_Rect_Light_Reference) == 0x000330, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::CallFunc_Create_Light_Component_Rect_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_02_Settings, CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference) == 0x000338, "Member 'BPFL_Lighting_C_Podium_Bulb_02_Settings::CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Podium Bulb 03 Settings
// 0x0340 (0x0340 - 0x0000)
struct BPFL_Lighting_C_Podium_Bulb_03_Settings final
{
public:
	class UObject*                                Self_Reference;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F68[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PodiumBulb_03_Settings              Param_Podium_Bulb_03_Settings;                     // 0x0010(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Bulb_Light_03_Settings              Bulb_Light_03_Settings;                            // 0x00D0(0x0140)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x0210(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F69[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LED_Diode_03                        LED_Diode_03_Settings;                             // 0x0218(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Bulb_Light_On_;                                 // 0x0290(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6A[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    Spot;                                              // 0x0298(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Point;                                             // 0x02A0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    Rect;                                              // 0x02A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Prop_Mesh_Reference;                               // 0x02B0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Bulb_Mesh_Reference;                               // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Bulb_Light_On_;                               // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6B[0x6];                                     // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference; // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6C[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_Create_Light_Component_Spot_Light_Reference; // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_Create_Light_Component_Point_Light_Reference; // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CallFunc_Create_Light_Component_Rect_Light_Reference; // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference;     // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Podium_Bulb_03_Settings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Podium_Bulb_03_Settings");
static_assert(sizeof(BPFL_Lighting_C_Podium_Bulb_03_Settings) == 0x000340, "Wrong size on BPFL_Lighting_C_Podium_Bulb_03_Settings");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Self_Reference) == 0x000000, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Param_Podium_Bulb_03_Settings) == 0x000010, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Param_Podium_Bulb_03_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Bulb_Light_03_Settings) == 0x0000D0, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Bulb_Light_03_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Off) == 0x000210, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Off' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, LED_Diode_03_Settings) == 0x000218, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::LED_Diode_03_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, __WorldContext) == 0x000288, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Is_Bulb_Light_On_) == 0x000290, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Is_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Spot) == 0x000298, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Spot' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Point) == 0x0002A0, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Point' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Rect) == 0x0002A8, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Rect' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Prop_Mesh_Reference) == 0x0002B0, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Prop_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Bulb_Mesh_Reference) == 0x0002B8, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Bulb_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, Turn_Bulb_Light_On_) == 0x0002C0, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::Turn_Bulb_Light_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, CallFunc_Not_PreBool_ReturnValue) == 0x0002C1, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference) == 0x0002C8, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::CallFunc_Create_LED_Diode_Mesh_LED_Didoe_Mesh_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, CallFunc_BreakTransform_Location) == 0x0002D0, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, CallFunc_BreakTransform_Rotation) == 0x0002E8, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, CallFunc_BreakTransform_Scale) == 0x000300, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, K2Node_SwitchEnum_CmpSuccess) == 0x000318, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, CallFunc_Create_Light_Component_Spot_Light_Reference) == 0x000320, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::CallFunc_Create_Light_Component_Spot_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, CallFunc_Create_Light_Component_Point_Light_Reference) == 0x000328, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::CallFunc_Create_Light_Component_Point_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, CallFunc_Create_Light_Component_Rect_Light_Reference) == 0x000330, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::CallFunc_Create_Light_Component_Rect_Light_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Podium_Bulb_03_Settings, CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference) == 0x000338, "Member 'BPFL_Lighting_C_Podium_Bulb_03_Settings::CallFunc_Create_Bulb_Mesh_Bulb_Mesh_Reference' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Point Light Settings
// 0x01F8 (0x01F8 - 0x0000)
struct BPFL_Lighting_C_Point_Light_Settings final
{
public:
	class UPointLightComponent*                   Point_Light;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Intensity;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Intensity;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Colour;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6E[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Colour;                                            // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x0034(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Attenuation_Radius;                       // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6F[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Attenuation_Radius;                                // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Attenuation_Radius;                         // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Casting_Start_Distance;                     // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Radius;                                     // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Soft_Source_Radius;                                // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Length;                                     // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Temperature;                                   // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x0079(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F70[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temperature;                                       // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Shadows;                                      // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F71[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Indirect_Lighting_Intensity;                       // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Volumetric_Scattering_Intensity;                   // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Inverse_Squared_Falloff;                       // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F72[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Light_Falloff_Exponent;                            // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Inverse_Exposure_Blend;                            // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Specular_Scale;                                    // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Bias;                                       // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Scale_Bias;                                 // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lighting_Channel_0;                                // 0x00D8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lighting_Channel_1;                                // 0x00D9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lighting_Channel_2;                                // 0x00DA(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Volumetric_Shadows;                           // 0x00DB(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F73[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Max_Draw_Distance;                                 // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Distance_Fade_Range;                           // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Light_Function_Material;                           // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Light_Function_Scale;                              // 0x00F8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Function_Fade_Distance;                      // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Disabled_Brightness;                               // 0x0118(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureLightProfile*                   IES_Texture;                                       // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_IES_Intensity;                                 // 0x0128(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F74[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IES_Intensity_Scale;                               // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0138(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity_Output;                            // 0x0140(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Final_Colour_Output;                               // 0x0148(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out_Color;                                         // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Emissive_Only;                                     // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F75[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Final_Colour;                                      // 0x016C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F76[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Final_Intensity;                                   // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F77[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast_1; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_ShadowCastingStartDistance_ImplicitCast; // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSourceRadius_bNewValue_ImplicitCast;   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoftSourceRadius_bNewValue_ImplicitCast; // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSourceLength_NewValue_ImplicitCast;    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast; // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_1; // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast_1; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_2; // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_3; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast; // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFalloffExponent_NewLightFalloffExponent_ImplicitCast; // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetInverseExposureBlend_NewInverseExposureBlend_ImplicitCast; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpecularScale_NewValue_ImplicitCast;   // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowBias_NewValue_ImplicitCast;      // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowSlopeBias_NewValue_ImplicitCast; // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxDrawDistance_ImplicitCast;   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxDistanceFadeRange_ImplicitCast; // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_ImplicitCast; // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast; // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIESBrightnessScale_NewValue_ImplicitCast; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Point_Light_Settings) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Point_Light_Settings");
static_assert(sizeof(BPFL_Lighting_C_Point_Light_Settings) == 0x0001F8, "Wrong size on BPFL_Lighting_C_Point_Light_Settings");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Point_Light) == 0x000000, "Member 'BPFL_Lighting_C_Point_Light_Settings::Point_Light' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Override_Preset_Intensity) == 0x000008, "Member 'BPFL_Lighting_C_Point_Light_Settings::Override_Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Intensity) == 0x000010, "Member 'BPFL_Lighting_C_Point_Light_Settings::Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Preset_Intensity) == 0x000018, "Member 'BPFL_Lighting_C_Point_Light_Settings::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Override_Preset_Colour) == 0x000020, "Member 'BPFL_Lighting_C_Point_Light_Settings::Override_Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Colour) == 0x000024, "Member 'BPFL_Lighting_C_Point_Light_Settings::Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Preset_Colour) == 0x000034, "Member 'BPFL_Lighting_C_Point_Light_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Override_Attenuation_Radius) == 0x000044, "Member 'BPFL_Lighting_C_Point_Light_Settings::Override_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Attenuation_Radius) == 0x000048, "Member 'BPFL_Lighting_C_Point_Light_Settings::Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Preset_Attenuation_Radius) == 0x000050, "Member 'BPFL_Lighting_C_Point_Light_Settings::Preset_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Shadow_Casting_Start_Distance) == 0x000058, "Member 'BPFL_Lighting_C_Point_Light_Settings::Shadow_Casting_Start_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Source_Radius) == 0x000060, "Member 'BPFL_Lighting_C_Point_Light_Settings::Source_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Soft_Source_Radius) == 0x000068, "Member 'BPFL_Lighting_C_Point_Light_Settings::Soft_Source_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Source_Length) == 0x000070, "Member 'BPFL_Lighting_C_Point_Light_Settings::Source_Length' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Use_Temperature) == 0x000078, "Member 'BPFL_Lighting_C_Point_Light_Settings::Use_Temperature' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Use_Preset_Kelvin_) == 0x000079, "Member 'BPFL_Lighting_C_Point_Light_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Preset_Kelvin) == 0x000080, "Member 'BPFL_Lighting_C_Point_Light_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Temperature) == 0x000088, "Member 'BPFL_Lighting_C_Point_Light_Settings::Temperature' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Cast_Shadows) == 0x000090, "Member 'BPFL_Lighting_C_Point_Light_Settings::Cast_Shadows' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Indirect_Lighting_Intensity) == 0x000098, "Member 'BPFL_Lighting_C_Point_Light_Settings::Indirect_Lighting_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Volumetric_Scattering_Intensity) == 0x0000A0, "Member 'BPFL_Lighting_C_Point_Light_Settings::Volumetric_Scattering_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Use_Inverse_Squared_Falloff) == 0x0000A8, "Member 'BPFL_Lighting_C_Point_Light_Settings::Use_Inverse_Squared_Falloff' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Light_Falloff_Exponent) == 0x0000B0, "Member 'BPFL_Lighting_C_Point_Light_Settings::Light_Falloff_Exponent' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Inverse_Exposure_Blend) == 0x0000B8, "Member 'BPFL_Lighting_C_Point_Light_Settings::Inverse_Exposure_Blend' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Specular_Scale) == 0x0000C0, "Member 'BPFL_Lighting_C_Point_Light_Settings::Specular_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Shadow_Bias) == 0x0000C8, "Member 'BPFL_Lighting_C_Point_Light_Settings::Shadow_Bias' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Shadow_Scale_Bias) == 0x0000D0, "Member 'BPFL_Lighting_C_Point_Light_Settings::Shadow_Scale_Bias' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Lighting_Channel_0) == 0x0000D8, "Member 'BPFL_Lighting_C_Point_Light_Settings::Lighting_Channel_0' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Lighting_Channel_1) == 0x0000D9, "Member 'BPFL_Lighting_C_Point_Light_Settings::Lighting_Channel_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Lighting_Channel_2) == 0x0000DA, "Member 'BPFL_Lighting_C_Point_Light_Settings::Lighting_Channel_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Cast_Volumetric_Shadows) == 0x0000DB, "Member 'BPFL_Lighting_C_Point_Light_Settings::Cast_Volumetric_Shadows' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Max_Draw_Distance) == 0x0000E0, "Member 'BPFL_Lighting_C_Point_Light_Settings::Max_Draw_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Max_Distance_Fade_Range) == 0x0000E8, "Member 'BPFL_Lighting_C_Point_Light_Settings::Max_Distance_Fade_Range' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Light_Function_Material) == 0x0000F0, "Member 'BPFL_Lighting_C_Point_Light_Settings::Light_Function_Material' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Light_Function_Scale) == 0x0000F8, "Member 'BPFL_Lighting_C_Point_Light_Settings::Light_Function_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Light_Function_Fade_Distance) == 0x000110, "Member 'BPFL_Lighting_C_Point_Light_Settings::Light_Function_Fade_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Disabled_Brightness) == 0x000118, "Member 'BPFL_Lighting_C_Point_Light_Settings::Disabled_Brightness' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, IES_Texture) == 0x000120, "Member 'BPFL_Lighting_C_Point_Light_Settings::IES_Texture' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Use_IES_Intensity) == 0x000128, "Member 'BPFL_Lighting_C_Point_Light_Settings::Use_IES_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, IES_Intensity_Scale) == 0x000130, "Member 'BPFL_Lighting_C_Point_Light_Settings::IES_Intensity_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, __WorldContext) == 0x000138, "Member 'BPFL_Lighting_C_Point_Light_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Final_Intensity_Output) == 0x000140, "Member 'BPFL_Lighting_C_Point_Light_Settings::Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Final_Colour_Output) == 0x000148, "Member 'BPFL_Lighting_C_Point_Light_Settings::Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Out_Color) == 0x000158, "Member 'BPFL_Lighting_C_Point_Light_Settings::Out_Color' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Emissive_Only) == 0x000168, "Member 'BPFL_Lighting_C_Point_Light_Settings::Emissive_Only' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Final_Colour) == 0x00016C, "Member 'BPFL_Lighting_C_Point_Light_Settings::Final_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, Final_Intensity) == 0x000180, "Member 'BPFL_Lighting_C_Point_Light_Settings::Final_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x00018C, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000190, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast) == 0x000194, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast_1) == 0x000198, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, K2Node_VariableSet_ShadowCastingStartDistance_ImplicitCast) == 0x00019C, "Member 'BPFL_Lighting_C_Point_Light_Settings::K2Node_VariableSet_ShadowCastingStartDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetSourceRadius_bNewValue_ImplicitCast) == 0x0001A0, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetSourceRadius_bNewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetSoftSourceRadius_bNewValue_ImplicitCast) == 0x0001A4, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetSoftSourceRadius_bNewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetSourceLength_NewValue_ImplicitCast) == 0x0001A8, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetSourceLength_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast) == 0x0001AC, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_1) == 0x0001B0, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetTemperature_NewTemperature_ImplicitCast) == 0x0001B4, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetTemperature_NewTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetTemperature_NewTemperature_ImplicitCast_1) == 0x0001B8, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetTemperature_NewTemperature_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_2) == 0x0001BC, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_3) == 0x0001C0, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast) == 0x0001C4, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x0001C8, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetLightFalloffExponent_NewLightFalloffExponent_ImplicitCast) == 0x0001CC, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetLightFalloffExponent_NewLightFalloffExponent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetInverseExposureBlend_NewInverseExposureBlend_ImplicitCast) == 0x0001D0, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetInverseExposureBlend_NewInverseExposureBlend_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetSpecularScale_NewValue_ImplicitCast) == 0x0001D4, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetSpecularScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetShadowBias_NewValue_ImplicitCast) == 0x0001D8, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetShadowBias_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetShadowSlopeBias_NewValue_ImplicitCast) == 0x0001DC, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetShadowSlopeBias_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, K2Node_VariableSet_MaxDrawDistance_ImplicitCast) == 0x0001E0, "Member 'BPFL_Lighting_C_Point_Light_Settings::K2Node_VariableSet_MaxDrawDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, K2Node_VariableSet_MaxDistanceFadeRange_ImplicitCast) == 0x0001E4, "Member 'BPFL_Lighting_C_Point_Light_Settings::K2Node_VariableSet_MaxDistanceFadeRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_ImplicitCast) == 0x0001E8, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast) == 0x0001EC, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Point_Light_Settings, CallFunc_SetIESBrightnessScale_NewValue_ImplicitCast) == 0x0001F0, "Member 'BPFL_Lighting_C_Point_Light_Settings::CallFunc_SetIESBrightnessScale_NewValue_ImplicitCast' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Presets
// 0x0078 (0x0078 - 0x0000)
struct BPFL_Lighting_C_Presets final
{
public:
	struct FS_Light_Presets                       Light_Presets_Input;                               // 0x0000(0x0003)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F78[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Kelvin;                                     // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Attenuation_Radius;                         // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_Lights_On_;                                   // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin;                                 // 0x0039(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x003A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F79[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Kelvin;                                            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Off_;                                           // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Attenuation_Radius;                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Linear_Colour;                                     // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Presets) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Presets");
static_assert(sizeof(BPFL_Lighting_C_Presets) == 0x000078, "Wrong size on BPFL_Lighting_C_Presets");
static_assert(offsetof(BPFL_Lighting_C_Presets, Light_Presets_Input) == 0x000000, "Member 'BPFL_Lighting_C_Presets::Light_Presets_Input' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, __WorldContext) == 0x000008, "Member 'BPFL_Lighting_C_Presets::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Preset_Intensity) == 0x000010, "Member 'BPFL_Lighting_C_Presets::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Preset_Colour) == 0x000018, "Member 'BPFL_Lighting_C_Presets::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Preset_Kelvin) == 0x000028, "Member 'BPFL_Lighting_C_Presets::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Preset_Attenuation_Radius) == 0x000030, "Member 'BPFL_Lighting_C_Presets::Preset_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Turn_Lights_On_) == 0x000038, "Member 'BPFL_Lighting_C_Presets::Turn_Lights_On_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Use_Preset_Kelvin) == 0x000039, "Member 'BPFL_Lighting_C_Presets::Use_Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Use_Preset_Kelvin_) == 0x00003A, "Member 'BPFL_Lighting_C_Presets::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Kelvin) == 0x000040, "Member 'BPFL_Lighting_C_Presets::Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Is_Off_) == 0x000048, "Member 'BPFL_Lighting_C_Presets::Is_Off_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Attenuation_Radius) == 0x000050, "Member 'BPFL_Lighting_C_Presets::Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Linear_Colour) == 0x000058, "Member 'BPFL_Lighting_C_Presets::Linear_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, Intensity) == 0x000068, "Member 'BPFL_Lighting_C_Presets::Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'BPFL_Lighting_C_Presets::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, K2Node_SwitchEnum_CmpSuccess_1) == 0x000071, "Member 'BPFL_Lighting_C_Presets::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Presets, K2Node_SwitchEnum_CmpSuccess_2) == 0x000072, "Member 'BPFL_Lighting_C_Presets::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Procedural Railings
// 0x0610 (0x0610 - 0x0000)
struct BPFL_Lighting_C_Procedural_Railings final
{
public:
	class UObject*                                Self_Reference;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_Procedural_Railings                 Param_Procedural_Railings;                         // 0x0008(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7B[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7C[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7D[0x8];                                     // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0150(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7E[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7F[0x2];                                     // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0220(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0280(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue_1;        // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue_2;        // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F80[0x1];                                     // 0x02F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0340(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x03A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue_3;        // 0x0400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue_4;        // 0x0408(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalTransform_SweepHitResult;      // 0x0410(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalTransform_SweepHitResult_1;    // 0x0508(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_4;              // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Procedural_Railings) == 0x000010, "Wrong alignment on BPFL_Lighting_C_Procedural_Railings");
static_assert(sizeof(BPFL_Lighting_C_Procedural_Railings) == 0x000610, "Wrong size on BPFL_Lighting_C_Procedural_Railings");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, Self_Reference) == 0x000000, "Member 'BPFL_Lighting_C_Procedural_Railings::Self_Reference' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, Param_Procedural_Railings) == 0x000008, "Member 'BPFL_Lighting_C_Procedural_Railings::Param_Procedural_Railings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, __WorldContext) == 0x000060, "Member 'BPFL_Lighting_C_Procedural_Railings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, K2Node_DynamicCast_AsActor) == 0x0000D0, "Member 'BPFL_Lighting_C_Procedural_Railings::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BPFL_Lighting_C_Procedural_Railings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeTransform_ReturnValue_1) == 0x0000E0, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_AddComponentByClass_ReturnValue) == 0x000140, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeTransform_ReturnValue_2) == 0x000150, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_SetStaticMesh_ReturnValue) == 0x0001B0, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001B8, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001C0, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C5, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001C8, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, Temp_int_Variable) == 0x0001CC, "Member 'BPFL_Lighting_C_Procedural_Railings::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0001D0, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0001D8, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001E8, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeVector_ReturnValue) == 0x0001F0, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeVector_ReturnValue_1) == 0x000208, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeTransform_ReturnValue_3) == 0x000220, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeTransform_ReturnValue_4) == 0x000280, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_AddComponentByClass_ReturnValue_1) == 0x0002E0, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_AddComponentByClass_ReturnValue_2) == 0x0002E8, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0002F0, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_SetStaticMesh_ReturnValue_2) == 0x0002F1, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002F2, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Add_IntInt_ReturnValue) == 0x0002F4, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, Temp_int_Variable_1) == 0x0002F8, "Member 'BPFL_Lighting_C_Procedural_Railings::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002FC, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000300, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000308, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeVector_ReturnValue_2) == 0x000310, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeVector_ReturnValue_3) == 0x000328, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeTransform_ReturnValue_5) == 0x000340, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_MakeTransform_ReturnValue_6) == 0x0003A0, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_AddComponentByClass_ReturnValue_3) == 0x000400, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_AddComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_AddComponentByClass_ReturnValue_4) == 0x000408, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_AddComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_K2_AddLocalTransform_SweepHitResult) == 0x000410, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_K2_AddLocalTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_K2_AddLocalTransform_SweepHitResult_1) == 0x000508, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_K2_AddLocalTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_SetStaticMesh_ReturnValue_3) == 0x000600, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_SetStaticMesh_ReturnValue_4) == 0x000601, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_SetStaticMesh_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Procedural_Railings, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000602, "Member 'BPFL_Lighting_C_Procedural_Railings::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Rect Light Settings
// 0x01C0 (0x01C0 - 0x0000)
struct BPFL_Lighting_C_Rect_Light_Settings final
{
public:
	class URectLightComponent*                    Rect_Light;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Intensity;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F81[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Intensity;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Colour;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F82[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Colour;                                            // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x0034(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Attenuation_Radius;                       // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F83[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Attenuation_Radius;                                // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Attenuation_Radius;                         // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Casting_Start_Distance;                     // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Width;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Height;                                     // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Barn_Door_Angle;                                   // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Barn_Door_Length;                                  // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Source_Texture;                                    // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Temperature;                                   // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x0089(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F84[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temperature;                                       // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Shadows;                                      // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F85[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Indirect_Lighting_Intensity;                       // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Volumetric_Scattering_Intensity;                   // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lighting_Channel_0;                                // 0x00B8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lighting_Channel_1;                                // 0x00B9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lighting_Channel_2;                                // 0x00BA(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Volumetric_Shadows;                           // 0x00BB(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F86[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Max_Draw_Distance;                                 // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Distance_Fade_Range;                           // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Light_Function_Material;                           // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Light_Function_Scale;                              // 0x00D8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Function_Fade_Distance;                      // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Disabled_Brightness;                               // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureLightProfile*                   IES_Texture;                                       // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_IES_Intensity;                                 // 0x0108(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F87[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IES_Intensity_Scale;                               // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0118(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity_Output;                            // 0x0120(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Final_Colour_Output;                               // 0x0128(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out_Color;                                         // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Final_Colour;                                      // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity;                                   // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F88[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast_1; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_ShadowCastingStartDistance_ImplicitCast; // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSourceWidth_NewValue_ImplicitCast;     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSourceHeight_NewValue_ImplicitCast;    // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBarnDoorAngle_NewValue_ImplicitCast;   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBarnDoorLength_NewValue_ImplicitCast;  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast; // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_1; // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast_1; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_2; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_3; // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxDrawDistance_ImplicitCast;   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxDistanceFadeRange_ImplicitCast; // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_ImplicitCast; // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIESBrightnessScale_NewValue_ImplicitCast; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Rect_Light_Settings) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Rect_Light_Settings");
static_assert(sizeof(BPFL_Lighting_C_Rect_Light_Settings) == 0x0001C0, "Wrong size on BPFL_Lighting_C_Rect_Light_Settings");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Rect_Light) == 0x000000, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Rect_Light' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Override_Preset_Intensity) == 0x000008, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Override_Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Intensity) == 0x000010, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Preset_Intensity) == 0x000018, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Override_Preset_Colour) == 0x000020, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Override_Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Colour) == 0x000024, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Preset_Colour) == 0x000034, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Override_Attenuation_Radius) == 0x000044, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Override_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Attenuation_Radius) == 0x000048, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Preset_Attenuation_Radius) == 0x000050, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Preset_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Shadow_Casting_Start_Distance) == 0x000058, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Shadow_Casting_Start_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Source_Width) == 0x000060, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Source_Width' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Source_Height) == 0x000068, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Source_Height' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Barn_Door_Angle) == 0x000070, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Barn_Door_Angle' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Barn_Door_Length) == 0x000078, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Barn_Door_Length' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Source_Texture) == 0x000080, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Source_Texture' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Use_Temperature) == 0x000088, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Use_Temperature' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Use_Preset_Kelvin_) == 0x000089, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Preset_Kelvin) == 0x000090, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Temperature) == 0x000098, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Temperature' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Cast_Shadows) == 0x0000A0, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Cast_Shadows' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Indirect_Lighting_Intensity) == 0x0000A8, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Indirect_Lighting_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Volumetric_Scattering_Intensity) == 0x0000B0, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Volumetric_Scattering_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Lighting_Channel_0) == 0x0000B8, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Lighting_Channel_0' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Lighting_Channel_1) == 0x0000B9, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Lighting_Channel_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Lighting_Channel_2) == 0x0000BA, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Lighting_Channel_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Cast_Volumetric_Shadows) == 0x0000BB, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Cast_Volumetric_Shadows' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Max_Draw_Distance) == 0x0000C0, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Max_Draw_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Max_Distance_Fade_Range) == 0x0000C8, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Max_Distance_Fade_Range' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Light_Function_Material) == 0x0000D0, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Light_Function_Material' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Light_Function_Scale) == 0x0000D8, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Light_Function_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Light_Function_Fade_Distance) == 0x0000F0, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Light_Function_Fade_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Disabled_Brightness) == 0x0000F8, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Disabled_Brightness' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, IES_Texture) == 0x000100, "Member 'BPFL_Lighting_C_Rect_Light_Settings::IES_Texture' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Use_IES_Intensity) == 0x000108, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Use_IES_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, IES_Intensity_Scale) == 0x000110, "Member 'BPFL_Lighting_C_Rect_Light_Settings::IES_Intensity_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, __WorldContext) == 0x000118, "Member 'BPFL_Lighting_C_Rect_Light_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Final_Intensity_Output) == 0x000120, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Final_Colour_Output) == 0x000128, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Out_Color) == 0x000138, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Out_Color' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Final_Colour) == 0x000148, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Final_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, Final_Intensity) == 0x000158, "Member 'BPFL_Lighting_C_Rect_Light_Settings::Final_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000164, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000168, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast) == 0x00016C, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast_1) == 0x000170, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, K2Node_VariableSet_ShadowCastingStartDistance_ImplicitCast) == 0x000174, "Member 'BPFL_Lighting_C_Rect_Light_Settings::K2Node_VariableSet_ShadowCastingStartDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetSourceWidth_NewValue_ImplicitCast) == 0x000178, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetSourceWidth_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetSourceHeight_NewValue_ImplicitCast) == 0x00017C, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetSourceHeight_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetBarnDoorAngle_NewValue_ImplicitCast) == 0x000180, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetBarnDoorAngle_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetBarnDoorLength_NewValue_ImplicitCast) == 0x000184, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetBarnDoorLength_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast) == 0x000188, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_1) == 0x00018C, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetTemperature_NewTemperature_ImplicitCast) == 0x000190, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetTemperature_NewTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetTemperature_NewTemperature_ImplicitCast_1) == 0x000194, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetTemperature_NewTemperature_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_2) == 0x000198, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_3) == 0x00019C, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast) == 0x0001A0, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x0001A4, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, K2Node_VariableSet_MaxDrawDistance_ImplicitCast) == 0x0001A8, "Member 'BPFL_Lighting_C_Rect_Light_Settings::K2Node_VariableSet_MaxDrawDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, K2Node_VariableSet_MaxDistanceFadeRange_ImplicitCast) == 0x0001AC, "Member 'BPFL_Lighting_C_Rect_Light_Settings::K2Node_VariableSet_MaxDistanceFadeRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_ImplicitCast) == 0x0001B0, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast) == 0x0001B4, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Rect_Light_Settings, CallFunc_SetIESBrightnessScale_NewValue_ImplicitCast) == 0x0001B8, "Member 'BPFL_Lighting_C_Rect_Light_Settings::CallFunc_SetIESBrightnessScale_NewValue_ImplicitCast' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.RestVariables
// 0x05E0 (0x05E0 - 0x0000)
struct BPFL_Lighting_C_RestVariables final
{
public:
	TArray<class USplineComponent*>               Splines;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FS_Prop_Mesh_01                        Settings;                                          // 0x0010(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                InLockedProp;                                      // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InLockedAnchor;                                    // 0x0148(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InPreProp;                                         // 0x0160(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InPreAnchor;                                       // 0x0178(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        InPrevSplinePoint0;                                // 0x0190(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FVector>                        InPrevSplinePoint1;                                // 0x01A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FS_Light_Fitting_Mesh_Settings         LightFittingSettings;                              // 0x01B0(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLockedProp;                                     // 0x02D8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLockedAnchor;                                   // 0x02F0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        OutPrevSplinePoint0;                               // 0x0308(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        OutPrevSplinePoint1;                               // 0x0318(0x0010)(Parm, OutParm)
	struct FVector                                LockedAnchor;                                      // 0x0328(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LockedProp;                                        // 0x0340(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        PrevSplinePoint1;                                  // 0x0358(0x0010)(Edit, BlueprintVisible)
	struct FVector                                PreProp;                                           // 0x0368(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreAnchor;                                         // 0x0380(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        PrevSplinePoint0;                                  // 0x0398(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F89[0xC];                                     // 0x03B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x03C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8A[0x4];                                     // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8B[0xF];                                     // 0x0471(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0480(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8C[0xC];                                     // 0x04E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_SelectTransform_ReturnValue_1;            // 0x04F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_Array_Get_Item;                           // 0x0550(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x05B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue_1;    // 0x05D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x05D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_RestVariables) == 0x000010, "Wrong alignment on BPFL_Lighting_C_RestVariables");
static_assert(sizeof(BPFL_Lighting_C_RestVariables) == 0x0005E0, "Wrong size on BPFL_Lighting_C_RestVariables");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, Splines) == 0x000000, "Member 'BPFL_Lighting_C_RestVariables::Splines' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, Settings) == 0x000010, "Member 'BPFL_Lighting_C_RestVariables::Settings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, InLockedProp) == 0x000130, "Member 'BPFL_Lighting_C_RestVariables::InLockedProp' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, InLockedAnchor) == 0x000148, "Member 'BPFL_Lighting_C_RestVariables::InLockedAnchor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, InPreProp) == 0x000160, "Member 'BPFL_Lighting_C_RestVariables::InPreProp' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, InPreAnchor) == 0x000178, "Member 'BPFL_Lighting_C_RestVariables::InPreAnchor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, InPrevSplinePoint0) == 0x000190, "Member 'BPFL_Lighting_C_RestVariables::InPrevSplinePoint0' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, InPrevSplinePoint1) == 0x0001A0, "Member 'BPFL_Lighting_C_RestVariables::InPrevSplinePoint1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, LightFittingSettings) == 0x0001B0, "Member 'BPFL_Lighting_C_RestVariables::LightFittingSettings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, __WorldContext) == 0x0002D0, "Member 'BPFL_Lighting_C_RestVariables::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, OutLockedProp) == 0x0002D8, "Member 'BPFL_Lighting_C_RestVariables::OutLockedProp' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, OutLockedAnchor) == 0x0002F0, "Member 'BPFL_Lighting_C_RestVariables::OutLockedAnchor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, OutPrevSplinePoint0) == 0x000308, "Member 'BPFL_Lighting_C_RestVariables::OutPrevSplinePoint0' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, OutPrevSplinePoint1) == 0x000318, "Member 'BPFL_Lighting_C_RestVariables::OutPrevSplinePoint1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, LockedAnchor) == 0x000328, "Member 'BPFL_Lighting_C_RestVariables::LockedAnchor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, LockedProp) == 0x000340, "Member 'BPFL_Lighting_C_RestVariables::LockedProp' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, PrevSplinePoint1) == 0x000358, "Member 'BPFL_Lighting_C_RestVariables::PrevSplinePoint1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, PreProp) == 0x000368, "Member 'BPFL_Lighting_C_RestVariables::PreProp' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, PreAnchor) == 0x000380, "Member 'BPFL_Lighting_C_RestVariables::PreAnchor' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, PrevSplinePoint0) == 0x000398, "Member 'BPFL_Lighting_C_RestVariables::PrevSplinePoint0' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, Temp_int_Loop_Counter_Variable) == 0x0003A8, "Member 'BPFL_Lighting_C_RestVariables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_Add_IntInt_ReturnValue) == 0x0003AC, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_Array_Length_ReturnValue) == 0x0003B0, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_SelectTransform_ReturnValue) == 0x0003C0, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_Array_Length_ReturnValue_1) == 0x000420, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_BreakTransform_Location) == 0x000428, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_BreakTransform_Rotation) == 0x000440, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_BreakTransform_Scale) == 0x000458, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_Less_IntInt_ReturnValue) == 0x000470, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_MakeTransform_ReturnValue) == 0x000480, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, Temp_int_Array_Index_Variable) == 0x0004E0, "Member 'BPFL_Lighting_C_RestVariables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_SelectTransform_ReturnValue_1) == 0x0004F0, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_SelectTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_Array_Get_Item) == 0x000550, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_BreakTransform_Location_1) == 0x000558, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_BreakTransform_Rotation_1) == 0x000570, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_BreakTransform_Scale_1) == 0x000588, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0005A0, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x0005B8, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0005D0, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0005D1, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_EqualEqual_VectorVector_ReturnValue_1) == 0x0005D2, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_EqualEqual_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x0005D3, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_RestVariables, CallFunc_BooleanOR_ReturnValue) == 0x0005D4, "Member 'BPFL_Lighting_C_RestVariables::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.SetDefaultSuspensionTransform
// 0x0880 (0x0880 - 0x0000)
struct BPFL_Lighting_C_SetDefaultSuspensionTransform final
{
public:
	struct FS_Light_Fitting_Mesh_Settings         LightFittingSettings;                              // 0x0000(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_Prop_Mesh_01                        PropMeshSettings;                                  // 0x0120(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0248(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_Light_Fitting_Mesh_Settings         LightFittingSettingsOut;                           // 0x0250(0x0120)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FS_Prop_Mesh_01                        PropMeshSettingsOut;                               // 0x0370(0x0120)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                SplineLocation;                                    // 0x0490(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8D[0x3];                                     // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8E[0x7];                                     // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x04C8(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8F[0x4];                                     // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_GetAbs_ReturnValue;                // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0568(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F90[0x4];                                     // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Light_Fitting_Mesh_Settings         K2Node_SetFieldsInStruct_StructOut;                // 0x05B0(0x0120)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Prop_Mesh_01                        K2Node_SetFieldsInStruct_StructOut_1;              // 0x0710(0x0120)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F91[0x7];                                     // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0850(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__0__ImplicitCast;                 // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__1__ImplicitCast;                 // 0x086C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_SetDefaultSuspensionTransform) == 0x000010, "Wrong alignment on BPFL_Lighting_C_SetDefaultSuspensionTransform");
static_assert(sizeof(BPFL_Lighting_C_SetDefaultSuspensionTransform) == 0x000880, "Wrong size on BPFL_Lighting_C_SetDefaultSuspensionTransform");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, LightFittingSettings) == 0x000000, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::LightFittingSettings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, PropMeshSettings) == 0x000120, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::PropMeshSettings' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, Spline) == 0x000240, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::Spline' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, __WorldContext) == 0x000248, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, LightFittingSettingsOut) == 0x000250, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::LightFittingSettingsOut' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, PropMeshSettingsOut) == 0x000370, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::PropMeshSettingsOut' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, SplineLocation) == 0x000490, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::SplineLocation' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, Temp_bool_Variable) == 0x0004A8, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_SelectInt_ReturnValue) == 0x0004AC, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, K2Node_Select_Default) == 0x0004B0, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0004B8, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_IsValid_ReturnValue) == 0x0004C0, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_GetBounds_ReturnValue) == 0x0004C8, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_BreakBoxSphereBounds_Origin) == 0x000500, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x000518, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x000530, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Vector_GetAbs_ReturnValue) == 0x000538, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Vector_GetAbs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_BreakVector_X) == 0x000550, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_BreakVector_Y) == 0x000558, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_BreakVector_Z) == 0x000560, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, K2Node_MakeArray_Array) == 0x000568, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000578, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_MaxOfFloatArray_MaxValue) == 0x00057C, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Multiply_IntInt_ReturnValue) == 0x000580, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000588, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000590, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000598, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0005A0, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0005A8, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, K2Node_SetFieldsInStruct_StructOut) == 0x0005B0, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0006D0, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0006D8, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_MakeVector_ReturnValue) == 0x0006E0, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_MakeVector_ReturnValue_1) == 0x0006F8, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, K2Node_SetFieldsInStruct_StructOut_1) == 0x000710, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000830, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_SelectVector_ReturnValue) == 0x000838, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000850, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, K2Node_MakeArray__0__ImplicitCast) == 0x000868, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::K2Node_MakeArray__0__ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, K2Node_MakeArray__1__ImplicitCast) == 0x00086C, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::K2Node_MakeArray__1__ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_SetDefaultSuspensionTransform, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000870, "Member 'BPFL_Lighting_C_SetDefaultSuspensionTransform::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BPFL_Lighting.BPFL_Lighting_C.Spot Light Settings
// 0x0208 (0x0208 - 0x0000)
struct BPFL_Lighting_C_Spot_Light_Settings final
{
public:
	class USpotLightComponent*                    Spot_Light;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Intensity;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F92[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Intensity;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Intensity;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Preset_Colour;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F93[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Colour;                                            // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Preset_Colour;                                     // 0x0034(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Attenuation_Radius;                       // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F94[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Attenuation_Radius;                                // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Preset_Attenuation_Radius;                         // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Inner_Cone_Angle;                                  // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Outer_Cone_Angle;                                  // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Casting_Start_Distance;                     // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Radius;                                     // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Soft_Source_Radius;                                // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Length;                                     // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Temperature;                                   // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preset_Kelvin_;                                // 0x0089(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F95[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Preset_Kelvin;                                     // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temperature;                                       // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Shadows;                                      // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F96[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Indirect_Lighting_Intensity;                       // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Volumetric_Scattering_Intensity;                   // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Inverse_Squared_Falloff;                       // 0x00B8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F97[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Light_Falloff_Exponent;                            // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Inverse_Exposure_Blend;                            // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Specular_Scale;                                    // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Bias;                                       // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shadow_Slope_Bias;                                 // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lighting_Channel_0;                                // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lighting_Channel_1;                                // 0x00E9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lighting_Channel_2;                                // 0x00EA(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Volumetric_Shadows;                           // 0x00EB(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F98[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Max_Draw_Distance;                                 // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Distance_Fade_Range;                           // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Light_Function_Material;                           // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Light_Function_Scale;                              // 0x0108(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Function_Fade_Distance;                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Disabled_Brightness;                               // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureLightProfile*                   IES_Texture;                                       // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_IES_Intensity;                                 // 0x0138(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F99[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IES_Intensity_Scale;                               // 0x0140(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0148(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity_Output;                            // 0x0150(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Final_Colour_Output;                               // 0x0158(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out_Color;                                         // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Final_Colour;                                      // 0x0178(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Intensity;                                   // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9A[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast; // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast_1; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetInnerConeAngle_NewInnerConeAngle_ImplicitCast; // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOuterConeAngle_NewOuterConeAngle_ImplicitCast; // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_ShadowCastingStartDistance_ImplicitCast; // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSourceRadius_bNewValue_ImplicitCast;   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoftSourceRadius_bNewValue_ImplicitCast; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSourceLength_NewValue_ImplicitCast;    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast; // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_1; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast; // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast_1; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_2; // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_3; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast; // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFalloffExponent_NewLightFalloffExponent_ImplicitCast; // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetInverseExposureBlend_NewInverseExposureBlend_ImplicitCast; // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpecularScale_NewValue_ImplicitCast;   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowBias_NewValue_ImplicitCast;      // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowSlopeBias_NewValue_ImplicitCast; // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxDrawDistance_ImplicitCast;   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxDistanceFadeRange_ImplicitCast; // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_ImplicitCast; // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast; // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIESBrightnessScale_NewValue_ImplicitCast; // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_Lighting_C_Spot_Light_Settings) == 0x000008, "Wrong alignment on BPFL_Lighting_C_Spot_Light_Settings");
static_assert(sizeof(BPFL_Lighting_C_Spot_Light_Settings) == 0x000208, "Wrong size on BPFL_Lighting_C_Spot_Light_Settings");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Spot_Light) == 0x000000, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Spot_Light' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Override_Preset_Intensity) == 0x000008, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Override_Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Intensity) == 0x000010, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Preset_Intensity) == 0x000018, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Preset_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Override_Preset_Colour) == 0x000020, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Override_Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Colour) == 0x000024, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Preset_Colour) == 0x000034, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Preset_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Override_Attenuation_Radius) == 0x000044, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Override_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Attenuation_Radius) == 0x000048, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Preset_Attenuation_Radius) == 0x000050, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Preset_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Inner_Cone_Angle) == 0x000058, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Inner_Cone_Angle' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Outer_Cone_Angle) == 0x000060, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Outer_Cone_Angle' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Shadow_Casting_Start_Distance) == 0x000068, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Shadow_Casting_Start_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Source_Radius) == 0x000070, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Source_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Soft_Source_Radius) == 0x000078, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Soft_Source_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Source_Length) == 0x000080, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Source_Length' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Use_Temperature) == 0x000088, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Use_Temperature' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Use_Preset_Kelvin_) == 0x000089, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Use_Preset_Kelvin_' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Preset_Kelvin) == 0x000090, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Preset_Kelvin' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Temperature) == 0x000098, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Temperature' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Cast_Shadows) == 0x0000A0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Cast_Shadows' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Indirect_Lighting_Intensity) == 0x0000A8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Indirect_Lighting_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Volumetric_Scattering_Intensity) == 0x0000B0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Volumetric_Scattering_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Use_Inverse_Squared_Falloff) == 0x0000B8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Use_Inverse_Squared_Falloff' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Light_Falloff_Exponent) == 0x0000C0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Light_Falloff_Exponent' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Inverse_Exposure_Blend) == 0x0000C8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Inverse_Exposure_Blend' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Specular_Scale) == 0x0000D0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Specular_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Shadow_Bias) == 0x0000D8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Shadow_Bias' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Shadow_Slope_Bias) == 0x0000E0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Shadow_Slope_Bias' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Lighting_Channel_0) == 0x0000E8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Lighting_Channel_0' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Lighting_Channel_1) == 0x0000E9, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Lighting_Channel_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Lighting_Channel_2) == 0x0000EA, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Lighting_Channel_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Cast_Volumetric_Shadows) == 0x0000EB, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Cast_Volumetric_Shadows' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Max_Draw_Distance) == 0x0000F0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Max_Draw_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Max_Distance_Fade_Range) == 0x0000F8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Max_Distance_Fade_Range' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Light_Function_Material) == 0x000100, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Light_Function_Material' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Light_Function_Scale) == 0x000108, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Light_Function_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Light_Function_Fade_Distance) == 0x000120, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Light_Function_Fade_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Disabled_Brightness) == 0x000128, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Disabled_Brightness' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, IES_Texture) == 0x000130, "Member 'BPFL_Lighting_C_Spot_Light_Settings::IES_Texture' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Use_IES_Intensity) == 0x000138, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Use_IES_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, IES_Intensity_Scale) == 0x000140, "Member 'BPFL_Lighting_C_Spot_Light_Settings::IES_Intensity_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, __WorldContext) == 0x000148, "Member 'BPFL_Lighting_C_Spot_Light_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Final_Intensity_Output) == 0x000150, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Final_Intensity_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Final_Colour_Output) == 0x000158, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Final_Colour_Output' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Out_Color) == 0x000168, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Out_Color' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Final_Colour) == 0x000178, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Final_Colour' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, Final_Intensity) == 0x000188, "Member 'BPFL_Lighting_C_Spot_Light_Settings::Final_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000194, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000198, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast) == 0x00019C, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast_1) == 0x0001A0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetInnerConeAngle_NewInnerConeAngle_ImplicitCast) == 0x0001A4, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetInnerConeAngle_NewInnerConeAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetOuterConeAngle_NewOuterConeAngle_ImplicitCast) == 0x0001A8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetOuterConeAngle_NewOuterConeAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, K2Node_VariableSet_ShadowCastingStartDistance_ImplicitCast) == 0x0001AC, "Member 'BPFL_Lighting_C_Spot_Light_Settings::K2Node_VariableSet_ShadowCastingStartDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetSourceRadius_bNewValue_ImplicitCast) == 0x0001B0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetSourceRadius_bNewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetSoftSourceRadius_bNewValue_ImplicitCast) == 0x0001B4, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetSoftSourceRadius_bNewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetSourceLength_NewValue_ImplicitCast) == 0x0001B8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetSourceLength_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast) == 0x0001BC, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_1) == 0x0001C0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetTemperature_NewTemperature_ImplicitCast) == 0x0001C4, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetTemperature_NewTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetTemperature_NewTemperature_ImplicitCast_1) == 0x0001C8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetTemperature_NewTemperature_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_2) == 0x0001CC, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_3) == 0x0001D0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_LinearColor_SetTemperature_InTemperature_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast) == 0x0001D4, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x0001D8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetLightFalloffExponent_NewLightFalloffExponent_ImplicitCast) == 0x0001DC, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetLightFalloffExponent_NewLightFalloffExponent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetInverseExposureBlend_NewInverseExposureBlend_ImplicitCast) == 0x0001E0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetInverseExposureBlend_NewInverseExposureBlend_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetSpecularScale_NewValue_ImplicitCast) == 0x0001E4, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetSpecularScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetShadowBias_NewValue_ImplicitCast) == 0x0001E8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetShadowBias_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetShadowSlopeBias_NewValue_ImplicitCast) == 0x0001EC, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetShadowSlopeBias_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, K2Node_VariableSet_MaxDrawDistance_ImplicitCast) == 0x0001F0, "Member 'BPFL_Lighting_C_Spot_Light_Settings::K2Node_VariableSet_MaxDrawDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, K2Node_VariableSet_MaxDistanceFadeRange_ImplicitCast) == 0x0001F4, "Member 'BPFL_Lighting_C_Spot_Light_Settings::K2Node_VariableSet_MaxDistanceFadeRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_ImplicitCast) == 0x0001F8, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast) == 0x0001FC, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_Lighting_C_Spot_Light_Settings, CallFunc_SetIESBrightnessScale_NewValue_ImplicitCast) == 0x000200, "Member 'BPFL_Lighting_C_Spot_Light_Settings::CallFunc_SetIESBrightnessScale_NewValue_ImplicitCast' has a wrong offset!");

}

