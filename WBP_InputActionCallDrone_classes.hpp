#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputActionCallDrone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InputActionCallDrone.WBP_InputActionCallDrone_C
// 0x0108 (0x0448 - 0x0340)
class UWBP_InputActionCallDrone_C final : public UGzHUDComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OnLoadoutUnavailable;                              // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnLoadoutAvailable;                                // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGzTextBlock*                           Currency_GzText;                                   // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzActionWidget*                        GzActionWidget;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hint_BackGround_Image;                             // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hint_Icon_Image;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Hint_VerticalBox;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInputAction*                           CurrentInput;                                      // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          PlayerLoadouts;                                    // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FGuid>                          SharedLoadouts;                                    // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         LoadoutCost;                                       // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadoutsAmount;                                    // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentMoney;                                      // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A2[0x4];                                     // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CooldownTimer;                                     // 0x03B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CloseTimer;                                        // 0x03C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeVisible;                                       // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasAvailable;                                     // 0x03CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EventActive;                                       // 0x03CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A3[0x2];                                     // 0x03CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           EventTimeTimer;                                    // 0x03D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              NormalIcon;                                        // 0x03D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              EventIcon;                                         // 0x0400(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FLinearColor                           BGColor_Available;                                 // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BGColor_Unavailable;                               // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_InputActionCallDrone_GzActionWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad);
	void Construct();
	void EventCheck();
	void ExecuteUbergraph_WBP_InputActionCallDrone(int32 EntryPoint);
	void GetAvailableLoadoutsCount(int32 Currency);
	void GetCurrency(int32* Quantity);
	void HideCostEvent();
	void IncrementAvailableLoadouts(const struct FGuid& Guid);
	void OnCallDroneUnavailable();
	void OnCloseAnimationFinished();
	void OnEventNotificationStageDelegat(class FName NotificationID, EGzNotificationStageType StageType, const struct FGzEventNotificationData& NotificationData);
	void OnInventoryUpdated(EGzInvChangeEvent State, const struct FGzInvItem& Item);
	void OnViewTargetChanged(class APawn* ViewTarget);
	void PlayTooltipAnimationClose();
	void PlayTooltipAnimationOpen();
	void ReceiveBindEvents(class APawn* NewViewTarget);
	void ReceiveUnbindEvents(class APawn* OldViewTarget);
	void SetVehicleUI();
	void ShowCostEvent();
	void UpdateHolddHint();
	void UpdateLoadoutAvailabilityState();
	void UpdateTimer();

	bool CanCallDrone() const;
	void GetCallDroneCooldown(double* Cooldown) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InputActionCallDrone_C">();
	}
	static class UWBP_InputActionCallDrone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InputActionCallDrone_C>();
	}
};
static_assert(alignof(UWBP_InputActionCallDrone_C) == 0x000008, "Wrong alignment on UWBP_InputActionCallDrone_C");
static_assert(sizeof(UWBP_InputActionCallDrone_C) == 0x000448, "Wrong size on UWBP_InputActionCallDrone_C");
static_assert(offsetof(UWBP_InputActionCallDrone_C, UberGraphFrame) == 0x000340, "Member 'UWBP_InputActionCallDrone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, OnLoadoutUnavailable) == 0x000348, "Member 'UWBP_InputActionCallDrone_C::OnLoadoutUnavailable' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, OnLoadoutAvailable) == 0x000350, "Member 'UWBP_InputActionCallDrone_C::OnLoadoutAvailable' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, Currency_GzText) == 0x000358, "Member 'UWBP_InputActionCallDrone_C::Currency_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, GzActionWidget) == 0x000360, "Member 'UWBP_InputActionCallDrone_C::GzActionWidget' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, Hint_BackGround_Image) == 0x000368, "Member 'UWBP_InputActionCallDrone_C::Hint_BackGround_Image' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, Hint_Icon_Image) == 0x000370, "Member 'UWBP_InputActionCallDrone_C::Hint_Icon_Image' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, Hint_VerticalBox) == 0x000378, "Member 'UWBP_InputActionCallDrone_C::Hint_VerticalBox' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, CurrentInput) == 0x000380, "Member 'UWBP_InputActionCallDrone_C::CurrentInput' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, PlayerLoadouts) == 0x000388, "Member 'UWBP_InputActionCallDrone_C::PlayerLoadouts' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, SharedLoadouts) == 0x000398, "Member 'UWBP_InputActionCallDrone_C::SharedLoadouts' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, LoadoutCost) == 0x0003A8, "Member 'UWBP_InputActionCallDrone_C::LoadoutCost' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, LoadoutsAmount) == 0x0003AC, "Member 'UWBP_InputActionCallDrone_C::LoadoutsAmount' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, CurrentMoney) == 0x0003B0, "Member 'UWBP_InputActionCallDrone_C::CurrentMoney' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, CooldownTimer) == 0x0003B8, "Member 'UWBP_InputActionCallDrone_C::CooldownTimer' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, CloseTimer) == 0x0003C0, "Member 'UWBP_InputActionCallDrone_C::CloseTimer' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, TimeVisible) == 0x0003C8, "Member 'UWBP_InputActionCallDrone_C::TimeVisible' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, bWasAvailable) == 0x0003CC, "Member 'UWBP_InputActionCallDrone_C::bWasAvailable' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, EventActive) == 0x0003CD, "Member 'UWBP_InputActionCallDrone_C::EventActive' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, EventTimeTimer) == 0x0003D0, "Member 'UWBP_InputActionCallDrone_C::EventTimeTimer' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, NormalIcon) == 0x0003D8, "Member 'UWBP_InputActionCallDrone_C::NormalIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, EventIcon) == 0x000400, "Member 'UWBP_InputActionCallDrone_C::EventIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, BGColor_Available) == 0x000428, "Member 'UWBP_InputActionCallDrone_C::BGColor_Available' has a wrong offset!");
static_assert(offsetof(UWBP_InputActionCallDrone_C, BGColor_Unavailable) == 0x000438, "Member 'UWBP_InputActionCallDrone_C::BGColor_Unavailable' has a wrong offset!");

}

