#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Defiler_HackTape

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_Defiler_TapeInitData_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Defiler_HackTape.BP_Defiler_HackTape_C
// 0x0100 (0x0400 - 0x0300)
class ABP_Defiler_HackTape_C final : public AGzDamageableActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SK_CLA_Defiler_PT;                                 // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       AreaDefiler;                                       // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PulsePS;                                           // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        TimeToNextPulse;                                   // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Defiler_TapeInitData                TapeInitData;                                      // 0x0330(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      Object_Types;                                      // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSubclassOf<class UGameplayEffect>            DirectHitEffect;                                   // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            PulseEffectClass;                                  // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_Defiler_TapeVisionArea_C*           VisionArea;                                        // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Gameplay_Effect_Class;                             // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  HitCharacter;                                      // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DirectHitDuratiom;                                 // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6545[0x4];                                     // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          HitBodySound;                                      // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          HitObjectSound;                                    // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          HitBodyActivationLoop;                             // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          HitObjectActivationLoop;                           // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          HitBodyActivationLoopStop;                         // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          HitObjectActivationLoopStop;                       // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DestroySound;                                      // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AKSoundSource_C*                    ObjectSoundSource;                                 // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AKSoundSource_C*                    BodySoundSource;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGzReconDrone*                          HitReconDrone;                                     // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Hit_Actor_Replicated;                              // 0x03E0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UAkAudioEvent*                          LaunchSound;                                       // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_Defiler_VisionComponent_C*          VisionComponent;                                   // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x03F8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ApplyDefilerAreaEffefct(class AActor* Actor);
	void ApplyGameplayEffectToTarget(class UClass* Effect, class AActor* Target);
	void BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_Defiler_HackTape_AreaDefiler_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BP_OnDeath(bool HasDeathHitPoint, const struct FVector& DeathHitPoint);
	void ExecuteUbergraph_BP_Defiler_HackTape(int32 EntryPoint);
	class FName GetSocketName();
	void Hit();
	void Hit_Tape_SVE();
	void HitEnemy();
	void HitEnemySVE();
	void HitFriend();
	void HitFriendSVE();
	void HitObject();
	void HitObjectSVE();
	void HitSVE();
	void InitSVEClient();
	void On_Destroy_SVE();
	void Pulse();
	void PulseGameplayEffect();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void SetFriendColorForField();
	void SetHostileColorForField();
	void SetHP();
	void SetupSphereCollision();
	void Spawn_Vision_Area();
	void SpawnBrockenLimbVFX(EGzLimbType LimbType);
	void SpawnTraceVFX();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Defiler_HackTape_C">();
	}
	static class ABP_Defiler_HackTape_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Defiler_HackTape_C>();
	}
};
static_assert(alignof(ABP_Defiler_HackTape_C) == 0x000008, "Wrong alignment on ABP_Defiler_HackTape_C");
static_assert(sizeof(ABP_Defiler_HackTape_C) == 0x000400, "Wrong size on ABP_Defiler_HackTape_C");
static_assert(offsetof(ABP_Defiler_HackTape_C, UberGraphFrame) == 0x000300, "Member 'ABP_Defiler_HackTape_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, SK_CLA_Defiler_PT) == 0x000308, "Member 'ABP_Defiler_HackTape_C::SK_CLA_Defiler_PT' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, AreaDefiler) == 0x000310, "Member 'ABP_Defiler_HackTape_C::AreaDefiler' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, PulsePS) == 0x000318, "Member 'ABP_Defiler_HackTape_C::PulsePS' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, Box) == 0x000320, "Member 'ABP_Defiler_HackTape_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, TimeToNextPulse) == 0x000328, "Member 'ABP_Defiler_HackTape_C::TimeToNextPulse' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, TapeInitData) == 0x000330, "Member 'ABP_Defiler_HackTape_C::TapeInitData' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, Object_Types) == 0x000348, "Member 'ABP_Defiler_HackTape_C::Object_Types' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, DirectHitEffect) == 0x000358, "Member 'ABP_Defiler_HackTape_C::DirectHitEffect' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, PulseEffectClass) == 0x000360, "Member 'ABP_Defiler_HackTape_C::PulseEffectClass' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, VisionArea) == 0x000368, "Member 'ABP_Defiler_HackTape_C::VisionArea' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, HitActor) == 0x000370, "Member 'ABP_Defiler_HackTape_C::HitActor' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, Gameplay_Effect_Class) == 0x000378, "Member 'ABP_Defiler_HackTape_C::Gameplay_Effect_Class' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, HitCharacter) == 0x000380, "Member 'ABP_Defiler_HackTape_C::HitCharacter' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, DirectHitDuratiom) == 0x000388, "Member 'ABP_Defiler_HackTape_C::DirectHitDuratiom' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, HitBodySound) == 0x000390, "Member 'ABP_Defiler_HackTape_C::HitBodySound' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, HitObjectSound) == 0x000398, "Member 'ABP_Defiler_HackTape_C::HitObjectSound' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, HitBodyActivationLoop) == 0x0003A0, "Member 'ABP_Defiler_HackTape_C::HitBodyActivationLoop' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, HitObjectActivationLoop) == 0x0003A8, "Member 'ABP_Defiler_HackTape_C::HitObjectActivationLoop' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, HitBodyActivationLoopStop) == 0x0003B0, "Member 'ABP_Defiler_HackTape_C::HitBodyActivationLoopStop' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, HitObjectActivationLoopStop) == 0x0003B8, "Member 'ABP_Defiler_HackTape_C::HitObjectActivationLoopStop' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, DestroySound) == 0x0003C0, "Member 'ABP_Defiler_HackTape_C::DestroySound' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, ObjectSoundSource) == 0x0003C8, "Member 'ABP_Defiler_HackTape_C::ObjectSoundSource' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, BodySoundSource) == 0x0003D0, "Member 'ABP_Defiler_HackTape_C::BodySoundSource' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, HitReconDrone) == 0x0003D8, "Member 'ABP_Defiler_HackTape_C::HitReconDrone' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, Hit_Actor_Replicated) == 0x0003E0, "Member 'ABP_Defiler_HackTape_C::Hit_Actor_Replicated' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, LaunchSound) == 0x0003E8, "Member 'ABP_Defiler_HackTape_C::LaunchSound' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, VisionComponent) == 0x0003F0, "Member 'ABP_Defiler_HackTape_C::VisionComponent' has a wrong offset!");
static_assert(offsetof(ABP_Defiler_HackTape_C, SocketName) == 0x0003F8, "Member 'ABP_Defiler_HackTape_C::SocketName' has a wrong offset!");

}

