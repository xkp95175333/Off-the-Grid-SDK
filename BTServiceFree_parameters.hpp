#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTServiceFree

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTServiceFree.BTServiceFree_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTServiceFree_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTServiceFree_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTServiceFree_C_ReceiveTickAI");
static_assert(sizeof(BTServiceFree_C_ReceiveTickAI) == 0x000018, "Wrong size on BTServiceFree_C_ReceiveTickAI");
static_assert(offsetof(BTServiceFree_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTServiceFree_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTServiceFree_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTServiceFree_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTServiceFree.BTServiceFree_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTServiceFree_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTServiceFree_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTServiceFree_C_ReceiveActivationAI");
static_assert(sizeof(BTServiceFree_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTServiceFree_C_ReceiveActivationAI");
static_assert(offsetof(BTServiceFree_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTServiceFree_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTServiceFree_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BTServiceFree.BTServiceFree_C.ExecuteUbergraph_BTServiceFree
// 0x0090 (0x0090 - 0x0000)
struct BTServiceFree_C_ExecuteUbergraph_BTServiceFree final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DAA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzAICharacter*                         K2Node_DynamicCast_AsGz_AICharacter;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DAB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DAC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DAD[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DAE[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              K2Node_DynamicCast_AsGz_Ability_System_Component;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DAF[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPC_NPC_Enemy_C*                       K2Node_DynamicCast_AsBPC_NPC_Enemy;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DB0[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree) == 0x000008, "Wrong alignment on BTServiceFree_C_ExecuteUbergraph_BTServiceFree");
static_assert(sizeof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree) == 0x000090, "Wrong size on BTServiceFree_C_ExecuteUbergraph_BTServiceFree");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, EntryPoint) == 0x000000, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_DynamicCast_AsGz_AICharacter) == 0x000018, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_DynamicCast_AsGz_AICharacter' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_DynamicCast_AsGz_Character) == 0x000028, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, CallFunc_GetCombatComponent_ReturnValue) == 0x000038, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000048, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_DynamicCast_AsGz_Ability_System_Component) == 0x000058, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_DynamicCast_AsGz_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_DynamicCast_AsBPC_NPC_Enemy) == 0x000068, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_DynamicCast_AsBPC_NPC_Enemy' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_Event_OwnerController) == 0x000078, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_Event_ControlledPawn) == 0x000080, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTServiceFree_C_ExecuteUbergraph_BTServiceFree, K2Node_Event_DeltaSeconds) == 0x000088, "Member 'BTServiceFree_C_ExecuteUbergraph_BTServiceFree::K2Node_Event_DeltaSeconds' has a wrong offset!");

}

