#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TTR_TestDeathsTracker

#include "Basic.hpp"

#include "TTR_TestDeathsTracker_classes.hpp"
#include "TTR_TestDeathsTracker_parameters.hpp"


namespace SDK
{

// Function TTR_TestDeathsTracker.TTR_TestDeathsTracker_C.ExecuteUbergraph_TTR_TestDeathsTracker
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTTR_TestDeathsTracker_C::ExecuteUbergraph_TTR_TestDeathsTracker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_TestDeathsTracker_C", "ExecuteUbergraph_TTR_TestDeathsTracker");

	Params::TTR_TestDeathsTracker_C_ExecuteUbergraph_TTR_TestDeathsTracker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TTR_TestDeathsTracker.TTR_TestDeathsTracker_C.OnPlayerDied
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzGameMessage*                   Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UTTR_TestDeathsTracker_C::OnPlayerDied(const class UGzGameMessage* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_TestDeathsTracker_C", "OnPlayerDied");

	Params::TTR_TestDeathsTracker_C_OnPlayerDied Parms{};

	Parms.Message = Message;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TTR_TestDeathsTracker.TTR_TestDeathsTracker_C.OnTrackingStarted
// (Event, Protected, BlueprintEvent)

void UTTR_TestDeathsTracker_C::OnTrackingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_TestDeathsTracker_C", "OnTrackingStarted");

	UObject::ProcessEvent(Func, nullptr);
}

}

