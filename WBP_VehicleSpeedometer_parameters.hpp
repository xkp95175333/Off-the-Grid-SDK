#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_VehicleSpeedometer

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_VehicleSpeedometer.WBP_VehicleSpeedometer_C.ExecuteUbergraph_WBP_VehicleSpeedometer
// 0x0078 (0x0078 - 0x0000)
struct WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D92[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0028(0x0010)()
	class APawn*                                  K2Node_Event_NewViewTarget;                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_OldViewTarget;                        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D93[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character_1;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D94[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGzCharacter* Character, EGzVehicleSeatType NewSeat, EGzVehicleSeatType OldSeat)> K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer) == 0x000008, "Wrong alignment on WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer");
static_assert(sizeof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer) == 0x000078, "Wrong size on WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, EntryPoint) == 0x000000, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, Temp_bool_Variable) == 0x000004, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, Temp_text_Variable) == 0x000008, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, Temp_text_Variable_1) == 0x000018, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, K2Node_Select_Default) == 0x000028, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, K2Node_Event_NewViewTarget) == 0x000038, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::K2Node_Event_NewViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, K2Node_Event_OldViewTarget) == 0x000040, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::K2Node_Event_OldViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, K2Node_DynamicCast_AsGz_Character) == 0x000048, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, K2Node_DynamicCast_AsGz_Character_1) == 0x000058, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::K2Node_DynamicCast_AsGz_Character_1' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'WBP_VehicleSpeedometer_C_ExecuteUbergraph_WBP_VehicleSpeedometer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_VehicleSpeedometer.WBP_VehicleSpeedometer_C.OnVehicleSeatChanged
// 0x0058 (0x0058 - 0x0000)
struct WBP_VehicleSpeedometer_C_OnVehicleSeatChanged final
{
public:
	class AGzCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            NewSeat;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzVehicleSeatType                            OldSeat;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D95[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  NewLocalVar_0;                                     // 0x0010(0x0020)(Edit, BlueprintVisible)
	struct FGameplayAbilitySpecHandle             NewLocalVar;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D96[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged) == 0x000008, "Wrong alignment on WBP_VehicleSpeedometer_C_OnVehicleSeatChanged");
static_assert(sizeof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged) == 0x000058, "Wrong size on WBP_VehicleSpeedometer_C_OnVehicleSeatChanged");
static_assert(offsetof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged, Character) == 0x000000, "Member 'WBP_VehicleSpeedometer_C_OnVehicleSeatChanged::Character' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged, NewSeat) == 0x000008, "Member 'WBP_VehicleSpeedometer_C_OnVehicleSeatChanged::NewSeat' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged, OldSeat) == 0x000009, "Member 'WBP_VehicleSpeedometer_C_OnVehicleSeatChanged::OldSeat' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged, NewLocalVar_0) == 0x000010, "Member 'WBP_VehicleSpeedometer_C_OnVehicleSeatChanged::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged, NewLocalVar) == 0x000030, "Member 'WBP_VehicleSpeedometer_C_OnVehicleSeatChanged::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'WBP_VehicleSpeedometer_C_OnVehicleSeatChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000038, "Member 'WBP_VehicleSpeedometer_C_OnVehicleSeatChanged::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'WBP_VehicleSpeedometer_C_OnVehicleSeatChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_OnVehicleSeatChanged, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'WBP_VehicleSpeedometer_C_OnVehicleSeatChanged::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_VehicleSpeedometer.WBP_VehicleSpeedometer_C.ReceiveBindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_VehicleSpeedometer_C_ReceiveBindEvents final
{
public:
	class APawn*                                  NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VehicleSpeedometer_C_ReceiveBindEvents) == 0x000008, "Wrong alignment on WBP_VehicleSpeedometer_C_ReceiveBindEvents");
static_assert(sizeof(WBP_VehicleSpeedometer_C_ReceiveBindEvents) == 0x000008, "Wrong size on WBP_VehicleSpeedometer_C_ReceiveBindEvents");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ReceiveBindEvents, NewViewTarget) == 0x000000, "Member 'WBP_VehicleSpeedometer_C_ReceiveBindEvents::NewViewTarget' has a wrong offset!");

// Function WBP_VehicleSpeedometer.WBP_VehicleSpeedometer_C.ReceiveUnbindEvents
// 0x0008 (0x0008 - 0x0000)
struct WBP_VehicleSpeedometer_C_ReceiveUnbindEvents final
{
public:
	class APawn*                                  OldViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VehicleSpeedometer_C_ReceiveUnbindEvents) == 0x000008, "Wrong alignment on WBP_VehicleSpeedometer_C_ReceiveUnbindEvents");
static_assert(sizeof(WBP_VehicleSpeedometer_C_ReceiveUnbindEvents) == 0x000008, "Wrong size on WBP_VehicleSpeedometer_C_ReceiveUnbindEvents");
static_assert(offsetof(WBP_VehicleSpeedometer_C_ReceiveUnbindEvents, OldViewTarget) == 0x000000, "Member 'WBP_VehicleSpeedometer_C_ReceiveUnbindEvents::OldViewTarget' has a wrong offset!");

// Function WBP_VehicleSpeedometer.WBP_VehicleSpeedometer_C.SetVehicleName
// 0x0110 (0x0110 - 0x0000)
struct WBP_VehicleSpeedometer_C_SetVehicleName final
{
public:
	class AGzVehicle*                             Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UGzVehicleConfig*                 CallFunc_GetVehicleConfig_ReturnValue;             // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
};
static_assert(alignof(WBP_VehicleSpeedometer_C_SetVehicleName) == 0x000008, "Wrong alignment on WBP_VehicleSpeedometer_C_SetVehicleName");
static_assert(sizeof(WBP_VehicleSpeedometer_C_SetVehicleName) == 0x000110, "Wrong size on WBP_VehicleSpeedometer_C_SetVehicleName");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, Vehicle) == 0x000000, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::Vehicle' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, CallFunc_GetVehicleConfig_ReturnValue) == 0x000008, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::CallFunc_GetVehicleConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, CallFunc_GetSubstring_ReturnValue) == 0x000020, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, CallFunc_RightChop_ReturnValue) == 0x000030, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000050, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_SetVehicleName, CallFunc_Format_ReturnValue) == 0x000100, "Member 'WBP_VehicleSpeedometer_C_SetVehicleName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_VehicleSpeedometer.WBP_VehicleSpeedometer_C.UpdateSpeed
// 0x0048 (0x0048 - 0x0000)
struct WBP_VehicleSpeedometer_C_UpdateSpeed final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D97[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0020(0x0010)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VehicleSpeedometer_C_UpdateSpeed) == 0x000008, "Wrong alignment on WBP_VehicleSpeedometer_C_UpdateSpeed");
static_assert(sizeof(WBP_VehicleSpeedometer_C_UpdateSpeed) == 0x000048, "Wrong size on WBP_VehicleSpeedometer_C_UpdateSpeed");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateSpeed, NewValue) == 0x000000, "Member 'WBP_VehicleSpeedometer_C_UpdateSpeed::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateSpeed, CallFunc_Abs_ReturnValue) == 0x000008, "Member 'WBP_VehicleSpeedometer_C_UpdateSpeed::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_VehicleSpeedometer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_VehicleSpeedometer_C_UpdateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateSpeed, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000020, "Member 'WBP_VehicleSpeedometer_C_UpdateSpeed::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateSpeed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_VehicleSpeedometer_C_UpdateSpeed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateSpeed, CallFunc_Abs_A_ImplicitCast) == 0x000038, "Member 'WBP_VehicleSpeedometer_C_UpdateSpeed::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateSpeed, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000040, "Member 'WBP_VehicleSpeedometer_C_UpdateSpeed::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_VehicleSpeedometer.WBP_VehicleSpeedometer_C.UpdateVelocity
// 0x0008 (0x0008 - 0x0000)
struct WBP_VehicleSpeedometer_C_UpdateVelocity final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D98[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetForwardSpeed_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VehicleSpeedometer_C_UpdateVelocity) == 0x000004, "Wrong alignment on WBP_VehicleSpeedometer_C_UpdateVelocity");
static_assert(sizeof(WBP_VehicleSpeedometer_C_UpdateVelocity) == 0x000008, "Wrong size on WBP_VehicleSpeedometer_C_UpdateVelocity");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateVelocity, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_VehicleSpeedometer_C_UpdateVelocity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VehicleSpeedometer_C_UpdateVelocity, CallFunc_GetForwardSpeed_ReturnValue) == 0x000004, "Member 'WBP_VehicleSpeedometer_C_UpdateVelocity::CallFunc_GetForwardSpeed_ReturnValue' has a wrong offset!");

}

