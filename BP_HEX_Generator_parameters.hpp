#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HEX_Generator

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "G01_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HEX_Generator.BP_HEX_Generator_C.CollectHeatSinks
// 0x0070 (0x0070 - 0x0000)
struct BP_HEX_Generator_C_CollectHeatSinks final
{
public:
	TArray<class AGzDestructibleHeatSink*>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<class AGzDestructibleHeatSink*>        Result;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class UChildActorComponent*>           HeatSinkChildActors;                               // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C6[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C7[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzDestructibleHeatSink*                K2Node_DynamicCast_AsGz_Destructible_Heat_Sink;    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C8[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UChildActorComponent*>           K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_HEX_Generator_C_CollectHeatSinks) == 0x000008, "Wrong alignment on BP_HEX_Generator_C_CollectHeatSinks");
static_assert(sizeof(BP_HEX_Generator_C_CollectHeatSinks) == 0x000070, "Wrong size on BP_HEX_Generator_C_CollectHeatSinks");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, ReturnValue) == 0x000000, "Member 'BP_HEX_Generator_C_CollectHeatSinks::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, Result) == 0x000010, "Member 'BP_HEX_Generator_C_CollectHeatSinks::Result' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, HeatSinkChildActors) == 0x000020, "Member 'BP_HEX_Generator_C_CollectHeatSinks::HeatSinkChildActors' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_HEX_Generator_C_CollectHeatSinks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_HEX_Generator_C_CollectHeatSinks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_HEX_Generator_C_CollectHeatSinks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_HEX_Generator_C_CollectHeatSinks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_HEX_Generator_C_CollectHeatSinks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_HEX_Generator_C_CollectHeatSinks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, K2Node_DynamicCast_AsGz_Destructible_Heat_Sink) == 0x000050, "Member 'BP_HEX_Generator_C_CollectHeatSinks::K2Node_DynamicCast_AsGz_Destructible_Heat_Sink' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_HEX_Generator_C_CollectHeatSinks::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_HEX_Generator_C_CollectHeatSinks::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_CollectHeatSinks, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_HEX_Generator_C_CollectHeatSinks::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_HEX_Generator.BP_HEX_Generator_C.ExecuteUbergraph_BP_HEX_Generator
// 0x02D0 (0x02D0 - 0x0000)
struct BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C9[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68CA[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68CB[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68CC[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProtectionDown_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProtectionDown_ReturnValue_1;           // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProtectionDown_ReturnValue_2;           // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68CD[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzItemExtractor*                       CallFunc_GetItemExtractor_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_On;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68CE[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HEX_Extractor_C*                    K2Node_DynamicCast_AsBP_HEX_Extractor;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68CF[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzItemExtractor*                       CallFunc_GetItemExtractor_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_HEX_Extractor_C*                    K2Node_DynamicCast_AsBP_HEX_Extractor_1;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D0[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0098(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(struct FGzExtractionData& Current)> K2Node_CreateDelegate_OutputDelegate;              // 0x0190(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D1[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x01C8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D2[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator) == 0x000008, "Wrong alignment on BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator");
static_assert(sizeof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator) == 0x0002D0, "Wrong size on BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, EntryPoint) == 0x000000, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_IsValid_ReturnValue_2) == 0x000006, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_IsValid_ReturnValue_3) == 0x00000C, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_GetMaterials_ReturnValue) == 0x000010, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002C, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_IsProtectionDown_ReturnValue) == 0x000044, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_IsProtectionDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_IsProtectionDown_ReturnValue_1) == 0x000045, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_IsProtectionDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_IsProtectionDown_ReturnValue_2) == 0x000046, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_IsProtectionDown_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_GetItemExtractor_ReturnValue) == 0x000048, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_GetItemExtractor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, K2Node_CustomEvent_On) == 0x000050, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::K2Node_CustomEvent_On' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, K2Node_DynamicCast_AsBP_HEX_Extractor) == 0x000058, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::K2Node_DynamicCast_AsBP_HEX_Extractor' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_GetItemExtractor_ReturnValue_1) == 0x000068, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_GetItemExtractor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, K2Node_DynamicCast_AsBP_HEX_Extractor_1) == 0x000070, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::K2Node_DynamicCast_AsBP_HEX_Extractor_1' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_BreakVector_X) == 0x000080, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_BreakVector_Z) == 0x000090, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000098, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, K2Node_CreateDelegate_OutputDelegate) == 0x000190, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001A0, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_MakeVector_ReturnValue) == 0x0001B0, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0001C8, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_Delay_Duration_ImplicitCast) == 0x0002C0, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0002C8, "Member 'BP_HEX_Generator_C_ExecuteUbergraph_BP_HEX_Generator::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_HEX_Generator.BP_HEX_Generator_C.HexDataChanged
// 0x0048 (0x0048 - 0x0000)
struct BP_HEX_Generator_C_HexDataChanged final
{
public:
	struct FGzExtractionData                      Current;                                           // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          InExtractingTeam;                                  // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerInExtractingTeam_IsInTeam;   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerInExtractingTeam_Valid;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HEX_Generator_C_HexDataChanged) == 0x000008, "Wrong alignment on BP_HEX_Generator_C_HexDataChanged");
static_assert(sizeof(BP_HEX_Generator_C_HexDataChanged) == 0x000048, "Wrong size on BP_HEX_Generator_C_HexDataChanged");
static_assert(offsetof(BP_HEX_Generator_C_HexDataChanged, Current) == 0x000000, "Member 'BP_HEX_Generator_C_HexDataChanged::Current' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_HexDataChanged, InExtractingTeam) == 0x000040, "Member 'BP_HEX_Generator_C_HexDataChanged::InExtractingTeam' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_HexDataChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'BP_HEX_Generator_C_HexDataChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_HexDataChanged, K2Node_SwitchEnum_CmpSuccess_1) == 0x000042, "Member 'BP_HEX_Generator_C_HexDataChanged::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_HexDataChanged, CallFunc_IsLocalPlayerInExtractingTeam_IsInTeam) == 0x000043, "Member 'BP_HEX_Generator_C_HexDataChanged::CallFunc_IsLocalPlayerInExtractingTeam_IsInTeam' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_HexDataChanged, CallFunc_IsLocalPlayerInExtractingTeam_Valid) == 0x000044, "Member 'BP_HEX_Generator_C_HexDataChanged::CallFunc_IsLocalPlayerInExtractingTeam_Valid' has a wrong offset!");

// Function BP_HEX_Generator.BP_HEX_Generator_C.InitializeAnchors
// 0x0058 (0x0058 - 0x0000)
struct BP_HEX_Generator_C_InitializeAnchors final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D3[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFS_AnchorField_GenericGZ_C*            K2Node_DynamicCast_AsFS_Anchor_Field_Generic_GZ;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D4[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AGzDestructibleHeatSink*>        CallFunc_GetHeatSinks_ReturnValue;                 // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D5[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzDestructibleHeatSink*                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D6[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HEX_HeatSink_C*                     K2Node_DynamicCast_AsBP_HEX_Heat_Sink;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HEX_Generator_C_InitializeAnchors) == 0x000008, "Wrong alignment on BP_HEX_Generator_C_InitializeAnchors");
static_assert(sizeof(BP_HEX_Generator_C_InitializeAnchors) == 0x000058, "Wrong size on BP_HEX_Generator_C_InitializeAnchors");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HEX_Generator_C_InitializeAnchors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HEX_Generator_C_InitializeAnchors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HEX_Generator_C_InitializeAnchors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000C, "Member 'BP_HEX_Generator_C_InitializeAnchors::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_HEX_Generator_C_InitializeAnchors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, K2Node_DynamicCast_AsFS_Anchor_Field_Generic_GZ) == 0x000010, "Member 'BP_HEX_Generator_C_InitializeAnchors::K2Node_DynamicCast_AsFS_Anchor_Field_Generic_GZ' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HEX_Generator_C_InitializeAnchors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, CallFunc_GetHeatSinks_ReturnValue) == 0x000020, "Member 'BP_HEX_Generator_C_InitializeAnchors::CallFunc_GetHeatSinks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_HEX_Generator_C_InitializeAnchors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_HEX_Generator_C_InitializeAnchors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_HEX_Generator_C_InitializeAnchors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, K2Node_DynamicCast_AsBP_HEX_Heat_Sink) == 0x000048, "Member 'BP_HEX_Generator_C_InitializeAnchors::K2Node_DynamicCast_AsBP_HEX_Heat_Sink' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeAnchors, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_HEX_Generator_C_InitializeAnchors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_HEX_Generator.BP_HEX_Generator_C.InitializeFriendlyFire
// 0x0048 (0x0048 - 0x0000)
struct BP_HEX_Generator_C_InitializeFriendlyFire final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AGzDestructibleHeatSink*>        CallFunc_GetHeatSinks_ReturnValue;                 // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzDestructibleHeatSink*                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D9[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HEX_HeatSink_C*                     K2Node_DynamicCast_AsBP_HEX_Heat_Sink;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HEX_Generator_C_InitializeFriendlyFire) == 0x000008, "Wrong alignment on BP_HEX_Generator_C_InitializeFriendlyFire");
static_assert(sizeof(BP_HEX_Generator_C_InitializeFriendlyFire) == 0x000048, "Wrong size on BP_HEX_Generator_C_InitializeFriendlyFire");
static_assert(offsetof(BP_HEX_Generator_C_InitializeFriendlyFire, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HEX_Generator_C_InitializeFriendlyFire::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeFriendlyFire, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HEX_Generator_C_InitializeFriendlyFire::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeFriendlyFire, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HEX_Generator_C_InitializeFriendlyFire::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeFriendlyFire, CallFunc_GetHeatSinks_ReturnValue) == 0x000010, "Member 'BP_HEX_Generator_C_InitializeFriendlyFire::CallFunc_GetHeatSinks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeFriendlyFire, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_HEX_Generator_C_InitializeFriendlyFire::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeFriendlyFire, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_HEX_Generator_C_InitializeFriendlyFire::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeFriendlyFire, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_HEX_Generator_C_InitializeFriendlyFire::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeFriendlyFire, K2Node_DynamicCast_AsBP_HEX_Heat_Sink) == 0x000038, "Member 'BP_HEX_Generator_C_InitializeFriendlyFire::K2Node_DynamicCast_AsBP_HEX_Heat_Sink' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_InitializeFriendlyFire, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_HEX_Generator_C_InitializeFriendlyFire::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HEX_Generator.BP_HEX_Generator_C.IsLocalPlayerInExtractingTeam
// 0x0018 (0x0018 - 0x0000)
struct BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam final
{
public:
	bool                                          IsInTeam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68DA[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam) == 0x000008, "Wrong alignment on BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam");
static_assert(sizeof(BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam) == 0x000018, "Wrong size on BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam");
static_assert(offsetof(BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam, IsInTeam) == 0x000000, "Member 'BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam::IsInTeam' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam, Valid) == 0x000001, "Member 'BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam::Valid' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam, CallFunc_GetTeamAttitude_ReturnValue) == 0x000010, "Member 'BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_HEX_Generator_C_IsLocalPlayerInExtractingTeam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_HEX_Generator.BP_HEX_Generator_C.Reprint
// 0x0001 (0x0001 - 0x0000)
struct BP_HEX_Generator_C_Reprint final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HEX_Generator_C_Reprint) == 0x000001, "Wrong alignment on BP_HEX_Generator_C_Reprint");
static_assert(sizeof(BP_HEX_Generator_C_Reprint) == 0x000001, "Wrong size on BP_HEX_Generator_C_Reprint");
static_assert(offsetof(BP_HEX_Generator_C_Reprint, On) == 0x000000, "Member 'BP_HEX_Generator_C_Reprint::On' has a wrong offset!");

// Function BP_HEX_Generator.BP_HEX_Generator_C.SetHeatingEnabled
// 0x0048 (0x0048 - 0x0000)
struct BP_HEX_Generator_C_SetHeatingEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68DB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AGzDestructibleHeatSink*>        CallFunc_GetHeatSinks_ReturnValue;                 // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68DC[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzDestructibleHeatSink*                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68DD[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HEX_HeatSink_C*                     K2Node_DynamicCast_AsBP_HEX_Heat_Sink;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HEX_Generator_C_SetHeatingEnabled) == 0x000008, "Wrong alignment on BP_HEX_Generator_C_SetHeatingEnabled");
static_assert(sizeof(BP_HEX_Generator_C_SetHeatingEnabled) == 0x000048, "Wrong size on BP_HEX_Generator_C_SetHeatingEnabled");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, bEnabled) == 0x000000, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, CallFunc_GetHeatSinks_ReturnValue) == 0x000010, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::CallFunc_GetHeatSinks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, K2Node_DynamicCast_AsBP_HEX_Heat_Sink) == 0x000038, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::K2Node_DynamicCast_AsBP_HEX_Heat_Sink' has a wrong offset!");
static_assert(offsetof(BP_HEX_Generator_C_SetHeatingEnabled, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_HEX_Generator_C_SetHeatingEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

