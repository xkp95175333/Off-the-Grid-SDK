#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TooltipInteraction_ItemHex

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_TooltipInteraction_ItemHex.WBP_TooltipInteraction_ItemHex_C.InitItemSetup
// 0x0020 (0x0020 - 0x0000)
struct WBP_TooltipInteraction_ItemHex_C_InitItemSetup final
{
public:
	class UGzItemData*                            Param_ItemData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4F[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipInteraction_ItemHex_C_InitItemSetup) == 0x000008, "Wrong alignment on WBP_TooltipInteraction_ItemHex_C_InitItemSetup");
static_assert(sizeof(WBP_TooltipInteraction_ItemHex_C_InitItemSetup) == 0x000020, "Wrong size on WBP_TooltipInteraction_ItemHex_C_InitItemSetup");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_InitItemSetup, Param_ItemData) == 0x000000, "Member 'WBP_TooltipInteraction_ItemHex_C_InitItemSetup::Param_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_InitItemSetup, Quantity) == 0x000008, "Member 'WBP_TooltipInteraction_ItemHex_C_InitItemSetup::Quantity' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_InitItemSetup, CallFunc_GetRarity_ReturnValue) == 0x00000C, "Member 'WBP_TooltipInteraction_ItemHex_C_InitItemSetup::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_InitItemSetup, CallFunc_GetRarityColor_ReturnValue) == 0x000010, "Member 'WBP_TooltipInteraction_ItemHex_C_InitItemSetup::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");

// Function WBP_TooltipInteraction_ItemHex.WBP_TooltipInteraction_ItemHex_C.UpdateDescription
// 0x0070 (0x0070 - 0x0000)
struct WBP_TooltipInteraction_ItemHex_C_UpdateDescription final
{
public:
	class FText                                   ExtentionText;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         ExtractionTime;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C50[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_GetItemData_ItemData;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C51[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0010)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzGameState*                           K2Node_DynamicCast_AsGz_Game_State;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C52[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzSessionGameModeSettings*             K2Node_DynamicCast_AsGz_Session_Game_Mode_Settings; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C53[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzHexExtractionSettings               CallFunc_GetHexExtractionSetting_ReturnValue;      // 0x005C(0x0008)(NoDestructor)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription) == 0x000008, "Wrong alignment on WBP_TooltipInteraction_ItemHex_C_UpdateDescription");
static_assert(sizeof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription) == 0x000070, "Wrong size on WBP_TooltipInteraction_ItemHex_C_UpdateDescription");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, ExtentionText) == 0x000000, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::ExtentionText' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, ExtractionTime) == 0x000010, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::ExtractionTime' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, CallFunc_GetItemData_ItemData) == 0x000018, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::CallFunc_GetItemData_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, K2Node_DynamicCast_AsGz_Game_State) == 0x000040, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::K2Node_DynamicCast_AsGz_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, K2Node_DynamicCast_AsGz_Session_Game_Mode_Settings) == 0x000050, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::K2Node_DynamicCast_AsGz_Session_Game_Mode_Settings' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, CallFunc_GetHexExtractionSetting_ReturnValue) == 0x00005C, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::CallFunc_GetHexExtractionSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, CallFunc_FTrunc_ReturnValue) == 0x000064, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TooltipInteraction_ItemHex_C_UpdateDescription, CallFunc_FTrunc_A_ImplicitCast) == 0x000068, "Member 'WBP_TooltipInteraction_ItemHex_C_UpdateDescription::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

}

