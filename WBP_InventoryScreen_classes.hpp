#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InventoryScreen.WBP_InventoryScreen_C
// 0x0198 (0x0738 - 0x05A0)
class UWBP_InventoryScreen_C final : public UGzInventoryScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_WeaponSwitch;                                 // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       A_Open_Inventory;                                  // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           Attachments_VerticalBox;                           // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_Description_Broken;                             // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_Description_Text;                               // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_HintInventory_Text;                             // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_ItemName_Text;                                  // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Gz_Quality_Text;                                   // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ItemInfo_SizeBox;                                  // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MainHolder;                                        // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_NavigationButton_C*                QOM_Button;                                        // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Quality_Border;                                    // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BackpackSlot_C*                    WBP_Backpack;                                      // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CurrencyDisplay_C*                 WBP_CurrencyDisplay;                               // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DynamicInventory_C*                WBP_DynamicInventory;                              // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HexSlot_C*                         WBP_HexSlot_One;                                   // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HexSlot_C*                         WBP_HexSlot_Two;                                   // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Inventory_QuickOrder_Button_C*     WBP_Inventory_QuickOrder_Button;                   // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_JetpackSlot_C*                     WBP_JetpackSlot;                                   // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LimbSlot_C*                        WBP_LimbSlot_Arm_L;                                // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LimbSlot_C*                        WBP_LimbSlot_Arm_R;                                // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LimbSlot_C*                        WBP_LimbSlot_Legs;                                 // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponSlot_C*                      WBP_MainSlot_1;                                    // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponSlot_C*                      WBP_MainSlot_2;                                    // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponSlot_C*                      WBP_MainSlot_3;                                    // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SelfReviveSlot_C*                  WBP_SelfReviveSlot;                                // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Shared_LabelHeader_C*              WBP_Shared_LabelHeader;                            // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Shared_LabelHeader_C*              WBP_Shared_LabelHeader_1;                          // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Shared_LabelHeader_C*              WBP_Shared_LabelHeader_2;                          // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Shared_LabelHeader_C*              WBP_Shared_LabelHeader_3;                          // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Shared_LabelHeader_C*              WBP_Shared_LabelHeader_4;                          // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Shared_LabelHeader_C*              WBP_Shared_LabelHeader_5;                          // 0x06A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Shared_LabelHeader_C*              WBP_Shared_LabelHeader_6;                          // 0x06A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzLoadoutSelectionScreen*              LoadoutselectionDummy;                             // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGzInputActionBindingHandle            WeaponSwapBindingHandle;                           // 0x06B8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_649E[0x4];                                     // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Jetpack_name;                                      // 0x06C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   JetpackDescription;                                // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          BrokenJetpack;                                     // 0x06E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649F[0x7];                                     // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BaseTooltipText;                                   // 0x06E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   LimbTooltipText;                                   // 0x06F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   WeaponTooltipText;                                 // 0x0708(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   QuickOrderName;                                    // 0x0718(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   QuickOrderDescription;                             // 0x0728(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddAttachmentToolTipInfo(const class FText& Param_Name, EGzItemRarity Rarity, EGzWeaponAttachmentType AttachmentType, class UWBP_Inventory_Attachment_C** AddedElement);
	void AddSkinToolTipInfo(const class FText& Param_Name, class UWBP_Inventory_SkinShow_C** AddedElement);
	void BindElementsButtonHover();
	void BndEvt__WBP_InventoryScreen_QOM_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_InventoryScreen_WBP_Inventory_QuickOrder_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_InventoryScreen_WBP_JetpackSlot_K2Node_ComponentBoundEvent_0_OnHovered_Jetpack__DelegateSignature(bool ToShow);
	void BP_OnActivated();
	void ButtonHover(class UCommonButtonBase* Button);
	void ButtonUnhover(class UCommonButtonBase* Button);
	void CREATEDELEGATE_PROXYFUNCTION_0(const struct FGzInvItem& NewItem);
	void CREATEDELEGATE_PROXYFUNCTION_1(bool StateBroken);
	void DynamicInventoryButtonHover(bool IsHover, const struct FGzInvItem& Item);
	void ExecuteUbergraph_WBP_InventoryScreen(int32 EntryPoint);
	void GetPlayerInventoryComponent(class UGzInvComponent** InventoryComponent);
	void HandleTriggeringBackAction();
	void OnInitialized();
	void OnPawnChanged(class APawn* Pawn);
	void OnSlotDataChanged(const struct FGzInvItem& NewItem);
	void OnWeaponSwapInput();
	void Set_Jetpack_Texts();
	void SetDefaultInfoState();
	void SetReadOnlyState();
	void SetReadWriteState();
	void Update_Broken_State(bool& Broken);
	void UpdateInventoryInfo(bool IsHover, const struct FGzInvItem& Item);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InventoryScreen_C">();
	}
	static class UWBP_InventoryScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InventoryScreen_C>();
	}
};
static_assert(alignof(UWBP_InventoryScreen_C) == 0x000008, "Wrong alignment on UWBP_InventoryScreen_C");
static_assert(sizeof(UWBP_InventoryScreen_C) == 0x000738, "Wrong size on UWBP_InventoryScreen_C");
static_assert(offsetof(UWBP_InventoryScreen_C, UberGraphFrame) == 0x0005A0, "Member 'UWBP_InventoryScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, Anim_WeaponSwitch) == 0x0005A8, "Member 'UWBP_InventoryScreen_C::Anim_WeaponSwitch' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, A_Open_Inventory) == 0x0005B0, "Member 'UWBP_InventoryScreen_C::A_Open_Inventory' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, Attachments_VerticalBox) == 0x0005B8, "Member 'UWBP_InventoryScreen_C::Attachments_VerticalBox' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, Gz_Description_Broken) == 0x0005C0, "Member 'UWBP_InventoryScreen_C::Gz_Description_Broken' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, Gz_Description_Text) == 0x0005C8, "Member 'UWBP_InventoryScreen_C::Gz_Description_Text' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, Gz_HintInventory_Text) == 0x0005D0, "Member 'UWBP_InventoryScreen_C::Gz_HintInventory_Text' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, Gz_ItemName_Text) == 0x0005D8, "Member 'UWBP_InventoryScreen_C::Gz_ItemName_Text' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, Gz_Quality_Text) == 0x0005E0, "Member 'UWBP_InventoryScreen_C::Gz_Quality_Text' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, ItemInfo_SizeBox) == 0x0005E8, "Member 'UWBP_InventoryScreen_C::ItemInfo_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, MainHolder) == 0x0005F0, "Member 'UWBP_InventoryScreen_C::MainHolder' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, QOM_Button) == 0x0005F8, "Member 'UWBP_InventoryScreen_C::QOM_Button' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, Quality_Border) == 0x000600, "Member 'UWBP_InventoryScreen_C::Quality_Border' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_Backpack) == 0x000608, "Member 'UWBP_InventoryScreen_C::WBP_Backpack' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_CurrencyDisplay) == 0x000610, "Member 'UWBP_InventoryScreen_C::WBP_CurrencyDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_DynamicInventory) == 0x000618, "Member 'UWBP_InventoryScreen_C::WBP_DynamicInventory' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_HexSlot_One) == 0x000620, "Member 'UWBP_InventoryScreen_C::WBP_HexSlot_One' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_HexSlot_Two) == 0x000628, "Member 'UWBP_InventoryScreen_C::WBP_HexSlot_Two' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_Inventory_QuickOrder_Button) == 0x000630, "Member 'UWBP_InventoryScreen_C::WBP_Inventory_QuickOrder_Button' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_JetpackSlot) == 0x000638, "Member 'UWBP_InventoryScreen_C::WBP_JetpackSlot' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_LimbSlot_Arm_L) == 0x000640, "Member 'UWBP_InventoryScreen_C::WBP_LimbSlot_Arm_L' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_LimbSlot_Arm_R) == 0x000648, "Member 'UWBP_InventoryScreen_C::WBP_LimbSlot_Arm_R' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_LimbSlot_Legs) == 0x000650, "Member 'UWBP_InventoryScreen_C::WBP_LimbSlot_Legs' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_MainSlot_1) == 0x000658, "Member 'UWBP_InventoryScreen_C::WBP_MainSlot_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_MainSlot_2) == 0x000660, "Member 'UWBP_InventoryScreen_C::WBP_MainSlot_2' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_MainSlot_3) == 0x000668, "Member 'UWBP_InventoryScreen_C::WBP_MainSlot_3' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_SelfReviveSlot) == 0x000670, "Member 'UWBP_InventoryScreen_C::WBP_SelfReviveSlot' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_Shared_LabelHeader) == 0x000678, "Member 'UWBP_InventoryScreen_C::WBP_Shared_LabelHeader' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_Shared_LabelHeader_1) == 0x000680, "Member 'UWBP_InventoryScreen_C::WBP_Shared_LabelHeader_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_Shared_LabelHeader_2) == 0x000688, "Member 'UWBP_InventoryScreen_C::WBP_Shared_LabelHeader_2' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_Shared_LabelHeader_3) == 0x000690, "Member 'UWBP_InventoryScreen_C::WBP_Shared_LabelHeader_3' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_Shared_LabelHeader_4) == 0x000698, "Member 'UWBP_InventoryScreen_C::WBP_Shared_LabelHeader_4' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_Shared_LabelHeader_5) == 0x0006A0, "Member 'UWBP_InventoryScreen_C::WBP_Shared_LabelHeader_5' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WBP_Shared_LabelHeader_6) == 0x0006A8, "Member 'UWBP_InventoryScreen_C::WBP_Shared_LabelHeader_6' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, LoadoutselectionDummy) == 0x0006B0, "Member 'UWBP_InventoryScreen_C::LoadoutselectionDummy' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WeaponSwapBindingHandle) == 0x0006B8, "Member 'UWBP_InventoryScreen_C::WeaponSwapBindingHandle' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, Jetpack_name) == 0x0006C0, "Member 'UWBP_InventoryScreen_C::Jetpack_name' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, JetpackDescription) == 0x0006D0, "Member 'UWBP_InventoryScreen_C::JetpackDescription' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, BrokenJetpack) == 0x0006E0, "Member 'UWBP_InventoryScreen_C::BrokenJetpack' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, BaseTooltipText) == 0x0006E8, "Member 'UWBP_InventoryScreen_C::BaseTooltipText' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, LimbTooltipText) == 0x0006F8, "Member 'UWBP_InventoryScreen_C::LimbTooltipText' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, WeaponTooltipText) == 0x000708, "Member 'UWBP_InventoryScreen_C::WeaponTooltipText' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, QuickOrderName) == 0x000718, "Member 'UWBP_InventoryScreen_C::QuickOrderName' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryScreen_C, QuickOrderDescription) == 0x000728, "Member 'UWBP_InventoryScreen_C::QuickOrderDescription' has a wrong offset!");

}

