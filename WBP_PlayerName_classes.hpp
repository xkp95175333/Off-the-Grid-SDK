#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerName

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PlayerName.WBP_PlayerName_C
// 0x00B0 (0x0448 - 0x0398)
class UWBP_PlayerName_C final : public UGzTeammateViewportMarkerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_ViewportMarker_Content_C*          Bleeding_ViewportMarkerContent;                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DevPrefixColor_Border;                             // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hex_Image;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Main_Overlay;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerId_Image;                                    // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                PlayerIdentifier_Border;                           // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           PlayerName_GzText;                                 // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           PlayerTag_GzText;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGzPlayerState*                         GzPlayerStateRef;                                  // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle;                                       // 0x03E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           Character;                                         // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGzItemChangeHandle                    InvHandle;                                         // 0x03F8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A23[0x4];                                     // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskGameplayTagAddedRemoved*    ReviveTask;                                        // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           HealthTask;                                        // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          TeammateReviving;                                  // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUsingSelfRevive;                                  // 0x0419(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A24[0x2];                                     // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastProgress;                                      // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentHoldTime;                                   // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    SelfReviveTask;                                    // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    KillSelfTask;                                      // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    KnockDownTask;                                     // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         MaxProgress;                                       // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeingRevived(bool bWasAdded);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_PlayerName(int32 EntryPoint);
	void GetRelativeLocalPlayerState(class APlayerState** OutPlayerState);
	void GetTeamAttitude(class APlayerState* InPlayerState, ETeamAttitude* TeamAttitude);
	bool HexFilter(const struct FGzInvItem& Item, EGzInvChangeEvent ChangeEvent);
	void OnAttributeChanged_1010367E448F82D04FAC4EACE5666703(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnHexUpdated(const struct FGzInvItem& ItemDelta, EGzInvChangeEvent Event);
	void OnPingAdded(const struct FGzPingData& PingData);
	void OnRepPS(class AGzPlayerState* PlayerState);
	void OnTagAdded_3E38FDB94CE9261D425521AC83325DCA(const struct FGameplayTag& Tag);
	void OnTagAdded_960062434E95F2D5AEE53AB9532E8DA1(const struct FGameplayTag& Tag);
	void OnTagAdded_D52A13B24AA8ED3B7C98ADB64F0C402B(const struct FGameplayTag& Tag);
	void OnTagRemoved_3E38FDB94CE9261D425521AC83325DCA(const struct FGameplayTag& Tag);
	void OnTagRemoved_960062434E95F2D5AEE53AB9532E8DA1(const struct FGameplayTag& Tag);
	void OnTagRemoved_D52A13B24AA8ED3B7C98ADB64F0C402B(const struct FGameplayTag& Tag);
	void ReviveMePing();
	void Set_Player_Name_Visibility();
	void SetCurrentHoldTime(double DeltaTime);
	void SetIconShapeAndColor();
	void SetPlayerName();
	void SetPlayerState(class AGzPlayerState* InGzPlayerState);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_Player_Name_Visuals();
	void Update_Progress();
	void UpdateHex();
	void UpdateKnockDownIndication(bool Condition);
	void UsingSelfReviveKit(bool bWasAdded);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PlayerName_C">();
	}
	static class UWBP_PlayerName_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PlayerName_C>();
	}
};
static_assert(alignof(UWBP_PlayerName_C) == 0x000008, "Wrong alignment on UWBP_PlayerName_C");
static_assert(sizeof(UWBP_PlayerName_C) == 0x000448, "Wrong size on UWBP_PlayerName_C");
static_assert(offsetof(UWBP_PlayerName_C, UberGraphFrame) == 0x000398, "Member 'UWBP_PlayerName_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, Bleeding_ViewportMarkerContent) == 0x0003A0, "Member 'UWBP_PlayerName_C::Bleeding_ViewportMarkerContent' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, DevPrefixColor_Border) == 0x0003A8, "Member 'UWBP_PlayerName_C::DevPrefixColor_Border' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, Hex_Image) == 0x0003B0, "Member 'UWBP_PlayerName_C::Hex_Image' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, Main_Overlay) == 0x0003B8, "Member 'UWBP_PlayerName_C::Main_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, PlayerId_Image) == 0x0003C0, "Member 'UWBP_PlayerName_C::PlayerId_Image' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, PlayerIdentifier_Border) == 0x0003C8, "Member 'UWBP_PlayerName_C::PlayerIdentifier_Border' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, PlayerName_GzText) == 0x0003D0, "Member 'UWBP_PlayerName_C::PlayerName_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, PlayerTag_GzText) == 0x0003D8, "Member 'UWBP_PlayerName_C::PlayerTag_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, GzPlayerStateRef) == 0x0003E0, "Member 'UWBP_PlayerName_C::GzPlayerStateRef' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, TimerHandle) == 0x0003E8, "Member 'UWBP_PlayerName_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, Character) == 0x0003F0, "Member 'UWBP_PlayerName_C::Character' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, InvHandle) == 0x0003F8, "Member 'UWBP_PlayerName_C::InvHandle' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, ReviveTask) == 0x000408, "Member 'UWBP_PlayerName_C::ReviveTask' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, HealthTask) == 0x000410, "Member 'UWBP_PlayerName_C::HealthTask' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, TeammateReviving) == 0x000418, "Member 'UWBP_PlayerName_C::TeammateReviving' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, bUsingSelfRevive) == 0x000419, "Member 'UWBP_PlayerName_C::bUsingSelfRevive' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, LastProgress) == 0x00041C, "Member 'UWBP_PlayerName_C::LastProgress' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, CurrentHoldTime) == 0x000420, "Member 'UWBP_PlayerName_C::CurrentHoldTime' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, SelfReviveTask) == 0x000428, "Member 'UWBP_PlayerName_C::SelfReviveTask' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, KillSelfTask) == 0x000430, "Member 'UWBP_PlayerName_C::KillSelfTask' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, KnockDownTask) == 0x000438, "Member 'UWBP_PlayerName_C::KnockDownTask' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerName_C, MaxProgress) == 0x000440, "Member 'UWBP_PlayerName_C::MaxProgress' has a wrong offset!");

}

