#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CyberlimbsRangeController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ECyberlimbsMoveStage_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CyberlimbsRangeController.BP_CyberlimbsRangeController_C
// 0x0098 (0x0338 - 0x02A0)
class ABP_CyberlimbsRangeController_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_DummySpawner_C*>             Dummies;                                           // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        MoveSpeed;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnMoveableChanged;                                 // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHealthChanged;                                   // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSpeedChanged;                                    // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsMoveSave;                                        // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5129[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMove;                                            // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ECyberlimbsMoveStage                          CurrentStage;                                      // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512A[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpeedStage1;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpeedStage2;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpeedStage3;                                       // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AngleSlope;                                        // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CyberlimbsRangeController(int32 EntryPoint);
	void GetSpeed(double* Speed);
	void NextStage();
	void Notify();
	void OnHealthChanged__DelegateSignature(double Health_Value);
	void OnMove__DelegateSignature();
	void OnMoveableChanged__DelegateSignature(bool IsMoveable);
	void OnSpeedChanged__DelegateSignature(double Speed);
	void ReceiveBeginPlay();
	void Update_Speed(ECyberlimbsMoveStage Stage);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CyberlimbsRangeController_C">();
	}
	static class ABP_CyberlimbsRangeController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CyberlimbsRangeController_C>();
	}
};
static_assert(alignof(ABP_CyberlimbsRangeController_C) == 0x000008, "Wrong alignment on ABP_CyberlimbsRangeController_C");
static_assert(sizeof(ABP_CyberlimbsRangeController_C) == 0x000338, "Wrong size on ABP_CyberlimbsRangeController_C");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_CyberlimbsRangeController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_CyberlimbsRangeController_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, Dummies) == 0x0002B0, "Member 'ABP_CyberlimbsRangeController_C::Dummies' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, MoveSpeed) == 0x0002C0, "Member 'ABP_CyberlimbsRangeController_C::MoveSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, OnMoveableChanged) == 0x0002C8, "Member 'ABP_CyberlimbsRangeController_C::OnMoveableChanged' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, OnHealthChanged) == 0x0002D8, "Member 'ABP_CyberlimbsRangeController_C::OnHealthChanged' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, OnSpeedChanged) == 0x0002E8, "Member 'ABP_CyberlimbsRangeController_C::OnSpeedChanged' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, IsMoveSave) == 0x0002F8, "Member 'ABP_CyberlimbsRangeController_C::IsMoveSave' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, OnMove) == 0x000300, "Member 'ABP_CyberlimbsRangeController_C::OnMove' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, CurrentStage) == 0x000310, "Member 'ABP_CyberlimbsRangeController_C::CurrentStage' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, SpeedStage1) == 0x000318, "Member 'ABP_CyberlimbsRangeController_C::SpeedStage1' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, SpeedStage2) == 0x000320, "Member 'ABP_CyberlimbsRangeController_C::SpeedStage2' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, SpeedStage3) == 0x000328, "Member 'ABP_CyberlimbsRangeController_C::SpeedStage3' has a wrong offset!");
static_assert(offsetof(ABP_CyberlimbsRangeController_C, AngleSlope) == 0x000330, "Member 'ABP_CyberlimbsRangeController_C::AngleSlope' has a wrong offset!");

}

