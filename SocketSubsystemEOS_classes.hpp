#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SocketSubsystemEOS

#include "Basic.hpp"

#include "OnlineSubsystemUtils_classes.hpp"


namespace SDK
{

// Class SocketSubsystemEOS.NetConnectionEOS
// 0x0008 (0x1E98 - 0x1E90)
class UNetConnectionEOS final : public UIpConnection
{
public:
	uint8                                         Pad_26C2[0x8];                                     // 0x1E90(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetConnectionEOS">();
	}
	static class UNetConnectionEOS* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetConnectionEOS>();
	}
};
static_assert(alignof(UNetConnectionEOS) == 0x000008, "Wrong alignment on UNetConnectionEOS");
static_assert(sizeof(UNetConnectionEOS) == 0x001E98, "Wrong size on UNetConnectionEOS");

// Class SocketSubsystemEOS.NetDriverEOSBase
// 0x0008 (0x0950 - 0x0948)
class UNetDriverEOSBase final : public UIpNetDriver
{
public:
	bool                                          bIsPassthrough;                                    // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUsingP2PSockets;                                // 0x0949(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C3[0x6];                                     // 0x094A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetDriverEOSBase">();
	}
	static class UNetDriverEOSBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetDriverEOSBase>();
	}
};
static_assert(alignof(UNetDriverEOSBase) == 0x000008, "Wrong alignment on UNetDriverEOSBase");
static_assert(sizeof(UNetDriverEOSBase) == 0x000950, "Wrong size on UNetDriverEOSBase");
static_assert(offsetof(UNetDriverEOSBase, bIsPassthrough) == 0x000948, "Member 'UNetDriverEOSBase::bIsPassthrough' has a wrong offset!");
static_assert(offsetof(UNetDriverEOSBase, bIsUsingP2PSockets) == 0x000949, "Member 'UNetDriverEOSBase::bIsUsingP2PSockets' has a wrong offset!");

}

