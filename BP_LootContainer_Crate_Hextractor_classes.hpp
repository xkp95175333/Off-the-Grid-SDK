#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootContainer_Crate_Hextractor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "BP_Minigame_Arrows_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootContainer_Crate_Hextractor.BP_LootContainer_Crate_Hextractor_C
// 0x00D8 (0x0558 - 0x0480)
class ABP_LootContainer_Crate_Hextractor_C final : public ABP_Minigame_Arrows_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LootContainer_Crate_Hextractor_C; // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          StaticCollisionForPlayer;                          // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzCameraComponent*                     GzCamera;                                          // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlacementDebug_0_0;                                // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CelebrationVFX;                                    // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      SteamVFX;                                          // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzTableLootChooserComponent*           GzTableLootChooser;                                // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        HEX_Spot;                                          // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGzStaticAkComponent*                   StaticAudioServerInteraction;                      // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_Screen_add_1;                       // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_opener;                             // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_pipe;                               // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SM_HEX_SafeBox_details2;                        // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SM_HEX_SafeBox_details1;                        // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SM_HEX_SafeBox_details;                         // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_base;                               // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_Screen_add_2;                       // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_Front_Door;                         // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_hood;                               // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_Inner_door_2;                       // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_Inner_door_1;                       // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_Inner;                              // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HEX_Safebox_Screen;                             // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMissionResourceComponent*              MissionResource;                                   // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AGzPickableBase*                        SpawnedHex;                                        // 0x0548(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 RolledItemRarity;                                  // 0x0550(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_LootContainer_Crate_Hextractor_InteractableComponent_K2Node_ComponentBoundEvent_3_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable);
	void BndEvt__BP_LootContainer_Crate_Hextractor_InteractableComponent_K2Node_ComponentBoundEvent_4_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable);
	void BndEvt__BP_LootContainer_Crate_Hextractor_InteractableComponent_K2Node_ComponentBoundEvent_5_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable);
	void BndEvt__BP_LootContainer_Crate_Hextractor_MissionResource_K2Node_ComponentBoundEvent_0_OnResourcePendingDestroyFinished__DelegateSignature(class UMissionResourceComponent* Resource);
	bool CanScanOnAnyDistance();
	void ExecuteUbergraph_BP_LootContainer_Crate_Hextractor(int32 EntryPoint);
	void NetrunnerMinigameStart();
	bool OnDefilerEffectApplied();
	bool OnDefilerEffectRemoved();
	void OnMinigameStateReceived();
	void OnRep_SpawnedHex();
	void OnSuccess_Server();
	void ReceiveBeginPlay();

	EGzDefilerTargetType GetDefilerTargetType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootContainer_Crate_Hextractor_C">();
	}
	static class ABP_LootContainer_Crate_Hextractor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LootContainer_Crate_Hextractor_C>();
	}
};
static_assert(alignof(ABP_LootContainer_Crate_Hextractor_C) == 0x000008, "Wrong alignment on ABP_LootContainer_Crate_Hextractor_C");
static_assert(sizeof(ABP_LootContainer_Crate_Hextractor_C) == 0x000558, "Wrong size on ABP_LootContainer_Crate_Hextractor_C");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, UberGraphFrame_BP_LootContainer_Crate_Hextractor_C) == 0x000480, "Member 'ABP_LootContainer_Crate_Hextractor_C::UberGraphFrame_BP_LootContainer_Crate_Hextractor_C' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, StaticCollisionForPlayer) == 0x000488, "Member 'ABP_LootContainer_Crate_Hextractor_C::StaticCollisionForPlayer' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, GzCamera) == 0x000490, "Member 'ABP_LootContainer_Crate_Hextractor_C::GzCamera' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, PlacementDebug_0_0) == 0x000498, "Member 'ABP_LootContainer_Crate_Hextractor_C::PlacementDebug_0_0' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, StaticMesh) == 0x0004A0, "Member 'ABP_LootContainer_Crate_Hextractor_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, CelebrationVFX) == 0x0004A8, "Member 'ABP_LootContainer_Crate_Hextractor_C::CelebrationVFX' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SteamVFX) == 0x0004B0, "Member 'ABP_LootContainer_Crate_Hextractor_C::SteamVFX' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, GzTableLootChooser) == 0x0004B8, "Member 'ABP_LootContainer_Crate_Hextractor_C::GzTableLootChooser' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, HEX_Spot) == 0x0004C0, "Member 'ABP_LootContainer_Crate_Hextractor_C::HEX_Spot' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, StaticAudioServerInteraction) == 0x0004C8, "Member 'ABP_LootContainer_Crate_Hextractor_C::StaticAudioServerInteraction' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_Screen_add_1) == 0x0004D0, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_Screen_add_1' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_opener) == 0x0004D8, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_opener' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_pipe) == 0x0004E0, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_pipe' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_SM_HEX_SafeBox_details2) == 0x0004E8, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_SM_HEX_SafeBox_details2' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_SM_HEX_SafeBox_details1) == 0x0004F0, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_SM_HEX_SafeBox_details1' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_SM_HEX_SafeBox_details) == 0x0004F8, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_SM_HEX_SafeBox_details' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_base) == 0x000500, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_base' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_Screen_add_2) == 0x000508, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_Screen_add_2' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_Front_Door) == 0x000510, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_Front_Door' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_hood) == 0x000518, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_hood' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_Inner_door_2) == 0x000520, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_Inner_door_2' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_Inner_door_1) == 0x000528, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_Inner_door_1' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_Inner) == 0x000530, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_Inner' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SM_HEX_Safebox_Screen) == 0x000538, "Member 'ABP_LootContainer_Crate_Hextractor_C::SM_HEX_Safebox_Screen' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, MissionResource) == 0x000540, "Member 'ABP_LootContainer_Crate_Hextractor_C::MissionResource' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, SpawnedHex) == 0x000548, "Member 'ABP_LootContainer_Crate_Hextractor_C::SpawnedHex' has a wrong offset!");
static_assert(offsetof(ABP_LootContainer_Crate_Hextractor_C, RolledItemRarity) == 0x000550, "Member 'ABP_LootContainer_Crate_Hextractor_C::RolledItemRarity' has a wrong offset!");

}

