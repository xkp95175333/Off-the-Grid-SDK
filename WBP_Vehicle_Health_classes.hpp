#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Vehicle_Health

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "G01_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Vehicle_Health.WBP_Vehicle_Health_C
// 0x0028 (0x03C0 - 0x0398)
class WBP_Vehicle_Health::UWBP_Vehicle_Health_C final : public UGzViewportMarkerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProgressBar*                           Gauge_ProgressBar;                                 // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_ConvoyVehicleBase_C*                VehicleRef;                                        // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              WidgetSize;                                        // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Changed_555934AC4D0A69D12337A4B134AC86F6(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void Construct();
	void ExecuteUbergraph_WBP_Vehicle_Health(int32 EntryPoint);
	void InitWidget();
	void OnRep_VehicleRef();
	void OnVehicleDeath();
	void OnVehicleRefSet(class ABP_ConvoyVehicleBase_C* InputPin);
	void OnVehicleStarted();
	void SetVehicleRef(class ABP_TrackTransport_ConvoyCar_JobZero_C* Param_VehicleRef);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateHealth(float Health);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WidgetBlueprintGeneratedClass WBP_Vehicle_Health.WBP_Vehicle_Health_C", true, "WBP_Vehicle_Health_C">();
	}
	static class WBP_Vehicle_Health::UWBP_Vehicle_Health_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<WBP_Vehicle_Health::UWBP_Vehicle_Health_C>();
	}
};
static_assert(alignof(WBP_Vehicle_Health::UWBP_Vehicle_Health_C) == 0x000008, "Wrong alignment on WBP_Vehicle_Health::UWBP_Vehicle_Health_C");
static_assert(sizeof(WBP_Vehicle_Health::UWBP_Vehicle_Health_C) == 0x0003C0, "Wrong size on WBP_Vehicle_Health::UWBP_Vehicle_Health_C");
static_assert(offsetof(WBP_Vehicle_Health::UWBP_Vehicle_Health_C, UberGraphFrame) == 0x000398, "Member 'WBP_Vehicle_Health::UWBP_Vehicle_Health_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health::UWBP_Vehicle_Health_C, Gauge_ProgressBar) == 0x0003A0, "Member 'WBP_Vehicle_Health::UWBP_Vehicle_Health_C::Gauge_ProgressBar' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health::UWBP_Vehicle_Health_C, VehicleRef) == 0x0003A8, "Member 'WBP_Vehicle_Health::UWBP_Vehicle_Health_C::VehicleRef' has a wrong offset!");
static_assert(offsetof(WBP_Vehicle_Health::UWBP_Vehicle_Health_C, WidgetSize) == 0x0003B0, "Member 'WBP_Vehicle_Health::UWBP_Vehicle_Health_C::WidgetSize' has a wrong offset!");

}

