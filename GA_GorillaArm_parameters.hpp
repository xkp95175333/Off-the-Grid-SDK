#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GorillaArm

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayCameras_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "G01_structs.hpp"


namespace SDK::Params
{

// Function GA_GorillaArm.GA_GorillaArm_C.BP_OnDashStarted
// 0x0018 (0x0018 - 0x0000)
struct GA_GorillaArm_C_BP_OnDashStarted final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_BP_OnDashStarted) == 0x000008, "Wrong alignment on GA_GorillaArm_C_BP_OnDashStarted");
static_assert(sizeof(GA_GorillaArm_C_BP_OnDashStarted) == 0x000018, "Wrong size on GA_GorillaArm_C_BP_OnDashStarted");
static_assert(offsetof(GA_GorillaArm_C_BP_OnDashStarted, Direction) == 0x000000, "Member 'GA_GorillaArm_C_BP_OnDashStarted::Direction' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.BP_OnPunch
// 0x00F8 (0x00F8 - 0x0000)
struct GA_GorillaArm_C_BP_OnPunch final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_GorillaArm_C_BP_OnPunch) == 0x000008, "Wrong alignment on GA_GorillaArm_C_BP_OnPunch");
static_assert(sizeof(GA_GorillaArm_C_BP_OnPunch) == 0x0000F8, "Wrong size on GA_GorillaArm_C_BP_OnPunch");
static_assert(offsetof(GA_GorillaArm_C_BP_OnPunch, HitResult) == 0x000000, "Member 'GA_GorillaArm_C_BP_OnPunch::HitResult' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.ExecuteUbergraph_GA_GorillaArm
// 0x02B8 (0x02B8 - 0x0000)
struct GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65FE[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65FF[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Direction;                            // 0x0070(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0088(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6600[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6601[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6602[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6603[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationSequence*               CallFunc_GetPunchCameraSequence_CameraSequence;    // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationSequence*               CallFunc_GetDashCameraSequence_CameraSequence;     // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6604[0x2];                                     // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1; // 0x027C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6605[0x3];                                     // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0288(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6606[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm) == 0x000008, "Wrong alignment on GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm");
static_assert(sizeof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm) == 0x0002B8, "Wrong size on GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, EntryPoint) == 0x000000, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000004, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, K2Node_CreateDelegate_OutputDelegate_3) == 0x00003C, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, Temp_byte_Variable) == 0x00004C, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, Temp_object_Variable) == 0x000050, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, Temp_object_Variable_1) == 0x000058, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, Temp_object_Variable_2) == 0x000060, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, K2Node_Event_bWasCancelled) == 0x000068, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, K2Node_Event_Direction) == 0x000070, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, K2Node_Event_HitResult) == 0x000088, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_bBlockingHit) == 0x000180, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_bInitialOverlap) == 0x000181, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_Time) == 0x000184, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_Distance) == 0x000188, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_Location) == 0x000190, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_Normal) == 0x0001C0, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D8, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_BoneName) == 0x000210, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_ElementIndex) == 0x00021C, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_FaceIndex) == 0x000220, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_IsValid_ReturnValue) == 0x000258, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_GetOwningCharacter_ReturnValue) == 0x000260, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_GetPunchCameraSequence_CameraSequence) == 0x000268, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_GetPunchCameraSequence_CameraSequence' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_GetDashCameraSequence_CameraSequence) == 0x000270, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_GetDashCameraSequence_CameraSequence' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_IsLocallyControlled_ReturnValue) == 0x000278, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_K2_HasAuthority_ReturnValue) == 0x000279, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1) == 0x00027C, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x000284, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, Temp_delegate_Variable) == 0x000288, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_PostEvent_ReturnValue) == 0x000298, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, K2Node_Select_Default) == 0x0002A0, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x0002A8, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm, CallFunc_IsValid_ReturnValue_1) == 0x0002B0, "Member 'GA_GorillaArm_C_ExecuteUbergraph_GA_GorillaArm::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.GetDashCameraSequence
// 0x0020 (0x0020 - 0x0000)
struct GA_GorillaArm_C_GetDashCameraSequence final
{
public:
	class UCameraAnimationSequence*               CameraSequence;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6607[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationSequence*               Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationSequence*               K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_GetDashCameraSequence) == 0x000008, "Wrong alignment on GA_GorillaArm_C_GetDashCameraSequence");
static_assert(sizeof(GA_GorillaArm_C_GetDashCameraSequence) == 0x000020, "Wrong size on GA_GorillaArm_C_GetDashCameraSequence");
static_assert(offsetof(GA_GorillaArm_C_GetDashCameraSequence, CameraSequence) == 0x000000, "Member 'GA_GorillaArm_C_GetDashCameraSequence::CameraSequence' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetDashCameraSequence, Temp_byte_Variable) == 0x000008, "Member 'GA_GorillaArm_C_GetDashCameraSequence::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetDashCameraSequence, Temp_object_Variable) == 0x000010, "Member 'GA_GorillaArm_C_GetDashCameraSequence::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetDashCameraSequence, K2Node_Select_Default) == 0x000018, "Member 'GA_GorillaArm_C_GetDashCameraSequence::K2Node_Select_Default' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.GetHandSocketLocation
// 0x0048 (0x0048 - 0x0000)
struct GA_GorillaArm_C_GetHandSocketLocation final
{
public:
	struct FVector                                HandSocketLocation;                                // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetHandSocketName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponentFromActorInfo_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_GetHandSocketLocation) == 0x000008, "Wrong alignment on GA_GorillaArm_C_GetHandSocketLocation");
static_assert(sizeof(GA_GorillaArm_C_GetHandSocketLocation) == 0x000048, "Wrong size on GA_GorillaArm_C_GetHandSocketLocation");
static_assert(offsetof(GA_GorillaArm_C_GetHandSocketLocation, HandSocketLocation) == 0x000000, "Member 'GA_GorillaArm_C_GetHandSocketLocation::HandSocketLocation' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetHandSocketLocation, CallFunc_GetHandSocketName_ReturnValue) == 0x000018, "Member 'GA_GorillaArm_C_GetHandSocketLocation::CallFunc_GetHandSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetHandSocketLocation, CallFunc_GetOwningComponentFromActorInfo_ReturnValue) == 0x000020, "Member 'GA_GorillaArm_C_GetHandSocketLocation::CallFunc_GetOwningComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetHandSocketLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000028, "Member 'GA_GorillaArm_C_GetHandSocketLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetHandSocketLocation, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'GA_GorillaArm_C_GetHandSocketLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.GetPunchCameraSequence
// 0x0020 (0x0020 - 0x0000)
struct GA_GorillaArm_C_GetPunchCameraSequence final
{
public:
	class UCameraAnimationSequence*               CameraSequence;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6608[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationSequence*               Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationSequence*               K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_GetPunchCameraSequence) == 0x000008, "Wrong alignment on GA_GorillaArm_C_GetPunchCameraSequence");
static_assert(sizeof(GA_GorillaArm_C_GetPunchCameraSequence) == 0x000020, "Wrong size on GA_GorillaArm_C_GetPunchCameraSequence");
static_assert(offsetof(GA_GorillaArm_C_GetPunchCameraSequence, CameraSequence) == 0x000000, "Member 'GA_GorillaArm_C_GetPunchCameraSequence::CameraSequence' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetPunchCameraSequence, Temp_byte_Variable) == 0x000008, "Member 'GA_GorillaArm_C_GetPunchCameraSequence::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetPunchCameraSequence, Temp_object_Variable) == 0x000010, "Member 'GA_GorillaArm_C_GetPunchCameraSequence::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_GetPunchCameraSequence, K2Node_Select_Default) == 0x000018, "Member 'GA_GorillaArm_C_GetPunchCameraSequence::K2Node_Select_Default' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_GorillaArm_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_GorillaArm_C_K2_OnEndAbility");
static_assert(sizeof(GA_GorillaArm_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_GorillaArm_C_K2_OnEndAbility");
static_assert(offsetof(GA_GorillaArm_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_GorillaArm_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.PlayChargeCameraShake
// 0x0018 (0x0018 - 0x0000)
struct GA_GorillaArm_C_PlayChargeCameraShake final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6609[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_PlayChargeCameraShake) == 0x000008, "Wrong alignment on GA_GorillaArm_C_PlayChargeCameraShake");
static_assert(sizeof(GA_GorillaArm_C_PlayChargeCameraShake) == 0x000018, "Wrong size on GA_GorillaArm_C_PlayChargeCameraShake");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeCameraShake, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'GA_GorillaArm_C_PlayChargeCameraShake::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeCameraShake, CallFunc_GetOwningCharacter_ReturnValue) == 0x000008, "Member 'GA_GorillaArm_C_PlayChargeCameraShake::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeCameraShake, CallFunc_GetLocalViewingPlayerController_ReturnValue) == 0x000010, "Member 'GA_GorillaArm_C_PlayChargeCameraShake::CallFunc_GetLocalViewingPlayerController_ReturnValue' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.PlayChargeFX
// 0x0100 (0x0100 - 0x0000)
struct GA_GorillaArm_C_PlayChargeFX final
{
public:
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_660A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponentFromActorInfo_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_660B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0028(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(GA_GorillaArm_C_PlayChargeFX) == 0x000008, "Wrong alignment on GA_GorillaArm_C_PlayChargeFX");
static_assert(sizeof(GA_GorillaArm_C_PlayChargeFX) == 0x000100, "Wrong size on GA_GorillaArm_C_PlayChargeFX");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeFX, Temp_byte_Variable) == 0x000000, "Member 'GA_GorillaArm_C_PlayChargeFX::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeFX, Temp_int_Variable) == 0x000004, "Member 'GA_GorillaArm_C_PlayChargeFX::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeFX, Temp_int_Variable_1) == 0x000008, "Member 'GA_GorillaArm_C_PlayChargeFX::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeFX, Temp_int_Variable_2) == 0x00000C, "Member 'GA_GorillaArm_C_PlayChargeFX::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeFX, CallFunc_GetOwningCharacter_ReturnValue) == 0x000010, "Member 'GA_GorillaArm_C_PlayChargeFX::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeFX, CallFunc_GetOwningComponentFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_GorillaArm_C_PlayChargeFX::CallFunc_GetOwningComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeFX, K2Node_Select_Default) == 0x000020, "Member 'GA_GorillaArm_C_PlayChargeFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayChargeFX, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000028, "Member 'GA_GorillaArm_C_PlayChargeFX::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.PlayEnvironmentImpactCue
// 0x0368 (0x0368 - 0x0000)
struct GA_GorillaArm_C_PlayEnvironmentImpactCue final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetHandSocketName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLimbSocketWorldLocation_ReturnValue;   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue;  // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00A8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_660C[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue; // 0x01A8(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_660D[0x2];                                     // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_660E[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_660F[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_PlayEnvironmentImpactCue) == 0x000008, "Wrong alignment on GA_GorillaArm_C_PlayEnvironmentImpactCue");
static_assert(sizeof(GA_GorillaArm_C_PlayEnvironmentImpactCue) == 0x000368, "Wrong size on GA_GorillaArm_C_PlayEnvironmentImpactCue");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, Temp_object_Variable) == 0x000000, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000010, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_GetHandSocketName_ReturnValue) == 0x000048, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_GetHandSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000050, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_GetLimbSocketWorldLocation_ReturnValue) == 0x000068, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_GetLimbSocketWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_GetOwningCharacter_ReturnValue) == 0x000080, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_GetGzAbilitySystemComponent_ReturnValue) == 0x0000A0, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_GetGzAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_LineTraceSingle_OutHit) == 0x0000A8, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_LineTraceSingle_ReturnValue) == 0x0001A0, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue) == 0x0001A8, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_MakeGameplayCueParametersFromHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_bBlockingHit) == 0x000280, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_bInitialOverlap) == 0x000281, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_Time) == 0x000284, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_Distance) == 0x000288, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_Location) == 0x000290, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_ImpactPoint) == 0x0002A8, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_Normal) == 0x0002C0, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_ImpactNormal) == 0x0002D8, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_PhysMat) == 0x0002F0, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_HitActor) == 0x0002F8, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_HitComponent) == 0x000300, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_HitBoneName) == 0x000308, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_BoneName) == 0x000310, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_HitItem) == 0x000318, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_ElementIndex) == 0x00031C, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_FaceIndex) == 0x000320, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_TraceStart) == 0x000328, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BreakHitResult_TraceEnd) == 0x000340, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_GetObjectClass_ReturnValue) == 0x000358, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_ClassIsChildOf_ReturnValue) == 0x000360, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_Not_PreBool_ReturnValue) == 0x000361, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayEnvironmentImpactCue, CallFunc_BooleanAND_ReturnValue) == 0x000362, "Member 'GA_GorillaArm_C_PlayEnvironmentImpactCue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.PlayPunchFX
// 0x02F0 (0x02F0 - 0x0000)
struct GA_GorillaArm_C_PlayPunchFX final
{
public:
	struct FHitResult                             PunchHit;                                          // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6610[0x1];                                     // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6611[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6612[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue_1;         // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue; // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue_2;         // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHandSocketLocation_HandSocketLocation; // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0210(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_PlayPunchFX) == 0x000008, "Wrong alignment on GA_GorillaArm_C_PlayPunchFX");
static_assert(sizeof(GA_GorillaArm_C_PlayPunchFX) == 0x0002F0, "Wrong size on GA_GorillaArm_C_PlayPunchFX");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, PunchHit) == 0x000000, "Member 'GA_GorillaArm_C_PlayPunchFX::PunchHit' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000F8, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F9, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000FA, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_GetOwningCharacter_ReturnValue) == 0x0001D0, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_GetOwningCharacter_ReturnValue_1) == 0x0001D8, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_GetOwningCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_GetLocalViewingPlayerController_ReturnValue) == 0x0001E0, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_GetLocalViewingPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_GetOwningCharacter_ReturnValue_2) == 0x0001E8, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_GetOwningCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_GetHandSocketLocation_HandSocketLocation) == 0x0001F0, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_GetHandSocketLocation_HandSocketLocation' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_GetGzAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000208, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_GetGzAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000210, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_PlayPunchFX, CallFunc_K2_HasAuthority_ReturnValue) == 0x0002E8, "Member 'GA_GorillaArm_C_PlayPunchFX::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.StartCameraSequence
// 0x0098 (0x0098 - 0x0000)
struct GA_GorillaArm_C_StartCameraSequence final
{
public:
	class UCameraAnimationSequence*               Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        PlayRate;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      LocalController;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6613[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraAnimationParams                 K2Node_MakeStruct_CameraAnimationParams;           // 0x0020(0x0048)(NoDestructor)
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCameraAnimationHandle                 CallFunc_PlayCameraAnimation_ReturnValue;          // 0x0070(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6614[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCameraAnimationActive_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6615[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_PlayRate_ImplicitCast;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_StartCameraSequence) == 0x000008, "Wrong alignment on GA_GorillaArm_C_StartCameraSequence");
static_assert(sizeof(GA_GorillaArm_C_StartCameraSequence) == 0x000098, "Wrong size on GA_GorillaArm_C_StartCameraSequence");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, Sequence) == 0x000000, "Member 'GA_GorillaArm_C_StartCameraSequence::Sequence' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, PlayRate) == 0x000008, "Member 'GA_GorillaArm_C_StartCameraSequence::PlayRate' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, LocalController) == 0x000010, "Member 'GA_GorillaArm_C_StartCameraSequence::LocalController' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, CallFunc_IsLocallyControlled_ReturnValue) == 0x000018, "Member 'GA_GorillaArm_C_StartCameraSequence::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, K2Node_MakeStruct_CameraAnimationParams) == 0x000020, "Member 'GA_GorillaArm_C_StartCameraSequence::K2Node_MakeStruct_CameraAnimationParams' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000068, "Member 'GA_GorillaArm_C_StartCameraSequence::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, CallFunc_PlayCameraAnimation_ReturnValue) == 0x000070, "Member 'GA_GorillaArm_C_StartCameraSequence::CallFunc_PlayCameraAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000078, "Member 'GA_GorillaArm_C_StartCameraSequence::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, CallFunc_GetOwningCharacter_ReturnValue) == 0x000080, "Member 'GA_GorillaArm_C_StartCameraSequence::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, CallFunc_GetLocalViewingPlayerController_ReturnValue) == 0x000088, "Member 'GA_GorillaArm_C_StartCameraSequence::CallFunc_GetLocalViewingPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, CallFunc_IsCameraAnimationActive_ReturnValue) == 0x000090, "Member 'GA_GorillaArm_C_StartCameraSequence::CallFunc_IsCameraAnimationActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StartCameraSequence, K2Node_MakeStruct_PlayRate_ImplicitCast) == 0x000094, "Member 'GA_GorillaArm_C_StartCameraSequence::K2Node_MakeStruct_PlayRate_ImplicitCast' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.StopCameraSequence
// 0x0028 (0x0028 - 0x0000)
struct GA_GorillaArm_C_StopCameraSequence final
{
public:
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6616[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCameraAnimationActive_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_StopCameraSequence) == 0x000008, "Wrong alignment on GA_GorillaArm_C_StopCameraSequence");
static_assert(sizeof(GA_GorillaArm_C_StopCameraSequence) == 0x000028, "Wrong size on GA_GorillaArm_C_StopCameraSequence");
static_assert(offsetof(GA_GorillaArm_C_StopCameraSequence, CallFunc_GetOwningCharacter_ReturnValue) == 0x000000, "Member 'GA_GorillaArm_C_StopCameraSequence::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StopCameraSequence, CallFunc_IsLocallyControlled_ReturnValue) == 0x000008, "Member 'GA_GorillaArm_C_StopCameraSequence::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StopCameraSequence, CallFunc_GetLocalViewingPlayerController_ReturnValue) == 0x000010, "Member 'GA_GorillaArm_C_StopCameraSequence::CallFunc_GetLocalViewingPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StopCameraSequence, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'GA_GorillaArm_C_StopCameraSequence::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StopCameraSequence, CallFunc_IsCameraAnimationActive_ReturnValue) == 0x000020, "Member 'GA_GorillaArm_C_StopCameraSequence::CallFunc_IsCameraAnimationActive_ReturnValue' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.StopChargeCameraShake
// 0x0018 (0x0018 - 0x0000)
struct GA_GorillaArm_C_StopChargeCameraShake final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6617[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_StopChargeCameraShake) == 0x000008, "Wrong alignment on GA_GorillaArm_C_StopChargeCameraShake");
static_assert(sizeof(GA_GorillaArm_C_StopChargeCameraShake) == 0x000018, "Wrong size on GA_GorillaArm_C_StopChargeCameraShake");
static_assert(offsetof(GA_GorillaArm_C_StopChargeCameraShake, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'GA_GorillaArm_C_StopChargeCameraShake::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StopChargeCameraShake, CallFunc_GetOwningCharacter_ReturnValue) == 0x000008, "Member 'GA_GorillaArm_C_StopChargeCameraShake::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_StopChargeCameraShake, CallFunc_GetLocalViewingPlayerController_ReturnValue) == 0x000010, "Member 'GA_GorillaArm_C_StopChargeCameraShake::CallFunc_GetLocalViewingPlayerController_ReturnValue' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.SwitchChargeCameraShoulder
// 0x0030 (0x0030 - 0x0000)
struct GA_GorillaArm_C_SwitchChargeCameraShoulder final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6618[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6619[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_SwitchChargeCameraShoulder) == 0x000008, "Wrong alignment on GA_GorillaArm_C_SwitchChargeCameraShoulder");
static_assert(sizeof(GA_GorillaArm_C_SwitchChargeCameraShoulder) == 0x000030, "Wrong size on GA_GorillaArm_C_SwitchChargeCameraShoulder");
static_assert(offsetof(GA_GorillaArm_C_SwitchChargeCameraShoulder, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'GA_GorillaArm_C_SwitchChargeCameraShoulder::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchChargeCameraShoulder, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'GA_GorillaArm_C_SwitchChargeCameraShoulder::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchChargeCameraShoulder, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'GA_GorillaArm_C_SwitchChargeCameraShoulder::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchChargeCameraShoulder, CallFunc_GetGzAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_GorillaArm_C_SwitchChargeCameraShoulder::CallFunc_GetGzAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchChargeCameraShoulder, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000010, "Member 'GA_GorillaArm_C_SwitchChargeCameraShoulder::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchChargeCameraShoulder, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'GA_GorillaArm_C_SwitchChargeCameraShoulder::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchChargeCameraShoulder, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'GA_GorillaArm_C_SwitchChargeCameraShoulder::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchChargeCameraShoulder, CallFunc_BooleanAND_ReturnValue_1) == 0x000029, "Member 'GA_GorillaArm_C_SwitchChargeCameraShoulder::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchChargeCameraShoulder, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'GA_GorillaArm_C_SwitchChargeCameraShoulder::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GA_GorillaArm.GA_GorillaArm_C.SwitchPunchCameraShoulder
// 0x0030 (0x0030 - 0x0000)
struct GA_GorillaArm_C_SwitchPunchCameraShoulder final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GorillaArm_C_SwitchPunchCameraShoulder) == 0x000008, "Wrong alignment on GA_GorillaArm_C_SwitchPunchCameraShoulder");
static_assert(sizeof(GA_GorillaArm_C_SwitchPunchCameraShoulder) == 0x000030, "Wrong size on GA_GorillaArm_C_SwitchPunchCameraShoulder");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_GetGzAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_GetGzAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GorillaArm_C_SwitchPunchCameraShoulder, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000029, "Member 'GA_GorillaArm_C_SwitchPunchCameraShoulder::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

}

