#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EventStatusContainer

#include "Basic.hpp"

#include "WBP_EventStatusContainer_classes.hpp"
#include "WBP_EventStatusContainer_parameters.hpp"


namespace SDK
{

// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.Add Slot
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EventId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowTitleBackground                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowIconProgress                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowIconBackground                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Initially_Visible                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPanelWidget*                     Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bStatic                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_EventStatus_C*               OutputPin                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatusContainer_C::Add_Slot(const struct FGameplayTag& EventTag, double Time, class FName EventId, bool bShowTitleBackground, bool bShowIconProgress, bool bShowIconBackground, bool Initially_Visible, class UPanelWidget* Container, bool bStatic, class UWBP_EventStatus_C** OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "Add Slot");

	Params::WBP_EventStatusContainer_C_Add_Slot Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Time = Time;
	Parms.EventId = EventId;
	Parms.bShowTitleBackground = bShowTitleBackground;
	Parms.bShowIconProgress = bShowIconProgress;
	Parms.bShowIconBackground = bShowIconBackground;
	Parms.Initially_Visible = Initially_Visible;
	Parms.Container = Container;
	Parms.bStatic = bStatic;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_EventStatusContainer_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.ExecuteUbergraph_WBP_EventStatusContainer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatusContainer_C::ExecuteUbergraph_WBP_EventStatusContainer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "ExecuteUbergraph_WBP_EventStatusContainer");

	Params::WBP_EventStatusContainer_C_ExecuteUbergraph_WBP_EventStatusContainer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.HideInfoPanelSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_EventStatus_C*               InfoPanelSlot                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatusContainer_C::HideInfoPanelSlot(class UWBP_EventStatus_C* InfoPanelSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "HideInfoPanelSlot");

	Params::WBP_EventStatusContainer_C_HideInfoPanelSlot Parms{};

	Parms.InfoPanelSlot = InfoPanelSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.OnEventNotificationStageDelegat
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotificationID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGzNotificationStageType                StageType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGzEventNotificationData         NotificationData                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_EventStatusContainer_C::OnEventNotificationStageDelegat(class FName NotificationID, EGzNotificationStageType StageType, const struct FGzEventNotificationData& NotificationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "OnEventNotificationStageDelegat");

	Params::WBP_EventStatusContainer_C_OnEventNotificationStageDelegat Parms{};

	Parms.NotificationID = NotificationID;
	Parms.StageType = StageType;
	Parms.NotificationData = std::move(NotificationData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.OnGameModeEvents
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzEventNotificationData         NotificationData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_EventStatusContainer_C::OnGameModeEvents(const struct FGzEventNotificationData& NotificationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "OnGameModeEvents");

	Params::WBP_EventStatusContainer_C_OnGameModeEvents Parms{};

	Parms.NotificationData = std::move(NotificationData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_EventStatusContainer_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.RemoveGameModeEvents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_EventStatus_C*               InfoPanelSlot                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatusContainer_C::RemoveGameModeEvents(class UWBP_EventStatus_C* InfoPanelSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "RemoveGameModeEvents");

	Params::WBP_EventStatusContainer_C_RemoveGameModeEvents Parms{};

	Parms.InfoPanelSlot = InfoPanelSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.SetInactiveState
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFGzEventStatusSetting           InfoPanelSetting                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     EventTag                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatusContainer_C::SetInactiveState(const struct FFGzEventStatusSetting& InfoPanelSetting, const struct FGameplayTag& EventTag, double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "SetInactiveState");

	Params::WBP_EventStatusContainer_C_SetInactiveState Parms{};

	Parms.InfoPanelSetting = std::move(InfoPanelSetting);
	Parms.EventTag = std::move(EventTag);
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.ShowInfoPanelSlot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             NotificationID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_EventStatus_C*               InfoPanelSlot                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Successful                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatusContainer_C::ShowInfoPanelSlot(double Time, class FName NotificationID, class UWBP_EventStatus_C* InfoPanelSlot, bool* Successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "ShowInfoPanelSlot");

	Params::WBP_EventStatusContainer_C_ShowInfoPanelSlot Parms{};

	Parms.Time = Time;
	Parms.NotificationID = NotificationID;
	Parms.InfoPanelSlot = InfoPanelSlot;

	UObject::ProcessEvent(Func, &Parms);

	if (Successful != nullptr)
		*Successful = Parms.Successful;
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.SpawnExistingEvents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_EventStatusContainer_C::SpawnExistingEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "SpawnExistingEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_EventStatusContainer.WBP_EventStatusContainer_C.TryUpdateInactiveState
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_EventStatus_C*               InfoPanelSlot                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_EventStatusContainer_C::TryUpdateInactiveState(class UWBP_EventStatus_C* InfoPanelSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_EventStatusContainer_C", "TryUpdateInactiveState");

	Params::WBP_EventStatusContainer_C_TryUpdateInactiveState Parms{};

	Parms.InfoPanelSlot = InfoPanelSlot;

	UObject::ProcessEvent(Func, &Parms);
}

}

