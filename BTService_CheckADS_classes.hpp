#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_CheckADS

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTService_CheckADS.BTService_CheckADS_C
// 0x0018 (0x00B0 - 0x0098)
class UBTService_CheckADS_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   ADSDisableBBName;                                  // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShouldAim;                                       // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_BTService_CheckADS(int32 EntryPoint);
	void CalculateShouldAIM(class UBlackboardComponent* BB, bool* F);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTService_CheckADS_C">();
	}
	static class UBTService_CheckADS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTService_CheckADS_C>();
	}
};
static_assert(alignof(UBTService_CheckADS_C) == 0x000008, "Wrong alignment on UBTService_CheckADS_C");
static_assert(sizeof(UBTService_CheckADS_C) == 0x0000B0, "Wrong size on UBTService_CheckADS_C");
static_assert(offsetof(UBTService_CheckADS_C, UberGraphFrame) == 0x000098, "Member 'UBTService_CheckADS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTService_CheckADS_C, ADSDisableBBName) == 0x0000A0, "Member 'UBTService_CheckADS_C::ADSDisableBBName' has a wrong offset!");
static_assert(offsetof(UBTService_CheckADS_C, IsShouldAim) == 0x0000A8, "Member 'UBTService_CheckADS_C::IsShouldAim' has a wrong offset!");

}

