#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SpiderMine

#include "Basic.hpp"

#include "GA_SpiderMine_classes.hpp"
#include "GA_SpiderMine_parameters.hpp"


namespace SDK
{

// Function GA_SpiderMine.GA_SpiderMine_C.BP_OnGiveAbility
// (Event, Protected, BlueprintEvent)

void UGA_SpiderMine_C::BP_OnGiveAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderMine_C", "BP_OnGiveAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_SpiderMine.GA_SpiderMine_C.ExecuteUbergraph_GA_SpiderMine
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_SpiderMine_C::ExecuteUbergraph_GA_SpiderMine(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderMine_C", "ExecuteUbergraph_GA_SpiderMine");

	Params::GA_SpiderMine_C_ExecuteUbergraph_GA_SpiderMine Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_SpiderMine.GA_SpiderMine_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_SpiderMine_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderMine_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_SpiderMine.GA_SpiderMine_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_SpiderMine_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderMine_C", "K2_OnEndAbility");

	Params::GA_SpiderMine_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_SpiderMine.GA_SpiderMine_C.ReActivateAbility
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_SpiderMine_C::ReActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderMine_C", "ReActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_SpiderMine.GA_SpiderMine_C.SpawnMine
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGzSpiderMine_SpawnInfo          SpawnInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class AGzSpiderMine*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AGzSpiderMine* UGA_SpiderMine_C::SpawnMine(const struct FTransform& Transform, const struct FGzSpiderMine_SpawnInfo& SpawnInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderMine_C", "SpawnMine");

	Params::GA_SpiderMine_C_SpawnMine Parms{};

	Parms.Transform = std::move(Transform);
	Parms.SpawnInfo = std::move(SpawnInfo);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

