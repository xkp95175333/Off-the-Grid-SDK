#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TooltipContainer_DOS

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "E_TooltipItemType_structs.hpp"
#include "G01_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TooltipContainer_DOS.WBP_TooltipContainer_DOS_C
// 0x00A0 (0x0458 - 0x03B8)
class UWBP_TooltipContainer_DOS_C final : public UGzInteractionTooltip
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_InteractionInput_C*                InteractionInput;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              InteractionTooltip_Switcher;                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              ItemTooltip_Switcher;                              // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         MainContainer_HorizontalBox;                       // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Markers_TeamFeedback_C*            WBP_Markers_TeamFeedback;                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TooltipInteraction_Backpack_DOS_C* WBP_TooltipInteraction_Backpack;                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TooltipInteraction_Item_DOS_C*     WBP_TooltipInteraction_Item;                       // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TooltipInteraction_ItemHex_C*      WBP_TooltipInteraction_ItemHex;                    // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TooltipInteraction_Limb_DOS_C*     WBP_TooltipInteraction_Limb;                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TooltipInteraction_Mission_C*      WBP_TooltipInteraction_Mission;                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TooltipInteraction_Weapon_DOS_C*   WBP_TooltipInteraction_Weapon;                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsLeftShoulder;                                    // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInInteractionRange;                               // 0x0419(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E5F[0x6];                                     // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzLimbPickable*                        As_Gz_Limb_Pickable;                               // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractableOwner;                                 // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzPingControllerComponent*             PingController;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  RemoveFocusTags;                                   // 0x0438(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BindLimbHelth();
	void Can_Player_Interact(bool* FocusingOnObject);
	void CheckForPings(class UGzInteractableComponent* Interactable);
	void Construct();
	void CREATEDELEGATE_PROXYFUNCTION_0(float Progress);
	void ExecuteUbergraph_WBP_TooltipContainer_DOS(int32 EntryPoint);
	void GetInteractionDuration(float* InteractionStage_InteractionDuration);
	void GetLastSavedInteractionProgress(double* LastSavedInteractionProgress);
	void GetResetProgressBarOnRelease(bool* bGetResetProgressBarOnRelease);
	void Handle_Focused();
	void OnFocusChange_BP(class UGzInteractableComponent* Interactable, bool bFocused);
	void OnLastSavedInteractionProgressChanged(double InitialInteractionProgress);
	void OnPingAdded(const struct FGzPingData& PingData);
	void OnPingRemoved(const struct FGzPingData& PingData);
	void ReceiveBindEvents(class APawn* NewViewTarget);
	void ReceiveUnbindEvents(class APawn* OldViewTarget);
	void SetSimpleInteractionTooltip();
	void SetTooltipVisibility(bool Param_IsVisible);
	void ShowItemTooltip(class UGzItemData* ItemData, int32 Quantity, E_TooltipItemType ItemType);
	void UpdateFailedInteractionStatus();
	void UpdateFocusable();
	void UpdateHealth(float OldValue, float NewValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TooltipContainer_DOS_C">();
	}
	static class UWBP_TooltipContainer_DOS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TooltipContainer_DOS_C>();
	}
};
static_assert(alignof(UWBP_TooltipContainer_DOS_C) == 0x000008, "Wrong alignment on UWBP_TooltipContainer_DOS_C");
static_assert(sizeof(UWBP_TooltipContainer_DOS_C) == 0x000458, "Wrong size on UWBP_TooltipContainer_DOS_C");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, UberGraphFrame) == 0x0003B8, "Member 'UWBP_TooltipContainer_DOS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, InteractionInput) == 0x0003C0, "Member 'UWBP_TooltipContainer_DOS_C::InteractionInput' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, InteractionTooltip_Switcher) == 0x0003C8, "Member 'UWBP_TooltipContainer_DOS_C::InteractionTooltip_Switcher' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, ItemTooltip_Switcher) == 0x0003D0, "Member 'UWBP_TooltipContainer_DOS_C::ItemTooltip_Switcher' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, MainContainer_HorizontalBox) == 0x0003D8, "Member 'UWBP_TooltipContainer_DOS_C::MainContainer_HorizontalBox' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, WBP_Markers_TeamFeedback) == 0x0003E0, "Member 'UWBP_TooltipContainer_DOS_C::WBP_Markers_TeamFeedback' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, WBP_TooltipInteraction_Backpack) == 0x0003E8, "Member 'UWBP_TooltipContainer_DOS_C::WBP_TooltipInteraction_Backpack' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, WBP_TooltipInteraction_Item) == 0x0003F0, "Member 'UWBP_TooltipContainer_DOS_C::WBP_TooltipInteraction_Item' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, WBP_TooltipInteraction_ItemHex) == 0x0003F8, "Member 'UWBP_TooltipContainer_DOS_C::WBP_TooltipInteraction_ItemHex' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, WBP_TooltipInteraction_Limb) == 0x000400, "Member 'UWBP_TooltipContainer_DOS_C::WBP_TooltipInteraction_Limb' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, WBP_TooltipInteraction_Mission) == 0x000408, "Member 'UWBP_TooltipContainer_DOS_C::WBP_TooltipInteraction_Mission' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, WBP_TooltipInteraction_Weapon) == 0x000410, "Member 'UWBP_TooltipContainer_DOS_C::WBP_TooltipInteraction_Weapon' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, IsLeftShoulder) == 0x000418, "Member 'UWBP_TooltipContainer_DOS_C::IsLeftShoulder' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, bInInteractionRange) == 0x000419, "Member 'UWBP_TooltipContainer_DOS_C::bInInteractionRange' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, As_Gz_Limb_Pickable) == 0x000420, "Member 'UWBP_TooltipContainer_DOS_C::As_Gz_Limb_Pickable' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, InteractableOwner) == 0x000428, "Member 'UWBP_TooltipContainer_DOS_C::InteractableOwner' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, PingController) == 0x000430, "Member 'UWBP_TooltipContainer_DOS_C::PingController' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipContainer_DOS_C, RemoveFocusTags) == 0x000438, "Member 'UWBP_TooltipContainer_DOS_C::RemoveFocusTags' has a wrong offset!");

}

