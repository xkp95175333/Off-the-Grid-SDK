#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TTR_Games_RankedTop

#include "Basic.hpp"

#include "TTR_Games_RankedTop_classes.hpp"
#include "TTR_Games_RankedTop_parameters.hpp"


namespace SDK
{

// Function TTR_Games_RankedTop.TTR_Games_RankedTop_C.ExecuteUbergraph_TTR_Games_RankedTop
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTTR_Games_RankedTop_C::ExecuteUbergraph_TTR_Games_RankedTop(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_Games_RankedTop_C", "ExecuteUbergraph_TTR_Games_RankedTop");

	Params::TTR_Games_RankedTop_C_ExecuteUbergraph_TTR_Games_RankedTop Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TTR_Games_RankedTop.TTR_Games_RankedTop_C.OnPlayerCompletedMatch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzGameMessage*                   Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UTTR_Games_RankedTop_C::OnPlayerCompletedMatch(const class UGzGameMessage* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_Games_RankedTop_C", "OnPlayerCompletedMatch");

	Params::TTR_Games_RankedTop_C_OnPlayerCompletedMatch Parms{};

	Parms.Message = Message;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TTR_Games_RankedTop.TTR_Games_RankedTop_C.OnTrackingStarted
// (Event, Protected, BlueprintEvent)

void UTTR_Games_RankedTop_C::OnTrackingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TTR_Games_RankedTop_C", "OnTrackingStarted");

	UObject::ProcessEvent(Func, nullptr);
}

}

