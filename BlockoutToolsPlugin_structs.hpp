#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlockoutToolsPlugin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum BlockoutToolsPlugin.EBlockoutMaterialType
// NumValues: 0x0003
enum class EBlockoutMaterialType : uint8
{
	BlockoutMaterialType_Grid                = 0,
	BlockoutMaterialType_CustomMaterial      = 1,
	BlockoutMaterialType_MAX                 = 2,
};

// ScriptStruct BlockoutToolsPlugin.BlockoutMaterialPreset
// 0x0030 (0x0038 - 0x0008)
struct FBlockoutMaterialPreset final : public FTableRowBase
{
public:
	bool                                          bUseGrid;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D53[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GridSize;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CheckerLuminance;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTopColor;                                      // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D54[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TopColor;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBlockoutMaterialPreset) == 0x000008, "Wrong alignment on FBlockoutMaterialPreset");
static_assert(sizeof(FBlockoutMaterialPreset) == 0x000038, "Wrong size on FBlockoutMaterialPreset");
static_assert(offsetof(FBlockoutMaterialPreset, bUseGrid) == 0x000008, "Member 'FBlockoutMaterialPreset::bUseGrid' has a wrong offset!");
static_assert(offsetof(FBlockoutMaterialPreset, GridSize) == 0x00000C, "Member 'FBlockoutMaterialPreset::GridSize' has a wrong offset!");
static_assert(offsetof(FBlockoutMaterialPreset, CheckerLuminance) == 0x000010, "Member 'FBlockoutMaterialPreset::CheckerLuminance' has a wrong offset!");
static_assert(offsetof(FBlockoutMaterialPreset, Color) == 0x000014, "Member 'FBlockoutMaterialPreset::Color' has a wrong offset!");
static_assert(offsetof(FBlockoutMaterialPreset, bUseTopColor) == 0x000024, "Member 'FBlockoutMaterialPreset::bUseTopColor' has a wrong offset!");
static_assert(offsetof(FBlockoutMaterialPreset, TopColor) == 0x000028, "Member 'FBlockoutMaterialPreset::TopColor' has a wrong offset!");

}

