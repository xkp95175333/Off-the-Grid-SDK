#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_WeaponSlot.WBP_WeaponSlot_C
// 0x0080 (0x0440 - 0x03C0)
class UWBP_WeaponSlot_C final : public UGzWeaponPocketWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Hover;                                        // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               CantEquipOverlay;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzRichTextBlock*                       Hint_Text;                                         // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MasterBox;                                         // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QualityBar_Image_1;                                // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Master;                                    // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ActiveItem_Indicator_C*            WBP_ActiveItem_Indicator;                          // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AmmoDisplay_C*                     WBP_AmmoDisplay;                                   // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemIcon_C*                        WBP_WeaponIcon;                                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemName_C*                        WBP_WeaponName;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGzInvItem                             InvItem;                                           // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             ButtonHover;                                       // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FIntPoint                              BoxSize;                                           // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_WeaponSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void ButtonHover__DelegateSignature(bool IsHover, const struct FGzInvItem& Item);
	void ExecuteUbergraph_WBP_WeaponSlot(int32 EntryPoint);
	void HandleEmptyItem();
	void HandleValidItem(const struct FGzInvItem& Item);
	void OnPocketChanged_BP(const struct FGzInvItem& NewItem);
	void PreConstruct(bool IsDesignTime);
	void RefreshClipAmount();
	void RefreshEquipCondition(bool bCanEquip);
	void UpdateEquipped(bool bEquipped);
	void UpdateState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_WeaponSlot_C">();
	}
	static class UWBP_WeaponSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_WeaponSlot_C>();
	}
};
static_assert(alignof(UWBP_WeaponSlot_C) == 0x000008, "Wrong alignment on UWBP_WeaponSlot_C");
static_assert(sizeof(UWBP_WeaponSlot_C) == 0x000440, "Wrong size on UWBP_WeaponSlot_C");
static_assert(offsetof(UWBP_WeaponSlot_C, UberGraphFrame) == 0x0003C0, "Member 'UWBP_WeaponSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, Anim_Hover) == 0x0003C8, "Member 'UWBP_WeaponSlot_C::Anim_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, CantEquipOverlay) == 0x0003D0, "Member 'UWBP_WeaponSlot_C::CantEquipOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, Hint_Text) == 0x0003D8, "Member 'UWBP_WeaponSlot_C::Hint_Text' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, MasterBox) == 0x0003E0, "Member 'UWBP_WeaponSlot_C::MasterBox' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, QualityBar_Image_1) == 0x0003E8, "Member 'UWBP_WeaponSlot_C::QualityBar_Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, SizeBox_Master) == 0x0003F0, "Member 'UWBP_WeaponSlot_C::SizeBox_Master' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, WBP_ActiveItem_Indicator) == 0x0003F8, "Member 'UWBP_WeaponSlot_C::WBP_ActiveItem_Indicator' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, WBP_AmmoDisplay) == 0x000400, "Member 'UWBP_WeaponSlot_C::WBP_AmmoDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, WBP_WeaponIcon) == 0x000408, "Member 'UWBP_WeaponSlot_C::WBP_WeaponIcon' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, WBP_WeaponName) == 0x000410, "Member 'UWBP_WeaponSlot_C::WBP_WeaponName' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, InvItem) == 0x000418, "Member 'UWBP_WeaponSlot_C::InvItem' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, ButtonHover) == 0x000428, "Member 'UWBP_WeaponSlot_C::ButtonHover' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponSlot_C, BoxSize) == 0x000438, "Member 'UWBP_WeaponSlot_C::BoxSize' has a wrong offset!");

}

