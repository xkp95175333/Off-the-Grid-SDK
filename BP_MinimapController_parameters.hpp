#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MinimapController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MinimapController.BP_MinimapController_C.ExecuteUbergraph_BP_MinimapController
// 0x0028 (0x0028 - 0x0000)
struct BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzGameUserSettings*                    CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlignMinimap_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController) == 0x000008, "Wrong alignment on BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController");
static_assert(sizeof(BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController) == 0x000028, "Wrong size on BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController");
static_assert(offsetof(BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController, EntryPoint) == 0x000000, "Member 'BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController, K2Node_Event_DeltaTime) == 0x000014, "Member 'BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController, CallFunc_IsAlignMinimap_ReturnValue) == 0x000020, "Member 'BP_MinimapController_C_ExecuteUbergraph_BP_MinimapController::CallFunc_IsAlignMinimap_ReturnValue' has a wrong offset!");

// Function BP_MinimapController.BP_MinimapController_C.InitZoom
// 0x0038 (0x0038 - 0x0000)
struct BP_MinimapController_C_InitZoom final
{
public:
	class UGzUISystem*                            CallFunc_GetUISystem_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMapWidth_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetMinimapWidth_ReturnValue;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMapZoom_Zoom_ImplicitCast;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinimapController_C_InitZoom) == 0x000008, "Wrong alignment on BP_MinimapController_C_InitZoom");
static_assert(sizeof(BP_MinimapController_C_InitZoom) == 0x000038, "Wrong size on BP_MinimapController_C_InitZoom");
static_assert(offsetof(BP_MinimapController_C_InitZoom, CallFunc_GetUISystem_ReturnValue) == 0x000000, "Member 'BP_MinimapController_C_InitZoom::CallFunc_GetUISystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_InitZoom, CallFunc_GetMapWidth_ReturnValue) == 0x000008, "Member 'BP_MinimapController_C_InitZoom::CallFunc_GetMapWidth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_InitZoom, CallFunc_GetTargetMinimapWidth_ReturnValue) == 0x00000C, "Member 'BP_MinimapController_C_InitZoom::CallFunc_GetTargetMinimapWidth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_InitZoom, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'BP_MinimapController_C_InitZoom::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_InitZoom, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_MinimapController_C_InitZoom::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_InitZoom, CallFunc_SafeDivide_A_ImplicitCast) == 0x000020, "Member 'BP_MinimapController_C_InitZoom::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_InitZoom, CallFunc_SafeDivide_B_ImplicitCast) == 0x000028, "Member 'BP_MinimapController_C_InitZoom::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_InitZoom, CallFunc_SetMapZoom_Zoom_ImplicitCast) == 0x000030, "Member 'BP_MinimapController_C_InitZoom::CallFunc_SetMapZoom_Zoom_ImplicitCast' has a wrong offset!");

// Function BP_MinimapController.BP_MinimapController_C.OnSettingsApplied
// 0x0028 (0x0028 - 0x0000)
struct BP_MinimapController_C_OnSettingsApplied final
{
public:
	class UGzMapWidget*                           CallFunc_GetMapWidget_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A68[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_A_ImplicitCast;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMapRotation_RotationAngle_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinimapController_C_OnSettingsApplied) == 0x000008, "Wrong alignment on BP_MinimapController_C_OnSettingsApplied");
static_assert(sizeof(BP_MinimapController_C_OnSettingsApplied) == 0x000028, "Wrong size on BP_MinimapController_C_OnSettingsApplied");
static_assert(offsetof(BP_MinimapController_C_OnSettingsApplied, CallFunc_GetMapWidget_ReturnValue) == 0x000000, "Member 'BP_MinimapController_C_OnSettingsApplied::CallFunc_GetMapWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_OnSettingsApplied, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MinimapController_C_OnSettingsApplied::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_OnSettingsApplied, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_MinimapController_C_OnSettingsApplied::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_OnSettingsApplied, CallFunc_RadiansToDegrees_ReturnValue) == 0x000010, "Member 'BP_MinimapController_C_OnSettingsApplied::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_OnSettingsApplied, CallFunc_RadiansToDegrees_A_ImplicitCast) == 0x000018, "Member 'BP_MinimapController_C_OnSettingsApplied::CallFunc_RadiansToDegrees_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_OnSettingsApplied, CallFunc_SetMapRotation_RotationAngle_ImplicitCast) == 0x000020, "Member 'BP_MinimapController_C_OnSettingsApplied::CallFunc_SetMapRotation_RotationAngle_ImplicitCast' has a wrong offset!");

// Function BP_MinimapController.BP_MinimapController_C.OnTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MinimapController_C_OnTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinimapController_C_OnTick) == 0x000004, "Wrong alignment on BP_MinimapController_C_OnTick");
static_assert(sizeof(BP_MinimapController_C_OnTick) == 0x000004, "Wrong size on BP_MinimapController_C_OnTick");
static_assert(offsetof(BP_MinimapController_C_OnTick, DeltaTime) == 0x000000, "Member 'BP_MinimapController_C_OnTick::DeltaTime' has a wrong offset!");

// Function BP_MinimapController.BP_MinimapController_C.UpdateMapTransform
// 0x0078 (0x0078 - 0x0000)
struct BP_MinimapController_C_UpdateMapTransform final
{
public:
	class UGzGameUserSettings*                    CallFunc_GetGameUserSettings_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlignMinimap_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A69[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A6A[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinimapController_C_UpdateMapTransform) == 0x000008, "Wrong alignment on BP_MinimapController_C_UpdateMapTransform");
static_assert(sizeof(BP_MinimapController_C_UpdateMapTransform) == 0x000078, "Wrong size on BP_MinimapController_C_UpdateMapTransform");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_GetGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_IsAlignMinimap_ReturnValue) == 0x000008, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_IsAlignMinimap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000058, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000068, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinimapController_C_UpdateMapTransform, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'BP_MinimapController_C_UpdateMapTransform::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

