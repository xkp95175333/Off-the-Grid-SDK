#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Defiler_VisionComponent

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_Defiler_VisionComponent_ReplicatedData_structs.hpp"
#include "G01_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.AddMarker
// 0x0090 (0x0090 - 0x0000)
struct BP_Defiler_VisionComponent_C_AddMarker final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzDefilerTargetType                          Type;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Defiler_MarkActor_C*                Marker;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C9[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Defiler_MarkActor_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_AddMarker) == 0x000010, "Wrong alignment on BP_Defiler_VisionComponent_C_AddMarker");
static_assert(sizeof(BP_Defiler_VisionComponent_C_AddMarker) == 0x000090, "Wrong size on BP_Defiler_VisionComponent_C_AddMarker");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddMarker, Target) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_AddMarker::Target' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddMarker, Type) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_AddMarker::Type' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddMarker, Marker) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_AddMarker::Marker' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddMarker, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_Defiler_VisionComponent_C_AddMarker::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddMarker, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BP_Defiler_VisionComponent_C_AddMarker::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddMarker, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'BP_Defiler_VisionComponent_C_AddMarker::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.AddSourceDefilerLimb
// 0x0018 (0x0018 - 0x0000)
struct BP_Defiler_VisionComponent_C_AddSourceDefilerLimb final
{
public:
	const class UActorComponent*                  NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	float                                         InSphereRadius;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63CA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Send_Start_Scan_Wave_InRadius_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_AddSourceDefilerLimb) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_AddSourceDefilerLimb");
static_assert(sizeof(BP_Defiler_VisionComponent_C_AddSourceDefilerLimb) == 0x000018, "Wrong size on BP_Defiler_VisionComponent_C_AddSourceDefilerLimb");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddSourceDefilerLimb, NewItem) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_AddSourceDefilerLimb::NewItem' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddSourceDefilerLimb, InSphereRadius) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_AddSourceDefilerLimb::InSphereRadius' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddSourceDefilerLimb, CallFunc_Send_Start_Scan_Wave_InRadius_ImplicitCast) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_AddSourceDefilerLimb::CallFunc_Send_Start_Scan_Wave_InRadius_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.AddTape
// 0x0008 (0x0008 - 0x0000)
struct BP_Defiler_VisionComponent_C_AddTape final
{
public:
	const class AActor*                           NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_AddTape) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_AddTape");
static_assert(sizeof(BP_Defiler_VisionComponent_C_AddTape) == 0x000008, "Wrong size on BP_Defiler_VisionComponent_C_AddTape");
static_assert(offsetof(BP_Defiler_VisionComponent_C_AddTape, NewItem) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_AddTape::NewItem' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.Check Haked Actor Type
// 0x0028 (0x0028 - 0x0000)
struct BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzDefilerTargetType                          DefilerType;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnyDistance;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63CB[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGzDefilerTarget>      K2Node_DynamicCast_AsGz_Defiler_Target;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzDefilerTargetType                          CallFunc_GetDefilerTargetType_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanScanOnAnyDistance_ReturnValue;         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type");
static_assert(sizeof(BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type) == 0x000028, "Wrong size on BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type, Actor) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type::Actor' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type, DefilerType) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type::DefilerType' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type, AnyDistance) == 0x000009, "Member 'BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type::AnyDistance' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type, K2Node_DynamicCast_AsGz_Defiler_Target) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type::K2Node_DynamicCast_AsGz_Defiler_Target' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type, CallFunc_GetDefilerTargetType_ReturnValue) == 0x000021, "Member 'BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type::CallFunc_GetDefilerTargetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type, CallFunc_CanScanOnAnyDistance_ReturnValue) == 0x000022, "Member 'BP_Defiler_VisionComponent_C_Check_Haked_Actor_Type::CallFunc_CanScanOnAnyDistance_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.CheckNeedDisable
// 0x0020 (0x0020 - 0x0000)
struct BP_Defiler_VisionComponent_C_CheckNeedDisable final
{
public:
	bool                                          bNeed;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63CC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_IsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_CheckNeedDisable) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_CheckNeedDisable");
static_assert(sizeof(BP_Defiler_VisionComponent_C_CheckNeedDisable) == 0x000020, "Wrong size on BP_Defiler_VisionComponent_C_CheckNeedDisable");
static_assert(offsetof(BP_Defiler_VisionComponent_C_CheckNeedDisable, bNeed) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_CheckNeedDisable::bNeed' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_CheckNeedDisable, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_CheckNeedDisable::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_CheckNeedDisable, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_CheckNeedDisable::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_CheckNeedDisable, CallFunc_Set_IsEmpty_ReturnValue) == 0x000018, "Member 'BP_Defiler_VisionComponent_C_CheckNeedDisable::CallFunc_Set_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_CheckNeedDisable, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000019, "Member 'BP_Defiler_VisionComponent_C_CheckNeedDisable::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.Destroy Vision Area
// 0x0001 (0x0001 - 0x0000)
struct BP_Defiler_VisionComponent_C_Destroy_Vision_Area final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_Destroy_Vision_Area) == 0x000001, "Wrong alignment on BP_Defiler_VisionComponent_C_Destroy_Vision_Area");
static_assert(sizeof(BP_Defiler_VisionComponent_C_Destroy_Vision_Area) == 0x000001, "Wrong size on BP_Defiler_VisionComponent_C_Destroy_Vision_Area");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Destroy_Vision_Area, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_Destroy_Vision_Area::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.DestroyAllMarkActors
// 0x0038 (0x0038 - 0x0000)
struct BP_Defiler_VisionComponent_C_DestroyAllMarkActors final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63CD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Defiler_MarkActor_C*>        CallFunc_Map_Values_Values;                        // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63CE[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Defiler_MarkActor_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63CF[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_DestroyAllMarkActors");
static_assert(sizeof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors) == 0x000038, "Wrong size on BP_Defiler_VisionComponent_C_DestroyAllMarkActors");
static_assert(offsetof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_DestroyAllMarkActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors, CallFunc_Map_Values_Values) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_DestroyAllMarkActors::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Defiler_VisionComponent_C_DestroyAllMarkActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Defiler_VisionComponent_C_DestroyAllMarkActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Defiler_VisionComponent_C_DestroyAllMarkActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Defiler_VisionComponent_C_DestroyAllMarkActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Defiler_VisionComponent_C_DestroyAllMarkActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_DestroyAllMarkActors, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_Defiler_VisionComponent_C_DestroyAllMarkActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.ExecuteUbergraph_BP_Defiler_VisionComponent
// 0x0090 (0x0090 - 0x0000)
struct BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D1[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D3[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerController*                    K2Node_DynamicCast_AsGz_Player_Controller;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalViewTarget_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D4[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckNeedDisable_bNeed;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpectatedViewTarget_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D6[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent");
static_assert(sizeof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent) == 0x000090, "Wrong size on BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, EntryPoint) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000028, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, K2Node_Event_EndPlayReason) == 0x000030, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000038, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000041, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, K2Node_DynamicCast_AsGz_Player_Controller) == 0x000050, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::K2Node_DynamicCast_AsGz_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_IsLocalViewTarget_ReturnValue) == 0x00005A, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_IsLocalViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, K2Node_Event_DeltaSeconds) == 0x00005C, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000060, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_CheckNeedDisable_bNeed) == 0x000068, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_CheckNeedDisable_bNeed' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_IsSpectatedViewTarget_ReturnValue) == 0x000078, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_IsSpectatedViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_IsLocallyControlled_ReturnValue) == 0x000079, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_BooleanOR_ReturnValue) == 0x00007A, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, K2Node_CustomEvent_Pawn) == 0x000080, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000088, "Member 'BP_Defiler_VisionComponent_C_ExecuteUbergraph_BP_Defiler_VisionComponent::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.Get Distance Scale Per Type
// 0x0018 (0x0018 - 0x0000)
struct BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type final
{
public:
	EGzDefilerTargetType                          DefilerType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Scale;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type");
static_assert(sizeof(BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type) == 0x000018, "Wrong size on BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type, DefilerType) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type::DefilerType' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type, Scale) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type::Scale' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_Get_Distance_Scale_Per_Type::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.GetOwnerLocation
// 0x0038 (0x0038 - 0x0000)
struct BP_Defiler_VisionComponent_C_GetOwnerLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_GetOwnerLocation) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_GetOwnerLocation");
static_assert(sizeof(BP_Defiler_VisionComponent_C_GetOwnerLocation) == 0x000038, "Wrong size on BP_Defiler_VisionComponent_C_GetOwnerLocation");
static_assert(offsetof(BP_Defiler_VisionComponent_C_GetOwnerLocation, ReturnValue) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_GetOwnerLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_GetOwnerLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Defiler_VisionComponent_C_GetOwnerLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_GetOwnerLocation, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Defiler_VisionComponent_C_GetOwnerLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.NewHackedTarget
// 0x0088 (0x0088 - 0x0000)
struct BP_Defiler_VisionComponent_C_NewHackedTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToScaned;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Defiler_MarkActor_C*                MarkActor;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NotInRange;                                        // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasDisabled;                                      // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D8[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Defiler_MarkActor_C*                CreatedMarkerLocal;                                // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	EGzDefilerTargetType                          DefilerTypeLocal;                                  // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D9[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Defiler_MarkActor_C*                FoundMarkLocal;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63DA[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0044(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzDefilerTargetType                          CallFunc_Check_Haked_Actor_Type_DefilerType;       // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Haked_Actor_Type_AnyDistance;       // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63DB[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Distance_Scale_Per_Type_Scale;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63DC[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Defiler_MarkActor_C*                CallFunc_AddMarker_Marker;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Defiler_MarkActor_C*                CallFunc_Map_Find_Value;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_NewHackedTarget) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_NewHackedTarget");
static_assert(sizeof(BP_Defiler_VisionComponent_C_NewHackedTarget) == 0x000088, "Wrong size on BP_Defiler_VisionComponent_C_NewHackedTarget");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, Target) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, Source) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::Source' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, DistanceToScaned) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::DistanceToScaned' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, MarkActor) == 0x000018, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::MarkActor' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, NotInRange) == 0x000020, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::NotInRange' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, bWasDisabled) == 0x000021, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::bWasDisabled' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CreatedMarkerLocal) == 0x000028, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CreatedMarkerLocal' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, DefilerTypeLocal) == 0x000030, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::DefilerTypeLocal' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, FoundMarkLocal) == 0x000038, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::FoundMarkLocal' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, Temp_delegate_Variable) == 0x000044, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_PostEvent_ReturnValue) == 0x000054, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000059, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_Check_Haked_Actor_Type_DefilerType) == 0x00005A, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_Check_Haked_Actor_Type_DefilerType' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_Check_Haked_Actor_Type_AnyDistance) == 0x00005B, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_Check_Haked_Actor_Type_AnyDistance' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_Get_Distance_Scale_Per_Type_Scale) == 0x000060, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_Get_Distance_Scale_Per_Type_Scale' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_AddMarker_Marker) == 0x000070, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_AddMarker_Marker' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_Map_Find_Value) == 0x000078, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_NewHackedTarget, CallFunc_Map_Remove_ReturnValue) == 0x000081, "Member 'BP_Defiler_VisionComponent_C_NewHackedTarget::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.OnNewHackedTarget__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Type;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63DD[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HackSource;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature");
static_assert(sizeof(BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature) == 0x000018, "Wrong size on BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature");
static_assert(offsetof(BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature, Actor) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature::Actor' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature, Type) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature::Type' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature, HackSource) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_OnNewHackedTarget__DelegateSignature::HackSource' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.OnPawnChanged_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_Defiler_VisionComponent_C_OnPawnChanged_Event final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_OnPawnChanged_Event) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_OnPawnChanged_Event");
static_assert(sizeof(BP_Defiler_VisionComponent_C_OnPawnChanged_Event) == 0x000008, "Wrong size on BP_Defiler_VisionComponent_C_OnPawnChanged_Event");
static_assert(offsetof(BP_Defiler_VisionComponent_C_OnPawnChanged_Event, Pawn) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_OnPawnChanged_Event::Pawn' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Defiler_VisionComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Defiler_VisionComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_Defiler_VisionComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Defiler_VisionComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Defiler_VisionComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Defiler_VisionComponent_C_ReceiveTick");
static_assert(sizeof(BP_Defiler_VisionComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_Defiler_VisionComponent_C_ReceiveTick");
static_assert(offsetof(BP_Defiler_VisionComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.RemoveHackedActor
// 0x0020 (0x0020 - 0x0000)
struct BP_Defiler_VisionComponent_C_RemoveHackedActor final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Defiler_MarkActor_C*                CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveSource_Disabled;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_RemoveHackedActor) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_RemoveHackedActor");
static_assert(sizeof(BP_Defiler_VisionComponent_C_RemoveHackedActor) == 0x000020, "Wrong size on BP_Defiler_VisionComponent_C_RemoveHackedActor");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveHackedActor, Target) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_RemoveHackedActor::Target' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveHackedActor, Source) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_RemoveHackedActor::Source' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveHackedActor, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_RemoveHackedActor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveHackedActor, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_Defiler_VisionComponent_C_RemoveHackedActor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveHackedActor, CallFunc_RemoveSource_Disabled) == 0x000019, "Member 'BP_Defiler_VisionComponent_C_RemoveHackedActor::CallFunc_RemoveSource_Disabled' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveHackedActor, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'BP_Defiler_VisionComponent_C_RemoveHackedActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.RemoveSourceDefilerLimb
// 0x0010 (0x0010 - 0x0000)
struct BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb final
{
public:
	const class UActorComponent*                  NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_IsEmpty_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb");
static_assert(sizeof(BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb) == 0x000010, "Wrong size on BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb, NewItem) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb::NewItem' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb, CallFunc_Set_IsEmpty_ReturnValue) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb::CallFunc_Set_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb, CallFunc_Set_Remove_ReturnValue) == 0x000009, "Member 'BP_Defiler_VisionComponent_C_RemoveSourceDefilerLimb::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.RemoveTape
// 0x0010 (0x0010 - 0x0000)
struct BP_Defiler_VisionComponent_C_RemoveTape final
{
public:
	const class AActor*                           Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_RemoveTape) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_RemoveTape");
static_assert(sizeof(BP_Defiler_VisionComponent_C_RemoveTape) == 0x000010, "Wrong size on BP_Defiler_VisionComponent_C_RemoveTape");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveTape, Item) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_RemoveTape::Item' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_RemoveTape, CallFunc_Set_Remove_ReturnValue) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_RemoveTape::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.Send Start Scan Wave
// 0x0060 (0x0060 - 0x0000)
struct BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave final
{
public:
	double                                        InRadius;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63DE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetOwnerLocation_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Defiler_VisionComponent_ReplicatedData K2Node_MakeStruct_S_Defiler_VisionComponent_ReplicatedData; // 0x0028(0x0030)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeStruct_StartTime_11_324E9A82436F58D1171140A5A73D84E9_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave");
static_assert(sizeof(BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave) == 0x000060, "Wrong size on BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave, InRadius) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave::InRadius' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave, CallFunc_GetOwnerLocation_ReturnValue) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave::CallFunc_GetOwnerLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave, K2Node_MakeStruct_S_Defiler_VisionComponent_ReplicatedData) == 0x000028, "Member 'BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave::K2Node_MakeStruct_S_Defiler_VisionComponent_ReplicatedData' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave, K2Node_MakeStruct_StartTime_11_324E9A82436F58D1171140A5A73D84E9_ImplicitCast) == 0x000058, "Member 'BP_Defiler_VisionComponent_C_Send_Start_Scan_Wave::K2Node_MakeStruct_StartTime_11_324E9A82436F58D1171140A5A73D84E9_ImplicitCast' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.SendDisableVision
// 0x0030 (0x0030 - 0x0000)
struct BP_Defiler_VisionComponent_C_SendDisableVision final
{
public:
	struct FS_Defiler_VisionComponent_ReplicatedData K2Node_MakeStruct_S_Defiler_VisionComponent_ReplicatedData; // 0x0000(0x0030)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_SendDisableVision) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_SendDisableVision");
static_assert(sizeof(BP_Defiler_VisionComponent_C_SendDisableVision) == 0x000030, "Wrong size on BP_Defiler_VisionComponent_C_SendDisableVision");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SendDisableVision, K2Node_MakeStruct_S_Defiler_VisionComponent_ReplicatedData) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_SendDisableVision::K2Node_MakeStruct_S_Defiler_VisionComponent_ReplicatedData' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.SetTagCountZero
// 0x0048 (0x0048 - 0x0000)
struct BP_Defiler_VisionComponent_C_SetTagCountZero final
{
public:
	TArray<struct FGameplayTag>                   Gameplay_Tags_Gameplay_Tags;                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Counter;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0018(0x0020)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63DF[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_SetTagCountZero) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_SetTagCountZero");
static_assert(sizeof(BP_Defiler_VisionComponent_C_SetTagCountZero) == 0x000048, "Wrong size on BP_Defiler_VisionComponent_C_SetTagCountZero");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetTagCountZero, Gameplay_Tags_Gameplay_Tags) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_SetTagCountZero::Gameplay_Tags_Gameplay_Tags' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetTagCountZero, Counter) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_SetTagCountZero::Counter' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetTagCountZero, Temp_int_Variable) == 0x000014, "Member 'BP_Defiler_VisionComponent_C_SetTagCountZero::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetTagCountZero, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000018, "Member 'BP_Defiler_VisionComponent_C_SetTagCountZero::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetTagCountZero, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_Defiler_VisionComponent_C_SetTagCountZero::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetTagCountZero, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Defiler_VisionComponent_C_SetTagCountZero::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetTagCountZero, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_Defiler_VisionComponent_C_SetTagCountZero::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetTagCountZero, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000041, "Member 'BP_Defiler_VisionComponent_C_SetTagCountZero::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.SetVisionStateWithTag
// 0x0050 (0x0050 - 0x0000)
struct BP_Defiler_VisionComponent_C_SetVisionStateWithTag final
{
public:
	struct FGameplayTag                           _0_;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0028(0x0020)()
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_SetVisionStateWithTag) == 0x000008, "Wrong alignment on BP_Defiler_VisionComponent_C_SetVisionStateWithTag");
static_assert(sizeof(BP_Defiler_VisionComponent_C_SetVisionStateWithTag) == 0x000050, "Wrong size on BP_Defiler_VisionComponent_C_SetVisionStateWithTag");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetVisionStateWithTag, _0_) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_SetVisionStateWithTag::_0_' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetVisionStateWithTag, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_SetVisionStateWithTag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetVisionStateWithTag, K2Node_MakeArray_Array_1) == 0x000018, "Member 'BP_Defiler_VisionComponent_C_SetVisionStateWithTag::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetVisionStateWithTag, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000028, "Member 'BP_Defiler_VisionComponent_C_SetVisionStateWithTag::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SetVisionStateWithTag, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000048, "Member 'BP_Defiler_VisionComponent_C_SetVisionStateWithTag::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.SpawnVisionArea
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Defiler_VisionComponent_C_SpawnVisionArea final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63E0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63E1[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Defiler_VisionArea_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_SpawnVisionArea) == 0x000010, "Wrong alignment on BP_Defiler_VisionComponent_C_SpawnVisionArea");
static_assert(sizeof(BP_Defiler_VisionComponent_C_SpawnVisionArea) == 0x0000B0, "Wrong size on BP_Defiler_VisionComponent_C_SpawnVisionArea");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SpawnVisionArea, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_SpawnVisionArea::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SpawnVisionArea, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Defiler_VisionComponent_C_SpawnVisionArea::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SpawnVisionArea, CallFunc_GetOwner_ReturnValue_1) == 0x000010, "Member 'BP_Defiler_VisionComponent_C_SpawnVisionArea::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SpawnVisionArea, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Defiler_VisionComponent_C_SpawnVisionArea::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SpawnVisionArea, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000030, "Member 'BP_Defiler_VisionComponent_C_SpawnVisionArea::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SpawnVisionArea, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Defiler_VisionComponent_C_SpawnVisionArea::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SpawnVisionArea, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_Defiler_VisionComponent_C_SpawnVisionArea::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SpawnVisionArea, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'BP_Defiler_VisionComponent_C_SpawnVisionArea::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_SpawnVisionArea, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'BP_Defiler_VisionComponent_C_SpawnVisionArea::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_Defiler_VisionComponent.BP_Defiler_VisionComponent_C.UpdateState
// 0x0003 (0x0003 - 0x0000)
struct BP_Defiler_VisionComponent_C_UpdateState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Defiler_VisionComponent_C_UpdateState) == 0x000001, "Wrong alignment on BP_Defiler_VisionComponent_C_UpdateState");
static_assert(sizeof(BP_Defiler_VisionComponent_C_UpdateState) == 0x000003, "Wrong size on BP_Defiler_VisionComponent_C_UpdateState");
static_assert(offsetof(BP_Defiler_VisionComponent_C_UpdateState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Defiler_VisionComponent_C_UpdateState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_UpdateState, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_Defiler_VisionComponent_C_UpdateState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Defiler_VisionComponent_C_UpdateState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000002, "Member 'BP_Defiler_VisionComponent_C_UpdateState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

}

