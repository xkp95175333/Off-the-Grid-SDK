#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InteractionInput

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "G01_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_InteractionInput.WBP_InteractionInput_C.ExecuteUbergraph_WBP_InteractionInput
// 0x0008 (0x0008 - 0x0000)
struct WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput) == 0x000004, "Wrong alignment on WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput");
static_assert(sizeof(WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput) == 0x000008, "Wrong size on WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput");
static_assert(offsetof(WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput, EntryPoint) == 0x000000, "Member 'WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput, K2Node_CustomEvent_NewValue) == 0x000004, "Member 'WBP_InteractionInput_C_ExecuteUbergraph_WBP_InteractionInput::K2Node_CustomEvent_NewValue' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.GetDisplayTextFromInteractData
// 0x0140 (0x0140 - 0x0000)
struct WBP_InteractionInput_C_GetDisplayTextFromInteractData final
{
public:
	class UGzInteractableComponent*               Interact;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReturnParm)
	class FText                                   EmptyText;                                         // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInteractionData                     CallFunc_TryGetCurrentInteractionData_OutInteractionData; // 0x0030(0x00F8)(ContainsInstancedReference)
	bool                                          CallFunc_TryGetCurrentInteractionData_ReturnValue; // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F3[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDefaultInteractionBehavior*            CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_GetDisplayTextFromInteractData) == 0x000008, "Wrong alignment on WBP_InteractionInput_C_GetDisplayTextFromInteractData");
static_assert(sizeof(WBP_InteractionInput_C_GetDisplayTextFromInteractData) == 0x000140, "Wrong size on WBP_InteractionInput_C_GetDisplayTextFromInteractData");
static_assert(offsetof(WBP_InteractionInput_C_GetDisplayTextFromInteractData, Interact) == 0x000000, "Member 'WBP_InteractionInput_C_GetDisplayTextFromInteractData::Interact' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_GetDisplayTextFromInteractData, ReturnValue) == 0x000008, "Member 'WBP_InteractionInput_C_GetDisplayTextFromInteractData::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_GetDisplayTextFromInteractData, EmptyText) == 0x000018, "Member 'WBP_InteractionInput_C_GetDisplayTextFromInteractData::EmptyText' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_GetDisplayTextFromInteractData, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_InteractionInput_C_GetDisplayTextFromInteractData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_GetDisplayTextFromInteractData, CallFunc_TryGetCurrentInteractionData_OutInteractionData) == 0x000030, "Member 'WBP_InteractionInput_C_GetDisplayTextFromInteractData::CallFunc_TryGetCurrentInteractionData_OutInteractionData' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_GetDisplayTextFromInteractData, CallFunc_TryGetCurrentInteractionData_ReturnValue) == 0x000128, "Member 'WBP_InteractionInput_C_GetDisplayTextFromInteractData::CallFunc_TryGetCurrentInteractionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_GetDisplayTextFromInteractData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000129, "Member 'WBP_InteractionInput_C_GetDisplayTextFromInteractData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_GetDisplayTextFromInteractData, CallFunc_Array_Get_Item) == 0x000130, "Member 'WBP_InteractionInput_C_GetDisplayTextFromInteractData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_GetDisplayTextFromInteractData, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'WBP_InteractionInput_C_GetDisplayTextFromInteractData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.OnInteractionSuccess
// 0x0008 (0x0008 - 0x0000)
struct WBP_InteractionInput_C_OnInteractionSuccess final
{
public:
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_OnInteractionSuccess) == 0x000004, "Wrong alignment on WBP_InteractionInput_C_OnInteractionSuccess");
static_assert(sizeof(WBP_InteractionInput_C_OnInteractionSuccess) == 0x000008, "Wrong size on WBP_InteractionInput_C_OnInteractionSuccess");
static_assert(offsetof(WBP_InteractionInput_C_OnInteractionSuccess, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000000, "Member 'WBP_InteractionInput_C_OnInteractionSuccess::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.Set Interaction Duration
// 0x0008 (0x0008 - 0x0000)
struct WBP_InteractionInput_C_Set_Interaction_Duration final
{
public:
	double                                        InteractionDuration;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_Set_Interaction_Duration) == 0x000008, "Wrong alignment on WBP_InteractionInput_C_Set_Interaction_Duration");
static_assert(sizeof(WBP_InteractionInput_C_Set_Interaction_Duration) == 0x000008, "Wrong size on WBP_InteractionInput_C_Set_Interaction_Duration");
static_assert(offsetof(WBP_InteractionInput_C_Set_Interaction_Duration, InteractionDuration) == 0x000000, "Member 'WBP_InteractionInput_C_Set_Interaction_Duration::InteractionDuration' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.SetActionInput
// 0x0140 (0x0140 - 0x0000)
struct WBP_InteractionInput_C_SetActionInput final
{
public:
	class UGzInteractableComponent*               FocusCache;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          PickableItem;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HighlightText;                                     // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayTextFromInteractData_ReturnValue; // 0x0018(0x0010)()
	struct FGzInteractionData                     CallFunc_TryGetCurrentInteractionData_OutInteractionData; // 0x0028(0x00F8)(ContainsInstancedReference)
	bool                                          CallFunc_TryGetCurrentInteractionData_ReturnValue; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F5[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0010)(ConstParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_SetActionInput) == 0x000008, "Wrong alignment on WBP_InteractionInput_C_SetActionInput");
static_assert(sizeof(WBP_InteractionInput_C_SetActionInput) == 0x000140, "Wrong size on WBP_InteractionInput_C_SetActionInput");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, FocusCache) == 0x000000, "Member 'WBP_InteractionInput_C_SetActionInput::FocusCache' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, PickableItem) == 0x000008, "Member 'WBP_InteractionInput_C_SetActionInput::PickableItem' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, HighlightText) == 0x000009, "Member 'WBP_InteractionInput_C_SetActionInput::HighlightText' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, Temp_bool_Variable) == 0x00000A, "Member 'WBP_InteractionInput_C_SetActionInput::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, Temp_bool_Variable_1) == 0x00000B, "Member 'WBP_InteractionInput_C_SetActionInput::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, Temp_byte_Variable) == 0x00000C, "Member 'WBP_InteractionInput_C_SetActionInput::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, Temp_byte_Variable_1) == 0x00000D, "Member 'WBP_InteractionInput_C_SetActionInput::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, Temp_bool_Variable_2) == 0x00000E, "Member 'WBP_InteractionInput_C_SetActionInput::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, Temp_byte_Variable_2) == 0x00000F, "Member 'WBP_InteractionInput_C_SetActionInput::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, Temp_byte_Variable_3) == 0x000010, "Member 'WBP_InteractionInput_C_SetActionInput::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, CallFunc_GetDisplayTextFromInteractData_ReturnValue) == 0x000018, "Member 'WBP_InteractionInput_C_SetActionInput::CallFunc_GetDisplayTextFromInteractData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, CallFunc_TryGetCurrentInteractionData_OutInteractionData) == 0x000028, "Member 'WBP_InteractionInput_C_SetActionInput::CallFunc_TryGetCurrentInteractionData_OutInteractionData' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, CallFunc_TryGetCurrentInteractionData_ReturnValue) == 0x000120, "Member 'WBP_InteractionInput_C_SetActionInput::CallFunc_TryGetCurrentInteractionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'WBP_InteractionInput_C_SetActionInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, K2Node_Select_Default) == 0x000128, "Member 'WBP_InteractionInput_C_SetActionInput::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, CallFunc_BooleanAND_ReturnValue) == 0x000138, "Member 'WBP_InteractionInput_C_SetActionInput::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, K2Node_Select_Default_1) == 0x000139, "Member 'WBP_InteractionInput_C_SetActionInput::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetActionInput, K2Node_Select_Default_2) == 0x00013A, "Member 'WBP_InteractionInput_C_SetActionInput::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.SetFailedInteractionText
// 0x0010 (0x0010 - 0x0000)
struct WBP_InteractionInput_C_SetFailedInteractionText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InteractionInput_C_SetFailedInteractionText) == 0x000008, "Wrong alignment on WBP_InteractionInput_C_SetFailedInteractionText");
static_assert(sizeof(WBP_InteractionInput_C_SetFailedInteractionText) == 0x000010, "Wrong size on WBP_InteractionInput_C_SetFailedInteractionText");
static_assert(offsetof(WBP_InteractionInput_C_SetFailedInteractionText, Text) == 0x000000, "Member 'WBP_InteractionInput_C_SetFailedInteractionText::Text' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.SetInitialInteractionProgress
// 0x0008 (0x0008 - 0x0000)
struct WBP_InteractionInput_C_SetInitialInteractionProgress final
{
public:
	double                                        InitialInteractionProgress;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_SetInitialInteractionProgress) == 0x000008, "Wrong alignment on WBP_InteractionInput_C_SetInitialInteractionProgress");
static_assert(sizeof(WBP_InteractionInput_C_SetInitialInteractionProgress) == 0x000008, "Wrong size on WBP_InteractionInput_C_SetInitialInteractionProgress");
static_assert(offsetof(WBP_InteractionInput_C_SetInitialInteractionProgress, InitialInteractionProgress) == 0x000000, "Member 'WBP_InteractionInput_C_SetInitialInteractionProgress::InitialInteractionProgress' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.SetInputState
// 0x0020 (0x0020 - 0x0000)
struct WBP_InteractionInput_C_SetInputState final
{
public:
	bool                                          BlockInputeState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BlockTime;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_SetInputState) == 0x000008, "Wrong alignment on WBP_InteractionInput_C_SetInputState");
static_assert(sizeof(WBP_InteractionInput_C_SetInputState) == 0x000020, "Wrong size on WBP_InteractionInput_C_SetInputState");
static_assert(offsetof(WBP_InteractionInput_C_SetInputState, BlockInputeState) == 0x000000, "Member 'WBP_InteractionInput_C_SetInputState::BlockInputeState' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetInputState, BlockTime) == 0x000008, "Member 'WBP_InteractionInput_C_SetInputState::BlockTime' has a wrong offset!");
static_assert(offsetof(WBP_InteractionInput_C_SetInputState, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000018, "Member 'WBP_InteractionInput_C_SetInputState::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.SetIsLeftShoulder
// 0x0001 (0x0001 - 0x0000)
struct WBP_InteractionInput_C_SetIsLeftShoulder final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_SetIsLeftShoulder) == 0x000001, "Wrong alignment on WBP_InteractionInput_C_SetIsLeftShoulder");
static_assert(sizeof(WBP_InteractionInput_C_SetIsLeftShoulder) == 0x000001, "Wrong size on WBP_InteractionInput_C_SetIsLeftShoulder");
static_assert(offsetof(WBP_InteractionInput_C_SetIsLeftShoulder, NewValue) == 0x000000, "Member 'WBP_InteractionInput_C_SetIsLeftShoulder::NewValue' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.SetResetProgressOnRelease
// 0x0001 (0x0001 - 0x0000)
struct WBP_InteractionInput_C_SetResetProgressOnRelease final
{
public:
	bool                                          bResetProgressBarOnRelease;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_SetResetProgressOnRelease) == 0x000001, "Wrong alignment on WBP_InteractionInput_C_SetResetProgressOnRelease");
static_assert(sizeof(WBP_InteractionInput_C_SetResetProgressOnRelease) == 0x000001, "Wrong size on WBP_InteractionInput_C_SetResetProgressOnRelease");
static_assert(offsetof(WBP_InteractionInput_C_SetResetProgressOnRelease, bResetProgressBarOnRelease) == 0x000000, "Member 'WBP_InteractionInput_C_SetResetProgressOnRelease::bResetProgressBarOnRelease' has a wrong offset!");

// Function WBP_InteractionInput.WBP_InteractionInput_C.UpdateHolding
// 0x0008 (0x0008 - 0x0000)
struct WBP_InteractionInput_C_UpdateHolding final
{
public:
	double                                        InitialInteractionProgress;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InteractionInput_C_UpdateHolding) == 0x000008, "Wrong alignment on WBP_InteractionInput_C_UpdateHolding");
static_assert(sizeof(WBP_InteractionInput_C_UpdateHolding) == 0x000008, "Wrong size on WBP_InteractionInput_C_UpdateHolding");
static_assert(offsetof(WBP_InteractionInput_C_UpdateHolding, InitialInteractionProgress) == 0x000000, "Member 'WBP_InteractionInput_C_UpdateHolding::InitialInteractionProgress' has a wrong offset!");

}

