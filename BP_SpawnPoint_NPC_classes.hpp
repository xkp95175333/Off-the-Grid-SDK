#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnPoint_NPC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AI_Point_classes.hpp"
#include "E_NPC_MissionStates_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SpawnPoint_NPC.BP_SpawnPoint_NPC_C
// 0x0098 (0x0358 - 0x02C0)
class ABP_SpawnPoint_NPC_C final : public ABP_AI_Point_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       SplineToSpawner;                                   // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NPC_Type;                                          // 0x02D0(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_PatrolPoint_C*                  PatrolPathStart;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_Spawner_C*                      SpawnerRef;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          IsReinforcement;                                   // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582A[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_EscapePoint_C*                  EscapePathStart;                                   // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	E_NPC_MissionStates                           Mission_State;                                     // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSpawnPointteamID;                               // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582B[0x2];                                     // 0x02FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TeamID;                                            // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSpawnOnly;                                       // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582C[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, int32>              NPCTypeProbability;                                // 0x0308(0x0050)(Edit, BlueprintVisible)

public:
	void UserConstructionScript();
	void UpdateSplineToSpawner();
	void SpawnNPC(int32 Param_TeamID, class APawn** SpawnedNPC, class ABPC_NPC_Enemy_C** Controller);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_SpawnPoint_NPC(int32 EntryPoint);
	void CalculateNPCType(struct FGameplayTag* ReturnNPCType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpawnPoint_NPC_C">();
	}
	static class ABP_SpawnPoint_NPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SpawnPoint_NPC_C>();
	}
};
static_assert(alignof(ABP_SpawnPoint_NPC_C) == 0x000008, "Wrong alignment on ABP_SpawnPoint_NPC_C");
static_assert(sizeof(ABP_SpawnPoint_NPC_C) == 0x000358, "Wrong size on ABP_SpawnPoint_NPC_C");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_SpawnPoint_NPC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, SplineToSpawner) == 0x0002C8, "Member 'ABP_SpawnPoint_NPC_C::SplineToSpawner' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, NPC_Type) == 0x0002D0, "Member 'ABP_SpawnPoint_NPC_C::NPC_Type' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, PatrolPathStart) == 0x0002D8, "Member 'ABP_SpawnPoint_NPC_C::PatrolPathStart' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, SpawnerRef) == 0x0002E0, "Member 'ABP_SpawnPoint_NPC_C::SpawnerRef' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, IsReinforcement) == 0x0002E8, "Member 'ABP_SpawnPoint_NPC_C::IsReinforcement' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, EscapePathStart) == 0x0002F0, "Member 'ABP_SpawnPoint_NPC_C::EscapePathStart' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, Mission_State) == 0x0002F8, "Member 'ABP_SpawnPoint_NPC_C::Mission_State' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, UseSpawnPointteamID) == 0x0002F9, "Member 'ABP_SpawnPoint_NPC_C::UseSpawnPointteamID' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, TeamID) == 0x0002FC, "Member 'ABP_SpawnPoint_NPC_C::TeamID' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, IsSpawnOnly) == 0x000300, "Member 'ABP_SpawnPoint_NPC_C::IsSpawnOnly' has a wrong offset!");
static_assert(offsetof(ABP_SpawnPoint_NPC_C, NPCTypeProbability) == 0x000308, "Member 'ABP_SpawnPoint_NPC_C::NPCTypeProbability' has a wrong offset!");

}

