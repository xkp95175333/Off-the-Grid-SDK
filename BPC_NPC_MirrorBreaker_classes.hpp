#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_NPC_MirrorBreaker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AI_Controller_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_NPC_MirrorBreaker.BPC_NPC_MirrorBreaker_C
// 0x0048 (0x0510 - 0x04C8)
class ABPC_NPC_MirrorBreaker_C final : public ABP_AI_Controller_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	FMulticastInlineDelegateProperty_             Event_PatrolEnd;                                   // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Event_IdleEnd;                                     // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             NewEventDispatcher;                                // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Event_AlertEnd;                                    // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ReceivePossess(class APawn* PossessedPawn);
	void NewEventDispatcher__DelegateSignature();
	void ExecuteUbergraph_BPC_NPC_MirrorBreaker(int32 EntryPoint);
	void Event_PatrolEnd__DelegateSignature();
	void Event_IdleEnd__DelegateSignature(bool Success);
	void Event_AlertEnd__DelegateSignature(bool Success);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_NPC_MirrorBreaker_C">();
	}
	static class ABPC_NPC_MirrorBreaker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPC_NPC_MirrorBreaker_C>();
	}
};
static_assert(alignof(ABPC_NPC_MirrorBreaker_C) == 0x000008, "Wrong alignment on ABPC_NPC_MirrorBreaker_C");
static_assert(sizeof(ABPC_NPC_MirrorBreaker_C) == 0x000510, "Wrong size on ABPC_NPC_MirrorBreaker_C");
static_assert(offsetof(ABPC_NPC_MirrorBreaker_C, UberGraphFrame) == 0x0004C8, "Member 'ABPC_NPC_MirrorBreaker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPC_NPC_MirrorBreaker_C, Event_PatrolEnd) == 0x0004D0, "Member 'ABPC_NPC_MirrorBreaker_C::Event_PatrolEnd' has a wrong offset!");
static_assert(offsetof(ABPC_NPC_MirrorBreaker_C, Event_IdleEnd) == 0x0004E0, "Member 'ABPC_NPC_MirrorBreaker_C::Event_IdleEnd' has a wrong offset!");
static_assert(offsetof(ABPC_NPC_MirrorBreaker_C, NewEventDispatcher) == 0x0004F0, "Member 'ABPC_NPC_MirrorBreaker_C::NewEventDispatcher' has a wrong offset!");
static_assert(offsetof(ABPC_NPC_MirrorBreaker_C, Event_AlertEnd) == 0x000500, "Member 'ABPC_NPC_MirrorBreaker_C::Event_AlertEnd' has a wrong offset!");

}

