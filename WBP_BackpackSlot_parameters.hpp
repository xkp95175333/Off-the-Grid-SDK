#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BackpackSlot

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_BackpackSlot.WBP_BackpackSlot_C.BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BackpackSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_BackpackSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_BackpackSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_BackpackSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_BackpackSlot_C_BndEvt__WBP_BackpackSlot_PocketButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_BackpackSlot.WBP_BackpackSlot_C.ExecuteUbergraph_WBP_BackpackSlot
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B2A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Inventory_BaseButton_C*            K2Node_DynamicCast_AsWBP_Inventory_Base_Button;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B2B[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B2C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x0028(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0070(0x0038)(HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue;     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B2D[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             K2Node_Event_NewItem;                              // 0x00D0(0x0010)(ConstParm)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemQuantity_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B2E[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot) == 0x000008, "Wrong alignment on WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot");
static_assert(sizeof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot) == 0x0000F8, "Wrong size on WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, EntryPoint) == 0x000000, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, K2Node_DynamicCast_AsWBP_Inventory_Base_Button) == 0x000008, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::K2Node_DynamicCast_AsWBP_Inventory_Base_Button' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, K2Node_CustomEvent_Attribute) == 0x000028, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, K2Node_CustomEvent_NewValue) == 0x000060, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, K2Node_CustomEvent_OldValue) == 0x000064, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, Temp_real_Variable) == 0x000068, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, Temp_real_Variable_1) == 0x00006C, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, Temp_struct_Variable) == 0x000070, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, K2Node_ComponentBoundEvent_Button) == 0x0000A8, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x0000B0, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0000B8, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, CallFunc_ListenForAttributeChange_ReturnValue) == 0x0000C0, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::CallFunc_ListenForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, K2Node_Event_NewItem) == 0x0000D0, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::K2Node_Event_NewItem' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, CallFunc_GetItemData_ReturnValue) == 0x0000E0, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, CallFunc_GetItemQuantity_ReturnValue) == 0x0000E8, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::CallFunc_GetItemQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x0000EC, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot, CallFunc_Conv_IntToBool_ReturnValue) == 0x0000F4, "Member 'WBP_BackpackSlot_C_ExecuteUbergraph_WBP_BackpackSlot::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");

// Function WBP_BackpackSlot.WBP_BackpackSlot_C.HandleValidItem
// 0x0038 (0x0038 - 0x0000)
struct WBP_BackpackSlot_C_HandleValidItem final
{
public:
	struct FGzInvItem                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B2F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackSlot_C_HandleValidItem) == 0x000008, "Wrong alignment on WBP_BackpackSlot_C_HandleValidItem");
static_assert(sizeof(WBP_BackpackSlot_C_HandleValidItem) == 0x000038, "Wrong size on WBP_BackpackSlot_C_HandleValidItem");
static_assert(offsetof(WBP_BackpackSlot_C_HandleValidItem, Item) == 0x000000, "Member 'WBP_BackpackSlot_C_HandleValidItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_HandleValidItem, CallFunc_GetItemData_ReturnValue) == 0x000010, "Member 'WBP_BackpackSlot_C_HandleValidItem::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_HandleValidItem, CallFunc_GetRarity_ReturnValue) == 0x000018, "Member 'WBP_BackpackSlot_C_HandleValidItem::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_HandleValidItem, CallFunc_GetItemData_ReturnValue_1) == 0x000020, "Member 'WBP_BackpackSlot_C_HandleValidItem::CallFunc_GetItemData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_HandleValidItem, CallFunc_GetRarityColor_ReturnValue) == 0x000028, "Member 'WBP_BackpackSlot_C_HandleValidItem::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");

// Function WBP_BackpackSlot.WBP_BackpackSlot_C.OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459
// 0x0040 (0x0040 - 0x0000)
struct WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459) == 0x000008, "Wrong alignment on WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459");
static_assert(sizeof(WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459) == 0x000040, "Wrong size on WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459");
static_assert(offsetof(WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459, Attribute) == 0x000000, "Member 'WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459, NewValue) == 0x000038, "Member 'WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459, OldValue) == 0x00003C, "Member 'WBP_BackpackSlot_C_OnAttributeChanged_7160B3BE45AAF0591F2F36B3ADD01459::OldValue' has a wrong offset!");

// Function WBP_BackpackSlot.WBP_BackpackSlot_C.OnPocketChanged_BP
// 0x0010 (0x0010 - 0x0000)
struct WBP_BackpackSlot_C_OnPocketChanged_BP final
{
public:
	struct FGzInvItem                             NewItem;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_BackpackSlot_C_OnPocketChanged_BP) == 0x000008, "Wrong alignment on WBP_BackpackSlot_C_OnPocketChanged_BP");
static_assert(sizeof(WBP_BackpackSlot_C_OnPocketChanged_BP) == 0x000010, "Wrong size on WBP_BackpackSlot_C_OnPocketChanged_BP");
static_assert(offsetof(WBP_BackpackSlot_C_OnPocketChanged_BP, NewItem) == 0x000000, "Member 'WBP_BackpackSlot_C_OnPocketChanged_BP::NewItem' has a wrong offset!");

// Function WBP_BackpackSlot.WBP_BackpackSlot_C.StopListenForAttribute
// 0x0001 (0x0001 - 0x0000)
struct WBP_BackpackSlot_C_StopListenForAttribute final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackSlot_C_StopListenForAttribute) == 0x000001, "Wrong alignment on WBP_BackpackSlot_C_StopListenForAttribute");
static_assert(sizeof(WBP_BackpackSlot_C_StopListenForAttribute) == 0x000001, "Wrong size on WBP_BackpackSlot_C_StopListenForAttribute");
static_assert(offsetof(WBP_BackpackSlot_C_StopListenForAttribute, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_BackpackSlot_C_StopListenForAttribute::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_BackpackSlot.WBP_BackpackSlot_C.UpdateCharge
// 0x0058 (0x0058 - 0x0000)
struct WBP_BackpackSlot_C_UpdateCharge final
{
public:
	struct FGzInvItem                             Item;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0010(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultAttributeFromItemDataByTag_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B30[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B31[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackSlot_C_UpdateCharge) == 0x000008, "Wrong alignment on WBP_BackpackSlot_C_UpdateCharge");
static_assert(sizeof(WBP_BackpackSlot_C_UpdateCharge) == 0x000058, "Wrong size on WBP_BackpackSlot_C_UpdateCharge");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, Item) == 0x000000, "Member 'WBP_BackpackSlot_C_UpdateCharge::Item' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, Temp_struct_Variable) == 0x000010, "Member 'WBP_BackpackSlot_C_UpdateCharge::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, CallFunc_GetItemData_ReturnValue) == 0x000018, "Member 'WBP_BackpackSlot_C_UpdateCharge::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, CallFunc_GetDefaultAttributeFromItemDataByTag_ReturnValue) == 0x000020, "Member 'WBP_BackpackSlot_C_UpdateCharge::CallFunc_GetDefaultAttributeFromItemDataByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000028, "Member 'WBP_BackpackSlot_C_UpdateCharge::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000030, "Member 'WBP_BackpackSlot_C_UpdateCharge::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, CallFunc_GetFloatAttribute_ReturnValue) == 0x000034, "Member 'WBP_BackpackSlot_C_UpdateCharge::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_BackpackSlot_C_UpdateCharge::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000040, "Member 'WBP_BackpackSlot_C_UpdateCharge::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'WBP_BackpackSlot_C_UpdateCharge::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BackpackSlot_C_UpdateCharge, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000050, "Member 'WBP_BackpackSlot_C_UpdateCharge::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

}

