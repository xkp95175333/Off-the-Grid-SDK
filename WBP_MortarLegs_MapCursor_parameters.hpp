#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MortarLegs_MapCursor

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_MortarLegs_MapCursor.WBP_MortarLegs_MapCursor_C.ExecuteUbergraph_WBP_MortarLegs_MapCursor
// 0x0010 (0x0010 - 0x0000)
struct WBP_MortarLegs_MapCursor_C_ExecuteUbergraph_WBP_MortarLegs_MapCursor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EFF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MortarLegs_MapCursor_C_ExecuteUbergraph_WBP_MortarLegs_MapCursor) == 0x000008, "Wrong alignment on WBP_MortarLegs_MapCursor_C_ExecuteUbergraph_WBP_MortarLegs_MapCursor");
static_assert(sizeof(WBP_MortarLegs_MapCursor_C_ExecuteUbergraph_WBP_MortarLegs_MapCursor) == 0x000010, "Wrong size on WBP_MortarLegs_MapCursor_C_ExecuteUbergraph_WBP_MortarLegs_MapCursor");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_ExecuteUbergraph_WBP_MortarLegs_MapCursor, EntryPoint) == 0x000000, "Member 'WBP_MortarLegs_MapCursor_C_ExecuteUbergraph_WBP_MortarLegs_MapCursor::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_ExecuteUbergraph_WBP_MortarLegs_MapCursor, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_MortarLegs_MapCursor_C_ExecuteUbergraph_WBP_MortarLegs_MapCursor::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MortarLegs_MapCursor.WBP_MortarLegs_MapCursor_C.SetIsAvailable
// 0x0018 (0x0018 - 0x0000)
struct WBP_MortarLegs_MapCursor_C_SetIsAvailable final
{
public:
	bool                                          bAvailable;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F00[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MortarLegs_MapCursor_C_SetIsAvailable) == 0x000008, "Wrong alignment on WBP_MortarLegs_MapCursor_C_SetIsAvailable");
static_assert(sizeof(WBP_MortarLegs_MapCursor_C_SetIsAvailable) == 0x000018, "Wrong size on WBP_MortarLegs_MapCursor_C_SetIsAvailable");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, bAvailable) == 0x000000, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::bAvailable' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, Temp_byte_Variable) == 0x000001, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, Temp_bool_Variable) == 0x000002, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, K2Node_Select_Default) == 0x000010, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, Temp_byte_Variable_3) == 0x000011, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, Temp_bool_Variable_1) == 0x000012, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, K2Node_Select_Default_1) == 0x000013, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MortarLegs_MapCursor_C_SetIsAvailable, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000014, "Member 'WBP_MortarLegs_MapCursor_C_SetIsAvailable::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

}

