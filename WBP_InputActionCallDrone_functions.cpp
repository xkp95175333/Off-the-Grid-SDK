#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputActionCallDrone

#include "Basic.hpp"

#include "WBP_InputActionCallDrone_classes.hpp"
#include "WBP_InputActionCallDrone_parameters.hpp"


namespace SDK
{

// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.BndEvt__WBP_InputActionCallDrone_GzActionWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bUsingGamepad                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InputActionCallDrone_C::BndEvt__WBP_InputActionCallDrone_GzActionWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "BndEvt__WBP_InputActionCallDrone_GzActionWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature");

	Params::WBP_InputActionCallDrone_C_BndEvt__WBP_InputActionCallDrone_GzActionWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature Parms{};

	Parms.bUsingGamepad = bUsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_InputActionCallDrone_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.EventCheck
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::EventCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "EventCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.ExecuteUbergraph_WBP_InputActionCallDrone
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InputActionCallDrone_C::ExecuteUbergraph_WBP_InputActionCallDrone(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "ExecuteUbergraph_WBP_InputActionCallDrone");

	Params::WBP_InputActionCallDrone_C_ExecuteUbergraph_WBP_InputActionCallDrone Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.GetAvailableLoadoutsCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Currency                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InputActionCallDrone_C::GetAvailableLoadoutsCount(int32 Currency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "GetAvailableLoadoutsCount");

	Params::WBP_InputActionCallDrone_C_GetAvailableLoadoutsCount Parms{};

	Parms.Currency = Currency;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.GetCurrency
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Quantity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InputActionCallDrone_C::GetCurrency(int32* Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "GetCurrency");

	Params::WBP_InputActionCallDrone_C_GetCurrency Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Quantity != nullptr)
		*Quantity = Parms.Quantity;
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.HideCostEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::HideCostEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "HideCostEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.IncrementAvailableLoadouts
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            Guid                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InputActionCallDrone_C::IncrementAvailableLoadouts(const struct FGuid& Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "IncrementAvailableLoadouts");

	Params::WBP_InputActionCallDrone_C_IncrementAvailableLoadouts Parms{};

	Parms.Guid = std::move(Guid);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.OnCallDroneUnavailable
// (BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::OnCallDroneUnavailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "OnCallDroneUnavailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.OnCloseAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::OnCloseAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "OnCloseAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.OnEventNotificationStageDelegat
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotificationID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGzNotificationStageType                StageType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGzEventNotificationData         NotificationData                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_InputActionCallDrone_C::OnEventNotificationStageDelegat(class FName NotificationID, EGzNotificationStageType StageType, const struct FGzEventNotificationData& NotificationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "OnEventNotificationStageDelegat");

	Params::WBP_InputActionCallDrone_C_OnEventNotificationStageDelegat Parms{};

	Parms.NotificationID = NotificationID;
	Parms.StageType = StageType;
	Parms.NotificationData = std::move(NotificationData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.OnInventoryUpdated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGzInvChangeEvent                       State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGzInvItem                       Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_InputActionCallDrone_C::OnInventoryUpdated(EGzInvChangeEvent State, const struct FGzInvItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "OnInventoryUpdated");

	Params::WBP_InputActionCallDrone_C_OnInventoryUpdated Parms{};

	Parms.State = State;
	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.OnViewTargetChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            ViewTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_InputActionCallDrone_C::OnViewTargetChanged(class APawn* ViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "OnViewTargetChanged");

	Params::WBP_InputActionCallDrone_C_OnViewTargetChanged Parms{};

	Parms.ViewTarget = ViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.PlayTooltipAnimationClose
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::PlayTooltipAnimationClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "PlayTooltipAnimationClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.PlayTooltipAnimationOpen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::PlayTooltipAnimationOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "PlayTooltipAnimationOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.ReceiveBindEvents
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            NewViewTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_InputActionCallDrone_C::ReceiveBindEvents(class APawn* NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "ReceiveBindEvents");

	Params::WBP_InputActionCallDrone_C_ReceiveBindEvents Parms{};

	Parms.NewViewTarget = NewViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.ReceiveUnbindEvents
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            OldViewTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_InputActionCallDrone_C::ReceiveUnbindEvents(class APawn* OldViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "ReceiveUnbindEvents");

	Params::WBP_InputActionCallDrone_C_ReceiveUnbindEvents Parms{};

	Parms.OldViewTarget = OldViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.SetVehicleUI
// (BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::SetVehicleUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "SetVehicleUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.ShowCostEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::ShowCostEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "ShowCostEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.UpdateHolddHint
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::UpdateHolddHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "UpdateHolddHint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.UpdateLoadoutAvailabilityState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::UpdateLoadoutAvailabilityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "UpdateLoadoutAvailabilityState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.UpdateTimer
// (BlueprintCallable, BlueprintEvent)

void UWBP_InputActionCallDrone_C::UpdateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "UpdateTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.CanCallDrone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_InputActionCallDrone_C::CanCallDrone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "CanCallDrone");

	Params::WBP_InputActionCallDrone_C_CanCallDrone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_InputActionCallDrone.WBP_InputActionCallDrone_C.GetCallDroneCooldown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  Cooldown                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InputActionCallDrone_C::GetCallDroneCooldown(double* Cooldown) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InputActionCallDrone_C", "GetCallDroneCooldown");

	Params::WBP_InputActionCallDrone_C_GetCallDroneCooldown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Cooldown != nullptr)
		*Cooldown = Parms.Cooldown;
}

}

