#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapMarker_Player

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "G01_structs.hpp"
#include "G01_classes.hpp"
#include "UMG_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MapMarker_Player.WBP_MapMarker_Player_C
// 0x00C8 (0x0468 - 0x03A0)
class UWBP_MapMarker_Player_C final : public UGzMapMarkerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ProgressAnim;                                      // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HighlightAnimation;                                // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MapOpenAnimation;                                  // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 AnimationCircle_Inner_IMG;                         // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AnimationCircle_Outer_IMG;                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Highlight_Image;                                   // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 KnockDown_Image;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Knockdown_Switcher;                                // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Marker_Image;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PlayerOverlay;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Progress_Image;                                    // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProgressBackground_Image;                          // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsLocalPlayer;                                    // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInTeam;                                         // 0x0409(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF9[0x6];                                     // 0x040A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzCharacter*                           Character;                                         // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    ReviveTask;                                        // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    SelfReviveTask;                                    // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    KnockDownTask;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           HealthTask;                                        // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          TeammateReviving;                                  // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EFA[0x3];                                     // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastProgress;                                      // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxProgress;                                       // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EFB[0x4];                                     // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentHoldTime;                                   // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUsingSelfRevive;                                  // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EFC[0x3];                                     // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           MarkerColor;                                       // 0x0454(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeingRevived(bool bWasAdded);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_MapMarker_Player(int32 EntryPoint);
	class UGzCharacterWorldVisibilityComponent* GetWorldVisibilityComp();
	bool IsPrematch();
	void MapOpenPlayerHighlight();
	void OnAttributeChanged_3106ACC94642CD3E275F528F9C302AE3(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void OnPawnChanged(class APawn* Pawn);
	void OnTagAdded_0BDDFB7342FBE89CA626A69F5123709C(const struct FGameplayTag& Tag);
	void OnTagAdded_42802B0B4A2033D3C2D544AB093D39CC(const struct FGameplayTag& Tag);
	void OnTagAdded_64436D1A492487F931FF378AEB5F8C44(const struct FGameplayTag& Tag);
	void OnTagRemoved_0BDDFB7342FBE89CA626A69F5123709C(const struct FGameplayTag& Tag);
	void OnTagRemoved_42802B0B4A2033D3C2D544AB093D39CC(const struct FGameplayTag& Tag);
	void OnTagRemoved_64436D1A492487F931FF378AEB5F8C44(const struct FGameplayTag& Tag);
	void OnVisibilityStateChanged(EGzWorldVisibilityState NewState);
	void Refresh_Attitude();
	void SetCurrentHoldTime(double DeltaTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_Progress();
	void UpdateKnockDownIndication(bool Condition);
	void UpdateStyle(ETeamAttitude PlayerAttitude, bool IsLocalPlayer, int32 PlayerId);
	void UsingSelfReviveKit(bool bWasAdded);

	ESlateVisibility GetShowVisibility() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MapMarker_Player_C">();
	}
	static class UWBP_MapMarker_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MapMarker_Player_C>();
	}
};
static_assert(alignof(UWBP_MapMarker_Player_C) == 0x000008, "Wrong alignment on UWBP_MapMarker_Player_C");
static_assert(sizeof(UWBP_MapMarker_Player_C) == 0x000468, "Wrong size on UWBP_MapMarker_Player_C");
static_assert(offsetof(UWBP_MapMarker_Player_C, UberGraphFrame) == 0x0003A0, "Member 'UWBP_MapMarker_Player_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, ProgressAnim) == 0x0003A8, "Member 'UWBP_MapMarker_Player_C::ProgressAnim' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, HighlightAnimation) == 0x0003B0, "Member 'UWBP_MapMarker_Player_C::HighlightAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, MapOpenAnimation) == 0x0003B8, "Member 'UWBP_MapMarker_Player_C::MapOpenAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, AnimationCircle_Inner_IMG) == 0x0003C0, "Member 'UWBP_MapMarker_Player_C::AnimationCircle_Inner_IMG' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, AnimationCircle_Outer_IMG) == 0x0003C8, "Member 'UWBP_MapMarker_Player_C::AnimationCircle_Outer_IMG' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, Highlight_Image) == 0x0003D0, "Member 'UWBP_MapMarker_Player_C::Highlight_Image' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, KnockDown_Image) == 0x0003D8, "Member 'UWBP_MapMarker_Player_C::KnockDown_Image' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, Knockdown_Switcher) == 0x0003E0, "Member 'UWBP_MapMarker_Player_C::Knockdown_Switcher' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, Marker_Image) == 0x0003E8, "Member 'UWBP_MapMarker_Player_C::Marker_Image' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, PlayerOverlay) == 0x0003F0, "Member 'UWBP_MapMarker_Player_C::PlayerOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, Progress_Image) == 0x0003F8, "Member 'UWBP_MapMarker_Player_C::Progress_Image' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, ProgressBackground_Image) == 0x000400, "Member 'UWBP_MapMarker_Player_C::ProgressBackground_Image' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, bIsLocalPlayer) == 0x000408, "Member 'UWBP_MapMarker_Player_C::bIsLocalPlayer' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, bIsInTeam) == 0x000409, "Member 'UWBP_MapMarker_Player_C::bIsInTeam' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, Character) == 0x000410, "Member 'UWBP_MapMarker_Player_C::Character' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, ReviveTask) == 0x000418, "Member 'UWBP_MapMarker_Player_C::ReviveTask' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, SelfReviveTask) == 0x000420, "Member 'UWBP_MapMarker_Player_C::SelfReviveTask' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, KnockDownTask) == 0x000428, "Member 'UWBP_MapMarker_Player_C::KnockDownTask' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, HealthTask) == 0x000430, "Member 'UWBP_MapMarker_Player_C::HealthTask' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, TeammateReviving) == 0x000438, "Member 'UWBP_MapMarker_Player_C::TeammateReviving' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, LastProgress) == 0x00043C, "Member 'UWBP_MapMarker_Player_C::LastProgress' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, MaxProgress) == 0x000440, "Member 'UWBP_MapMarker_Player_C::MaxProgress' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, CurrentHoldTime) == 0x000448, "Member 'UWBP_MapMarker_Player_C::CurrentHoldTime' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, bUsingSelfRevive) == 0x000450, "Member 'UWBP_MapMarker_Player_C::bUsingSelfRevive' has a wrong offset!");
static_assert(offsetof(UWBP_MapMarker_Player_C, MarkerColor) == 0x000454, "Member 'UWBP_MapMarker_Player_C::MarkerColor' has a wrong offset!");

}

