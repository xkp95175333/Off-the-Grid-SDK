#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair_LimbCharges

#include "Basic.hpp"

#include "WBP_Crosshair_LimbCharges_classes.hpp"
#include "WBP_Crosshair_LimbCharges_parameters.hpp"


namespace SDK
{

// Function WBP_Crosshair_LimbCharges.WBP_Crosshair_LimbCharges_C.AddLockedCharge
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_LimbCharges_C::AddLockedCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_LimbCharges_C", "AddLockedCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_LimbCharges.WBP_Crosshair_LimbCharges_C.ClearChargesContainer
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_LimbCharges_C::ClearChargesContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_LimbCharges_C", "ClearChargesContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_LimbCharges.WBP_Crosshair_LimbCharges_C.InitCharges
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_MaxChargesAmount                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ChargeWidgetPadding                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_LimbCharges_C::InitCharges(int32 Param_MaxChargesAmount, double ChargeWidgetPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_LimbCharges_C", "InitCharges");

	Params::WBP_Crosshair_LimbCharges_C_InitCharges Parms{};

	Parms.Param_MaxChargesAmount = Param_MaxChargesAmount;
	Parms.ChargeWidgetPadding = ChargeWidgetPadding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Crosshair_LimbCharges.WBP_Crosshair_LimbCharges_C.RemoveLockedCharge
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Crosshair_LimbCharges_C::RemoveLockedCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_LimbCharges_C", "RemoveLockedCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Crosshair_LimbCharges.WBP_Crosshair_LimbCharges_C.UpdateChargesState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzGA_BaseLimbAbility*            LimbAbilityRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Crosshair_LimbCharges_C::UpdateChargesState(class UGzGA_BaseLimbAbility* LimbAbilityRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Crosshair_LimbCharges_C", "UpdateChargesState");

	Params::WBP_Crosshair_LimbCharges_C_UpdateChargesState Parms{};

	Parms.LimbAbilityRef = LimbAbilityRef;

	UObject::ProcessEvent(Func, &Parms);
}

}

