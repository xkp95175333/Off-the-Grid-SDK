#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BackpackAbility

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EBackpackSlotState_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "G01_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.SetProgresPercent
// 0x0018 (0x0018 - 0x0000)
struct WBP_BackpackAbility_C_SetProgresPercent final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6716[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_SetProgresPercent) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_SetProgresPercent");
static_assert(sizeof(WBP_BackpackAbility_C_SetProgresPercent) == 0x000018, "Wrong size on WBP_BackpackAbility_C_SetProgresPercent");
static_assert(offsetof(WBP_BackpackAbility_C_SetProgresPercent, InPercent) == 0x000000, "Member 'WBP_BackpackAbility_C_SetProgresPercent::InPercent' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetProgresPercent, Temp_bool_Variable) == 0x000004, "Member 'WBP_BackpackAbility_C_SetProgresPercent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetProgresPercent, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000005, "Member 'WBP_BackpackAbility_C_SetProgresPercent::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetProgresPercent, Temp_byte_Variable) == 0x000006, "Member 'WBP_BackpackAbility_C_SetProgresPercent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetProgresPercent, Temp_byte_Variable_1) == 0x000007, "Member 'WBP_BackpackAbility_C_SetProgresPercent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetProgresPercent, K2Node_Select_Default) == 0x000008, "Member 'WBP_BackpackAbility_C_SetProgresPercent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetProgresPercent, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'WBP_BackpackAbility_C_SetProgresPercent::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.SetBackpackSlotState
// 0x0068 (0x0068 - 0x0000)
struct WBP_BackpackAbility_C_SetBackpackSlotState final
{
public:
	EBackpackSlotState                            State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6717[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBackpackSlotState                            Temp_byte_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBackpackSlotState                            Temp_byte_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBackpackSlotState                            Temp_byte_Variable_8;                              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0014)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_SetBackpackSlotState) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_SetBackpackSlotState");
static_assert(sizeof(WBP_BackpackAbility_C_SetBackpackSlotState) == 0x000068, "Wrong size on WBP_BackpackAbility_C_SetBackpackSlotState");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, State) == 0x000000, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::State' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_struct_Variable) == 0x000004, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_struct_Variable_2) == 0x000024, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_byte_Variable) == 0x000034, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_byte_Variable_1) == 0x000035, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_byte_Variable_2) == 0x000036, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_byte_Variable_3) == 0x000037, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_byte_Variable_4) == 0x000038, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_byte_Variable_5) == 0x000039, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_byte_Variable_6) == 0x00003A, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_byte_Variable_7) == 0x00003B, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003D, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, Temp_byte_Variable_8) == 0x00003E, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, K2Node_Select_Default) == 0x00003F, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, K2Node_Select_Default_1) == 0x000040, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SetBackpackSlotState, K2Node_Select_Default_2) == 0x000064, "Member 'WBP_BackpackAbility_C_SetBackpackSlotState::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.CheckIfParentHasBackpackTag
// 0x0018 (0x0018 - 0x0000)
struct WBP_BackpackAbility_C_CheckIfParentHasBackpackTag final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6718[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemSlot_DOS_C*                    CallFunc_FindParentWidgetOfType_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_CheckIfParentHasBackpackTag) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_CheckIfParentHasBackpackTag");
static_assert(sizeof(WBP_BackpackAbility_C_CheckIfParentHasBackpackTag) == 0x000018, "Wrong size on WBP_BackpackAbility_C_CheckIfParentHasBackpackTag");
static_assert(offsetof(WBP_BackpackAbility_C_CheckIfParentHasBackpackTag, ReturnValue) == 0x000000, "Member 'WBP_BackpackAbility_C_CheckIfParentHasBackpackTag::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_CheckIfParentHasBackpackTag, CallFunc_FindParentWidgetOfType_ReturnValue) == 0x000008, "Member 'WBP_BackpackAbility_C_CheckIfParentHasBackpackTag::CallFunc_FindParentWidgetOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_CheckIfParentHasBackpackTag, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000010, "Member 'WBP_BackpackAbility_C_CheckIfParentHasBackpackTag::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.InitializeGridshield
// 0x0070 (0x0070 - 0x0000)
struct WBP_BackpackAbility_C_InitializeGridshield final
{
public:
	bool                                          bIsGridShield;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6719[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Percent;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671B[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0020(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671D[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDefaultAttributeFromItemDataByTag_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGzItemAttribute                       CallFunc_Array_Get_Item;                           // 0x0048(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_Percent_ImplicitCast;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MaxValue_ImplicitCast;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_InitializeGridshield) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_InitializeGridshield");
static_assert(sizeof(WBP_BackpackAbility_C_InitializeGridshield) == 0x000070, "Wrong size on WBP_BackpackAbility_C_InitializeGridshield");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, bIsGridShield) == 0x000000, "Member 'WBP_BackpackAbility_C_InitializeGridshield::bIsGridShield' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, Percent) == 0x000004, "Member 'WBP_BackpackAbility_C_InitializeGridshield::Percent' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'WBP_BackpackAbility_C_InitializeGridshield::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_BackpackAbility_C_InitializeGridshield::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_BackpackAbility_C_InitializeGridshield::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, Temp_struct_Variable) == 0x000020, "Member 'WBP_BackpackAbility_C_InitializeGridshield::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000030, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000038, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x00003C, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_GetDefaultAttributeFromItemDataByTag_ReturnValue) == 0x000044, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_GetDefaultAttributeFromItemDataByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000058, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_Array_IsEmpty_ReturnValue) == 0x00005B, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, K2Node_FunctionResult_Percent_ImplicitCast) == 0x00005C, "Member 'WBP_BackpackAbility_C_InitializeGridshield::K2Node_FunctionResult_Percent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'WBP_BackpackAbility_C_InitializeGridshield::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeGridshield, K2Node_VariableSet_MaxValue_ImplicitCast) == 0x000068, "Member 'WBP_BackpackAbility_C_InitializeGridshield::K2Node_VariableSet_MaxValue_ImplicitCast' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.HasBackpack
// 0x0078 (0x0078 - 0x0000)
struct WBP_BackpackAbility_C_HasBackpack final
{
public:
	bool                                          bHasBackpack;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             BackpackItem;                                      // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6720[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6721[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0028(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6722[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzInvComponent*                        CallFunc_GetInventoryComponent_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGzInvItem>                     CallFunc_GetItemsBySlot_ReturnValue;               // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6723[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             CallFunc_Array_Get_Item;                           // 0x0058(0x0010)()
	bool                                          CallFunc_IsValidItem_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6724[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_HasBackpack) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_HasBackpack");
static_assert(sizeof(WBP_BackpackAbility_C_HasBackpack) == 0x000078, "Wrong size on WBP_BackpackAbility_C_HasBackpack");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, bHasBackpack) == 0x000000, "Member 'WBP_BackpackAbility_C_HasBackpack::bHasBackpack' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, BackpackItem) == 0x000008, "Member 'WBP_BackpackAbility_C_HasBackpack::BackpackItem' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'WBP_BackpackAbility_C_HasBackpack::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WBP_BackpackAbility_C_HasBackpack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_BackpackAbility_C_HasBackpack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, Temp_struct_Variable) == 0x000028, "Member 'WBP_BackpackAbility_C_HasBackpack::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_GetInventoryComponent_ReturnValue) == 0x000038, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_GetInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_GetItemsBySlot_ReturnValue) == 0x000040, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_GetItemsBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000050, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_IsValidItem_ReturnValue) == 0x000068, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_IsValidItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_HasBackpack, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'WBP_BackpackAbility_C_HasBackpack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.IsBasicBackpack
// 0x0006 (0x0006 - 0x0000)
struct WBP_BackpackAbility_C_IsBasicBackpack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_2;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_IsBasicBackpack) == 0x000001, "Wrong alignment on WBP_BackpackAbility_C_IsBasicBackpack");
static_assert(sizeof(WBP_BackpackAbility_C_IsBasicBackpack) == 0x000006, "Wrong size on WBP_BackpackAbility_C_IsBasicBackpack");
static_assert(offsetof(WBP_BackpackAbility_C_IsBasicBackpack, ReturnValue) == 0x000000, "Member 'WBP_BackpackAbility_C_IsBasicBackpack::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_IsBasicBackpack, CallFunc_Array_IsEmpty_ReturnValue) == 0x000001, "Member 'WBP_BackpackAbility_C_IsBasicBackpack::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_IsBasicBackpack, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000002, "Member 'WBP_BackpackAbility_C_IsBasicBackpack::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_IsBasicBackpack, CallFunc_Array_IsEmpty_ReturnValue_2) == 0x000003, "Member 'WBP_BackpackAbility_C_IsBasicBackpack::CallFunc_Array_IsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_IsBasicBackpack, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WBP_BackpackAbility_C_IsBasicBackpack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_IsBasicBackpack, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'WBP_BackpackAbility_C_IsBasicBackpack::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.UpdateBasicBackpack
// 0x0038 (0x0038 - 0x0000)
struct WBP_BackpackAbility_C_UpdateBasicBackpack final
{
public:
	bool                                          NewLocalVar;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6725[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           NormalColor;                                       // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DepletedColor;                                     // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6726[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_UpdateBasicBackpack) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_UpdateBasicBackpack");
static_assert(sizeof(WBP_BackpackAbility_C_UpdateBasicBackpack) == 0x000038, "Wrong size on WBP_BackpackAbility_C_UpdateBasicBackpack");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateBasicBackpack, NewLocalVar) == 0x000000, "Member 'WBP_BackpackAbility_C_UpdateBasicBackpack::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateBasicBackpack, NormalColor) == 0x000004, "Member 'WBP_BackpackAbility_C_UpdateBasicBackpack::NormalColor' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateBasicBackpack, DepletedColor) == 0x000014, "Member 'WBP_BackpackAbility_C_UpdateBasicBackpack::DepletedColor' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateBasicBackpack, CallFunc_GetRarity_ReturnValue) == 0x000024, "Member 'WBP_BackpackAbility_C_UpdateBasicBackpack::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateBasicBackpack, CallFunc_GetRarityColor_ReturnValue) == 0x000028, "Member 'WBP_BackpackAbility_C_UpdateBasicBackpack::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.ResetAll
// 0x0004 (0x0004 - 0x0000)
struct WBP_BackpackAbility_C_ResetAll final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_ResetAll) == 0x000001, "Wrong alignment on WBP_BackpackAbility_C_ResetAll");
static_assert(sizeof(WBP_BackpackAbility_C_ResetAll) == 0x000004, "Wrong size on WBP_BackpackAbility_C_ResetAll");
static_assert(offsetof(WBP_BackpackAbility_C_ResetAll, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_BackpackAbility_C_ResetAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ResetAll, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_BackpackAbility_C_ResetAll::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ResetAll, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'WBP_BackpackAbility_C_ResetAll::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ResetAll, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'WBP_BackpackAbility_C_ResetAll::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.SoldierReload
// 0x0018 (0x0018 - 0x0000)
struct WBP_BackpackAbility_C_SoldierReload final
{
public:
	int32                                         GunAmmo;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6727[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_SoldierReload) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_SoldierReload");
static_assert(sizeof(WBP_BackpackAbility_C_SoldierReload) == 0x000018, "Wrong size on WBP_BackpackAbility_C_SoldierReload");
static_assert(offsetof(WBP_BackpackAbility_C_SoldierReload, GunAmmo) == 0x000000, "Member 'WBP_BackpackAbility_C_SoldierReload::GunAmmo' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SoldierReload, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_BackpackAbility_C_SoldierReload::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SoldierReload, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'WBP_BackpackAbility_C_SoldierReload::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SoldierReload, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000011, "Member 'WBP_BackpackAbility_C_SoldierReload::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SoldierReload, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'WBP_BackpackAbility_C_SoldierReload::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SoldierReload, CallFunc_Not_PreBool_ReturnValue_1) == 0x000013, "Member 'WBP_BackpackAbility_C_SoldierReload::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_SoldierReload, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'WBP_BackpackAbility_C_SoldierReload::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.UnbindWeaponReload
// 0x0030 (0x0030 - 0x0000)
struct WBP_BackpackAbility_C_UnbindWeaponReload final
{
public:
	class AGzWeaponActor*                         Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ClipAmount)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6728[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponComponent*                     CallFunc_GetWeaponComponent_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_UnbindWeaponReload) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_UnbindWeaponReload");
static_assert(sizeof(WBP_BackpackAbility_C_UnbindWeaponReload) == 0x000030, "Wrong size on WBP_BackpackAbility_C_UnbindWeaponReload");
static_assert(offsetof(WBP_BackpackAbility_C_UnbindWeaponReload, Weapon) == 0x000000, "Member 'WBP_BackpackAbility_C_UnbindWeaponReload::Weapon' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UnbindWeaponReload, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_BackpackAbility_C_UnbindWeaponReload::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UnbindWeaponReload, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_BackpackAbility_C_UnbindWeaponReload::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UnbindWeaponReload, CallFunc_GetWeaponComponent_ReturnValue) == 0x000020, "Member 'WBP_BackpackAbility_C_UnbindWeaponReload::CallFunc_GetWeaponComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UnbindWeaponReload, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_BackpackAbility_C_UnbindWeaponReload::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.GetCombatComponent
// 0x0020 (0x0020 - 0x0000)
struct WBP_BackpackAbility_C_GetCombatComponent final
{
public:
	class UGzCombatComponent*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_GetCombatComponent) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_GetCombatComponent");
static_assert(sizeof(WBP_BackpackAbility_C_GetCombatComponent) == 0x000020, "Wrong size on WBP_BackpackAbility_C_GetCombatComponent");
static_assert(offsetof(WBP_BackpackAbility_C_GetCombatComponent, ReturnValue) == 0x000000, "Member 'WBP_BackpackAbility_C_GetCombatComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_GetCombatComponent, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'WBP_BackpackAbility_C_GetCombatComponent::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_GetCombatComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'WBP_BackpackAbility_C_GetCombatComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_GetCombatComponent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_BackpackAbility_C_GetCombatComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_GetCombatComponent, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_BackpackAbility_C_GetCombatComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.InventoryChanged
// 0x0080 (0x0080 - 0x0000)
struct WBP_BackpackAbility_C_InventoryChanged final
{
public:
	EGzInvChangeEvent                             State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6729[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             Item;                                              // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672A[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzItemData*                            CallFunc_GetItemData_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeGridshield_bIsGridShield;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672B[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_InitializeGridshield_Percent;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672C[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBackpackSlotState                            Temp_byte_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBackpack_bHasBackpack;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672D[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvItem                             CallFunc_HasBackpack_BackpackItem;                 // 0x0050(0x0010)()
	EBackpackSlotState                            Temp_byte_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBackpackSlotState                            K2Node_Select_Default;                             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchItemToType_ReturnValue;              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBasicBackpack_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672E[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_InventoryChanged) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_InventoryChanged");
static_assert(sizeof(WBP_BackpackAbility_C_InventoryChanged) == 0x000080, "Wrong size on WBP_BackpackAbility_C_InventoryChanged");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, State) == 0x000000, "Member 'WBP_BackpackAbility_C_InventoryChanged::State' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, Item) == 0x000008, "Member 'WBP_BackpackAbility_C_InventoryChanged::Item' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_GetItemData_ReturnValue) == 0x000018, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_GetItemData_ReturnValue_1) == 0x000028, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_GetItemData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_InitializeGridshield_bIsGridShield) == 0x000030, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_InitializeGridshield_bIsGridShield' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_InitializeGridshield_Percent) == 0x000034, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_InitializeGridshield_Percent' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00003A, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_BooleanAND_ReturnValue_1) == 0x000048, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, Temp_byte_Variable) == 0x000049, "Member 'WBP_BackpackAbility_C_InventoryChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_HasBackpack_bHasBackpack) == 0x00004A, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_HasBackpack_bHasBackpack' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_HasBackpack_BackpackItem) == 0x000050, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_HasBackpack_BackpackItem' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, Temp_byte_Variable_1) == 0x000060, "Member 'WBP_BackpackAbility_C_InventoryChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, Temp_bool_Variable) == 0x000061, "Member 'WBP_BackpackAbility_C_InventoryChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, K2Node_Select_Default) == 0x000062, "Member 'WBP_BackpackAbility_C_InventoryChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_MatchItemToType_ReturnValue) == 0x000063, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_MatchItemToType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_IsBasicBackpack_ReturnValue) == 0x000064, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_IsBasicBackpack_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_SelectFloat_A_ImplicitCast) == 0x000068, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InventoryChanged, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000078, "Member 'WBP_BackpackAbility_C_InventoryChanged::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.UpdateAbilityBackpack
// 0x0058 (0x0058 - 0x0000)
struct WBP_BackpackAbility_C_UpdateAbilityBackpack final
{
public:
	double                                        NewEnergy;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NormalColor;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DepletedColor;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672F[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGzItemRarity                                 CallFunc_GetRarity_ReturnValue;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6730[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgresPercent_InPercent_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_UpdateAbilityBackpack) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_UpdateAbilityBackpack");
static_assert(sizeof(WBP_BackpackAbility_C_UpdateAbilityBackpack) == 0x000058, "Wrong size on WBP_BackpackAbility_C_UpdateAbilityBackpack");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateAbilityBackpack, NewEnergy) == 0x000000, "Member 'WBP_BackpackAbility_C_UpdateAbilityBackpack::NewEnergy' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateAbilityBackpack, NormalColor) == 0x000008, "Member 'WBP_BackpackAbility_C_UpdateAbilityBackpack::NormalColor' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateAbilityBackpack, DepletedColor) == 0x000018, "Member 'WBP_BackpackAbility_C_UpdateAbilityBackpack::DepletedColor' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateAbilityBackpack, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_BackpackAbility_C_UpdateAbilityBackpack::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateAbilityBackpack, CallFunc_SelectColor_ReturnValue) == 0x00002C, "Member 'WBP_BackpackAbility_C_UpdateAbilityBackpack::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateAbilityBackpack, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'WBP_BackpackAbility_C_UpdateAbilityBackpack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateAbilityBackpack, CallFunc_GetRarity_ReturnValue) == 0x00003D, "Member 'WBP_BackpackAbility_C_UpdateAbilityBackpack::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateAbilityBackpack, CallFunc_GetRarityColor_ReturnValue) == 0x000040, "Member 'WBP_BackpackAbility_C_UpdateAbilityBackpack::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_UpdateAbilityBackpack, CallFunc_SetProgresPercent_InPercent_ImplicitCast) == 0x000050, "Member 'WBP_BackpackAbility_C_UpdateAbilityBackpack::CallFunc_SetProgresPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0
// 0x0040 (0x0040 - 0x0000)
struct WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0");
static_assert(sizeof(WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0) == 0x000040, "Wrong size on WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0");
static_assert(offsetof(WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0, Attribute) == 0x000000, "Member 'WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0, NewValue) == 0x000038, "Member 'WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0, OldValue) == 0x00003C, "Member 'WBP_BackpackAbility_C_OnAttributeChanged_E53347D844482C80833FC7BB2B8FFBC0::OldValue' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnTagRemoved_7463BDA74169165BC623689E75CEC2CF
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackAbility_C_OnTagRemoved_7463BDA74169165BC623689E75CEC2CF final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnTagRemoved_7463BDA74169165BC623689E75CEC2CF) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_OnTagRemoved_7463BDA74169165BC623689E75CEC2CF");
static_assert(sizeof(WBP_BackpackAbility_C_OnTagRemoved_7463BDA74169165BC623689E75CEC2CF) == 0x000008, "Wrong size on WBP_BackpackAbility_C_OnTagRemoved_7463BDA74169165BC623689E75CEC2CF");
static_assert(offsetof(WBP_BackpackAbility_C_OnTagRemoved_7463BDA74169165BC623689E75CEC2CF, Tag) == 0x000000, "Member 'WBP_BackpackAbility_C_OnTagRemoved_7463BDA74169165BC623689E75CEC2CF::Tag' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnTagAdded_7463BDA74169165BC623689E75CEC2CF
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackAbility_C_OnTagAdded_7463BDA74169165BC623689E75CEC2CF final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnTagAdded_7463BDA74169165BC623689E75CEC2CF) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_OnTagAdded_7463BDA74169165BC623689E75CEC2CF");
static_assert(sizeof(WBP_BackpackAbility_C_OnTagAdded_7463BDA74169165BC623689E75CEC2CF) == 0x000008, "Wrong size on WBP_BackpackAbility_C_OnTagAdded_7463BDA74169165BC623689E75CEC2CF");
static_assert(offsetof(WBP_BackpackAbility_C_OnTagAdded_7463BDA74169165BC623689E75CEC2CF, Tag) == 0x000000, "Member 'WBP_BackpackAbility_C_OnTagAdded_7463BDA74169165BC623689E75CEC2CF::Tag' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnTagRemoved_64C7CB5A46D638E9DED166A4CD78615C
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackAbility_C_OnTagRemoved_64C7CB5A46D638E9DED166A4CD78615C final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnTagRemoved_64C7CB5A46D638E9DED166A4CD78615C) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_OnTagRemoved_64C7CB5A46D638E9DED166A4CD78615C");
static_assert(sizeof(WBP_BackpackAbility_C_OnTagRemoved_64C7CB5A46D638E9DED166A4CD78615C) == 0x000008, "Wrong size on WBP_BackpackAbility_C_OnTagRemoved_64C7CB5A46D638E9DED166A4CD78615C");
static_assert(offsetof(WBP_BackpackAbility_C_OnTagRemoved_64C7CB5A46D638E9DED166A4CD78615C, Tag) == 0x000000, "Member 'WBP_BackpackAbility_C_OnTagRemoved_64C7CB5A46D638E9DED166A4CD78615C::Tag' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnTagAdded_64C7CB5A46D638E9DED166A4CD78615C
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackAbility_C_OnTagAdded_64C7CB5A46D638E9DED166A4CD78615C final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnTagAdded_64C7CB5A46D638E9DED166A4CD78615C) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_OnTagAdded_64C7CB5A46D638E9DED166A4CD78615C");
static_assert(sizeof(WBP_BackpackAbility_C_OnTagAdded_64C7CB5A46D638E9DED166A4CD78615C) == 0x000008, "Wrong size on WBP_BackpackAbility_C_OnTagAdded_64C7CB5A46D638E9DED166A4CD78615C");
static_assert(offsetof(WBP_BackpackAbility_C_OnTagAdded_64C7CB5A46D638E9DED166A4CD78615C, Tag) == 0x000000, "Member 'WBP_BackpackAbility_C_OnTagAdded_64C7CB5A46D638E9DED166A4CD78615C::Tag' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnTagRemoved_87C61F2549B436027584F29817510D0B
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackAbility_C_OnTagRemoved_87C61F2549B436027584F29817510D0B final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnTagRemoved_87C61F2549B436027584F29817510D0B) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_OnTagRemoved_87C61F2549B436027584F29817510D0B");
static_assert(sizeof(WBP_BackpackAbility_C_OnTagRemoved_87C61F2549B436027584F29817510D0B) == 0x000008, "Wrong size on WBP_BackpackAbility_C_OnTagRemoved_87C61F2549B436027584F29817510D0B");
static_assert(offsetof(WBP_BackpackAbility_C_OnTagRemoved_87C61F2549B436027584F29817510D0B, Tag) == 0x000000, "Member 'WBP_BackpackAbility_C_OnTagRemoved_87C61F2549B436027584F29817510D0B::Tag' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnTagAdded_87C61F2549B436027584F29817510D0B
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackAbility_C_OnTagAdded_87C61F2549B436027584F29817510D0B final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnTagAdded_87C61F2549B436027584F29817510D0B) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_OnTagAdded_87C61F2549B436027584F29817510D0B");
static_assert(sizeof(WBP_BackpackAbility_C_OnTagAdded_87C61F2549B436027584F29817510D0B) == 0x000008, "Wrong size on WBP_BackpackAbility_C_OnTagAdded_87C61F2549B436027584F29817510D0B");
static_assert(offsetof(WBP_BackpackAbility_C_OnTagAdded_87C61F2549B436027584F29817510D0B, Tag) == 0x000000, "Member 'WBP_BackpackAbility_C_OnTagAdded_87C61F2549B436027584F29817510D0B::Tag' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnTagRemoved_3A113ABB4499C80CD9655894254F1F68
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackAbility_C_OnTagRemoved_3A113ABB4499C80CD9655894254F1F68 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnTagRemoved_3A113ABB4499C80CD9655894254F1F68) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_OnTagRemoved_3A113ABB4499C80CD9655894254F1F68");
static_assert(sizeof(WBP_BackpackAbility_C_OnTagRemoved_3A113ABB4499C80CD9655894254F1F68) == 0x000008, "Wrong size on WBP_BackpackAbility_C_OnTagRemoved_3A113ABB4499C80CD9655894254F1F68");
static_assert(offsetof(WBP_BackpackAbility_C_OnTagRemoved_3A113ABB4499C80CD9655894254F1F68, Tag) == 0x000000, "Member 'WBP_BackpackAbility_C_OnTagRemoved_3A113ABB4499C80CD9655894254F1F68::Tag' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnTagAdded_3A113ABB4499C80CD9655894254F1F68
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackAbility_C_OnTagAdded_3A113ABB4499C80CD9655894254F1F68 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnTagAdded_3A113ABB4499C80CD9655894254F1F68) == 0x000004, "Wrong alignment on WBP_BackpackAbility_C_OnTagAdded_3A113ABB4499C80CD9655894254F1F68");
static_assert(sizeof(WBP_BackpackAbility_C_OnTagAdded_3A113ABB4499C80CD9655894254F1F68) == 0x000008, "Wrong size on WBP_BackpackAbility_C_OnTagAdded_3A113ABB4499C80CD9655894254F1F68");
static_assert(offsetof(WBP_BackpackAbility_C_OnTagAdded_3A113ABB4499C80CD9655894254F1F68, Tag) == 0x000000, "Member 'WBP_BackpackAbility_C_OnTagAdded_3A113ABB4499C80CD9655894254F1F68::Tag' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.WeaponChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_BackpackAbility_C_WeaponChanged final
{
public:
	struct FGzInvPocketId                         PocketId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         WeaponActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_WeaponChanged) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_WeaponChanged");
static_assert(sizeof(WBP_BackpackAbility_C_WeaponChanged) == 0x000010, "Wrong size on WBP_BackpackAbility_C_WeaponChanged");
static_assert(offsetof(WBP_BackpackAbility_C_WeaponChanged, PocketId) == 0x000000, "Member 'WBP_BackpackAbility_C_WeaponChanged::PocketId' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_WeaponChanged, WeaponActor) == 0x000008, "Member 'WBP_BackpackAbility_C_WeaponChanged::WeaponActor' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.InitializeWidget
// 0x0010 (0x0010 - 0x0000)
struct WBP_BackpackAbility_C_InitializeWidget final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_InitializeWidget) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_InitializeWidget");
static_assert(sizeof(WBP_BackpackAbility_C_InitializeWidget) == 0x000010, "Wrong size on WBP_BackpackAbility_C_InitializeWidget");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeWidget, OldPawn) == 0x000000, "Member 'WBP_BackpackAbility_C_InitializeWidget::OldPawn' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_InitializeWidget, NewPawn) == 0x000008, "Member 'WBP_BackpackAbility_C_InitializeWidget::NewPawn' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_BackpackAbility_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_OnAnimationFinished");
static_assert(sizeof(WBP_BackpackAbility_C_OnAnimationFinished) == 0x000008, "Wrong size on WBP_BackpackAbility_C_OnAnimationFinished");
static_assert(offsetof(WBP_BackpackAbility_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_BackpackAbility_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function WBP_BackpackAbility.WBP_BackpackAbility_C.ExecuteUbergraph_WBP_BackpackAbility
// 0x0308 (0x0308 - 0x0000)
struct WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6731[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_6;                          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGzInvPocketId& PocketId, class AGzWeaponActor* WeaponActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6732[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_5;                          // 0x004C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_4;                          // 0x0054(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x006C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_3;                          // 0x0084(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_2;                          // 0x008C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x00A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_1;                          // 0x00BC(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x00C4(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x00DC(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGzInvChangeEvent State, struct FGzInvItem& Item)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskAttributeChanged*           CallFunc_ListenForAttributeChange_ReturnValue;     // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6733[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6734[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6735[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzInvPocketId                         K2Node_CustomEvent_PocketId;                       // 0x015C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6736[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzWeaponActor*                         K2Node_CustomEvent_WeaponActor;                    // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzCombatComponent*                     CallFunc_GetCombatComponent_ReturnValue;           // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AGzWeaponActor*>                 CallFunc_GetAllWeapons_OutWeapons;                 // 0x0180(0x0010)(ReferenceParm)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_7;                          // 0x0190(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGzWeaponActor*                         CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6737[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWeaponComponent*                     CallFunc_GetWeaponComponent_ReturnValue;           // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ClipAmount)>             K2Node_CreateDelegate_OutputDelegate_10;           // 0x01B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6738[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_OldPawn;                        // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewPawn;                        // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6739[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* OldPawn, class APawn* NewPawn)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x01F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character_1;               // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_673A[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_2;        // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0220(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2; // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_3; // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfParentHasBackpackTag_ReturnValue;  // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_673B[0x5];                                     // 0x024B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0250(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_673C[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_673D[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_4;                            // 0x0268(0x0038)(HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_673E[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_1;                              // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeGridshield_bIsGridShield;       // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_673F[0x3];                                     // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_InitializeGridshield_Percent;             // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6740[0x2];                                     // 0x02B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x02B8(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility) == 0x000008, "Wrong alignment on WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility");
static_assert(sizeof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility) == 0x000308, "Wrong size on WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, EntryPoint) == 0x000000, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_Tag_6) == 0x000018, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_Tag_6' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, Temp_struct_Variable) == 0x000020, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_Tag_5) == 0x00004C, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_Tag_5' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_Tag_4) == 0x000054, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_Tag_4' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, Temp_struct_Variable_1) == 0x00006C, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_4) == 0x000074, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_Tag_3) == 0x000084, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_Tag_3' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_Tag_2) == 0x00008C, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_Tag_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_5) == 0x000094, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, Temp_struct_Variable_2) == 0x0000A4, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000AC, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_Tag_1) == 0x0000BC, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_Tag) == 0x0000C4, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000CC, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, Temp_struct_Variable_3) == 0x0000DC, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000E8, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000F8, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000108, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000110, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_ListenForAttributeChange_ReturnValue) == 0x000118, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_ListenForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000120, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_IsValid_ReturnValue_2) == 0x000128, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue) == 0x000130, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_IsValid_ReturnValue_3) == 0x000138, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x000140, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000148, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1) == 0x000150, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_IsValid_ReturnValue_4) == 0x000158, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_PocketId) == 0x00015C, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_PocketId' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_WeaponActor) == 0x000168, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_WeaponActor' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetCombatComponent_ReturnValue) == 0x000170, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetCombatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000178, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetAllWeapons_OutWeapons) == 0x000180, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetAllWeapons_OutWeapons' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_Tag_7) == 0x000190, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_Tag_7' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_Array_Get_Item) == 0x000198, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001A0, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetWeaponComponent_ReturnValue) == 0x0001A8, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetWeaponComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_Array_Length_ReturnValue) == 0x0001B0, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001B4, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_OldPawn) == 0x0001C8, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_OldPawn' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_NewPawn) == 0x0001D0, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_NewPawn' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_DynamicCast_AsGz_Character) == 0x0001D8, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001E8, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_11) == 0x0001F0, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_K2_GetPawn_ReturnValue) == 0x000200, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_DynamicCast_AsGz_Character_1) == 0x000208, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_DynamicCast_AsGz_Character_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_DynamicCast_bSuccess_1) == 0x000210, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetOwningPlayerPawn_ReturnValue_2) == 0x000218, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetOwningPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CreateDelegate_OutputDelegate_12) == 0x000220, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000230, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2) == 0x000238, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_3) == 0x000240, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_IsValid_ReturnValue_5) == 0x000248, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_IsValid_ReturnValue_6) == 0x000249, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_CheckIfParentHasBackpackTag_ReturnValue) == 0x00024A, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_CheckIfParentHasBackpackTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_Event_Animation) == 0x000250, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000258, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, Temp_int_Loop_Counter_Variable) == 0x00025C, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_Less_IntInt_ReturnValue) == 0x000260, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_Add_IntInt_ReturnValue) == 0x000264, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, Temp_struct_Variable_4) == 0x000268, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, Temp_real_Variable) == 0x0002A0, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_Not_PreBool_ReturnValue) == 0x0002A4, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, Temp_real_Variable_1) == 0x0002A8, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_InitializeGridshield_bIsGridShield) == 0x0002AC, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_InitializeGridshield_bIsGridShield' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_InitializeGridshield_Percent) == 0x0002B0, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_InitializeGridshield_Percent' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0002B4, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_BooleanAND_ReturnValue) == 0x0002B5, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_Attribute) == 0x0002B8, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_NewValue) == 0x0002F0, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, K2Node_CustomEvent_OldValue) == 0x0002F4, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0002F8, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000300, "Member 'WBP_BackpackAbility_C_ExecuteUbergraph_WBP_BackpackAbility::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

