#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HoldInteractionTooltip

#include "Basic.hpp"

#include "WBP_HoldInteractionTooltip_classes.hpp"
#include "WBP_HoldInteractionTooltip_parameters.hpp"


namespace SDK
{

// Function WBP_HoldInteractionTooltip.WBP_HoldInteractionTooltip_C.ExecuteUbergraph_WBP_HoldInteractionTooltip
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HoldInteractionTooltip_C::ExecuteUbergraph_WBP_HoldInteractionTooltip(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HoldInteractionTooltip_C", "ExecuteUbergraph_WBP_HoldInteractionTooltip");

	Params::WBP_HoldInteractionTooltip_C_ExecuteUbergraph_WBP_HoldInteractionTooltip Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HoldInteractionTooltip.WBP_HoldInteractionTooltip_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_HoldInteractionTooltip_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HoldInteractionTooltip_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HoldInteractionTooltip.WBP_HoldInteractionTooltip_C.OnInteracting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasAdded                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HoldInteractionTooltip_C::OnInteracting(bool bWasAdded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HoldInteractionTooltip_C", "OnInteracting");

	Params::WBP_HoldInteractionTooltip_C_OnInteracting Parms{};

	Parms.bWasAdded = bWasAdded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HoldInteractionTooltip.WBP_HoldInteractionTooltip_C.ResetHolding
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_HoldInteractionTooltip_C::ResetHolding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HoldInteractionTooltip_C", "ResetHolding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HoldInteractionTooltip.WBP_HoldInteractionTooltip_C.SetTooltipStyle
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HoldInteractionTooltip_C::SetTooltipStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HoldInteractionTooltip_C", "SetTooltipStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HoldInteractionTooltip.WBP_HoldInteractionTooltip_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HoldInteractionTooltip_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HoldInteractionTooltip_C", "Tick");

	Params::WBP_HoldInteractionTooltip_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HoldInteractionTooltip.WBP_HoldInteractionTooltip_C.UpdateHolding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_InitialInteractionProgress                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HoldInteractionTooltip_C::UpdateHolding(double Param_InitialInteractionProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HoldInteractionTooltip_C", "UpdateHolding");

	Params::WBP_HoldInteractionTooltip_C_UpdateHolding Parms{};

	Parms.Param_InitialInteractionProgress = Param_InitialInteractionProgress;

	UObject::ProcessEvent(Func, &Parms);
}

}

