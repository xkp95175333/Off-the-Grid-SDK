#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XsollaWebBrowser

#include "Basic.hpp"


namespace SDK::Params
{

// Function XsollaWebBrowser.XsollaWebBrowser.ExecuteJavascript
// 0x0010 (0x0010 - 0x0000)
struct XsollaWebBrowser_ExecuteJavascript final
{
public:
	class FString                                 ScriptText;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaWebBrowser_ExecuteJavascript) == 0x000008, "Wrong alignment on XsollaWebBrowser_ExecuteJavascript");
static_assert(sizeof(XsollaWebBrowser_ExecuteJavascript) == 0x000010, "Wrong size on XsollaWebBrowser_ExecuteJavascript");
static_assert(offsetof(XsollaWebBrowser_ExecuteJavascript, ScriptText) == 0x000000, "Member 'XsollaWebBrowser_ExecuteJavascript::ScriptText' has a wrong offset!");

// Function XsollaWebBrowser.XsollaWebBrowser.LoadHtml
// 0x0020 (0x0020 - 0x0000)
struct XsollaWebBrowser_LoadHtml final
{
public:
	class FString                                 Contents;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DummyURL;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaWebBrowser_LoadHtml) == 0x000008, "Wrong alignment on XsollaWebBrowser_LoadHtml");
static_assert(sizeof(XsollaWebBrowser_LoadHtml) == 0x000020, "Wrong size on XsollaWebBrowser_LoadHtml");
static_assert(offsetof(XsollaWebBrowser_LoadHtml, Contents) == 0x000000, "Member 'XsollaWebBrowser_LoadHtml::Contents' has a wrong offset!");
static_assert(offsetof(XsollaWebBrowser_LoadHtml, DummyURL) == 0x000010, "Member 'XsollaWebBrowser_LoadHtml::DummyURL' has a wrong offset!");

// Function XsollaWebBrowser.XsollaWebBrowser.LoadUrl
// 0x0010 (0x0010 - 0x0000)
struct XsollaWebBrowser_LoadUrl final
{
public:
	class FString                                 NewURL;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaWebBrowser_LoadUrl) == 0x000008, "Wrong alignment on XsollaWebBrowser_LoadUrl");
static_assert(sizeof(XsollaWebBrowser_LoadUrl) == 0x000010, "Wrong size on XsollaWebBrowser_LoadUrl");
static_assert(offsetof(XsollaWebBrowser_LoadUrl, NewURL) == 0x000000, "Member 'XsollaWebBrowser_LoadUrl::NewURL' has a wrong offset!");

// DelegateFunction XsollaWebBrowser.XsollaWebBrowser.OnBeforePopup__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct XsollaWebBrowser_OnBeforePopup__DelegateSignature final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Frame;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaWebBrowser_OnBeforePopup__DelegateSignature) == 0x000008, "Wrong alignment on XsollaWebBrowser_OnBeforePopup__DelegateSignature");
static_assert(sizeof(XsollaWebBrowser_OnBeforePopup__DelegateSignature) == 0x000020, "Wrong size on XsollaWebBrowser_OnBeforePopup__DelegateSignature");
static_assert(offsetof(XsollaWebBrowser_OnBeforePopup__DelegateSignature, URL) == 0x000000, "Member 'XsollaWebBrowser_OnBeforePopup__DelegateSignature::URL' has a wrong offset!");
static_assert(offsetof(XsollaWebBrowser_OnBeforePopup__DelegateSignature, Frame) == 0x000010, "Member 'XsollaWebBrowser_OnBeforePopup__DelegateSignature::Frame' has a wrong offset!");

// DelegateFunction XsollaWebBrowser.XsollaWebBrowser.OnUrlChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct XsollaWebBrowser_OnUrlChanged__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaWebBrowser_OnUrlChanged__DelegateSignature) == 0x000008, "Wrong alignment on XsollaWebBrowser_OnUrlChanged__DelegateSignature");
static_assert(sizeof(XsollaWebBrowser_OnUrlChanged__DelegateSignature) == 0x000010, "Wrong size on XsollaWebBrowser_OnUrlChanged__DelegateSignature");
static_assert(offsetof(XsollaWebBrowser_OnUrlChanged__DelegateSignature, Text) == 0x000000, "Member 'XsollaWebBrowser_OnUrlChanged__DelegateSignature::Text' has a wrong offset!");

// Function XsollaWebBrowser.XsollaWebBrowser.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct XsollaWebBrowser_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XsollaWebBrowser_GetUrl) == 0x000008, "Wrong alignment on XsollaWebBrowser_GetUrl");
static_assert(sizeof(XsollaWebBrowser_GetUrl) == 0x000010, "Wrong size on XsollaWebBrowser_GetUrl");
static_assert(offsetof(XsollaWebBrowser_GetUrl, ReturnValue) == 0x000000, "Member 'XsollaWebBrowser_GetUrl::ReturnValue' has a wrong offset!");

}

