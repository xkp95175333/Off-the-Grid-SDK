#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootContainer_Crate_Repeatable

#include "Basic.hpp"

#include "BP_LootContainer_Crate_Repeatable_classes.hpp"
#include "BP_LootContainer_Crate_Repeatable_parameters.hpp"


namespace SDK
{

// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.CacheGzGameState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::CacheGzGameState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "CacheGzGameState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.CanScanOnAnyDistance
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LootContainer_Crate_Repeatable_C::CanScanOnAnyDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "CanScanOnAnyDistance");

	Params::BP_LootContainer_Crate_Repeatable_C_CanScanOnAnyDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.ExecuteUbergraph_BP_LootContainer_Crate_Repeatable
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootContainer_Crate_Repeatable_C::ExecuteUbergraph_BP_LootContainer_Crate_Repeatable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "ExecuteUbergraph_BP_LootContainer_Crate_Repeatable");

	Params::BP_LootContainer_Crate_Repeatable_C_ExecuteUbergraph_BP_LootContainer_Crate_Repeatable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.InitRepeatableTimer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::InitRepeatableTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "InitRepeatableTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.InvalidateRepeatableTimer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::InvalidateRepeatableTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "InvalidateRepeatableTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.OnRep_ServerEndChestCooldown
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::OnRep_ServerEndChestCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "OnRep_ServerEndChestCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.SetActiveMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::SetActiveMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "SetActiveMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.SetEndCooldownServerTime
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::SetEndCooldownServerTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "SetEndCooldownServerTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.SetInActiveMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::SetInActiveMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "SetInActiveMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.SetOpenedMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::SetOpenedMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "SetOpenedMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootContainer_Crate_Repeatable.BP_LootContainer_Crate_Repeatable_C.UpdateRepeatableTimer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LootContainer_Crate_Repeatable_C::UpdateRepeatableTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootContainer_Crate_Repeatable_C", "UpdateRepeatableTimer");

	UObject::ProcessEvent(Func, nullptr);
}

}

