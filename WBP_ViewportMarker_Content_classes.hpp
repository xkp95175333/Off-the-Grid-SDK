#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ViewportMarker_Content

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "S_PingPrompts_structs.hpp"
#include "E_MarkerPingPadding_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "G01_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ViewportMarker_Content.WBP_ViewportMarker_Content_C
// 0x0240 (0x0520 - 0x02E0)
class UWBP_ViewportMarker_Content_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ProgressionAnim;                                   // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WarningAnim;                                       // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HighlightedAnim;                                   // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           DirArrow_Canvas;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Distance_GzText;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Highlight_Image;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         InputTooltip_HorizontalBox;                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Marker_Image;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OpportunityBackplate_Image;                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OpportunitySpecialBorder_Image;                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerKnockdown_Image;                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Progress_Image;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Progress_Image_Dashed;                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProgressBackground_Image;                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProgressBackground_Image_Dashed;                   // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ProgressImage_Switcher;                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGzTextBlock*                           Prompt_GzText;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Marker_PingFeedback_C*             WBP_Marker_PingFeedback;                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             MarkerIcon;                                        // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzMarkerComponent*                     MarkerComponent;                                   // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColor;                                      // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightColor;                                    // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDistance;                                      // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDirection;                                     // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6287[0x6];                                     // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzViewportMarkerWidget*                ParentMarkerWidget;                                // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FS_PingPrompts                         PingPrompts;                                       // 0x03B8(0x00D0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          IsPinged;                                          // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHighlighted;                                     // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MarkerPingPadding                           PingSize;                                          // 0x048A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6288[0x5];                                     // 0x048B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_MarkerPingPadding, double>             DistanceSizePadding;                               // 0x0490(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Progress_State;                                    // 0x04E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShowingProgress;                                 // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSpecialOpportunity;                              // 0x04E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_6289[0x2];                                     // 0x04EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SpecialBorderColor;                                // 0x04EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ColorOnHighlight;                                  // 0x04FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_628A[0x3];                                     // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  OffScreenTags;                                     // 0x0500(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void AdjustMissionMarker(bool IsSpecial);
	void ChangePingSize(E_MarkerPingPadding Param_PingSize);
	void CheckDisagree(class AGzPlayerState* PlayerState, bool Agree);
	void CheckOffScreen(const struct FGameplayTagContainer& TagContainer);
	void Destruct();
	void ExecuteUbergraph_WBP_ViewportMarker_Content(int32 EntryPoint);
	void GetIndexInTeam(class AGzTeam* Team, class UObject* PlayerState, int32* OutputPin);
	void GetPositiveNegativePrompt(const struct FGzPingData& GzPingData, class FText* Ping_Prompts_Cancel, class FText* Positive, class FText* Negative);
	void HighlightState(const struct FGameplayTagContainer& TagContainer);
	void InitViewportMarker(class UGzMarkerComponent* Param_MarkerComponent, class UGzViewportMarkerWidget* Parent);
	void OnMarkerStatesChanged(class UGzMarkerComponent* Param_MarkerComponent, const struct FGameplayTagContainer& States);
	void OnOffScreen(bool bIsOffScreen);
	void OnPingAgreementChanged(class AGzPlayerState* PlayerState, const struct FGzPingData& PingData, bool bAgree);
	void OnPlayerMarkerFocusChanged_Event(bool bIsFocused);
	void PreConstruct(bool IsDesignTime);
	void RunConstruct();
	void SetArrowRotation(float Angle);
	void SetArrowVisibility(bool Param_Index);
	void SetDefaultVisibility();
	void SetPingIcon(const struct FS_PingContent& PingContentRef);
	void SetProgress(float Percent__0Minus1_);
	void SetPromptVisibility(bool IsInFocus, class UGzMarkerComponent* Param_MarkerComponent);
	void ShowProgress(bool Show, bool Dashed);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Toggle_Distance_View(bool Show);
	void UpdateDistance(double Distance);
	void UpdatePingState(class UGzMarkerComponent* Param_MarkerComponent, const struct FGzPingData& PingData);
	void UpdatePromptText(class UGzMarkerComponent* Param_MarkerComponent);
	void VisualizeDesigner();
	void WarningState(const struct FGameplayTagContainer& TagContainer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ViewportMarker_Content_C">();
	}
	static class UWBP_ViewportMarker_Content_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ViewportMarker_Content_C>();
	}
};
static_assert(alignof(UWBP_ViewportMarker_Content_C) == 0x000008, "Wrong alignment on UWBP_ViewportMarker_Content_C");
static_assert(sizeof(UWBP_ViewportMarker_Content_C) == 0x000520, "Wrong size on UWBP_ViewportMarker_Content_C");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_ViewportMarker_Content_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, ProgressionAnim) == 0x0002E8, "Member 'UWBP_ViewportMarker_Content_C::ProgressionAnim' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, WarningAnim) == 0x0002F0, "Member 'UWBP_ViewportMarker_Content_C::WarningAnim' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, HighlightedAnim) == 0x0002F8, "Member 'UWBP_ViewportMarker_Content_C::HighlightedAnim' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, DirArrow_Canvas) == 0x000300, "Member 'UWBP_ViewportMarker_Content_C::DirArrow_Canvas' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, Distance_GzText) == 0x000308, "Member 'UWBP_ViewportMarker_Content_C::Distance_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, Highlight_Image) == 0x000310, "Member 'UWBP_ViewportMarker_Content_C::Highlight_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, InputTooltip_HorizontalBox) == 0x000318, "Member 'UWBP_ViewportMarker_Content_C::InputTooltip_HorizontalBox' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, Marker_Image) == 0x000320, "Member 'UWBP_ViewportMarker_Content_C::Marker_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, OpportunityBackplate_Image) == 0x000328, "Member 'UWBP_ViewportMarker_Content_C::OpportunityBackplate_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, OpportunitySpecialBorder_Image) == 0x000330, "Member 'UWBP_ViewportMarker_Content_C::OpportunitySpecialBorder_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, PlayerKnockdown_Image) == 0x000338, "Member 'UWBP_ViewportMarker_Content_C::PlayerKnockdown_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, Progress_Image) == 0x000340, "Member 'UWBP_ViewportMarker_Content_C::Progress_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, Progress_Image_Dashed) == 0x000348, "Member 'UWBP_ViewportMarker_Content_C::Progress_Image_Dashed' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, ProgressBackground_Image) == 0x000350, "Member 'UWBP_ViewportMarker_Content_C::ProgressBackground_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, ProgressBackground_Image_Dashed) == 0x000358, "Member 'UWBP_ViewportMarker_Content_C::ProgressBackground_Image_Dashed' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, ProgressImage_Switcher) == 0x000360, "Member 'UWBP_ViewportMarker_Content_C::ProgressImage_Switcher' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, Prompt_GzText) == 0x000368, "Member 'UWBP_ViewportMarker_Content_C::Prompt_GzText' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, WBP_Marker_PingFeedback) == 0x000370, "Member 'UWBP_ViewportMarker_Content_C::WBP_Marker_PingFeedback' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, MarkerIcon) == 0x000378, "Member 'UWBP_ViewportMarker_Content_C::MarkerIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, MarkerComponent) == 0x000380, "Member 'UWBP_ViewportMarker_Content_C::MarkerComponent' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, DefaultColor) == 0x000388, "Member 'UWBP_ViewportMarker_Content_C::DefaultColor' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, HighlightColor) == 0x000398, "Member 'UWBP_ViewportMarker_Content_C::HighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, ShowDistance) == 0x0003A8, "Member 'UWBP_ViewportMarker_Content_C::ShowDistance' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, ShowDirection) == 0x0003A9, "Member 'UWBP_ViewportMarker_Content_C::ShowDirection' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, ParentMarkerWidget) == 0x0003B0, "Member 'UWBP_ViewportMarker_Content_C::ParentMarkerWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, PingPrompts) == 0x0003B8, "Member 'UWBP_ViewportMarker_Content_C::PingPrompts' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, IsPinged) == 0x000488, "Member 'UWBP_ViewportMarker_Content_C::IsPinged' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, IsHighlighted) == 0x000489, "Member 'UWBP_ViewportMarker_Content_C::IsHighlighted' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, PingSize) == 0x00048A, "Member 'UWBP_ViewportMarker_Content_C::PingSize' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, DistanceSizePadding) == 0x000490, "Member 'UWBP_ViewportMarker_Content_C::DistanceSizePadding' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, Progress_State) == 0x0004E0, "Member 'UWBP_ViewportMarker_Content_C::Progress_State' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, IsShowingProgress) == 0x0004E8, "Member 'UWBP_ViewportMarker_Content_C::IsShowingProgress' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, IsSpecialOpportunity) == 0x0004E9, "Member 'UWBP_ViewportMarker_Content_C::IsSpecialOpportunity' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, SpecialBorderColor) == 0x0004EC, "Member 'UWBP_ViewportMarker_Content_C::SpecialBorderColor' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, ColorOnHighlight) == 0x0004FC, "Member 'UWBP_ViewportMarker_Content_C::ColorOnHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_ViewportMarker_Content_C, OffScreenTags) == 0x000500, "Member 'UWBP_ViewportMarker_Content_C::OffScreenTags' has a wrong offset!");

}

