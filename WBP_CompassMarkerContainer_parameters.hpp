#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CompassMarkerContainer

#include "Basic.hpp"

#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_CompassMarkerContainer.WBP_CompassMarkerContainer_C.ExecuteUbergraph_WBP_CompassMarkerContainer
// 0x0050 (0x0050 - 0x0000)
struct WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D89[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0008(0x0020)(NoDestructor)
	class UGzMarkerWidget*                        K2Node_Event_MarkerWidget;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzMarkerComponent*                     K2Node_Event_MarkerComponent;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer) == 0x000008, "Wrong alignment on WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer");
static_assert(sizeof(WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer) == 0x000050, "Wrong size on WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer");
static_assert(offsetof(WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer, EntryPoint) == 0x000000, "Member 'WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer, K2Node_MakeStruct_Anchors) == 0x000008, "Member 'WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer, K2Node_Event_MarkerWidget) == 0x000028, "Member 'WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer::K2Node_Event_MarkerWidget' has a wrong offset!");
static_assert(offsetof(WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer, K2Node_Event_MarkerComponent) == 0x000030, "Member 'WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer::K2Node_Event_MarkerComponent' has a wrong offset!");
static_assert(offsetof(WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000040, "Member 'WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_CompassMarkerContainer_C_ExecuteUbergraph_WBP_CompassMarkerContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_CompassMarkerContainer.WBP_CompassMarkerContainer_C.OnMarkerAdded
// 0x0010 (0x0010 - 0x0000)
struct WBP_CompassMarkerContainer_C_OnMarkerAdded final
{
public:
	class UGzMarkerWidget*                        MarkerWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzMarkerComponent*                     MarkerComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CompassMarkerContainer_C_OnMarkerAdded) == 0x000008, "Wrong alignment on WBP_CompassMarkerContainer_C_OnMarkerAdded");
static_assert(sizeof(WBP_CompassMarkerContainer_C_OnMarkerAdded) == 0x000010, "Wrong size on WBP_CompassMarkerContainer_C_OnMarkerAdded");
static_assert(offsetof(WBP_CompassMarkerContainer_C_OnMarkerAdded, MarkerWidget) == 0x000000, "Member 'WBP_CompassMarkerContainer_C_OnMarkerAdded::MarkerWidget' has a wrong offset!");
static_assert(offsetof(WBP_CompassMarkerContainer_C_OnMarkerAdded, MarkerComponent) == 0x000008, "Member 'WBP_CompassMarkerContainer_C_OnMarkerAdded::MarkerComponent' has a wrong offset!");

}

