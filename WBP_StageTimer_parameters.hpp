#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StageTimer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_StageTimer.WBP_StageTimer_C.ConvertTagToTimerState
// 0x0108 (0x0108 - 0x0000)
struct WBP_StageTimer_C_ConvertTagToTimerState final
{
public:
	struct FGameplayTagContainer                  TagContainer;                                      // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           Array_Element;                                     // 0x0020(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   Tags;                                              // 0x0028(0x0010)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, uint8>              NewLocalVar;                                       // 0x0038(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E3D[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	TMap<struct FGameplayTag, uint8>              K2Node_MakeVariable_MakeVariableOutput;            // 0x00A8(0x0050)()
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_ConvertTagToTimerState) == 0x000008, "Wrong alignment on WBP_StageTimer_C_ConvertTagToTimerState");
static_assert(sizeof(WBP_StageTimer_C_ConvertTagToTimerState) == 0x000108, "Wrong size on WBP_StageTimer_C_ConvertTagToTimerState");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, TagContainer) == 0x000000, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::TagContainer' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, Array_Element) == 0x000020, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::Array_Element' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, Tags) == 0x000028, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::Tags' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, NewLocalVar) == 0x000038, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, Temp_int_Array_Index_Variable) == 0x000088, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, K2Node_MakeArray_Array) == 0x000098, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, K2Node_MakeVariable_MakeVariableOutput) == 0x0000A8, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ConvertTagToTimerState, CallFunc_HasTag_ReturnValue) == 0x000105, "Member 'WBP_StageTimer_C_ConvertTagToTimerState::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.ExecuteUbergraph_WBP_StageTimer
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E3E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzGameModeSubsystem*                   K2Node_CustomEvent_Subsystem_1;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGzGameModeSubsystem* Subsystem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzGameModeSubsystem*                   Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzWaitSubsystem*                       CallFunc_WaitSubsystem_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E3F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzBattleRoyaleZoneManager*             CallFunc_Instance_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiStageGameState*                 K2Node_DynamicCast_AsGz_Multi_Stage_Game_State;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bActivated;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E40[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E41[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UGzBattleRoyaleSettings*                K2Node_DynamicCast_AsGz_Battle_Royale_Settings;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E42[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bActivated)>              K2Node_CreateDelegate_OutputDelegate_2;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E43[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzGameModeSubsystem*                   K2Node_CustomEvent_Subsystem;                      // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzShrinkingZoneManager*                K2Node_DynamicCast_AsGz_Shrinking_Zone_Manager;    // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E44[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentStage_ReturnValue;              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E45[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B0(0x0010)()
};
static_assert(alignof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer) == 0x000008, "Wrong alignment on WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer");
static_assert(sizeof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer) == 0x0000C0, "Wrong size on WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, EntryPoint) == 0x000000, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_CustomEvent_Subsystem_1) == 0x000008, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_CustomEvent_Subsystem_1' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, Temp_object_Variable) == 0x000020, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, CallFunc_WaitSubsystem_ReturnValue) == 0x000028, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::CallFunc_WaitSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, CallFunc_Instance_ReturnValue) == 0x000040, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::CallFunc_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_DynamicCast_AsGz_Multi_Stage_Game_State) == 0x000048, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_DynamicCast_AsGz_Multi_Stage_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_CustomEvent_bActivated) == 0x000052, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_CustomEvent_bActivated' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_DynamicCast_AsGz_Battle_Royale_Settings) == 0x000070, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_DynamicCast_AsGz_Battle_Royale_Settings' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_CreateDelegate_OutputDelegate_2) == 0x00007C, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_Event_IsDesignTime) == 0x00008C, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_CustomEvent_Subsystem) == 0x000090, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_CustomEvent_Subsystem' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_DynamicCast_AsGz_Shrinking_Zone_Manager) == 0x000098, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_DynamicCast_AsGz_Shrinking_Zone_Manager' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, CallFunc_GetCurrentStage_ReturnValue) == 0x0000A4, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::CallFunc_GetCurrentStage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B0, "Member 'WBP_StageTimer_C_ExecuteUbergraph_WBP_StageTimer::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.GetDeploymentTime
// 0x0080 (0x0080 - 0x0000)
struct WBP_StageTimer_C_GetDeploymentTime final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDeploy_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E46[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzDeploymentTransport*                 CallFunc_GetDeploymentTransport_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeploymentAvailableTime_ReturnValue;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E47[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStageRemainingTime_ReturnValue;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E48[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E49[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeploymentPawn_C*                   K2Node_DynamicCast_AsBP_Deployment_Pawn;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4B[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_GetDeploymentTime) == 0x000008, "Wrong alignment on WBP_StageTimer_C_GetDeploymentTime");
static_assert(sizeof(WBP_StageTimer_C_GetDeploymentTime) == 0x000080, "Wrong size on WBP_StageTimer_C_GetDeploymentTime");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, ReturnValue) == 0x000000, "Member 'WBP_StageTimer_C_GetDeploymentTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_CanDeploy_ReturnValue) == 0x000009, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_CanDeploy_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_GetDeploymentTransport_ReturnValue) == 0x000010, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_GetDeploymentTransport_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_GetDeploymentAvailableTime_ReturnValue) == 0x000018, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_GetDeploymentAvailableTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000020, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_GetStageRemainingTime_ReturnValue) == 0x000028, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_GetStageRemainingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000040, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, K2Node_DynamicCast_AsBP_Deployment_Pawn) == 0x000050, "Member 'WBP_StageTimer_C_GetDeploymentTime::K2Node_DynamicCast_AsBP_Deployment_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_StageTimer_C_GetDeploymentTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000068, "Member 'WBP_StageTimer_C_GetDeploymentTime::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_GetDeploymentTime, CallFunc_SelectFloat_A_ImplicitCast) == 0x000078, "Member 'WBP_StageTimer_C_GetDeploymentTime::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.IncrementStageNumber
// 0x0008 (0x0008 - 0x0000)
struct WBP_StageTimer_C_IncrementStageNumber final
{
public:
	class AGzGameModeSubsystem*                   Subsystem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_IncrementStageNumber) == 0x000008, "Wrong alignment on WBP_StageTimer_C_IncrementStageNumber");
static_assert(sizeof(WBP_StageTimer_C_IncrementStageNumber) == 0x000008, "Wrong size on WBP_StageTimer_C_IncrementStageNumber");
static_assert(offsetof(WBP_StageTimer_C_IncrementStageNumber, Subsystem) == 0x000000, "Member 'WBP_StageTimer_C_IncrementStageNumber::Subsystem' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.IsBorderVisibile
// 0x0002 (0x0002 - 0x0000)
struct WBP_StageTimer_C_IsBorderVisibile final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_IsBorderVisibile) == 0x000001, "Wrong alignment on WBP_StageTimer_C_IsBorderVisibile");
static_assert(sizeof(WBP_StageTimer_C_IsBorderVisibile) == 0x000002, "Wrong size on WBP_StageTimer_C_IsBorderVisibile");
static_assert(offsetof(WBP_StageTimer_C_IsBorderVisibile, Visible) == 0x000000, "Member 'WBP_StageTimer_C_IsBorderVisibile::Visible' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_IsBorderVisibile, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WBP_StageTimer_C_IsBorderVisibile::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.IsPreMatchActiveted
// 0x0030 (0x0030 - 0x0000)
struct WBP_StageTimer_C_IsPreMatchActiveted final
{
public:
	bool                                          Activeted;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetActiveStageTags_ReturnValue;           // 0x0008(0x0020)(ConstParm)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_IsPreMatchActiveted) == 0x000008, "Wrong alignment on WBP_StageTimer_C_IsPreMatchActiveted");
static_assert(sizeof(WBP_StageTimer_C_IsPreMatchActiveted) == 0x000030, "Wrong size on WBP_StageTimer_C_IsPreMatchActiveted");
static_assert(offsetof(WBP_StageTimer_C_IsPreMatchActiveted, Activeted) == 0x000000, "Member 'WBP_StageTimer_C_IsPreMatchActiveted::Activeted' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_IsPreMatchActiveted, CallFunc_GetActiveStageTags_ReturnValue) == 0x000008, "Member 'WBP_StageTimer_C_IsPreMatchActiveted::CallFunc_GetActiveStageTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_IsPreMatchActiveted, CallFunc_HasTag_ReturnValue) == 0x000028, "Member 'WBP_StageTimer_C_IsPreMatchActiveted::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.OnGlobalOverloadActivated_Event
// 0x0001 (0x0001 - 0x0000)
struct WBP_StageTimer_C_OnGlobalOverloadActivated_Event final
{
public:
	bool                                          bActivated;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_OnGlobalOverloadActivated_Event) == 0x000001, "Wrong alignment on WBP_StageTimer_C_OnGlobalOverloadActivated_Event");
static_assert(sizeof(WBP_StageTimer_C_OnGlobalOverloadActivated_Event) == 0x000001, "Wrong size on WBP_StageTimer_C_OnGlobalOverloadActivated_Event");
static_assert(offsetof(WBP_StageTimer_C_OnGlobalOverloadActivated_Event, bActivated) == 0x000000, "Member 'WBP_StageTimer_C_OnGlobalOverloadActivated_Event::bActivated' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.OnReady_74445F76405545A9179F5F9507DC42FC
// 0x0008 (0x0008 - 0x0000)
struct WBP_StageTimer_C_OnReady_74445F76405545A9179F5F9507DC42FC final
{
public:
	class AGzGameModeSubsystem*                   Subsystem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_OnReady_74445F76405545A9179F5F9507DC42FC) == 0x000008, "Wrong alignment on WBP_StageTimer_C_OnReady_74445F76405545A9179F5F9507DC42FC");
static_assert(sizeof(WBP_StageTimer_C_OnReady_74445F76405545A9179F5F9507DC42FC) == 0x000008, "Wrong size on WBP_StageTimer_C_OnReady_74445F76405545A9179F5F9507DC42FC");
static_assert(offsetof(WBP_StageTimer_C_OnReady_74445F76405545A9179F5F9507DC42FC, Subsystem) == 0x000000, "Member 'WBP_StageTimer_C_OnReady_74445F76405545A9179F5F9507DC42FC::Subsystem' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_StageTimer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_StageTimer_C_PreConstruct");
static_assert(sizeof(WBP_StageTimer_C_PreConstruct) == 0x000001, "Wrong size on WBP_StageTimer_C_PreConstruct");
static_assert(offsetof(WBP_StageTimer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_StageTimer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.SetCurrentStateIcon
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_StageTimer_C_SetCurrentStateIcon final
{
public:
	struct FSlateBrush                            CallFunc_Map_Find_Value;                           // 0x0000(0x00D0)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_SetCurrentStateIcon) == 0x000010, "Wrong alignment on WBP_StageTimer_C_SetCurrentStateIcon");
static_assert(sizeof(WBP_StageTimer_C_SetCurrentStateIcon) == 0x0000E0, "Wrong size on WBP_StageTimer_C_SetCurrentStateIcon");
static_assert(offsetof(WBP_StageTimer_C_SetCurrentStateIcon, CallFunc_Map_Find_Value) == 0x000000, "Member 'WBP_StageTimer_C_SetCurrentStateIcon::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetCurrentStateIcon, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'WBP_StageTimer_C_SetCurrentStateIcon::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.SetCurrentTimeState
// 0x0014 (0x0014 - 0x0000)
struct WBP_StageTimer_C_SetCurrentTimeState final
{
public:
	struct FGameplayTag                           Selection;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StateTag;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_SetCurrentTimeState) == 0x000004, "Wrong alignment on WBP_StageTimer_C_SetCurrentTimeState");
static_assert(sizeof(WBP_StageTimer_C_SetCurrentTimeState) == 0x000014, "Wrong size on WBP_StageTimer_C_SetCurrentTimeState");
static_assert(offsetof(WBP_StageTimer_C_SetCurrentTimeState, Selection) == 0x000000, "Member 'WBP_StageTimer_C_SetCurrentTimeState::Selection' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetCurrentTimeState, StateTag) == 0x000008, "Member 'WBP_StageTimer_C_SetCurrentTimeState::StateTag' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetCurrentTimeState, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000010, "Member 'WBP_StageTimer_C_SetCurrentTimeState::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.SetDeploymentImage
// 0x0018 (0x0018 - 0x0000)
struct WBP_StageTimer_C_SetDeploymentImage final
{
public:
	struct FGameplayTag                           A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_SetDeploymentImage) == 0x000004, "Wrong alignment on WBP_StageTimer_C_SetDeploymentImage");
static_assert(sizeof(WBP_StageTimer_C_SetDeploymentImage) == 0x000018, "Wrong size on WBP_StageTimer_C_SetDeploymentImage");
static_assert(offsetof(WBP_StageTimer_C_SetDeploymentImage, A) == 0x000000, "Member 'WBP_StageTimer_C_SetDeploymentImage::A' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetDeploymentImage, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000008, "Member 'WBP_StageTimer_C_SetDeploymentImage::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetDeploymentImage, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x00000C, "Member 'WBP_StageTimer_C_SetDeploymentImage::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetDeploymentImage, CallFunc_SelectInt_ReturnValue) == 0x000010, "Member 'WBP_StageTimer_C_SetDeploymentImage::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetDeploymentImage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_StageTimer_C_SetDeploymentImage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.SetFontStyle
// 0x0088 (0x0088 - 0x0000)
struct WBP_StageTimer_C_SetFontStyle final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Result;                                            // 0x0010(0x0010)(Parm, OutParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
};
static_assert(alignof(WBP_StageTimer_C_SetFontStyle) == 0x000008, "Wrong alignment on WBP_StageTimer_C_SetFontStyle");
static_assert(sizeof(WBP_StageTimer_C_SetFontStyle) == 0x000088, "Wrong size on WBP_StageTimer_C_SetFontStyle");
static_assert(offsetof(WBP_StageTimer_C_SetFontStyle, Text) == 0x000000, "Member 'WBP_StageTimer_C_SetFontStyle::Text' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetFontStyle, Result) == 0x000010, "Member 'WBP_StageTimer_C_SetFontStyle::Result' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetFontStyle, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_StageTimer_C_SetFontStyle::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetFontStyle, K2Node_MakeArray_Array) == 0x000068, "Member 'WBP_StageTimer_C_SetFontStyle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetFontStyle, CallFunc_Format_ReturnValue) == 0x000078, "Member 'WBP_StageTimer_C_SetFontStyle::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.SetTimerText
// 0x0060 (0x0060 - 0x0000)
struct WBP_StageTimer_C_SetTimerText final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Minute;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Time;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimeInMinutesSecondFormatText_Result;  // 0x0020(0x0010)()
	float                                         CallFunc_GetTimeMinutesSeconds_OutMinutes;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeMinutesSeconds_OutSeconds;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBorderVisibile_Visible;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBorderVisibile_Visible_1;               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4F[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeInMinutesSecondFormatText_InSeconds_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E50[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeMinutesSeconds_InSeconds_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_SetTimerText) == 0x000008, "Wrong alignment on WBP_StageTimer_C_SetTimerText");
static_assert(sizeof(WBP_StageTimer_C_SetTimerText) == 0x000060, "Wrong size on WBP_StageTimer_C_SetTimerText");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, Value) == 0x000000, "Member 'WBP_StageTimer_C_SetTimerText::Value' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, Minute) == 0x000008, "Member 'WBP_StageTimer_C_SetTimerText::Minute' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, Time) == 0x000010, "Member 'WBP_StageTimer_C_SetTimerText::Time' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000018, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_GetTimeInMinutesSecondFormatText_Result) == 0x000020, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_GetTimeInMinutesSecondFormatText_Result' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_GetTimeMinutesSeconds_OutMinutes) == 0x000030, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_GetTimeMinutesSeconds_OutMinutes' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_GetTimeMinutesSeconds_OutSeconds) == 0x000034, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_GetTimeMinutesSeconds_OutSeconds' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_IsBorderVisibile_Visible) == 0x000038, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_IsBorderVisibile_Visible' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000039, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_IsBorderVisibile_Visible_1) == 0x00003A, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_IsBorderVisibile_Visible_1' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00003C, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00003D, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_GetTimeInMinutesSecondFormatText_InSeconds_ImplicitCast) == 0x000040, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_GetTimeInMinutesSecondFormatText_InSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_SetTimerText, CallFunc_GetTimeMinutesSeconds_InSeconds_ImplicitCast) == 0x000058, "Member 'WBP_StageTimer_C_SetTimerText::CallFunc_GetTimeMinutesSeconds_InSeconds_ImplicitCast' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.ShowBorder
// 0x0002 (0x0002 - 0x0000)
struct WBP_StageTimer_C_ShowBorder final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_ShowBorder) == 0x000001, "Wrong alignment on WBP_StageTimer_C_ShowBorder");
static_assert(sizeof(WBP_StageTimer_C_ShowBorder) == 0x000002, "Wrong size on WBP_StageTimer_C_ShowBorder");
static_assert(offsetof(WBP_StageTimer_C_ShowBorder, Show) == 0x000000, "Member 'WBP_StageTimer_C_ShowBorder::Show' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_ShowBorder, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'WBP_StageTimer_C_ShowBorder::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_StageTimer.WBP_StageTimer_C.UpdatePhaseTimer
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_StageTimer_C_UpdatePhaseTimer final
{
public:
	float                                         OverloadWaitPerionTime;                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E51[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzMultiStageGameState*                 K2Node_DynamicCast_AsGz_Multi_Stage_Game_State;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E52[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzGameModeSubsystem*                   CallFunc_FindLocalSubsystem_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDeploymentTime_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStageRemainingTime_ReturnValue;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E53[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzBattleRoyaleZoneManager*             CallFunc_Instance_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOverloadTime_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E54[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetActiveStageTags_ReturnValue;           // 0x0048(0x0020)(ConstParm)
	struct FGameplayTag                           CallFunc_ConvertTagToTimerState_Array_Element;     // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UGzComebackArenaContextComponent*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E55[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetComebackArenaEndTime_ReturnValue;      // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInComebackArena_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E56[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStageRemainingTime_ReturnValue_1;      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E57[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzBattleRoyaleZoneManager*             CallFunc_Instance_ReturnValue_1;                   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOverloadWaitPeriodTime_ReturnValue;    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E58[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzPlayerState*                         CallFunc_GetPlayerStateFromContext_ReturnValue;    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetTimerText_Value_ImplicitCast;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetTimerText_Value_ImplicitCast_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetTimerText_Value_ImplicitCast_2;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetTimerText_Value_ImplicitCast_3;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetTimerText_Value_ImplicitCast_4;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StageTimer_C_UpdatePhaseTimer) == 0x000008, "Wrong alignment on WBP_StageTimer_C_UpdatePhaseTimer");
static_assert(sizeof(WBP_StageTimer_C_UpdatePhaseTimer) == 0x0000E0, "Wrong size on WBP_StageTimer_C_UpdatePhaseTimer");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, OverloadWaitPerionTime) == 0x000000, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::OverloadWaitPerionTime' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, K2Node_DynamicCast_AsGz_Multi_Stage_Game_State) == 0x000010, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::K2Node_DynamicCast_AsGz_Multi_Stage_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_FindLocalSubsystem_ReturnValue) == 0x000020, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_FindLocalSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetDeploymentTime_ReturnValue) == 0x000028, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetDeploymentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetStageRemainingTime_ReturnValue) == 0x000030, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetStageRemainingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_Instance_ReturnValue) == 0x000038, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetOverloadTime_ReturnValue) == 0x000040, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetOverloadTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetActiveStageTags_ReturnValue) == 0x000048, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetActiveStageTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_ConvertTagToTimerState_Array_Element) == 0x000068, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_ConvertTagToTimerState_Array_Element' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000078, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetComebackArenaEndTime_ReturnValue) == 0x00007C, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetComebackArenaEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_IsInComebackArena_ReturnValue) == 0x000080, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_IsInComebackArena_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000081, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetStageRemainingTime_ReturnValue_1) == 0x000084, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetStageRemainingTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_Instance_ReturnValue_1) == 0x000090, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_Instance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetOwningPlayer_ReturnValue) == 0x000098, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetOverloadWaitPeriodTime_ReturnValue) == 0x0000A0, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetOverloadWaitPeriodTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_GetPlayerStateFromContext_ReturnValue) == 0x0000A8, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_GetPlayerStateFromContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_SetTimerText_Value_ImplicitCast) == 0x0000B0, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_SetTimerText_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_SetTimerText_Value_ImplicitCast_1) == 0x0000B8, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_SetTimerText_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_SetTimerText_Value_ImplicitCast_2) == 0x0000C0, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_SetTimerText_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_SetTimerText_Value_ImplicitCast_3) == 0x0000C8, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_SetTimerText_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_StageTimer_C_UpdatePhaseTimer, CallFunc_SetTimerText_Value_ImplicitCast_4) == 0x0000D8, "Member 'WBP_StageTimer_C_UpdatePhaseTimer::CallFunc_SetTimerText_Value_ImplicitCast_4' has a wrong offset!");

}

