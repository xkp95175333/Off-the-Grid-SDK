#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DomeShield

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "G01_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_DomeShield.BP_DomeShield_C.ApplyShieldDetonationEffects
// 0x0898 (0x0898 - 0x0000)
struct BP_DomeShield_C_ApplyShieldDetonationEffects final
{
public:
	struct FHitResult                             Param_HitResult;                                   // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134C[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134D[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134E[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134F[0x2];                                     // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1350[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1351[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           K2Node_DynamicCast_AsGz_Character;                 // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1352[0x6];                                     // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateShieldDetonationImpulse_ReturnValue; // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1353[0x6];                                     // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x02D8(0x0028)()
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1354[0x2];                                     // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1355[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1356[0x4];                                     // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGzGA_BaseLimbAbility*                  CallFunc_GetActiveLimbAbility_ReturnValue;         // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x03E8(0x0010)()
	TMap<struct FGameplayTag, float>              K2Node_MakeMap_Map;                                // 0x03F8(0x0050)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0448(0x0010)()
	struct FGzDamageHit                           K2Node_MakeStruct_GzDamageHit;                     // 0x0458(0x01B8)(ContainsInstancedReference)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0610(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateShieldDomeRadius_ShieldRadius;   // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1357[0x4];                                     // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGzDamageInstigatorData                K2Node_MakeStruct_GzDamageInstigatorData;          // 0x0640(0x0038)(NoDestructor)
	struct FGzTargetAttackParams                  K2Node_MakeStruct_GzTargetAttackParams;            // 0x0678(0x0200)(ContainsInstancedReference)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeTargetAttack_ReturnValue;             // 0x087C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x087D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x087E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1358[0x1];                                     // 0x087F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeMap_Value_0_ImplicitCast;               // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1359[0x4];                                     // 0x0884(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_ApplyShieldDetonationEffects) == 0x000008, "Wrong alignment on BP_DomeShield_C_ApplyShieldDetonationEffects");
static_assert(sizeof(BP_DomeShield_C_ApplyShieldDetonationEffects) == 0x000898, "Wrong size on BP_DomeShield_C_ApplyShieldDetonationEffects");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, Param_HitResult) == 0x000000, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::Param_HitResult' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0001D0, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0001D1, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Time_1) == 0x0001D4, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Distance_1) == 0x0001D8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Location_1) == 0x0001E0, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0001F8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Normal_1) == 0x000210, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000228, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_PhysMat_1) == 0x000240, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitActor_1) == 0x000248, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitComponent_1) == 0x000250, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitBoneName_1) == 0x000258, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_BoneName_1) == 0x000260, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitItem_1) == 0x000268, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_ElementIndex_1) == 0x00026C, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_FaceIndex_1) == 0x000270, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_TraceStart_1) == 0x000278, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_TraceEnd_1) == 0x000290, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, K2Node_DynamicCast_AsGz_Character) == 0x0002A8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::K2Node_DynamicCast_AsGz_Character' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_GetTeamAttitude_ReturnValue) == 0x0002B1, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_CalculateShieldDetonationImpulse_ReturnValue) == 0x0002B8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_CalculateShieldDetonationImpulse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D0, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_Not_PreBool_ReturnValue) == 0x0002D1, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0002D8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000300, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000301, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Time_2) == 0x000304, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Distance_2) == 0x000308, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Location_2) == 0x000310, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000328, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_Normal_2) == 0x000340, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000358, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_PhysMat_2) == 0x000370, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitActor_2) == 0x000378, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitComponent_2) == 0x000380, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitBoneName_2) == 0x000388, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_BoneName_2) == 0x000390, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_HitItem_2) == 0x000398, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_ElementIndex_2) == 0x00039C, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_FaceIndex_2) == 0x0003A0, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_TraceStart_2) == 0x0003A8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BreakHitResult_TraceEnd_2) == 0x0003C0, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_GetActiveLimbAbility_ReturnValue) == 0x0003D8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_GetActiveLimbAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0003E0, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x0003E8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, K2Node_MakeMap_Map) == 0x0003F8, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000448, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, K2Node_MakeStruct_GzDamageHit) == 0x000458, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::K2Node_MakeStruct_GzDamageHit' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000610, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000620, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_CalculateShieldDomeRadius_ShieldRadius) == 0x000638, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_CalculateShieldDomeRadius_ShieldRadius' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, K2Node_MakeStruct_GzDamageInstigatorData) == 0x000640, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::K2Node_MakeStruct_GzDamageInstigatorData' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, K2Node_MakeStruct_GzTargetAttackParams) == 0x000678, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::K2Node_MakeStruct_GzTargetAttackParams' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_GetDistanceTo_ReturnValue) == 0x000878, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_MakeTargetAttack_ReturnValue) == 0x00087C, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_MakeTargetAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00087D, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_BooleanAND_ReturnValue) == 0x00087E, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, K2Node_MakeMap_Value_0_ImplicitCast) == 0x000880, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::K2Node_MakeMap_Value_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000888, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ApplyShieldDetonationEffects, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000890, "Member 'BP_DomeShield_C_ApplyShieldDetonationEffects::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DomeShield_C_BndEvt__BP_DomeShield_DetonationSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.BP_OnDeath
// 0x0020 (0x0020 - 0x0000)
struct BP_DomeShield_C_BP_OnDeath final
{
public:
	bool                                          HasDeathHitPoint;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DeathHitPoint;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_BP_OnDeath) == 0x000008, "Wrong alignment on BP_DomeShield_C_BP_OnDeath");
static_assert(sizeof(BP_DomeShield_C_BP_OnDeath) == 0x000020, "Wrong size on BP_DomeShield_C_BP_OnDeath");
static_assert(offsetof(BP_DomeShield_C_BP_OnDeath, HasDeathHitPoint) == 0x000000, "Member 'BP_DomeShield_C_BP_OnDeath::HasDeathHitPoint' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_BP_OnDeath, DeathHitPoint) == 0x000008, "Member 'BP_DomeShield_C_BP_OnDeath::DeathHitPoint' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.BP_OnHealthChange
// 0x0004 (0x0004 - 0x0000)
struct BP_DomeShield_C_BP_OnHealthChange final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_BP_OnHealthChange) == 0x000004, "Wrong alignment on BP_DomeShield_C_BP_OnHealthChange");
static_assert(sizeof(BP_DomeShield_C_BP_OnHealthChange) == 0x000004, "Wrong size on BP_DomeShield_C_BP_OnHealthChange");
static_assert(offsetof(BP_DomeShield_C_BP_OnHealthChange, Health) == 0x000000, "Member 'BP_DomeShield_C_BP_OnHealthChange::Health' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.CalculateShieldDetonationImpulse
// 0x0130 (0x0130 - 0x0000)
struct BP_DomeShield_C_CalculateShieldDetonationImpulse final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_CalculateShieldDetonationImpulse) == 0x000008, "Wrong alignment on BP_DomeShield_C_CalculateShieldDetonationImpulse");
static_assert(sizeof(BP_DomeShield_C_CalculateShieldDetonationImpulse) == 0x000130, "Wrong size on BP_DomeShield_C_CalculateShieldDetonationImpulse");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, HitActor) == 0x000000, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::HitActor' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, ReturnValue) == 0x000008, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000050, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000068, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000080, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_GetForwardVector_ReturnValue) == 0x000098, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_BreakVector_X) == 0x0000B0, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E0, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_BreakVector_X_1) == 0x0000F8, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_BreakVector_Y_1) == 0x000100, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_BreakVector_Z_1) == 0x000108, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDetonationImpulse, CallFunc_MakeVector_ReturnValue_1) == 0x000118, "Member 'BP_DomeShield_C_CalculateShieldDetonationImpulse::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.CalculateShieldDomeRadius
// 0x0060 (0x0060 - 0x0000)
struct BP_DomeShield_C_CalculateShieldDomeRadius final
{
public:
	float                                         ShieldRadius;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135D[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ShieldRadius_ImplicitCast;   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_CalculateShieldDomeRadius) == 0x000008, "Wrong alignment on BP_DomeShield_C_CalculateShieldDomeRadius");
static_assert(sizeof(BP_DomeShield_C_CalculateShieldDomeRadius) == 0x000060, "Wrong size on BP_DomeShield_C_CalculateShieldDomeRadius");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDomeRadius, ShieldRadius) == 0x000000, "Member 'BP_DomeShield_C_CalculateShieldDomeRadius::ShieldRadius' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDomeRadius, CallFunc_GetComponentBounds_Origin) == 0x000008, "Member 'BP_DomeShield_C_CalculateShieldDomeRadius::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDomeRadius, CallFunc_GetComponentBounds_BoxExtent) == 0x000020, "Member 'BP_DomeShield_C_CalculateShieldDomeRadius::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDomeRadius, CallFunc_GetComponentBounds_SphereRadius) == 0x000038, "Member 'BP_DomeShield_C_CalculateShieldDomeRadius::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDomeRadius, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_DomeShield_C_CalculateShieldDomeRadius::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDomeRadius, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_DomeShield_C_CalculateShieldDomeRadius::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDomeRadius, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_DomeShield_C_CalculateShieldDomeRadius::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_CalculateShieldDomeRadius, K2Node_FunctionResult_ShieldRadius_ImplicitCast) == 0x000058, "Member 'BP_DomeShield_C_CalculateShieldDomeRadius::K2Node_FunctionResult_ShieldRadius_ImplicitCast' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.DestroyShield
// 0x0001 (0x0001 - 0x0000)
struct BP_DomeShield_C_DestroyShield final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_DestroyShield) == 0x000001, "Wrong alignment on BP_DomeShield_C_DestroyShield");
static_assert(sizeof(BP_DomeShield_C_DestroyShield) == 0x000001, "Wrong size on BP_DomeShield_C_DestroyShield");
static_assert(offsetof(BP_DomeShield_C_DestroyShield, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_DomeShield_C_DestroyShield::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.DetonateShield
// 0x0001 (0x0001 - 0x0000)
struct BP_DomeShield_C_DetonateShield final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_DetonateShield) == 0x000001, "Wrong alignment on BP_DomeShield_C_DetonateShield");
static_assert(sizeof(BP_DomeShield_C_DetonateShield) == 0x000001, "Wrong size on BP_DomeShield_C_DetonateShield");
static_assert(offsetof(BP_DomeShield_C_DetonateShield, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_DomeShield_C_DetonateShield::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.DetonationFX
// 0x0038 (0x0038 - 0x0000)
struct BP_DomeShield_C_DetonationFX final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_DetonationFX) == 0x000008, "Wrong alignment on BP_DomeShield_C_DetonationFX");
static_assert(sizeof(BP_DomeShield_C_DetonationFX) == 0x000038, "Wrong size on BP_DomeShield_C_DetonationFX");
static_assert(offsetof(BP_DomeShield_C_DetonationFX, Temp_delegate_Variable) == 0x000000, "Member 'BP_DomeShield_C_DetonationFX::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_DetonationFX, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_DomeShield_C_DetonationFX::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_DetonationFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000028, "Member 'BP_DomeShield_C_DetonationFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_DetonationFX, CallFunc_PostEvent_ReturnValue) == 0x000030, "Member 'BP_DomeShield_C_DetonationFX::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.ExecuteUbergraph_BP_DomeShield
// 0x01D8 (0x01D8 - 0x0000)
struct BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetImpactColor_ReturnValue;               // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0014(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0024(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Health;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135E[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0040(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HasDeathHitPoint;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135F[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_DeathHitPoint;                        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1360[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1361[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0098(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0190(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_HitRotation;                          // 0x01A8(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ScaleShield_Multiplier_ImplicitCast;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ScaleShield_Multiplier_ImplicitCast_1;    // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield) == 0x000008, "Wrong alignment on BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield");
static_assert(sizeof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield) == 0x0001D8, "Wrong size on BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, EntryPoint) == 0x000000, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_GetImpactColor_ReturnValue) == 0x000004, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_GetImpactColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, Temp_delegate_Variable) == 0x000014, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, Temp_delegate_Variable_1) == 0x000024, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_Event_Health) == 0x000034, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_Event_Health' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_PostEvent_ReturnValue) == 0x000038, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_HasAuthority_ReturnValue) == 0x00003C, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_HasAuthority_ReturnValue_1) == 0x00003D, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_HasAuthority_ReturnValue_2) == 0x00003E, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, Temp_delegate_Variable_2) == 0x000040, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_PostEvent_ReturnValue_1) == 0x000050, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_Event_HasDeathHitPoint) == 0x000054, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_Event_HasDeathHitPoint' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_Event_DeathHitPoint) == 0x000058, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_Event_DeathHitPoint' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_PostEvent_ReturnValue_2) == 0x000070, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_HasAuthority_ReturnValue_3) == 0x000074, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000078, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_ComponentBoundEvent_OtherActor) == 0x000080, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_ComponentBoundEvent_OtherComp) == 0x000088, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000090, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_ComponentBoundEvent_bFromSweep) == 0x000094, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_ComponentBoundEvent_SweepResult) == 0x000098, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_Event_HitLocation) == 0x000190, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, K2Node_Event_HitRotation) == 0x0001A8, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::K2Node_Event_HitRotation' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0001C0, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_ScaleShield_Multiplier_ImplicitCast) == 0x0001C8, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_ScaleShield_Multiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield, CallFunc_ScaleShield_Multiplier_ImplicitCast_1) == 0x0001D0, "Member 'BP_DomeShield_C_ExecuteUbergraph_BP_DomeShield::CallFunc_ScaleShield_Multiplier_ImplicitCast_1' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.GetHealthPercentage
// 0x0030 (0x0030 - 0x0000)
struct BP_DomeShield_C_GetHealthPercentage final
{
public:
	double                                        HealthPercentage;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentHealth_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1362[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_GetHealthPercentage) == 0x000008, "Wrong alignment on BP_DomeShield_C_GetHealthPercentage");
static_assert(sizeof(BP_DomeShield_C_GetHealthPercentage) == 0x000030, "Wrong size on BP_DomeShield_C_GetHealthPercentage");
static_assert(offsetof(BP_DomeShield_C_GetHealthPercentage, HealthPercentage) == 0x000000, "Member 'BP_DomeShield_C_GetHealthPercentage::HealthPercentage' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetHealthPercentage, CallFunc_GetCurrentHealth_ReturnValue) == 0x000008, "Member 'BP_DomeShield_C_GetHealthPercentage::CallFunc_GetCurrentHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetHealthPercentage, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'BP_DomeShield_C_GetHealthPercentage::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetHealthPercentage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_DomeShield_C_GetHealthPercentage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetHealthPercentage, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BP_DomeShield_C_GetHealthPercentage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetHealthPercentage, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'BP_DomeShield_C_GetHealthPercentage::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.GetImpactColor
// 0x0038 (0x0038 - 0x0000)
struct BP_DomeShield_C_GetImpactColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHealthPercentage_HealthPercentage;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_GetImpactColor) == 0x000008, "Wrong alignment on BP_DomeShield_C_GetImpactColor");
static_assert(sizeof(BP_DomeShield_C_GetImpactColor) == 0x000038, "Wrong size on BP_DomeShield_C_GetImpactColor");
static_assert(offsetof(BP_DomeShield_C_GetImpactColor, ReturnValue) == 0x000000, "Member 'BP_DomeShield_C_GetImpactColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetImpactColor, CallFunc_GetHealthPercentage_HealthPercentage) == 0x000010, "Member 'BP_DomeShield_C_GetImpactColor::CallFunc_GetHealthPercentage_HealthPercentage' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetImpactColor, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_DomeShield_C_GetImpactColor::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetImpactColor, CallFunc_GetLinearColorValue_ReturnValue) == 0x000020, "Member 'BP_DomeShield_C_GetImpactColor::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetImpactColor, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x000030, "Member 'BP_DomeShield_C_GetImpactColor::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.GetShieldColor
// 0x0038 (0x0038 - 0x0000)
struct BP_DomeShield_C_GetShieldColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHealthPercentage_HealthPercentage;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_GetShieldColor) == 0x000008, "Wrong alignment on BP_DomeShield_C_GetShieldColor");
static_assert(sizeof(BP_DomeShield_C_GetShieldColor) == 0x000038, "Wrong size on BP_DomeShield_C_GetShieldColor");
static_assert(offsetof(BP_DomeShield_C_GetShieldColor, ReturnValue) == 0x000000, "Member 'BP_DomeShield_C_GetShieldColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetShieldColor, CallFunc_GetHealthPercentage_HealthPercentage) == 0x000010, "Member 'BP_DomeShield_C_GetShieldColor::CallFunc_GetHealthPercentage_HealthPercentage' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetShieldColor, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_DomeShield_C_GetShieldColor::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetShieldColor, CallFunc_GetLinearColorValue_ReturnValue) == 0x000020, "Member 'BP_DomeShield_C_GetShieldColor::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_GetShieldColor, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x000030, "Member 'BP_DomeShield_C_GetShieldColor::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.InitMaterial
// 0x0008 (0x0008 - 0x0000)
struct BP_DomeShield_C_InitMaterial final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_InitMaterial) == 0x000008, "Wrong alignment on BP_DomeShield_C_InitMaterial");
static_assert(sizeof(BP_DomeShield_C_InitMaterial) == 0x000008, "Wrong size on BP_DomeShield_C_InitMaterial");
static_assert(offsetof(BP_DomeShield_C_InitMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_DomeShield_C_InitMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.InitShieldHealth
// 0x0070 (0x0070 - 0x0000)
struct BP_DomeShield_C_InitShieldHealth final
{
public:
	double                                        MaxHealth;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1363[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, float>              K2Node_MakeMap_Map;                                // 0x0010(0x0050)(ConstParm)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectFromActorWithCustomMagnitudes_ReturnValue; // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeMap_Value_0_ImplicitCast;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_InitShieldHealth) == 0x000008, "Wrong alignment on BP_DomeShield_C_InitShieldHealth");
static_assert(sizeof(BP_DomeShield_C_InitShieldHealth) == 0x000070, "Wrong size on BP_DomeShield_C_InitShieldHealth");
static_assert(offsetof(BP_DomeShield_C_InitShieldHealth, MaxHealth) == 0x000000, "Member 'BP_DomeShield_C_InitShieldHealth::MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_InitShieldHealth, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'BP_DomeShield_C_InitShieldHealth::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_InitShieldHealth, K2Node_MakeMap_Map) == 0x000010, "Member 'BP_DomeShield_C_InitShieldHealth::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_InitShieldHealth, CallFunc_BP_ApplyGameplayEffectFromActorWithCustomMagnitudes_ReturnValue) == 0x000060, "Member 'BP_DomeShield_C_InitShieldHealth::CallFunc_BP_ApplyGameplayEffectFromActorWithCustomMagnitudes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_InitShieldHealth, K2Node_MakeMap_Value_0_ImplicitCast) == 0x000068, "Member 'BP_DomeShield_C_InitShieldHealth::K2Node_MakeMap_Value_0_ImplicitCast' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.OnGadgetDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_DomeShield_C_OnGadgetDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_OnGadgetDestroyed) == 0x000008, "Wrong alignment on BP_DomeShield_C_OnGadgetDestroyed");
static_assert(sizeof(BP_DomeShield_C_OnGadgetDestroyed) == 0x000008, "Wrong size on BP_DomeShield_C_OnGadgetDestroyed");
static_assert(offsetof(BP_DomeShield_C_OnGadgetDestroyed, DestroyedActor) == 0x000000, "Member 'BP_DomeShield_C_OnGadgetDestroyed::DestroyedActor' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.ScaleShield
// 0x0030 (0x0030 - 0x0000)
struct BP_DomeShield_C_ScaleShield final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_ShieldSize;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_ScaleShield) == 0x000008, "Wrong alignment on BP_DomeShield_C_ScaleShield");
static_assert(sizeof(BP_DomeShield_C_ScaleShield) == 0x000030, "Wrong size on BP_DomeShield_C_ScaleShield");
static_assert(offsetof(BP_DomeShield_C_ScaleShield, Multiplier) == 0x000000, "Member 'BP_DomeShield_C_ScaleShield::Multiplier' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ScaleShield, Param_ShieldSize) == 0x000008, "Member 'BP_DomeShield_C_ScaleShield::Param_ShieldSize' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ScaleShield, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_DomeShield_C_ScaleShield::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_ScaleShield, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_DomeShield_C_ScaleShield::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.SetOwningGadgetAndCharacter
// 0x0040 (0x0040 - 0x0000)
struct BP_DomeShield_C_SetOwningGadgetAndCharacter final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1364[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DomeGadget_C*                       K2Node_DynamicCast_AsBP_Dome_Gadget;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1365[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1366[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_SetOwningGadgetAndCharacter) == 0x000008, "Wrong alignment on BP_DomeShield_C_SetOwningGadgetAndCharacter");
static_assert(sizeof(BP_DomeShield_C_SetOwningGadgetAndCharacter) == 0x000040, "Wrong size on BP_DomeShield_C_SetOwningGadgetAndCharacter");
static_assert(offsetof(BP_DomeShield_C_SetOwningGadgetAndCharacter, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_DomeShield_C_SetOwningGadgetAndCharacter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_SetOwningGadgetAndCharacter, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_DomeShield_C_SetOwningGadgetAndCharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_SetOwningGadgetAndCharacter, K2Node_DynamicCast_AsBP_Dome_Gadget) == 0x000010, "Member 'BP_DomeShield_C_SetOwningGadgetAndCharacter::K2Node_DynamicCast_AsBP_Dome_Gadget' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_SetOwningGadgetAndCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DomeShield_C_SetOwningGadgetAndCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_SetOwningGadgetAndCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_DomeShield_C_SetOwningGadgetAndCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_SetOwningGadgetAndCharacter, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000030, "Member 'BP_DomeShield_C_SetOwningGadgetAndCharacter::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_SetOwningGadgetAndCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_DomeShield_C_SetOwningGadgetAndCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.SpawnBulletImpactVFX
// 0x0030 (0x0030 - 0x0000)
struct BP_DomeShield_C_SpawnBulletImpactVFX final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HitRotation;                                       // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DomeShield_C_SpawnBulletImpactVFX) == 0x000008, "Wrong alignment on BP_DomeShield_C_SpawnBulletImpactVFX");
static_assert(sizeof(BP_DomeShield_C_SpawnBulletImpactVFX) == 0x000030, "Wrong size on BP_DomeShield_C_SpawnBulletImpactVFX");
static_assert(offsetof(BP_DomeShield_C_SpawnBulletImpactVFX, HitLocation) == 0x000000, "Member 'BP_DomeShield_C_SpawnBulletImpactVFX::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_DomeShield_C_SpawnBulletImpactVFX, HitRotation) == 0x000018, "Member 'BP_DomeShield_C_SpawnBulletImpactVFX::HitRotation' has a wrong offset!");

// Function BP_DomeShield.BP_DomeShield_C.UpdateShieldColor
// 0x0010 (0x0010 - 0x0000)
struct BP_DomeShield_C_UpdateShieldColor final
{
public:
	struct FLinearColor                           CallFunc_GetShieldColor_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DomeShield_C_UpdateShieldColor) == 0x000004, "Wrong alignment on BP_DomeShield_C_UpdateShieldColor");
static_assert(sizeof(BP_DomeShield_C_UpdateShieldColor) == 0x000010, "Wrong size on BP_DomeShield_C_UpdateShieldColor");
static_assert(offsetof(BP_DomeShield_C_UpdateShieldColor, CallFunc_GetShieldColor_ReturnValue) == 0x000000, "Member 'BP_DomeShield_C_UpdateShieldColor::CallFunc_GetShieldColor_ReturnValue' has a wrong offset!");

}

