#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LensComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CameraCalibrationCore_structs.hpp"
#include "CinematicCamera_structs.hpp"
#include "LensComponent_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class LensComponent.LensComponent
// 0x01D8 (0x0280 - 0x00A8)
class ULensComponent final : public UActorComponent
{
public:
	struct FLensFilePicker                        LensFilePicker;                                    // 0x00A8(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	EFIZEvaluationMode                            EvaluationMode;                                    // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46AC[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentReference                    TargetCameraComponent;                             // 0x00C0(0x0028)(Edit, DisableEditOnTemplate, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLensFileEvaluationInputs              EvalInputs;                                        // 0x00E8(0x001C)(Edit, EditConst, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	EDistortionSource                             DistortionStateSource;                             // 0x0104(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bApplyDistortion;                                  // 0x0105(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46AD[0x2];                                     // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULensModel>                 LensModel;                                         // 0x0108(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLensDistortionState                   DistortionState;                                   // 0x0110(0x0030)(Edit, BlueprintVisible, Interp, Protected, NativeAccessSpecifierProtected)
	bool                                          bScaleOverscan;                                    // 0x0140(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46AE[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverscanMultiplier;                                // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFilmbackOverrideSource                       FilmbackOverride;                                  // 0x0148(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46AF[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraFilmbackSettings                CroppedFilmback;                                   // 0x014C(0x000C)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bApplyNodalOffsetOnTick;                           // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46B0[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OriginalTrackedComponentTransform;                 // 0x0160(0x0060)(Edit, BlueprintVisible, EditConst, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsDistortionSetup;                                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46B1[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OriginalFocalLength;                               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               LastDistortionMID;                                 // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCineCameraComponent*                   LastCameraComponent;                               // 0x01D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class ULensModel>, class ULensDistortionModelHandlerBase*> LensDistortionHandlerMap;                          // 0x01D8(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USceneComponent>         TrackedComponent;                                  // 0x0228(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 TrackedComponentName;                              // 0x0230(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46B2[0x40];                                    // 0x0240(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ApplyNodalOffset(class USceneComponent* ComponentToOffset, bool bUseManualInputs, float ManualFocusInput, float ManualZoomInput);
	void ClearDistortionState();
	void SetApplyDistortion(bool bApply);
	void SetApplyNodalOffsetOnTick(bool bApplyNodalOffset);
	void SetCroppedFilmback(const struct FCameraFilmbackSettings& Filmback);
	void SetDistortionSource(EDistortionSource Source);
	void SetDistortionState(const struct FLensDistortionState& State);
	void SetFilmbackOverrideSetting(EFilmbackOverrideSource Setting);
	void SetFIZEvaluationMode(EFIZEvaluationMode Mode);
	void SetLensFile(class ULensFile* LensFile);
	void SetLensFilePicker(const struct FLensFilePicker& LensFile);
	void SetLensModel(TSubclassOf<class ULensModel> Model);
	void SetOverscanMultiplier(float Multiplier);

	struct FCameraFilmbackSettings GetCroppedFilmback() const;
	EDistortionSource GetDistortionSource() const;
	struct FLensDistortionState GetDistortionState() const;
	EFilmbackOverrideSource GetFilmbackOverrideSetting() const;
	EFIZEvaluationMode GetFIZEvaluationMode() const;
	class ULensDistortionModelHandlerBase* GetLensDistortionHandler() const;
	class ULensFile* GetLensFile() const;
	const struct FLensFileEvaluationInputs GetLensFileEvaluationInputs() const;
	struct FLensFilePicker GetLensFilePicker() const;
	TSubclassOf<class ULensModel> GetLensModel() const;
	float GetOriginalFocalLength() const;
	float GetOverscanMultiplier() const;
	bool ShouldApplyDistortion() const;
	bool ShouldApplyNodalOffsetOnTick() const;
	bool WasDistortionEvaluated() const;
	bool WasNodalOffsetAppliedThisTick() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LensComponent">();
	}
	static class ULensComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULensComponent>();
	}
};
static_assert(alignof(ULensComponent) == 0x000010, "Wrong alignment on ULensComponent");
static_assert(sizeof(ULensComponent) == 0x000280, "Wrong size on ULensComponent");
static_assert(offsetof(ULensComponent, LensFilePicker) == 0x0000A8, "Member 'ULensComponent::LensFilePicker' has a wrong offset!");
static_assert(offsetof(ULensComponent, EvaluationMode) == 0x0000B8, "Member 'ULensComponent::EvaluationMode' has a wrong offset!");
static_assert(offsetof(ULensComponent, TargetCameraComponent) == 0x0000C0, "Member 'ULensComponent::TargetCameraComponent' has a wrong offset!");
static_assert(offsetof(ULensComponent, EvalInputs) == 0x0000E8, "Member 'ULensComponent::EvalInputs' has a wrong offset!");
static_assert(offsetof(ULensComponent, DistortionStateSource) == 0x000104, "Member 'ULensComponent::DistortionStateSource' has a wrong offset!");
static_assert(offsetof(ULensComponent, bApplyDistortion) == 0x000105, "Member 'ULensComponent::bApplyDistortion' has a wrong offset!");
static_assert(offsetof(ULensComponent, LensModel) == 0x000108, "Member 'ULensComponent::LensModel' has a wrong offset!");
static_assert(offsetof(ULensComponent, DistortionState) == 0x000110, "Member 'ULensComponent::DistortionState' has a wrong offset!");
static_assert(offsetof(ULensComponent, bScaleOverscan) == 0x000140, "Member 'ULensComponent::bScaleOverscan' has a wrong offset!");
static_assert(offsetof(ULensComponent, OverscanMultiplier) == 0x000144, "Member 'ULensComponent::OverscanMultiplier' has a wrong offset!");
static_assert(offsetof(ULensComponent, FilmbackOverride) == 0x000148, "Member 'ULensComponent::FilmbackOverride' has a wrong offset!");
static_assert(offsetof(ULensComponent, CroppedFilmback) == 0x00014C, "Member 'ULensComponent::CroppedFilmback' has a wrong offset!");
static_assert(offsetof(ULensComponent, bApplyNodalOffsetOnTick) == 0x000158, "Member 'ULensComponent::bApplyNodalOffsetOnTick' has a wrong offset!");
static_assert(offsetof(ULensComponent, OriginalTrackedComponentTransform) == 0x000160, "Member 'ULensComponent::OriginalTrackedComponentTransform' has a wrong offset!");
static_assert(offsetof(ULensComponent, bIsDistortionSetup) == 0x0001C0, "Member 'ULensComponent::bIsDistortionSetup' has a wrong offset!");
static_assert(offsetof(ULensComponent, OriginalFocalLength) == 0x0001C4, "Member 'ULensComponent::OriginalFocalLength' has a wrong offset!");
static_assert(offsetof(ULensComponent, LastDistortionMID) == 0x0001C8, "Member 'ULensComponent::LastDistortionMID' has a wrong offset!");
static_assert(offsetof(ULensComponent, LastCameraComponent) == 0x0001D0, "Member 'ULensComponent::LastCameraComponent' has a wrong offset!");
static_assert(offsetof(ULensComponent, LensDistortionHandlerMap) == 0x0001D8, "Member 'ULensComponent::LensDistortionHandlerMap' has a wrong offset!");
static_assert(offsetof(ULensComponent, TrackedComponent) == 0x000228, "Member 'ULensComponent::TrackedComponent' has a wrong offset!");
static_assert(offsetof(ULensComponent, TrackedComponentName) == 0x000230, "Member 'ULensComponent::TrackedComponentName' has a wrong offset!");

}

