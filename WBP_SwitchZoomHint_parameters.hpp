#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SwitchZoomHint

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_SwitchZoomHint.WBP_SwitchZoomHint_C.ExecuteUbergraph_WBP_SwitchZoomHint
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_1;                          // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& Tag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0044(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67F9[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerCharacter*                     K2Node_DynamicCast_AsGz_Player_Character;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67FA[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAbilitySystemComponent*              CallFunc_GetGzAbilitySystemComponent_ReturnValue;  // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGzAsyncTaskGameplayTagAddedRemoved*    CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint) == 0x000008, "Wrong alignment on WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint");
static_assert(sizeof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint) == 0x0000A8, "Wrong size on WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, EntryPoint) == 0x000000, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, K2Node_CustomEvent_Tag_1) == 0x000024, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, K2Node_CustomEvent_Tag) == 0x00002C, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, Temp_struct_Variable) == 0x000044, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, K2Node_CreateDelegate_OutputDelegate_3) == 0x00004C, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, CallFunc_PlayAnimationForward_ReturnValue) == 0x000060, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000068, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000078, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, K2Node_DynamicCast_AsGz_Player_Character) == 0x000080, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::K2Node_DynamicCast_AsGz_Player_Character' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, CallFunc_GetGzAbilitySystemComponent_ReturnValue) == 0x000090, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::CallFunc_GetGzAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue) == 0x000098, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::CallFunc_ListenForGameplayTagAddedOrRemoved_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0000A0, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'WBP_SwitchZoomHint_C_ExecuteUbergraph_WBP_SwitchZoomHint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_SwitchZoomHint.WBP_SwitchZoomHint_C.OnTagAdded_CDF81E5C4509CDD9B30AC7832250ADE9
// 0x0008 (0x0008 - 0x0000)
struct WBP_SwitchZoomHint_C_OnTagAdded_CDF81E5C4509CDD9B30AC7832250ADE9 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SwitchZoomHint_C_OnTagAdded_CDF81E5C4509CDD9B30AC7832250ADE9) == 0x000004, "Wrong alignment on WBP_SwitchZoomHint_C_OnTagAdded_CDF81E5C4509CDD9B30AC7832250ADE9");
static_assert(sizeof(WBP_SwitchZoomHint_C_OnTagAdded_CDF81E5C4509CDD9B30AC7832250ADE9) == 0x000008, "Wrong size on WBP_SwitchZoomHint_C_OnTagAdded_CDF81E5C4509CDD9B30AC7832250ADE9");
static_assert(offsetof(WBP_SwitchZoomHint_C_OnTagAdded_CDF81E5C4509CDD9B30AC7832250ADE9, Tag) == 0x000000, "Member 'WBP_SwitchZoomHint_C_OnTagAdded_CDF81E5C4509CDD9B30AC7832250ADE9::Tag' has a wrong offset!");

// Function WBP_SwitchZoomHint.WBP_SwitchZoomHint_C.OnTagRemoved_CDF81E5C4509CDD9B30AC7832250ADE9
// 0x0008 (0x0008 - 0x0000)
struct WBP_SwitchZoomHint_C_OnTagRemoved_CDF81E5C4509CDD9B30AC7832250ADE9 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SwitchZoomHint_C_OnTagRemoved_CDF81E5C4509CDD9B30AC7832250ADE9) == 0x000004, "Wrong alignment on WBP_SwitchZoomHint_C_OnTagRemoved_CDF81E5C4509CDD9B30AC7832250ADE9");
static_assert(sizeof(WBP_SwitchZoomHint_C_OnTagRemoved_CDF81E5C4509CDD9B30AC7832250ADE9) == 0x000008, "Wrong size on WBP_SwitchZoomHint_C_OnTagRemoved_CDF81E5C4509CDD9B30AC7832250ADE9");
static_assert(offsetof(WBP_SwitchZoomHint_C_OnTagRemoved_CDF81E5C4509CDD9B30AC7832250ADE9, Tag) == 0x000000, "Member 'WBP_SwitchZoomHint_C_OnTagRemoved_CDF81E5C4509CDD9B30AC7832250ADE9::Tag' has a wrong offset!");

}

