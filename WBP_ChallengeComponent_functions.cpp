#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChallengeComponent

#include "Basic.hpp"

#include "WBP_ChallengeComponent_classes.hpp"
#include "WBP_ChallengeComponent_parameters.hpp"


namespace SDK
{

// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.OnChallengeProgressed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzGameplayTrial                 ProgresseddChallenge                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_ChallengeComponent_C::OnChallengeProgressed(const struct FGzGameplayTrial& ProgresseddChallenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "OnChallengeProgressed");

	Params::WBP_ChallengeComponent_C_OnChallengeProgressed Parms{};

	Parms.ProgresseddChallenge = std::move(ProgresseddChallenge);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.OnChallengeCompleted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzChallengeTemplate*             CompletedChallengeTemplate                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengeComponent_C::OnChallengeCompleted(const class UGzChallengeTemplate* CompletedChallengeTemplate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "OnChallengeCompleted");

	Params::WBP_ChallengeComponent_C_OnChallengeCompleted Parms{};

	Parms.CompletedChallengeTemplate = CompletedChallengeTemplate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.OnChallengeAdded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzGameplayTrial                 AddedChallenge                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_ChallengeComponent_C::OnChallengeAdded(const struct FGzGameplayTrial& AddedChallenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "OnChallengeAdded");

	Params::WBP_ChallengeComponent_C_OnChallengeAdded Parms{};

	Parms.AddedChallenge = std::move(AddedChallenge);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.OnAchievementStageCompleted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGzAchievementTemplate*           CompletedAchievementTemplate                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   CompletedStageIdx                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengeComponent_C::OnAchievementStageCompleted(const class UGzAchievementTemplate* CompletedAchievementTemplate, int32 CompletedStageIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "OnAchievementStageCompleted");

	Params::WBP_ChallengeComponent_C_OnAchievementStageCompleted Parms{};

	Parms.CompletedAchievementTemplate = CompletedAchievementTemplate;
	Parms.CompletedStageIdx = CompletedStageIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.ExecuteUbergraph_WBP_ChallengeComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengeComponent_C::ExecuteUbergraph_WBP_ChallengeComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "ExecuteUbergraph_WBP_ChallengeComponent");

	Params::WBP_ChallengeComponent_C_ExecuteUbergraph_WBP_ChallengeComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ChallengeComponent_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ChallengeComponent_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengeComponent_C::BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Weekly_Button_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengeComponent_C::BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Monthly_Button_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengeComponent_C::BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_ChallengeComponent_C_BndEvt__WBP_ChallengeComponent_Daily_Button_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengeComponent.WBP_ChallengeComponent_C.AddOrUpdateTrialEntry
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGzGameplayTrial                 TrialToProcess                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_ChallengeComponent_C::AddOrUpdateTrialEntry(struct FGzGameplayTrial& TrialToProcess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengeComponent_C", "AddOrUpdateTrialEntry");

	Params::WBP_ChallengeComponent_C_AddOrUpdateTrialEntry Parms{};

	Parms.TrialToProcess = std::move(TrialToProcess);

	UObject::ProcessEvent(Func, &Parms);

	TrialToProcess = std::move(Parms.TrialToProcess);
}

}

