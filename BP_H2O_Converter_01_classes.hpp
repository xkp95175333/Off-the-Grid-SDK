#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_H2O_Converter_01

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_H2O_Converter_01.BP_H2O_Converter_01_C
// 0x0058 (0x02F8 - 0x02A0)
class ABP_H2O_Converter_01_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_Generator_01_Fan7;                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Generator_01_Fan6;                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Generator_01_Fan5;                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Generator_01_Fan4;                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Generator_01_Fan3;                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Generator_01_Fan2;                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Generator_01_Fan1;                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Generator_01_Fan;                               // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Generator_01_Decal;                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Generator_01;                                   // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_H2O_Converter_01_C">();
	}
	static class ABP_H2O_Converter_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_H2O_Converter_01_C>();
	}
};
static_assert(alignof(ABP_H2O_Converter_01_C) == 0x000008, "Wrong alignment on ABP_H2O_Converter_01_C");
static_assert(sizeof(ABP_H2O_Converter_01_C) == 0x0002F8, "Wrong size on ABP_H2O_Converter_01_C");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01_Fan7) == 0x0002A0, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01_Fan7' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01_Fan6) == 0x0002A8, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01_Fan6' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01_Fan5) == 0x0002B0, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01_Fan5' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01_Fan4) == 0x0002B8, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01_Fan4' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01_Fan3) == 0x0002C0, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01_Fan3' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01_Fan2) == 0x0002C8, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01_Fan2' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01_Fan1) == 0x0002D0, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01_Fan1' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01_Fan) == 0x0002D8, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01_Fan' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01_Decal) == 0x0002E0, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01_Decal' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, SM_Generator_01) == 0x0002E8, "Member 'ABP_H2O_Converter_01_C::SM_Generator_01' has a wrong offset!");
static_assert(offsetof(ABP_H2O_Converter_01_C, DefaultSceneRoot) == 0x0002F0, "Member 'ABP_H2O_Converter_01_C::DefaultSceneRoot' has a wrong offset!");

}

