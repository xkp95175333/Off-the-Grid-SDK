#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door

#include "Basic.hpp"

#include "BP_Door_classes.hpp"
#include "BP_Door_parameters.hpp"


namespace SDK
{

// Function BP_Door.BP_Door_C.BndEvt__BP_BaseDoor_BP_Component_Triggerable_K2Node_ComponentBoundEvent_3_Triggered__DelegateSignature
// (BlueprintEvent)

void ABP_Door_C::BndEvt__BP_BaseDoor_BP_Component_Triggerable_K2Node_ComponentBoundEvent_3_Triggered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "BndEvt__BP_BaseDoor_BP_Component_Triggerable_K2Node_ComponentBoundEvent_3_Triggered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Door.BP_Door_C.BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           InteractedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGzInteractableComponent*         Interactable                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature(class AActor* InteractedBy, const class UGzInteractableComponent* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature");

	Params::BP_Door_C_BndEvt__BP_BaseDoor_V02_InteractableComponent_K2Node_ComponentBoundEvent_0_GzOnInteract__DelegateSignature Parms{};

	Parms.InteractedBy = InteractedBy;
	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.Enable Right Door
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::Enable_Right_Door(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "Enable Right Door");

	Params::BP_Door_C_Enable_Right_Door Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.ExecuteUbergraph_BP_Door
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::ExecuteUbergraph_BP_Door(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ExecuteUbergraph_BP_Door");

	Params::BP_Door_C_ExecuteUbergraph_BP_Door Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.GetDoorSizeX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  SizeX                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::GetDoorSizeX(class UStaticMesh* StaticMesh, double* SizeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "GetDoorSizeX");

	Params::BP_Door_C_GetDoorSizeX Parms{};

	Parms.StaticMesh = StaticMesh;

	UObject::ProcessEvent(Func, &Parms);

	if (SizeX != nullptr)
		*SizeX = Parms.SizeX;
}


// Function BP_Door.BP_Door_C.OpenTriggerShouldReact
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldReact                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::OpenTriggerShouldReact(class AActor* OverlappedActor, bool* ShouldReact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "OpenTriggerShouldReact");

	Params::BP_Door_C_OpenTriggerShouldReact Parms{};

	Parms.OverlappedActor = OverlappedActor;

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldReact != nullptr)
		*ShouldReact = Parms.ShouldReact;
}


// Function BP_Door.BP_Door_C.PostSoundEvent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Door_C::PostSoundEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "PostSoundEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Door.BP_Door_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Door_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Door.BP_Door_C.ReceiveDynamicStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bOpening                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::ReceiveDynamicStateChanged(bool bOpening)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ReceiveDynamicStateChanged");

	Params::BP_Door_C_ReceiveDynamicStateChanged Parms{};

	Parms.bOpening = bOpening;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.ReceiveLockedStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewLocked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::ReceiveLockedStateChanged(bool bNewLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ReceiveLockedStateChanged");

	Params::BP_Door_C_ReceiveLockedStateChanged Parms{};

	Parms.bNewLocked = bNewLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.ReceiveStaticStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bOpened                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::ReceiveStaticStateChanged(bool bOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ReceiveStaticStateChanged");

	Params::BP_Door_C_ReceiveStaticStateChanged Parms{};

	Parms.bOpened = bOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ReceiveTick");

	Params::BP_Door_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.Set Door Position X
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             Self3                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bOpposite_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::Set_Door_Position_X(class UStaticMeshComponent* Self3, bool bOpposite_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "Set Door Position X");

	Params::BP_Door_C_Set_Door_Position_X Parms{};

	Parms.Self3 = Self3;
	Parms.bOpposite_ = bOpposite_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.SetDoorPositions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             DoorComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Invert                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::SetDoorPositions(class UStaticMeshComponent* DoorComponent, bool Invert, double Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "SetDoorPositions");

	Params::BP_Door_C_SetDoorPositions Parms{};

	Parms.DoorComponent = DoorComponent;
	Parms.Invert = Invert;
	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.SetDoorPositionYMiddle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             Param_SM_Door_Right                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Invert                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::SetDoorPositionYMiddle(class UStaticMeshComponent* Param_SM_Door_Right, bool Invert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "SetDoorPositionYMiddle");

	Params::BP_Door_C_SetDoorPositionYMiddle Parms{};

	Parms.Param_SM_Door_Right = Param_SM_Door_Right;
	Parms.Invert = Invert;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.SetInteractableMeshes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMeshComponent*>           NewItems                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_Door_C::SetInteractableMeshes(const TArray<class UMeshComponent*>& NewItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "SetInteractableMeshes");

	Params::BP_Door_C_SetInteractableMeshes Parms{};

	Parms.NewItems = std::move(NewItems);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.ShouldReactToOverlappedActor
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Door_C::ShouldReactToOverlappedActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ShouldReactToOverlappedActor");

	Params::BP_Door_C_ShouldReactToOverlappedActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Door.BP_Door_C.ToogleAvailability
// (BlueprintCallable, BlueprintEvent)

void ABP_Door_C::ToogleAvailability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ToogleAvailability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Door.BP_Door_C.UpdatedDoorPosition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OpenProgress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::UpdatedDoorPosition(float OpenProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "UpdatedDoorPosition");

	Params::BP_Door_C_UpdatedDoorPosition Parms{};

	Parms.OpenProgress = OpenProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Door_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

