#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Minimap_DOS

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Minimap_DOS.WBP_Minimap_DOS_C.ExecuteUbergraph_WBP_Minimap_DOS
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E0F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ViewTarget;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGzPlayerState*                         CallFunc_GetPersistentPlayerState_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E10[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerId_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E11[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AGzPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E12[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0050(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS) == 0x000008, "Wrong alignment on WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS");
static_assert(sizeof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS) == 0x0000A0, "Wrong size on WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, EntryPoint) == 0x000000, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, K2Node_Event_ViewTarget) == 0x000008, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::K2Node_Event_ViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, CallFunc_GetPersistentPlayerState_ReturnValue) == 0x000010, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::CallFunc_GetPersistentPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, CallFunc_GetPlayerId_ReturnValue) == 0x00001C, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::CallFunc_GetPlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, CallFunc_GetCachedGeometry_ReturnValue) == 0x000050, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000098, "Member 'WBP_Minimap_DOS_C_ExecuteUbergraph_WBP_Minimap_DOS::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function WBP_Minimap_DOS.WBP_Minimap_DOS_C.IsPreMatchActiveted
// 0x0002 (0x0002 - 0x0000)
struct WBP_Minimap_DOS_C_IsPreMatchActiveted final
{
public:
	bool                                          Activeted;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPreMatchActiveted_Activeted;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Minimap_DOS_C_IsPreMatchActiveted) == 0x000001, "Wrong alignment on WBP_Minimap_DOS_C_IsPreMatchActiveted");
static_assert(sizeof(WBP_Minimap_DOS_C_IsPreMatchActiveted) == 0x000002, "Wrong size on WBP_Minimap_DOS_C_IsPreMatchActiveted");
static_assert(offsetof(WBP_Minimap_DOS_C_IsPreMatchActiveted, Activeted) == 0x000000, "Member 'WBP_Minimap_DOS_C_IsPreMatchActiveted::Activeted' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_IsPreMatchActiveted, CallFunc_IsPreMatchActiveted_Activeted) == 0x000001, "Member 'WBP_Minimap_DOS_C_IsPreMatchActiveted::CallFunc_IsPreMatchActiveted_Activeted' has a wrong offset!");

// Function WBP_Minimap_DOS.WBP_Minimap_DOS_C.OnViewTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_Minimap_DOS_C_OnViewTargetChanged final
{
public:
	class APawn*                                  ViewTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Minimap_DOS_C_OnViewTargetChanged) == 0x000008, "Wrong alignment on WBP_Minimap_DOS_C_OnViewTargetChanged");
static_assert(sizeof(WBP_Minimap_DOS_C_OnViewTargetChanged) == 0x000008, "Wrong size on WBP_Minimap_DOS_C_OnViewTargetChanged");
static_assert(offsetof(WBP_Minimap_DOS_C_OnViewTargetChanged, ViewTarget) == 0x000000, "Member 'WBP_Minimap_DOS_C_OnViewTargetChanged::ViewTarget' has a wrong offset!");

// Function WBP_Minimap_DOS.WBP_Minimap_DOS_C.SetFontStyle
// 0x0088 (0x0088 - 0x0000)
struct WBP_Minimap_DOS_C_SetFontStyle final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Result;                                            // 0x0010(0x0010)(Parm, OutParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
};
static_assert(alignof(WBP_Minimap_DOS_C_SetFontStyle) == 0x000008, "Wrong alignment on WBP_Minimap_DOS_C_SetFontStyle");
static_assert(sizeof(WBP_Minimap_DOS_C_SetFontStyle) == 0x000088, "Wrong size on WBP_Minimap_DOS_C_SetFontStyle");
static_assert(offsetof(WBP_Minimap_DOS_C_SetFontStyle, Text) == 0x000000, "Member 'WBP_Minimap_DOS_C_SetFontStyle::Text' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_SetFontStyle, Result) == 0x000010, "Member 'WBP_Minimap_DOS_C_SetFontStyle::Result' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_SetFontStyle, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_Minimap_DOS_C_SetFontStyle::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_SetFontStyle, K2Node_MakeArray_Array) == 0x000068, "Member 'WBP_Minimap_DOS_C_SetFontStyle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_SetFontStyle, CallFunc_Format_ReturnValue) == 0x000078, "Member 'WBP_Minimap_DOS_C_SetFontStyle::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Minimap_DOS.WBP_Minimap_DOS_C.UpdateDisplayZoneName
// 0x0140 (0x0140 - 0x0000)
struct WBP_Minimap_DOS_C_UpdateDisplayZoneName final
{
public:
	class AActor*                                 ViewTarget;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      LocanPlayer;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FText                                   DisplayText;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E13[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzWorldZonesSubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E14[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetZoneDisplayName_ReturnValue;           // 0x00A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E15[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0010)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E16[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0130(0x0010)()
};
static_assert(alignof(WBP_Minimap_DOS_C_UpdateDisplayZoneName) == 0x000008, "Wrong alignment on WBP_Minimap_DOS_C_UpdateDisplayZoneName");
static_assert(sizeof(WBP_Minimap_DOS_C_UpdateDisplayZoneName) == 0x000140, "Wrong size on WBP_Minimap_DOS_C_UpdateDisplayZoneName");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, ViewTarget) == 0x000000, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::ViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, LocanPlayer) == 0x000008, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::LocanPlayer' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, DisplayText) == 0x000010, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::DisplayText' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, Temp_bool_Variable) == 0x000020, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000028, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, CallFunc_GetViewTarget_ReturnValue) == 0x000050, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A0, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, CallFunc_GetZoneDisplayName_ReturnValue) == 0x0000A8, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::CallFunc_GetZoneDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, CallFunc_IsValid_ReturnValue_1) == 0x000100, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, K2Node_MakeArray_Array) == 0x000108, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, CallFunc_Format_ReturnValue) == 0x000118, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, CallFunc_TextIsEmpty_ReturnValue) == 0x000128, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateDisplayZoneName, K2Node_Select_Default) == 0x000130, "Member 'WBP_Minimap_DOS_C_UpdateDisplayZoneName::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Minimap_DOS.WBP_Minimap_DOS_C.UpdateOnComebackArena
// 0x0018 (0x0018 - 0x0000)
struct WBP_Minimap_DOS_C_UpdateOnComebackArena final
{
public:
	class AGzPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInComebackArena_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Minimap_DOS_C_UpdateOnComebackArena) == 0x000008, "Wrong alignment on WBP_Minimap_DOS_C_UpdateOnComebackArena");
static_assert(sizeof(WBP_Minimap_DOS_C_UpdateOnComebackArena) == 0x000018, "Wrong size on WBP_Minimap_DOS_C_UpdateOnComebackArena");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, PlayerState) == 0x000000, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, Temp_bool_Variable) == 0x000008, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, CallFunc_IsInComebackArena_ReturnValue) == 0x000009, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::CallFunc_IsInComebackArena_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, Temp_byte_Variable) == 0x00000A, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, Temp_bool_Variable_1) == 0x00000C, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, K2Node_Select_Default) == 0x00000D, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, Temp_byte_Variable_2) == 0x00000E, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, Temp_byte_Variable_3) == 0x00000F, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateOnComebackArena, K2Node_Select_Default_1) == 0x000010, "Member 'WBP_Minimap_DOS_C_UpdateOnComebackArena::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_Minimap_DOS.WBP_Minimap_DOS_C.UpdateSquadsAlive
// 0x0078 (0x0078 - 0x0000)
struct WBP_Minimap_DOS_C_UpdateSquadsAlive final
{
public:
	int32                                         CallFunc_GetNumNotDefeatedTeams_ReturnValue;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E17[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0010)()
};
static_assert(alignof(WBP_Minimap_DOS_C_UpdateSquadsAlive) == 0x000008, "Wrong alignment on WBP_Minimap_DOS_C_UpdateSquadsAlive");
static_assert(sizeof(WBP_Minimap_DOS_C_UpdateSquadsAlive) == 0x000078, "Wrong size on WBP_Minimap_DOS_C_UpdateSquadsAlive");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateSquadsAlive, CallFunc_GetNumNotDefeatedTeams_ReturnValue) == 0x000000, "Member 'WBP_Minimap_DOS_C_UpdateSquadsAlive::CallFunc_GetNumNotDefeatedTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateSquadsAlive, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'WBP_Minimap_DOS_C_UpdateSquadsAlive::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateSquadsAlive, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'WBP_Minimap_DOS_C_UpdateSquadsAlive::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateSquadsAlive, K2Node_MakeArray_Array) == 0x000058, "Member 'WBP_Minimap_DOS_C_UpdateSquadsAlive::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateSquadsAlive, CallFunc_Format_ReturnValue) == 0x000068, "Member 'WBP_Minimap_DOS_C_UpdateSquadsAlive::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Minimap_DOS.WBP_Minimap_DOS_C.UpdateStats
// 0x0058 (0x0058 - 0x0000)
struct WBP_Minimap_DOS_C_UpdateStats final
{
public:
	bool                                          bValidPlayerID;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E18[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzStatsSubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E19[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzGameStatTemplate*                    Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzGameStatTemplate*                    Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPreMatchActiveted_Activeted;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1A[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzGameStatTemplate*                    K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1B[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStatValue_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0040(0x0010)()
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Minimap_DOS_C_UpdateStats) == 0x000008, "Wrong alignment on WBP_Minimap_DOS_C_UpdateStats");
static_assert(sizeof(WBP_Minimap_DOS_C_UpdateStats) == 0x000058, "Wrong size on WBP_Minimap_DOS_C_UpdateStats");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, bValidPlayerID) == 0x000000, "Member 'WBP_Minimap_DOS_C_UpdateStats::bValidPlayerID' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, Temp_byte_Variable) == 0x000001, "Member 'WBP_Minimap_DOS_C_UpdateStats::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Minimap_DOS_C_UpdateStats::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'WBP_Minimap_DOS_C_UpdateStats::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, Temp_bool_Variable) == 0x000010, "Member 'WBP_Minimap_DOS_C_UpdateStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, Temp_object_Variable) == 0x000018, "Member 'WBP_Minimap_DOS_C_UpdateStats::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, Temp_object_Variable_1) == 0x000020, "Member 'WBP_Minimap_DOS_C_UpdateStats::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, CallFunc_IsPreMatchActiveted_Activeted) == 0x000028, "Member 'WBP_Minimap_DOS_C_UpdateStats::CallFunc_IsPreMatchActiveted_Activeted' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, Temp_bool_Variable_1) == 0x000029, "Member 'WBP_Minimap_DOS_C_UpdateStats::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, K2Node_Select_Default) == 0x000030, "Member 'WBP_Minimap_DOS_C_UpdateStats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, K2Node_Select_Default_1) == 0x000038, "Member 'WBP_Minimap_DOS_C_UpdateStats::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000039, "Member 'WBP_Minimap_DOS_C_UpdateStats::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, CallFunc_GetStatValue_ReturnValue) == 0x00003C, "Member 'WBP_Minimap_DOS_C_UpdateStats::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000040, "Member 'WBP_Minimap_DOS_C_UpdateStats::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_DOS_C_UpdateStats, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000050, "Member 'WBP_Minimap_DOS_C_UpdateStats::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

}

