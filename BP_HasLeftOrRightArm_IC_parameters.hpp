#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HasLeftOrRightArm_IC

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_HasLeftOrRightArm_IC.BP_HasLeftOrRightArm_IC_C.IsInteractionConditionPassed
// 0x0028 (0x0028 - 0x0000)
struct BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed final
{
public:
	const class AGzCharacter*                     InteractedBy;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           InteractableOwner;                                 // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6094[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGzMultiPartCharacter*                  K2Node_DynamicCast_AsGz_Multi_Part_Character;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLimbEquipped_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLimbEquipped_ReturnValue_1;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed) == 0x000008, "Wrong alignment on BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed");
static_assert(sizeof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed) == 0x000028, "Wrong size on BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed, InteractedBy) == 0x000000, "Member 'BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed::InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed, InteractableOwner) == 0x000008, "Member 'BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed::InteractableOwner' has a wrong offset!");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed, ReturnValue) == 0x000010, "Member 'BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed, K2Node_DynamicCast_AsGz_Multi_Part_Character) == 0x000018, "Member 'BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed::K2Node_DynamicCast_AsGz_Multi_Part_Character' has a wrong offset!");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed, CallFunc_HasLimbEquipped_ReturnValue) == 0x000021, "Member 'BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed::CallFunc_HasLimbEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed, CallFunc_HasLimbEquipped_ReturnValue_1) == 0x000022, "Member 'BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed::CallFunc_HasLimbEquipped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed, CallFunc_BooleanOR_ReturnValue) == 0x000023, "Member 'BP_HasLeftOrRightArm_IC_C_IsInteractionConditionPassed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_HasLeftOrRightArm_IC.BP_HasLeftOrRightArm_IC_C.IsAutoInteractionConditionPassed
// 0x0018 (0x0018 - 0x0000)
struct BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed final
{
public:
	const class AGzCharacter*                     InteractedBy;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           InteractableOwner;                                 // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed) == 0x000008, "Wrong alignment on BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed");
static_assert(sizeof(BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed) == 0x000018, "Wrong size on BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed, InteractedBy) == 0x000000, "Member 'BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed::InteractedBy' has a wrong offset!");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed, InteractableOwner) == 0x000008, "Member 'BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed::InteractableOwner' has a wrong offset!");
static_assert(offsetof(BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed, ReturnValue) == 0x000010, "Member 'BP_HasLeftOrRightArm_IC_C_IsAutoInteractionConditionPassed::ReturnValue' has a wrong offset!");

}

