#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_KineticShield

#include "Basic.hpp"

#include "G01_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function GA_KineticShield.GA_KineticShield_C.ActivateKineticBlast
// 0x01F0 (0x01F0 - 0x0000)
struct GA_KineticShield_C_ActivateKineticBlast final
{
public:
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceBlastTarget_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E1[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_TraceBlastTarget_OutHit;                  // 0x0010(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_ActivateBlast_BlastDamage;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E2[0x2];                                     // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E3[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E4[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyBlastDamage_ReturnValue;             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitude_ReturnValue;              // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyBlastDamage_DamageAmount_ImplicitCast; // 0x01EC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_ActivateKineticBlast) == 0x000008, "Wrong alignment on GA_KineticShield_C_ActivateKineticBlast");
static_assert(sizeof(GA_KineticShield_C_ActivateKineticBlast) == 0x0001F0, "Wrong size on GA_KineticShield_C_ActivateKineticBlast");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_GetOwningCharacter_ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_K2_HasAuthority_ReturnValue) == 0x000008, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_K2_CommitAbility_ReturnValue) == 0x000009, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_TraceBlastTarget_ReturnValue) == 0x00000A, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_TraceBlastTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_TraceBlastTarget_OutHit) == 0x000010, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_TraceBlastTarget_OutHit' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_ActivateBlast_BlastDamage) == 0x000108, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_ActivateBlast_BlastDamage' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_bBlockingHit) == 0x000110, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_bInitialOverlap) == 0x000111, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_Normal) == 0x000150, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_BoneName) == 0x0001A0, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_HitItem) == 0x0001A8, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_ElementIndex) == 0x0001AC, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_FaceIndex) == 0x0001B0, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_ApplyBlastDamage_ReturnValue) == 0x0001E8, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_ApplyBlastDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_GetTeamAttitude_ReturnValue) == 0x0001E9, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_GetTeamAttitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001EA, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_BooleanAND_ReturnValue) == 0x0001EB, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ActivateKineticBlast, CallFunc_ApplyBlastDamage_DamageAmount_ImplicitCast) == 0x0001EC, "Member 'GA_KineticShield_C_ActivateKineticBlast::CallFunc_ApplyBlastDamage_DamageAmount_ImplicitCast' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.ApplyActivationBlock
// 0x0008 (0x0008 - 0x0000)
struct GA_KineticShield_C_ApplyActivationBlock final
{
public:
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_ApplyActivationBlock) == 0x000004, "Wrong alignment on GA_KineticShield_C_ApplyActivationBlock");
static_assert(sizeof(GA_KineticShield_C_ApplyActivationBlock) == 0x000008, "Wrong size on GA_KineticShield_C_ApplyActivationBlock");
static_assert(offsetof(GA_KineticShield_C_ApplyActivationBlock, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_ApplyActivationBlock::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.CalculatePunchImpulse
// 0x00E8 (0x00E8 - 0x0000)
struct GA_KineticShield_C_CalculatePunchImpulse final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_CalculatePunchImpulse) == 0x000008, "Wrong alignment on GA_KineticShield_C_CalculatePunchImpulse");
static_assert(sizeof(GA_KineticShield_C_CalculatePunchImpulse) == 0x0000E8, "Wrong size on GA_KineticShield_C_CalculatePunchImpulse");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_CalculatePunchImpulse::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_GetOwningCharacter_ReturnValue) == 0x000018, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_BreakVector_X) == 0x000068, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_BreakVector_Y) == 0x000070, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_BreakVector_Z) == 0x000078, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000098, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_BreakVector_X_1) == 0x0000B0, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_BreakVector_Y_1) == 0x0000B8, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_BreakVector_Z_1) == 0x0000C0, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_CalculatePunchImpulse, CallFunc_MakeVector_ReturnValue_1) == 0x0000D0, "Member 'GA_KineticShield_C_CalculatePunchImpulse::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.CloseShield
// 0x0001 (0x0001 - 0x0000)
struct GA_KineticShield_C_CloseShield final
{
public:
	bool                                          Param_DidBlast;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_CloseShield) == 0x000001, "Wrong alignment on GA_KineticShield_C_CloseShield");
static_assert(sizeof(GA_KineticShield_C_CloseShield) == 0x000001, "Wrong size on GA_KineticShield_C_CloseShield");
static_assert(offsetof(GA_KineticShield_C_CloseShield, Param_DidBlast) == 0x000000, "Member 'GA_KineticShield_C_CloseShield::Param_DidBlast' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.DisableShield
// 0x0001 (0x0001 - 0x0000)
struct GA_KineticShield_C_DisableShield final
{
public:
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_DisableShield) == 0x000001, "Wrong alignment on GA_KineticShield_C_DisableShield");
static_assert(sizeof(GA_KineticShield_C_DisableShield) == 0x000001, "Wrong size on GA_KineticShield_C_DisableShield");
static_assert(offsetof(GA_KineticShield_C_DisableShield, CallFunc_K2_HasAuthority_ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_DisableShield::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.ExecuteUbergraph_GA_KineticShield
// 0x0208 (0x0208 - 0x0000)
struct GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Time)>                   K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E5[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzAT_WaitCustomInputPress*             CallFunc_WaitCustomInputPress_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E6[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E7[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_NetworkSyncPoint*          CallFunc_WaitNetSync_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E8[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NewChargeAmount, int32 PreviousChargeAmount)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E9[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeWaited;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeWaited)>             K2Node_CreateDelegate_OutputDelegate_12;           // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EA[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputPress*            CallFunc_WaitInputPress_ReturnValue;               // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EB[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetShieldOpenMontage_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EC[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGzBodyPartAbilityData*                 CallFunc_BP_GetAbilityData_ReturnValue;            // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzBodyPartAbilityData_Shield*          K2Node_DynamicCast_AsGz_Body_Part_Ability_Data_Shield; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58ED[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0164(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivateBlast_CanActivate;             // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EE[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_NewChargeAmount;                // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PreviousChargeAmount;           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EF[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0184(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateShield_ActivationSuccess;         // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F0[0x2];                                     // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F1[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetBlastMonatge_ReturnValue;              // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x01B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F2[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetDeployedMonatge_ReturnValue;           // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_2; // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F3[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Damage_to_Blast_Ratio_ImplicitCast; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MinEnergyAfterBrokenShield_ImplicitCast; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_EnergyRegenDelay_ImplicitCast;  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield) == 0x000008, "Wrong alignment on GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield");
static_assert(sizeof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield) == 0x000208, "Wrong size on GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, EntryPoint) == 0x000000, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CustomEvent_Time) == 0x000004, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, Temp_real_Variable) == 0x000018, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_WaitCustomInputPress_ReturnValue) == 0x000020, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_WaitCustomInputPress_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_WaitNetSync_ReturnValue) == 0x000040, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_WaitNetSync_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000060, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_3) == 0x000068, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_4) == 0x00007C, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_5) == 0x00008C, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_6) == 0x00009C, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000AC, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000BC, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000CC, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000DC, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_11) == 0x0000EC, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CustomEvent_TimeWaited) == 0x0000FC, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CustomEvent_TimeWaited' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_12) == 0x000100, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, Temp_real_Variable_1) == 0x000110, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_WaitInputPress_ReturnValue) == 0x000118, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_WaitInputPress_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_IsValid_ReturnValue_3) == 0x000120, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_GetShieldOpenMontage_ReturnValue) == 0x000128, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_GetShieldOpenMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000130, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_13) == 0x000138, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_IsValid_ReturnValue_4) == 0x000148, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_BP_GetAbilityData_ReturnValue) == 0x000150, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_BP_GetAbilityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_DynamicCast_AsGz_Body_Part_Ability_Data_Shield) == 0x000158, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_DynamicCast_AsGz_Body_Part_Ability_Data_Shield' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_Event_bWasCancelled) == 0x000161, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_14) == 0x000164, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_CanActivateBlast_CanActivate) == 0x000174, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_CanActivateBlast_CanActivate' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CustomEvent_NewChargeAmount) == 0x000178, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CustomEvent_NewChargeAmount' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CustomEvent_PreviousChargeAmount) == 0x00017C, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CustomEvent_PreviousChargeAmount' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000180, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000181, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_15) == 0x000184, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_K2_HasAuthority_ReturnValue) == 0x000194, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_ActivateShield_ActivationSuccess) == 0x000195, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_ActivateShield_ActivationSuccess' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_16) == 0x000198, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_IsLocallyControlled_ReturnValue) == 0x0001A8, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_GetBlastMonatge_ReturnValue) == 0x0001B0, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_GetBlastMonatge_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_CreateDelegate_OutputDelegate_17) == 0x0001B8, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1) == 0x0001C8, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_IsValid_ReturnValue_5) == 0x0001D0, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_GetDeployedMonatge_ReturnValue) == 0x0001D8, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_GetDeployedMonatge_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_2) == 0x0001E0, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, CallFunc_IsValid_ReturnValue_6) == 0x0001E8, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_VariableSet_Damage_to_Blast_Ratio_ImplicitCast) == 0x0001F0, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_VariableSet_Damage_to_Blast_Ratio_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_VariableSet_MinEnergyAfterBrokenShield_ImplicitCast) == 0x0001F8, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_VariableSet_MinEnergyAfterBrokenShield_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield, K2Node_VariableSet_EnergyRegenDelay_ImplicitCast) == 0x000200, "Member 'GA_KineticShield_C_ExecuteUbergraph_GA_KineticShield::K2Node_VariableSet_EnergyRegenDelay_ImplicitCast' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.GetBlastMonatge
// 0x0030 (0x0030 - 0x0000)
struct GA_KineticShield_C_GetBlastMonatge final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F4[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_GetBlastMonatge) == 0x000008, "Wrong alignment on GA_KineticShield_C_GetBlastMonatge");
static_assert(sizeof(GA_KineticShield_C_GetBlastMonatge) == 0x000030, "Wrong size on GA_KineticShield_C_GetBlastMonatge");
static_assert(offsetof(GA_KineticShield_C_GetBlastMonatge, ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_GetBlastMonatge::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMonatge, Temp_byte_Variable) == 0x000008, "Member 'GA_KineticShield_C_GetBlastMonatge::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMonatge, Temp_object_Variable) == 0x000010, "Member 'GA_KineticShield_C_GetBlastMonatge::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMonatge, Temp_object_Variable_1) == 0x000018, "Member 'GA_KineticShield_C_GetBlastMonatge::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMonatge, Temp_object_Variable_2) == 0x000020, "Member 'GA_KineticShield_C_GetBlastMonatge::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMonatge, K2Node_Select_Default) == 0x000028, "Member 'GA_KineticShield_C_GetBlastMonatge::K2Node_Select_Default' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.GetBlastMontage
// 0x0030 (0x0030 - 0x0000)
struct GA_KineticShield_C_GetBlastMontage final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_GetBlastMontage) == 0x000008, "Wrong alignment on GA_KineticShield_C_GetBlastMontage");
static_assert(sizeof(GA_KineticShield_C_GetBlastMontage) == 0x000030, "Wrong size on GA_KineticShield_C_GetBlastMontage");
static_assert(offsetof(GA_KineticShield_C_GetBlastMontage, ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_GetBlastMontage::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMontage, Temp_byte_Variable) == 0x000008, "Member 'GA_KineticShield_C_GetBlastMontage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMontage, Temp_object_Variable) == 0x000010, "Member 'GA_KineticShield_C_GetBlastMontage::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMontage, Temp_object_Variable_1) == 0x000018, "Member 'GA_KineticShield_C_GetBlastMontage::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMontage, Temp_object_Variable_2) == 0x000020, "Member 'GA_KineticShield_C_GetBlastMontage::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastMontage, K2Node_Select_Default) == 0x000028, "Member 'GA_KineticShield_C_GetBlastMontage::K2Node_Select_Default' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.GetBlastSpawnTransform
// 0x01A0 (0x01A0 - 0x0000)
struct GA_KineticShield_C_GetBlastSpawnTransform final
{
public:
	double                                        ForwardOffset;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UpOffset;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGzCharacter*                           CallFunc_GetOwningCharacter_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F6[0x8];                                     // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_GetBlastSpawnTransform) == 0x000010, "Wrong alignment on GA_KineticShield_C_GetBlastSpawnTransform");
static_assert(sizeof(GA_KineticShield_C_GetBlastSpawnTransform) == 0x0001A0, "Wrong size on GA_KineticShield_C_GetBlastSpawnTransform");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, ForwardOffset) == 0x000000, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::ForwardOffset' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, UpOffset) == 0x000008, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::UpOffset' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, SpawnTransform) == 0x000010, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_GetOwningCharacter_ReturnValue) == 0x000070, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_GetControlRotation_ReturnValue) == 0x0000A8, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000C0, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_GetForwardVector_ReturnValue) == 0x0000D8, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000F0, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000120, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetBlastSpawnTransform, CallFunc_MakeTransform_ReturnValue) == 0x000140, "Member 'GA_KineticShield_C_GetBlastSpawnTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.GetDeployedMonatge
// 0x0030 (0x0030 - 0x0000)
struct GA_KineticShield_C_GetDeployedMonatge final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_GetDeployedMonatge) == 0x000008, "Wrong alignment on GA_KineticShield_C_GetDeployedMonatge");
static_assert(sizeof(GA_KineticShield_C_GetDeployedMonatge) == 0x000030, "Wrong size on GA_KineticShield_C_GetDeployedMonatge");
static_assert(offsetof(GA_KineticShield_C_GetDeployedMonatge, ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_GetDeployedMonatge::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetDeployedMonatge, Temp_byte_Variable) == 0x000008, "Member 'GA_KineticShield_C_GetDeployedMonatge::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetDeployedMonatge, Temp_object_Variable) == 0x000010, "Member 'GA_KineticShield_C_GetDeployedMonatge::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetDeployedMonatge, Temp_object_Variable_1) == 0x000018, "Member 'GA_KineticShield_C_GetDeployedMonatge::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetDeployedMonatge, Temp_object_Variable_2) == 0x000020, "Member 'GA_KineticShield_C_GetDeployedMonatge::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetDeployedMonatge, K2Node_Select_Default) == 0x000028, "Member 'GA_KineticShield_C_GetDeployedMonatge::K2Node_Select_Default' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.GetShieldOpenMontage
// 0x0030 (0x0030 - 0x0000)
struct GA_KineticShield_C_GetShieldOpenMontage final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EGzLimbType                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_GetShieldOpenMontage) == 0x000008, "Wrong alignment on GA_KineticShield_C_GetShieldOpenMontage");
static_assert(sizeof(GA_KineticShield_C_GetShieldOpenMontage) == 0x000030, "Wrong size on GA_KineticShield_C_GetShieldOpenMontage");
static_assert(offsetof(GA_KineticShield_C_GetShieldOpenMontage, ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_GetShieldOpenMontage::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetShieldOpenMontage, Temp_byte_Variable) == 0x000008, "Member 'GA_KineticShield_C_GetShieldOpenMontage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetShieldOpenMontage, Temp_object_Variable) == 0x000010, "Member 'GA_KineticShield_C_GetShieldOpenMontage::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetShieldOpenMontage, Temp_object_Variable_1) == 0x000018, "Member 'GA_KineticShield_C_GetShieldOpenMontage::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetShieldOpenMontage, Temp_object_Variable_2) == 0x000020, "Member 'GA_KineticShield_C_GetShieldOpenMontage::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_GetShieldOpenMontage, K2Node_Select_Default) == 0x000028, "Member 'GA_KineticShield_C_GetShieldOpenMontage::K2Node_Select_Default' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.InitializeAbilityComponent
// 0x0030 (0x0030 - 0x0000)
struct GA_KineticShield_C_InitializeAbilityComponent final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_BP_GetAbilityComponent_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_KineticShieldComponent_C*           K2Node_DynamicCast_AsBP_Kinetic_Shield_Component;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_MaxHealth_ImplicitCast;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MaxBlastDamage_ImplicitCast;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_InitializeAbilityComponent) == 0x000008, "Wrong alignment on GA_KineticShield_C_InitializeAbilityComponent");
static_assert(sizeof(GA_KineticShield_C_InitializeAbilityComponent) == 0x000030, "Wrong size on GA_KineticShield_C_InitializeAbilityComponent");
static_assert(offsetof(GA_KineticShield_C_InitializeAbilityComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'GA_KineticShield_C_InitializeAbilityComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_InitializeAbilityComponent, CallFunc_BP_GetAbilityComponent_ReturnValue) == 0x000010, "Member 'GA_KineticShield_C_InitializeAbilityComponent::CallFunc_BP_GetAbilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_InitializeAbilityComponent, K2Node_DynamicCast_AsBP_Kinetic_Shield_Component) == 0x000018, "Member 'GA_KineticShield_C_InitializeAbilityComponent::K2Node_DynamicCast_AsBP_Kinetic_Shield_Component' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_InitializeAbilityComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_KineticShield_C_InitializeAbilityComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_InitializeAbilityComponent, K2Node_VariableSet_MaxHealth_ImplicitCast) == 0x000024, "Member 'GA_KineticShield_C_InitializeAbilityComponent::K2Node_VariableSet_MaxHealth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_InitializeAbilityComponent, K2Node_VariableSet_MaxBlastDamage_ImplicitCast) == 0x000028, "Member 'GA_KineticShield_C_InitializeAbilityComponent::K2Node_VariableSet_MaxBlastDamage_ImplicitCast' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_KineticShield_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_KineticShield_C_K2_OnEndAbility");
static_assert(sizeof(GA_KineticShield_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_KineticShield_C_K2_OnEndAbility");
static_assert(offsetof(GA_KineticShield_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_KineticShield_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.OnInput_D4AE883B40B85BC7D315F4BA76AEB183
// 0x0004 (0x0004 - 0x0000)
struct GA_KineticShield_C_OnInput_D4AE883B40B85BC7D315F4BA76AEB183 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_OnInput_D4AE883B40B85BC7D315F4BA76AEB183) == 0x000004, "Wrong alignment on GA_KineticShield_C_OnInput_D4AE883B40B85BC7D315F4BA76AEB183");
static_assert(sizeof(GA_KineticShield_C_OnInput_D4AE883B40B85BC7D315F4BA76AEB183) == 0x000004, "Wrong size on GA_KineticShield_C_OnInput_D4AE883B40B85BC7D315F4BA76AEB183");
static_assert(offsetof(GA_KineticShield_C_OnInput_D4AE883B40B85BC7D315F4BA76AEB183, Time) == 0x000000, "Member 'GA_KineticShield_C_OnInput_D4AE883B40B85BC7D315F4BA76AEB183::Time' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.OnPress_2569CD07462877773D27BF84ACAC0766
// 0x0004 (0x0004 - 0x0000)
struct GA_KineticShield_C_OnPress_2569CD07462877773D27BF84ACAC0766 final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_OnPress_2569CD07462877773D27BF84ACAC0766) == 0x000004, "Wrong alignment on GA_KineticShield_C_OnPress_2569CD07462877773D27BF84ACAC0766");
static_assert(sizeof(GA_KineticShield_C_OnPress_2569CD07462877773D27BF84ACAC0766) == 0x000004, "Wrong size on GA_KineticShield_C_OnPress_2569CD07462877773D27BF84ACAC0766");
static_assert(offsetof(GA_KineticShield_C_OnPress_2569CD07462877773D27BF84ACAC0766, TimeWaited) == 0x000000, "Member 'GA_KineticShield_C_OnPress_2569CD07462877773D27BF84ACAC0766::TimeWaited' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.OnRecharged
// 0x0008 (0x0008 - 0x0000)
struct GA_KineticShield_C_OnRecharged final
{
public:
	int32                                         NewChargeAmount;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousChargeAmount;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_OnRecharged) == 0x000004, "Wrong alignment on GA_KineticShield_C_OnRecharged");
static_assert(sizeof(GA_KineticShield_C_OnRecharged) == 0x000008, "Wrong size on GA_KineticShield_C_OnRecharged");
static_assert(offsetof(GA_KineticShield_C_OnRecharged, NewChargeAmount) == 0x000000, "Member 'GA_KineticShield_C_OnRecharged::NewChargeAmount' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_OnRecharged, PreviousChargeAmount) == 0x000004, "Member 'GA_KineticShield_C_OnRecharged::PreviousChargeAmount' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.OnShieldBroken
// 0x00F8 (0x00F8 - 0x0000)
struct GA_KineticShield_C_OnShieldBroken final
{
public:
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivateBlast_CanActivate;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FA[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGzLimbComponent*                       CallFunc_GetLimbComponent_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0018(0x00D8)(ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_OnShieldBroken) == 0x000008, "Wrong alignment on GA_KineticShield_C_OnShieldBroken");
static_assert(sizeof(GA_KineticShield_C_OnShieldBroken) == 0x0000F8, "Wrong size on GA_KineticShield_C_OnShieldBroken");
static_assert(offsetof(GA_KineticShield_C_OnShieldBroken, CallFunc_K2_CommitAbility_ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_OnShieldBroken::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_OnShieldBroken, CallFunc_CanActivateBlast_CanActivate) == 0x000001, "Member 'GA_KineticShield_C_OnShieldBroken::CallFunc_CanActivateBlast_CanActivate' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_OnShieldBroken, CallFunc_K2_HasAuthority_ReturnValue) == 0x000002, "Member 'GA_KineticShield_C_OnShieldBroken::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_OnShieldBroken, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_KineticShield_C_OnShieldBroken::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_OnShieldBroken, CallFunc_GetLimbComponent_ReturnValue) == 0x000010, "Member 'GA_KineticShield_C_OnShieldBroken::CallFunc_GetLimbComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_OnShieldBroken, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000018, "Member 'GA_KineticShield_C_OnShieldBroken::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_OnShieldBroken, K2Node_SwitchEnum_CmpSuccess) == 0x0000F0, "Member 'GA_KineticShield_C_OnShieldBroken::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GA_KineticShield.GA_KineticShield_C.TraceBlastTarget
// 0x0330 (0x0330 - 0x0000)
struct GA_KineticShield_C_TraceBlastTarget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutHit;                                            // 0x0008(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FC[0x8];                                     // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBlastSpawnTransform_SpawnTransform;    // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0228(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_KineticShield_C_TraceBlastTarget) == 0x000010, "Wrong alignment on GA_KineticShield_C_TraceBlastTarget");
static_assert(sizeof(GA_KineticShield_C_TraceBlastTarget) == 0x000330, "Wrong size on GA_KineticShield_C_TraceBlastTarget");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, ReturnValue) == 0x000000, "Member 'GA_KineticShield_C_TraceBlastTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, OutHit) == 0x000008, "Member 'GA_KineticShield_C_TraceBlastTarget::OutHit' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000100, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_GetBlastSpawnTransform_SpawnTransform) == 0x000110, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_GetBlastSpawnTransform_SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, K2Node_MakeArray_Array) == 0x000170, "Member 'GA_KineticShield_C_TraceBlastTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_BreakTransform_Location) == 0x000180, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_BreakTransform_Rotation) == 0x000198, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_BreakTransform_Scale) == 0x0001B0, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_GetForwardVector_ReturnValue) == 0x0001C8, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0001E0, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001F8, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x000210, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000228, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_KineticShield_C_TraceBlastTarget, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000320, "Member 'GA_KineticShield_C_TraceBlastTarget::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");

}

